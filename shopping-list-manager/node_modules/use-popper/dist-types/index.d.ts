import PopperJS from 'popper.js';
import React from 'react';
export interface Popper {
    placement?: PopperJS.Placement;
    positionFixed?: boolean;
    eventsEnabled?: boolean;
    modifiers?: PopperJS.Modifiers;
}
declare function usePopper<R = HTMLElement, P = HTMLElement, A = HTMLElement>({ placement, positionFixed, eventsEnabled, modifiers, }: Popper): {
    popperInstance: PopperJS | null;
    reference: {
        ref: React.RefObject<R>;
    };
    /**
     * @deprecated Due to typo. Use `reference` instead.
     */
    referrence: {
        ref: React.RefObject<R>;
    };
    popper: {
        ref: React.RefObject<P>;
        styles: React.CSSProperties;
        placement: PopperJS.Placement;
    };
    arrow: {
        ref: React.RefObject<A>;
        styles: React.CSSProperties;
    };
};
export default usePopper;
