import _Object$keys from '@babel/runtime-corejs3/core-js-stable/object/keys';
import _Object$getOwnPropertySymbols from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols';
import _filterInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/filter';
import _Object$getOwnPropertyDescriptor from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor';
import _forEachInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/for-each';
import _Object$getOwnPropertyDescriptors from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors';
import _Object$defineProperties from '@babel/runtime-corejs3/core-js-stable/object/define-properties';
import _Object$defineProperty from '@babel/runtime-corejs3/core-js-stable/object/define-property';
import _slicedToArray from '@babel/runtime-corejs3/helpers/esm/slicedToArray';
import _defineProperty from '@babel/runtime-corejs3/helpers/esm/defineProperty';
import _mapInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/map';
import _reduceInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/reduce';
import _concatInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/concat';
import _Object$entries from '@babel/runtime-corejs3/core-js-stable/object/entries';
import upperFirst from 'lodash/upperFirst';
import { CUSTOM_VIEW_HOST_ENTRY_POINT_URI_PATH } from '@commercetools-frontend/constants';

function ownKeys(e, r) { var t = _Object$keys(e); if (_Object$getOwnPropertySymbols) { var o = _Object$getOwnPropertySymbols(e); r && (o = _filterInstanceProperty(o).call(o, function (r) { return _Object$getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var _context8, _context9; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty(_context8 = ownKeys(Object(t), !0)).call(_context8, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(e, _Object$getOwnPropertyDescriptors(t)) : _forEachInstanceProperty(_context9 = ownKeys(Object(t))).call(_context9, function (r) { _Object$defineProperty(e, r, _Object$getOwnPropertyDescriptor(t, r)); }); } return e; }
/**
 * The function formats the `entryPointUriPath` to a resource access key.
 * It makes the first character of the string and the next character after a special character an uppercase.
 * It replaces hyphen(-) with a forward slash(/) if the hyphen(-) is followed by a number.
 *
 * @example
 * - avengers --> Avengers
 * - the-avengers --> TheAvengers
 * - the_avengers --> The_Avengers
 * - avengers-01 --> Avengers/01
 * - avengers_01 --> Avengers_01
 */
const formatEntryPointUriPathToResourceAccessKey = entryPointUriPath => {
  var _context, _context2;
  return _mapInstanceProperty(_context = _mapInstanceProperty(_context2 = entryPointUriPath
  // Splits the string by underscore.
  .split('_')
  // Uppercase the first character of each word split.
  ).call(_context2, upperFirst)
  // Join the words by an underscore.
  .join('_')
  // Each word is split by a hyphen.
  .split('-')).call(_context, (word, i) => {
    // Regex below checking if the character is numeric.
    // If the word after the hyphen is numeric, replace the hyphen with a forward slash.
    // If not, omit the hyphen and uppercase the first character
    if (i > 0 && /^-?\d+$/.test(word[0])) {
      return "/".concat(word);
    }
    return upperFirst(word);
  }).join('');
};

/**
 * The function formats the permission group name to a resource access key.
 * It makes the first character of the string and the next character after a special character (`-`) an uppercase.
 *
 * @example
 * - books --> Books
 * - the-books --> TheBooks
 */
const formatPermissionGroupNameToResourceAccessKey = permissionGroupName => {
  var _context3;
  return _mapInstanceProperty(_context3 = permissionGroupName
  // Each word is split by a hyphen.
  .split('-')).call(_context3, upperFirst).join('');
};
function entryPointUriPathToResourceAccesses(entryPointUriPath, permissionGroupNames) {
  var _context4;
  const resourceAccessKey = CUSTOM_VIEW_HOST_ENTRY_POINT_URI_PATH === entryPointUriPath ? '' : formatEntryPointUriPathToResourceAccessKey(entryPointUriPath);
  const defaultResourceAccesses = {
    view: "view".concat(resourceAccessKey),
    manage: "manage".concat(resourceAccessKey)
  };
  const additionalResourceAccesses = _reduceInstanceProperty(_context4 = permissionGroupNames !== null && permissionGroupNames !== void 0 ? permissionGroupNames : []).call(_context4, (resourceAccesses, permissionGroupName) => {
    var _context5, _context6;
    const additionalResourceAccessKey = formatPermissionGroupNameToResourceAccessKey(permissionGroupName);
    return _objectSpread(_objectSpread({}, resourceAccesses), {}, {
      ["view".concat(additionalResourceAccessKey)]: _concatInstanceProperty(_context5 = "".concat(defaultResourceAccesses.view)).call(_context5, additionalResourceAccessKey),
      ["manage".concat(additionalResourceAccessKey)]: _concatInstanceProperty(_context6 = "".concat(defaultResourceAccesses.manage)).call(_context6, additionalResourceAccessKey)
    });
  }, {});
  return _objectSpread(_objectSpread({}, defaultResourceAccesses), additionalResourceAccesses);
}
function computeCustomViewResourceAccesses(permissionGroupNames) {
  return entryPointUriPathToResourceAccesses(CUSTOM_VIEW_HOST_ENTRY_POINT_URI_PATH, permissionGroupNames || []);
}
function computeCustomViewPermissionsKeys(permissionGroupNames) {
  return entryPointUriPathToPermissionKeys(CUSTOM_VIEW_HOST_ENTRY_POINT_URI_PATH, permissionGroupNames || []);
}
function entryPointUriPathToPermissionKeys(entryPointUriPath, permissionGroupNames) {
  var _context7;
  const resourceAccesses = entryPointUriPathToResourceAccesses(entryPointUriPath, permissionGroupNames !== null && permissionGroupNames !== void 0 ? permissionGroupNames : []);
  return _reduceInstanceProperty(_context7 = _Object$entries(resourceAccesses)).call(_context7, (permissionKeys, _ref) => {
    let _ref2 = _slicedToArray(_ref, 2),
      resourceAccessKey = _ref2[0],
      resourceAccessValue = _ref2[1];
    return _objectSpread(_objectSpread({}, permissionKeys), {}, {
      [upperFirst(resourceAccessKey)]: upperFirst(resourceAccessValue)
    });
  }, {});
}

export { entryPointUriPathToPermissionKeys as a, formatPermissionGroupNameToResourceAccessKey as b, computeCustomViewResourceAccesses as c, computeCustomViewPermissionsKeys as d, entryPointUriPathToResourceAccesses as e, formatEntryPointUriPathToResourceAccessKey as f };
