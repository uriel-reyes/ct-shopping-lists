'use strict';

var _Object$keys = require('@babel/runtime-corejs3/core-js-stable/object/keys');
var _Object$getOwnPropertySymbols = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols');
var _filterInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/filter');
var _Object$getOwnPropertyDescriptor = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor');
var _forEachInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/for-each');
var _Object$getOwnPropertyDescriptors = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors');
var _Object$defineProperties = require('@babel/runtime-corejs3/core-js-stable/object/define-properties');
var _Object$defineProperty = require('@babel/runtime-corejs3/core-js-stable/object/define-property');
var _slicedToArray = require('@babel/runtime-corejs3/helpers/slicedToArray');
var _defineProperty = require('@babel/runtime-corejs3/helpers/defineProperty');
var _mapInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/map');
var _reduceInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/reduce');
var _concatInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/concat');
var _Object$entries = require('@babel/runtime-corejs3/core-js-stable/object/entries');
var upperFirst = require('lodash/upperFirst');
var constants = require('@commercetools-frontend/constants');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

var _Object$keys__default = /*#__PURE__*/_interopDefault(_Object$keys);
var _Object$getOwnPropertySymbols__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertySymbols);
var _filterInstanceProperty__default = /*#__PURE__*/_interopDefault(_filterInstanceProperty);
var _Object$getOwnPropertyDescriptor__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertyDescriptor);
var _forEachInstanceProperty__default = /*#__PURE__*/_interopDefault(_forEachInstanceProperty);
var _Object$getOwnPropertyDescriptors__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertyDescriptors);
var _Object$defineProperties__default = /*#__PURE__*/_interopDefault(_Object$defineProperties);
var _Object$defineProperty__default = /*#__PURE__*/_interopDefault(_Object$defineProperty);
var _mapInstanceProperty__default = /*#__PURE__*/_interopDefault(_mapInstanceProperty);
var _reduceInstanceProperty__default = /*#__PURE__*/_interopDefault(_reduceInstanceProperty);
var _concatInstanceProperty__default = /*#__PURE__*/_interopDefault(_concatInstanceProperty);
var _Object$entries__default = /*#__PURE__*/_interopDefault(_Object$entries);
var upperFirst__default = /*#__PURE__*/_interopDefault(upperFirst);

function ownKeys(e, r) { var t = _Object$keys__default["default"](e); if (_Object$getOwnPropertySymbols__default["default"]) { var o = _Object$getOwnPropertySymbols__default["default"](e); r && (o = _filterInstanceProperty__default["default"](o).call(o, function (r) { return _Object$getOwnPropertyDescriptor__default["default"](e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var _context8, _context9; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty__default["default"](_context8 = ownKeys(Object(t), !0)).call(_context8, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](e, _Object$getOwnPropertyDescriptors__default["default"](t)) : _forEachInstanceProperty__default["default"](_context9 = ownKeys(Object(t))).call(_context9, function (r) { _Object$defineProperty__default["default"](e, r, _Object$getOwnPropertyDescriptor__default["default"](t, r)); }); } return e; }
/**
 * The function formats the `entryPointUriPath` to a resource access key.
 * It makes the first character of the string and the next character after a special character an uppercase.
 * It replaces hyphen(-) with a forward slash(/) if the hyphen(-) is followed by a number.
 *
 * @example
 * - avengers --> Avengers
 * - the-avengers --> TheAvengers
 * - the_avengers --> The_Avengers
 * - avengers-01 --> Avengers/01
 * - avengers_01 --> Avengers_01
 */
const formatEntryPointUriPathToResourceAccessKey = entryPointUriPath => {
  var _context, _context2;
  return _mapInstanceProperty__default["default"](_context = _mapInstanceProperty__default["default"](_context2 = entryPointUriPath
  // Splits the string by underscore.
  .split('_')
  // Uppercase the first character of each word split.
  ).call(_context2, upperFirst__default["default"])
  // Join the words by an underscore.
  .join('_')
  // Each word is split by a hyphen.
  .split('-')).call(_context, (word, i) => {
    // Regex below checking if the character is numeric.
    // If the word after the hyphen is numeric, replace the hyphen with a forward slash.
    // If not, omit the hyphen and uppercase the first character
    if (i > 0 && /^-?\d+$/.test(word[0])) {
      return "/".concat(word);
    }
    return upperFirst__default["default"](word);
  }).join('');
};

/**
 * The function formats the permission group name to a resource access key.
 * It makes the first character of the string and the next character after a special character (`-`) an uppercase.
 *
 * @example
 * - books --> Books
 * - the-books --> TheBooks
 */
const formatPermissionGroupNameToResourceAccessKey = permissionGroupName => {
  var _context3;
  return _mapInstanceProperty__default["default"](_context3 = permissionGroupName
  // Each word is split by a hyphen.
  .split('-')).call(_context3, upperFirst__default["default"]).join('');
};
function entryPointUriPathToResourceAccesses(entryPointUriPath, permissionGroupNames) {
  var _context4;
  const resourceAccessKey = constants.CUSTOM_VIEW_HOST_ENTRY_POINT_URI_PATH === entryPointUriPath ? '' : formatEntryPointUriPathToResourceAccessKey(entryPointUriPath);
  const defaultResourceAccesses = {
    view: "view".concat(resourceAccessKey),
    manage: "manage".concat(resourceAccessKey)
  };
  const additionalResourceAccesses = _reduceInstanceProperty__default["default"](_context4 = permissionGroupNames !== null && permissionGroupNames !== void 0 ? permissionGroupNames : []).call(_context4, (resourceAccesses, permissionGroupName) => {
    var _context5, _context6;
    const additionalResourceAccessKey = formatPermissionGroupNameToResourceAccessKey(permissionGroupName);
    return _objectSpread(_objectSpread({}, resourceAccesses), {}, {
      ["view".concat(additionalResourceAccessKey)]: _concatInstanceProperty__default["default"](_context5 = "".concat(defaultResourceAccesses.view)).call(_context5, additionalResourceAccessKey),
      ["manage".concat(additionalResourceAccessKey)]: _concatInstanceProperty__default["default"](_context6 = "".concat(defaultResourceAccesses.manage)).call(_context6, additionalResourceAccessKey)
    });
  }, {});
  return _objectSpread(_objectSpread({}, defaultResourceAccesses), additionalResourceAccesses);
}
function computeCustomViewResourceAccesses(permissionGroupNames) {
  return entryPointUriPathToResourceAccesses(constants.CUSTOM_VIEW_HOST_ENTRY_POINT_URI_PATH, permissionGroupNames || []);
}
function computeCustomViewPermissionsKeys(permissionGroupNames) {
  return entryPointUriPathToPermissionKeys(constants.CUSTOM_VIEW_HOST_ENTRY_POINT_URI_PATH, permissionGroupNames || []);
}
function entryPointUriPathToPermissionKeys(entryPointUriPath, permissionGroupNames) {
  var _context7;
  const resourceAccesses = entryPointUriPathToResourceAccesses(entryPointUriPath, permissionGroupNames !== null && permissionGroupNames !== void 0 ? permissionGroupNames : []);
  return _reduceInstanceProperty__default["default"](_context7 = _Object$entries__default["default"](resourceAccesses)).call(_context7, (permissionKeys, _ref) => {
    let _ref2 = _slicedToArray(_ref, 2),
      resourceAccessKey = _ref2[0],
      resourceAccessValue = _ref2[1];
    return _objectSpread(_objectSpread({}, permissionKeys), {}, {
      [upperFirst__default["default"](resourceAccessKey)]: upperFirst__default["default"](resourceAccessValue)
    });
  }, {});
}

exports.computeCustomViewPermissionsKeys = computeCustomViewPermissionsKeys;
exports.computeCustomViewResourceAccesses = computeCustomViewResourceAccesses;
exports.entryPointUriPathToPermissionKeys = entryPointUriPathToPermissionKeys;
exports.entryPointUriPathToResourceAccesses = entryPointUriPathToResourceAccesses;
exports.formatEntryPointUriPathToResourceAccessKey = formatEntryPointUriPathToResourceAccessKey;
exports.formatPermissionGroupNameToResourceAccessKey = formatPermissionGroupNameToResourceAccessKey;
