import type { TAppliedPermission, TAppliedActionRight, TAppliedMenuVisibilities, TStoreDataFence } from '../../types/generated/mc';
export type TMenuVisibilities = {
    [key: string]: boolean;
};
export type TPermissions = {
    [key: string]: boolean;
};
export type TActionRight = {
    [key: string]: boolean;
};
export type TActionRights = {
    [key: string]: TActionRight;
};
export type TDataFenceGroupedByPermission = {
    [key: string]: {
        values: string[];
    } | null;
};
export type TDataFenceGroupedByResourceType = {
    [key: string]: TDataFenceGroupedByPermission | null;
};
export type TDataFenceStoresGroupByResourceType = {
    [key: string]: TStoreDataFence[];
};
export type TDataFenceType = 'store';
export type TDataFences = Partial<Record<TDataFenceType, TDataFenceGroupedByResourceType>>;
export declare const normalizeAllAppliedPermissions: (allAppliedPermissions?: TAppliedPermission[]) => TPermissions | null;
export declare const normalizeAllAppliedMenuVisibilities: (allAppliedMenuVisibilities?: TAppliedMenuVisibilities[]) => TMenuVisibilities | null;
export declare const normalizeAllAppliedActionRights: (allAppliedActionRights?: TAppliedActionRight[]) => TActionRights | null;
export declare const normalizeAllAppliedDataFences: (allAppliedDataFences?: TStoreDataFence[]) => TDataFences | null;
