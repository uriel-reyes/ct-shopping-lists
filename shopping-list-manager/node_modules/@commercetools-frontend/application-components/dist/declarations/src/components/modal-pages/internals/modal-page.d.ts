import { type ReactNode, type SyntheticEvent } from 'react';
import { type CSSObject } from '@emotion/react';
declare const getDefaultParentSelector: () => HTMLElement;
type MessageDescriptor = {
    id: string;
    description?: string | object;
    defaultMessage?: string;
};
type Label = string | MessageDescriptor;
export type TModalPageSize = 10 | 20 | 30 | 'scale';
type Props = {
    level?: number;
    title: string;
    isOpen: boolean;
    customViewLocatorCode?: string;
    onClose?: (event: SyntheticEvent) => void;
    children: ReactNode;
    zIndex?: number;
    baseZIndex?: number;
    getParentSelector: typeof getDefaultParentSelector;
    shouldDelayOnClose: boolean;
    afterOpenStyles?: string | CSSObject;
    topBarColor?: 'surface' | 'neutral';
    currentPathLabel?: string;
    previousPathLabel?: Label;
    hidePathLabel?: boolean;
    size: TModalPageSize;
    hideTopBar?: boolean;
};
declare const ModalPage: {
    (props: Props): import("@emotion/react/types/jsx-namespace").EmotionJSX.Element;
    displayName: string;
    defaultProps: Pick<Props, "size" | "getParentSelector" | "shouldDelayOnClose">;
};
export default ModalPage;
