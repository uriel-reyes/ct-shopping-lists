import { type ForwardRefExoticComponent, type RefAttributes, type FocusEventHandler } from 'react';
import { isEmpty } from '@commercetools-uikit/rich-text-utils';
type TBaseEvent = {
    target: {
        id?: string;
        name?: string;
    };
};
type TChangeEvent = {
    target: TBaseEvent['target'] & {
        value: string;
    };
};
export type TRichTextInputProps = {
    isAutofocussed?: boolean;
    defaultExpandMultilineText?: boolean;
    hasError?: boolean;
    hasWarning?: boolean;
    id?: string;
    name?: string;
    placeholder: string;
    isDisabled?: boolean;
    isReadOnly?: boolean;
    horizontalConstraint?: 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 'scale' | 'auto';
    onChange?: (event: TChangeEvent) => void;
    onFocus?: FocusEventHandler<HTMLDivElement>;
    onBlur?: FocusEventHandler<HTMLDivElement>;
    value?: string;
    showExpandIcon: boolean;
    onClickExpand?: () => boolean;
};
type StaticProps = {
    isEmpty: typeof isEmpty;
    isTouched: typeof isTouched;
};
declare const isTouched: (touched: boolean | unknown[]) => boolean;
declare const RichTextInputWithRef: ForwardRefExoticComponent<TRichTextInputProps & RefAttributes<unknown>> & Partial<StaticProps>;
export default RichTextInputWithRef;
