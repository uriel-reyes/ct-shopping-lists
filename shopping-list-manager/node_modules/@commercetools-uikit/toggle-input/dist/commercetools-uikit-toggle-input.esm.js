import _Object$keys from '@babel/runtime-corejs3/core-js-stable/object/keys';
import _Object$getOwnPropertySymbols from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols';
import _filterInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/filter';
import _Object$getOwnPropertyDescriptor from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor';
import _forEachInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/for-each';
import _Object$getOwnPropertyDescriptors from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors';
import _Object$defineProperties from '@babel/runtime-corejs3/core-js-stable/object/define-properties';
import _Object$defineProperty from '@babel/runtime-corejs3/core-js-stable/object/define-property';
import _defineProperty from '@babel/runtime-corejs3/helpers/esm/defineProperty';
import _pt from 'prop-types';
import { filterAriaAttributes, filterDataAttributes } from '@commercetools-uikit/utils';
import { accessibleHiddenInputStyles } from '@commercetools-uikit/input-utils';
import _styled from '@emotion/styled/base';
import _concatInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/concat';
import { css } from '@emotion/react';
import { designTokens } from '@commercetools-uikit/design-system';
import { jsxs, jsx } from '@emotion/react/jsx-runtime';

const trackSizes = {
  small: {
    width: '29px',
    height: '12px'
  },
  big: {
    width: '56px',
    height: '24px'
  }
};
const thumbSizes = {
  small: {
    diameter: '18px',
    shift: '3px',
    hoverAreaWidth: '4px'
  },
  big: {
    diameter: '32px',
    shift: '4px',
    hoverAreaWidth: '8px'
  }
};
const labelSizeStyles = props => /*#__PURE__*/css("height:", props.trackSizes[props.size].height, ";width:", props.trackSizes[props.size].width, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:labelSizeStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvZ2dsZS1pbnB1dC5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUN5RCIsImZpbGUiOiJ0b2dnbGUtaW5wdXQuc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5pbXBvcnQgdHlwZSB7IFRUb2dnbGVJbnB1dFByb3BzIH0gZnJvbSAnLi90b2dnbGUtaW5wdXQnO1xuXG50eXBlIFNpemVzUHJvcHMgPSB7XG4gIHRyYWNrU2l6ZXM6IHR5cGVvZiB0cmFja1NpemVzO1xuICB0aHVtYlNpemVzOiB0eXBlb2YgdGh1bWJTaXplcztcbn07XG5cbnR5cGUgVFN0eWxlZExhYmVsUHJvcHMgPSBQaWNrPFRUb2dnbGVJbnB1dFByb3BzLCAnaXNEaXNhYmxlZCcgfCAnc2l6ZSc+ICZcbiAgU2l6ZXNQcm9wcztcbnR5cGUgVFN0eWxlZFNwYW5Qcm9wcyA9IFBpY2s8VFRvZ2dsZUlucHV0UHJvcHMsICdzaXplJz4gJiBTaXplc1Byb3BzO1xuXG5jb25zdCB0cmFja1NpemVzID0ge1xuICBzbWFsbDoge1xuICAgIHdpZHRoOiAnMjlweCcsXG4gICAgaGVpZ2h0OiAnMTJweCcsXG4gIH0sXG4gIGJpZzoge1xuICAgIHdpZHRoOiAnNTZweCcsXG4gICAgaGVpZ2h0OiAnMjRweCcsXG4gIH0sXG59O1xuY29uc3QgdGh1bWJTaXplcyA9IHtcbiAgc21hbGw6IHtcbiAgICBkaWFtZXRlcjogJzE4cHgnLFxuICAgIHNoaWZ0OiAnM3B4JyxcbiAgICBob3ZlckFyZWFXaWR0aDogJzRweCcsXG4gIH0sXG4gIGJpZzoge1xuICAgIGRpYW1ldGVyOiAnMzJweCcsXG4gICAgc2hpZnQ6ICc0cHgnLFxuICAgIGhvdmVyQXJlYVdpZHRoOiAnOHB4JyxcbiAgfSxcbn07XG5cbmNvbnN0IGxhYmVsU2l6ZVN0eWxlcyA9IChwcm9wczogVFN0eWxlZExhYmVsUHJvcHMpID0+IGNzc2BcbiAgaGVpZ2h0OiAke3Byb3BzLnRyYWNrU2l6ZXNbcHJvcHMuc2l6ZV0uaGVpZ2h0fTtcbiAgd2lkdGg6ICR7cHJvcHMudHJhY2tTaXplc1twcm9wcy5zaXplXS53aWR0aH07XG5gO1xuXG5jb25zdCBnZXRUaHVtYlNpemUgPSAocHJvcHM6IFRTdHlsZWRTcGFuUHJvcHMpID0+XG4gIHByb3BzLnRodW1iU2l6ZXNbcHJvcHMuc2l6ZV0uZGlhbWV0ZXI7XG5cbmNvbnN0IGdldFRodW1iU2hpZnQgPSAocHJvcHM6IFRTdHlsZWRTcGFuUHJvcHMpID0+XG4gIGAtJHtwcm9wcy50aHVtYlNpemVzW3Byb3BzLnNpemVdLnNoaWZ0fWA7XG5cbmNvbnN0IGdldEZvY3VzSW5kaWNhdG9yV2lkdGggPSAocHJvcHM6IFRTdHlsZWRTcGFuUHJvcHMpID0+IGBcbiAgICBjYWxjKFxuICAgICAgJHtwcm9wcy50cmFja1NpemVzW3Byb3BzLnNpemVdLndpZHRofSArIDIgKlxuICAgICAgICAke3Byb3BzLnRodW1iU2l6ZXNbcHJvcHMuc2l6ZV0uaG92ZXJBcmVhV2lkdGh9ICsgMiAqXG4gICAgICAgICR7cHJvcHMudGh1bWJTaXplc1twcm9wcy5zaXplXS5zaGlmdH0gKyAycHhcbiAgICApYDtcblxuY29uc3QgZ2V0Rm9jdXNJbmRpY2F0b3JIZWlnaHQgPSAocHJvcHM6IFRTdHlsZWRTcGFuUHJvcHMpID0+IGBcbiAgICBjYWxjKFxuICAgICAgJHtwcm9wcy50aHVtYlNpemVzW3Byb3BzLnNpemVdLmRpYW1ldGVyfSArIDIgKlxuICAgICAgICAke3Byb3BzLnRodW1iU2l6ZXNbcHJvcHMuc2l6ZV0uaG92ZXJBcmVhV2lkdGh9ICsgMnB4XG4gICAgKVxuYDtcblxuY29uc3QgZ2V0Rm9jdXNJbmRpY2F0b3JMZWZ0UG9zaXRpb25pbmcgPSAocHJvcHM6IFRTdHlsZWRTcGFuUHJvcHMpID0+IGBcbiAgICBjYWxjKFxuICAgICAgLSR7cHJvcHMudGh1bWJTaXplc1twcm9wcy5zaXplXS5ob3ZlckFyZWFXaWR0aH0gLSAke1xuICBwcm9wcy50aHVtYlNpemVzW3Byb3BzLnNpemVdLnNoaWZ0XG59IC0gMXB4XG4gICAgKVxuYDtcblxuY29uc3QgZ2V0Rm9jdXNJbmRpY2F0b3JUb3BQb3NpdGlvbmluZyA9IChwcm9wczogVFN0eWxlZFNwYW5Qcm9wcykgPT5cbiAgYGNhbGMoLTUwJSAtICR7cHJvcHMuc2l6ZSA9PT0gJ3NtYWxsJyA/ICcycHgnIDogJzFweCd9KWA7XG5cbmNvbnN0IGdldEZvY3VzSW5kaWNhdG9yID0gKHByb3BzOiBUU3R5bGVkU3BhblByb3BzKSA9PiBjc3NgXG4gICY6OmFmdGVyIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgb3V0bGluZTogYXV0byAycHggJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkfTtcbiAgICBoZWlnaHQ6ICR7Z2V0Rm9jdXNJbmRpY2F0b3JIZWlnaHQocHJvcHMpfTtcbiAgICB0b3A6ICR7Z2V0Rm9jdXNJbmRpY2F0b3JUb3BQb3NpdGlvbmluZyhwcm9wcyl9O1xuICAgIHdpZHRoOiAke2dldEZvY3VzSW5kaWNhdG9yV2lkdGgocHJvcHMpfTtcbiAgICBsZWZ0OiAke2dldEZvY3VzSW5kaWNhdG9yTGVmdFBvc2l0aW9uaW5nKHByb3BzKX07XG4gIH1cbmA7XG5cbmNvbnN0IGdldE1hcmdpbiA9IChwcm9wczogVFN0eWxlZExhYmVsUHJvcHMpID0+XG4gIGNzc2BcbiAgICBtYXJnaW46ICR7YGNhbGMoMnB4ICsgJHtwcm9wcy50aHVtYlNpemVzW3Byb3BzLnNpemVdLmhvdmVyQXJlYVdpZHRofSArICgke1xuICAgICAgcHJvcHMudGh1bWJTaXplc1twcm9wcy5zaXplXS5kaWFtZXRlclxuICAgIH0gLSAke3Byb3BzLnRyYWNrU2l6ZXNbcHJvcHMuc2l6ZV0uaGVpZ2h0fSkgLyAyKWB9O1xuICBgO1xuXG5jb25zdCBMYWJlbCA9IHN0eWxlZC5sYWJlbDxUU3R5bGVkTGFiZWxQcm9wcz5gXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBjdXJzb3I6ICR7KHByb3BzKSA9PiAocHJvcHMuaXNEaXNhYmxlZCA/ICdub3QtYWxsb3dlZCcgOiAncG9pbnRlcicpfTtcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xuICAke2dldE1hcmdpbn1cblxuICAke2xhYmVsU2l6ZVN0eWxlc31cblxuICAmOmZvY3VzLXdpdGhpbiB7XG4gICR7KHByb3BzKSA9PiBnZXRGb2N1c0luZGljYXRvcihwcm9wcyl9XG5gO1xuXG5jb25zdCBTcGFuID0gc3R5bGVkLnNwYW48VFN0eWxlZFNwYW5Qcm9wcz5gXG4gIC8qIHRoaXMgaXMgdGhlIHRyYWNrICovXG5cbiAgJjo6YmVmb3JlIHtcbiAgICBib3JkZXItcmFkaXVzOiAxMnB4O1xuICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yVG9nZ2xlSW5wdXRUcmFja307XG4gICAgbGVmdDogMDtcbiAgICB0b3A6IDUwJTtcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuMnMgZWFzZS1pbi1vdXQ7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICAvKiB0aGlzIGlzIHRoZSB0aHVtYiAqL1xuICAmOjphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiAke2dldFRodW1iU2hpZnR9O1xuICAgIGhlaWdodDogJHtnZXRUaHVtYlNpemV9O1xuICAgIHdpZHRoOiAke2dldFRodW1iU2l6ZX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICBib3gtc2hhZG93OiAke2Rlc2lnblRva2Vucy5zaGFkb3dGb3JUb2dnbGVJbnB1dFRodW1ifTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMnMgZWFzZSwgYmFja2dyb3VuZCAwLjJzIGVhc2U7XG4gIH1cbmA7XG5cbmNvbnN0IGdldElucHV0U3R5bGVzID0gKHByb3BzOiBUVG9nZ2xlSW5wdXRQcm9wcyAmIFNpemVzUHJvcHMpID0+IGNzc2BcbiAgLyogd2hlbiBjaGVja2VkICovXG4gICY6Y2hlY2tlZCB7XG4gICAgKyBzcGFuOjpiZWZvcmUge1xuICAgICAgYmFja2dyb3VuZDogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yVG9nZ2xlSW5wdXRUcmFja1doZW5DaGVja2VkfTtcbiAgICB9XG4gICAgJiArIHNwYW46OmFmdGVyIHtcbiAgICAgIGJhY2tncm91bmQ6ICR7ZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclRvZ2dsZUlucHV0VGh1bWJXaGVuQ2hlY2tlZH07XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgke3Byb3BzLnRodW1iU2l6ZXNbcHJvcHMuc2l6ZV0uZGlhbWV0ZXJ9LCAtNTAlKTtcbiAgICB9XG4gIH1cblxuICAvKiB3aGVuIGRpc2FibGVkICovXG4gICY6ZGlzYWJsZWQge1xuICAgICYgKyBzcGFuOjpiZWZvcmUge1xuICAgICAgYmFja2dyb3VuZDogJHtcbiAgICAgICAgZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclRvZ2dsZUlucHV0VHJhY2tXaGVuRGlzYWJsZWRcbiAgICAgIH07XG4gICAgICBib3gtc2hhZG93OiBub25lO1xuICAgIH1cbiAgICAmICsgc3Bhbjo6YWZ0ZXIge1xuICAgICAgYmFja2dyb3VuZDogJHtcbiAgICAgICAgZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclRvZ2dsZUlucHV0VGh1bWJXaGVuRGlzYWJsZWRcbiAgICAgIH07XG4gICAgICBib3gtc2hhZG93OiAke2Rlc2lnblRva2Vucy5zaGFkb3dGb3JUb2dnbGVJbnB1dFRodW1ifTtcbiAgICB9XG4gIH1cblxuICAvKiB3aGVuIGRpc2FibGVkIGFuZCBjaGVja2VkICovXG4gICY6ZGlzYWJsZWQmOmNoZWNrZWQge1xuICAgICYgKyBzcGFuOjpiZWZvcmUge1xuICAgICAgYmFja2dyb3VuZDogJHtcbiAgICAgICAgZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclRvZ2dsZUlucHV0VHJhY2tXaGVuQ2hlY2tlZEFuZERpc2FibGVkXG4gICAgICB9O1xuICAgIH1cbiAgICAmICsgc3Bhbjo6YWZ0ZXIge1xuICAgICAgYmFja2dyb3VuZDogJHtcbiAgICAgICAgZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclRvZ2dsZUlucHV0VGh1bWJXaGVuQ2hlY2tlZEFuZERpc2FibGVkXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIDpub3QoOmRpc2FibGVkKSY6aG92ZXIgKyBzcGFuOjphZnRlcixcbiAgOm5vdCg6ZGlzYWJsZWQpJjpmb2N1cyArIHNwYW46OmFmdGVyIHtcbiAgICBib3gtc2hhZG93OiBub25lO1xuICAgIG91dGxpbmU6ICR7YCR7XG4gICAgICBwcm9wcy50aHVtYlNpemVzW3Byb3BzLnNpemVdLmhvdmVyQXJlYVdpZHRoXG4gICAgfSBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMSlgfVxuYDtcblxuZXhwb3J0IHsgTGFiZWwsIFNwYW4sIHRyYWNrU2l6ZXMsIHRodW1iU2l6ZXMsIGdldElucHV0U3R5bGVzIH07XG4iXX0= */");
const getThumbSize = props => props.thumbSizes[props.size].diameter;
const getThumbShift = props => "-".concat(props.thumbSizes[props.size].shift);
const getFocusIndicatorWidth = props => {
  var _context, _context2;
  return _concatInstanceProperty(_context = _concatInstanceProperty(_context2 = "\n    calc(\n      ".concat(props.trackSizes[props.size].width, " + 2 *\n        ")).call(_context2, props.thumbSizes[props.size].hoverAreaWidth, " + 2 *\n        ")).call(_context, props.thumbSizes[props.size].shift, " + 2px\n    )");
};
const getFocusIndicatorHeight = props => {
  var _context3;
  return _concatInstanceProperty(_context3 = "\n    calc(\n      ".concat(props.thumbSizes[props.size].diameter, " + 2 *\n        ")).call(_context3, props.thumbSizes[props.size].hoverAreaWidth, " + 2px\n    )\n");
};
const getFocusIndicatorLeftPositioning = props => {
  var _context4;
  return _concatInstanceProperty(_context4 = "\n    calc(\n      -".concat(props.thumbSizes[props.size].hoverAreaWidth, " - ")).call(_context4, props.thumbSizes[props.size].shift, " - 1px\n    )\n");
};
const getFocusIndicatorTopPositioning = props => "calc(-50% - ".concat(props.size === 'small' ? '2px' : '1px', ")");
const getFocusIndicator = props => /*#__PURE__*/css("&::after{content:'';position:absolute;outline:auto 2px ", designTokens.borderColorForInputWhenFocused, ";height:", getFocusIndicatorHeight(props), ";top:", getFocusIndicatorTopPositioning(props), ";width:", getFocusIndicatorWidth(props), ";left:", getFocusIndicatorLeftPositioning(props), ";}" + (process.env.NODE_ENV === "production" ? "" : ";label:getFocusIndicator;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvZ2dsZS1pbnB1dC5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeUUwRCIsImZpbGUiOiJ0b2dnbGUtaW5wdXQuc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5pbXBvcnQgdHlwZSB7IFRUb2dnbGVJbnB1dFByb3BzIH0gZnJvbSAnLi90b2dnbGUtaW5wdXQnO1xuXG50eXBlIFNpemVzUHJvcHMgPSB7XG4gIHRyYWNrU2l6ZXM6IHR5cGVvZiB0cmFja1NpemVzO1xuICB0aHVtYlNpemVzOiB0eXBlb2YgdGh1bWJTaXplcztcbn07XG5cbnR5cGUgVFN0eWxlZExhYmVsUHJvcHMgPSBQaWNrPFRUb2dnbGVJbnB1dFByb3BzLCAnaXNEaXNhYmxlZCcgfCAnc2l6ZSc+ICZcbiAgU2l6ZXNQcm9wcztcbnR5cGUgVFN0eWxlZFNwYW5Qcm9wcyA9IFBpY2s8VFRvZ2dsZUlucHV0UHJvcHMsICdzaXplJz4gJiBTaXplc1Byb3BzO1xuXG5jb25zdCB0cmFja1NpemVzID0ge1xuICBzbWFsbDoge1xuICAgIHdpZHRoOiAnMjlweCcsXG4gICAgaGVpZ2h0OiAnMTJweCcsXG4gIH0sXG4gIGJpZzoge1xuICAgIHdpZHRoOiAnNTZweCcsXG4gICAgaGVpZ2h0OiAnMjRweCcsXG4gIH0sXG59O1xuY29uc3QgdGh1bWJTaXplcyA9IHtcbiAgc21hbGw6IHtcbiAgICBkaWFtZXRlcjogJzE4cHgnLFxuICAgIHNoaWZ0OiAnM3B4JyxcbiAgICBob3ZlckFyZWFXaWR0aDogJzRweCcsXG4gIH0sXG4gIGJpZzoge1xuICAgIGRpYW1ldGVyOiAnMzJweCcsXG4gICAgc2hpZnQ6ICc0cHgnLFxuICAgIGhvdmVyQXJlYVdpZHRoOiAnOHB4JyxcbiAgfSxcbn07XG5cbmNvbnN0IGxhYmVsU2l6ZVN0eWxlcyA9IChwcm9wczogVFN0eWxlZExhYmVsUHJvcHMpID0+IGNzc2BcbiAgaGVpZ2h0OiAke3Byb3BzLnRyYWNrU2l6ZXNbcHJvcHMuc2l6ZV0uaGVpZ2h0fTtcbiAgd2lkdGg6ICR7cHJvcHMudHJhY2tTaXplc1twcm9wcy5zaXplXS53aWR0aH07XG5gO1xuXG5jb25zdCBnZXRUaHVtYlNpemUgPSAocHJvcHM6IFRTdHlsZWRTcGFuUHJvcHMpID0+XG4gIHByb3BzLnRodW1iU2l6ZXNbcHJvcHMuc2l6ZV0uZGlhbWV0ZXI7XG5cbmNvbnN0IGdldFRodW1iU2hpZnQgPSAocHJvcHM6IFRTdHlsZWRTcGFuUHJvcHMpID0+XG4gIGAtJHtwcm9wcy50aHVtYlNpemVzW3Byb3BzLnNpemVdLnNoaWZ0fWA7XG5cbmNvbnN0IGdldEZvY3VzSW5kaWNhdG9yV2lkdGggPSAocHJvcHM6IFRTdHlsZWRTcGFuUHJvcHMpID0+IGBcbiAgICBjYWxjKFxuICAgICAgJHtwcm9wcy50cmFja1NpemVzW3Byb3BzLnNpemVdLndpZHRofSArIDIgKlxuICAgICAgICAke3Byb3BzLnRodW1iU2l6ZXNbcHJvcHMuc2l6ZV0uaG92ZXJBcmVhV2lkdGh9ICsgMiAqXG4gICAgICAgICR7cHJvcHMudGh1bWJTaXplc1twcm9wcy5zaXplXS5zaGlmdH0gKyAycHhcbiAgICApYDtcblxuY29uc3QgZ2V0Rm9jdXNJbmRpY2F0b3JIZWlnaHQgPSAocHJvcHM6IFRTdHlsZWRTcGFuUHJvcHMpID0+IGBcbiAgICBjYWxjKFxuICAgICAgJHtwcm9wcy50aHVtYlNpemVzW3Byb3BzLnNpemVdLmRpYW1ldGVyfSArIDIgKlxuICAgICAgICAke3Byb3BzLnRodW1iU2l6ZXNbcHJvcHMuc2l6ZV0uaG92ZXJBcmVhV2lkdGh9ICsgMnB4XG4gICAgKVxuYDtcblxuY29uc3QgZ2V0Rm9jdXNJbmRpY2F0b3JMZWZ0UG9zaXRpb25pbmcgPSAocHJvcHM6IFRTdHlsZWRTcGFuUHJvcHMpID0+IGBcbiAgICBjYWxjKFxuICAgICAgLSR7cHJvcHMudGh1bWJTaXplc1twcm9wcy5zaXplXS5ob3ZlckFyZWFXaWR0aH0gLSAke1xuICBwcm9wcy50aHVtYlNpemVzW3Byb3BzLnNpemVdLnNoaWZ0XG59IC0gMXB4XG4gICAgKVxuYDtcblxuY29uc3QgZ2V0Rm9jdXNJbmRpY2F0b3JUb3BQb3NpdGlvbmluZyA9IChwcm9wczogVFN0eWxlZFNwYW5Qcm9wcykgPT5cbiAgYGNhbGMoLTUwJSAtICR7cHJvcHMuc2l6ZSA9PT0gJ3NtYWxsJyA/ICcycHgnIDogJzFweCd9KWA7XG5cbmNvbnN0IGdldEZvY3VzSW5kaWNhdG9yID0gKHByb3BzOiBUU3R5bGVkU3BhblByb3BzKSA9PiBjc3NgXG4gICY6OmFmdGVyIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgb3V0bGluZTogYXV0byAycHggJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkfTtcbiAgICBoZWlnaHQ6ICR7Z2V0Rm9jdXNJbmRpY2F0b3JIZWlnaHQocHJvcHMpfTtcbiAgICB0b3A6ICR7Z2V0Rm9jdXNJbmRpY2F0b3JUb3BQb3NpdGlvbmluZyhwcm9wcyl9O1xuICAgIHdpZHRoOiAke2dldEZvY3VzSW5kaWNhdG9yV2lkdGgocHJvcHMpfTtcbiAgICBsZWZ0OiAke2dldEZvY3VzSW5kaWNhdG9yTGVmdFBvc2l0aW9uaW5nKHByb3BzKX07XG4gIH1cbmA7XG5cbmNvbnN0IGdldE1hcmdpbiA9IChwcm9wczogVFN0eWxlZExhYmVsUHJvcHMpID0+XG4gIGNzc2BcbiAgICBtYXJnaW46ICR7YGNhbGMoMnB4ICsgJHtwcm9wcy50aHVtYlNpemVzW3Byb3BzLnNpemVdLmhvdmVyQXJlYVdpZHRofSArICgke1xuICAgICAgcHJvcHMudGh1bWJTaXplc1twcm9wcy5zaXplXS5kaWFtZXRlclxuICAgIH0gLSAke3Byb3BzLnRyYWNrU2l6ZXNbcHJvcHMuc2l6ZV0uaGVpZ2h0fSkgLyAyKWB9O1xuICBgO1xuXG5jb25zdCBMYWJlbCA9IHN0eWxlZC5sYWJlbDxUU3R5bGVkTGFiZWxQcm9wcz5gXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBjdXJzb3I6ICR7KHByb3BzKSA9PiAocHJvcHMuaXNEaXNhYmxlZCA/ICdub3QtYWxsb3dlZCcgOiAncG9pbnRlcicpfTtcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xuICAke2dldE1hcmdpbn1cblxuICAke2xhYmVsU2l6ZVN0eWxlc31cblxuICAmOmZvY3VzLXdpdGhpbiB7XG4gICR7KHByb3BzKSA9PiBnZXRGb2N1c0luZGljYXRvcihwcm9wcyl9XG5gO1xuXG5jb25zdCBTcGFuID0gc3R5bGVkLnNwYW48VFN0eWxlZFNwYW5Qcm9wcz5gXG4gIC8qIHRoaXMgaXMgdGhlIHRyYWNrICovXG5cbiAgJjo6YmVmb3JlIHtcbiAgICBib3JkZXItcmFkaXVzOiAxMnB4O1xuICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yVG9nZ2xlSW5wdXRUcmFja307XG4gICAgbGVmdDogMDtcbiAgICB0b3A6IDUwJTtcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuMnMgZWFzZS1pbi1vdXQ7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICAvKiB0aGlzIGlzIHRoZSB0aHVtYiAqL1xuICAmOjphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiAke2dldFRodW1iU2hpZnR9O1xuICAgIGhlaWdodDogJHtnZXRUaHVtYlNpemV9O1xuICAgIHdpZHRoOiAke2dldFRodW1iU2l6ZX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICBib3gtc2hhZG93OiAke2Rlc2lnblRva2Vucy5zaGFkb3dGb3JUb2dnbGVJbnB1dFRodW1ifTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMnMgZWFzZSwgYmFja2dyb3VuZCAwLjJzIGVhc2U7XG4gIH1cbmA7XG5cbmNvbnN0IGdldElucHV0U3R5bGVzID0gKHByb3BzOiBUVG9nZ2xlSW5wdXRQcm9wcyAmIFNpemVzUHJvcHMpID0+IGNzc2BcbiAgLyogd2hlbiBjaGVja2VkICovXG4gICY6Y2hlY2tlZCB7XG4gICAgKyBzcGFuOjpiZWZvcmUge1xuICAgICAgYmFja2dyb3VuZDogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yVG9nZ2xlSW5wdXRUcmFja1doZW5DaGVja2VkfTtcbiAgICB9XG4gICAgJiArIHNwYW46OmFmdGVyIHtcbiAgICAgIGJhY2tncm91bmQ6ICR7ZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclRvZ2dsZUlucHV0VGh1bWJXaGVuQ2hlY2tlZH07XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgke3Byb3BzLnRodW1iU2l6ZXNbcHJvcHMuc2l6ZV0uZGlhbWV0ZXJ9LCAtNTAlKTtcbiAgICB9XG4gIH1cblxuICAvKiB3aGVuIGRpc2FibGVkICovXG4gICY6ZGlzYWJsZWQge1xuICAgICYgKyBzcGFuOjpiZWZvcmUge1xuICAgICAgYmFja2dyb3VuZDogJHtcbiAgICAgICAgZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclRvZ2dsZUlucHV0VHJhY2tXaGVuRGlzYWJsZWRcbiAgICAgIH07XG4gICAgICBib3gtc2hhZG93OiBub25lO1xuICAgIH1cbiAgICAmICsgc3Bhbjo6YWZ0ZXIge1xuICAgICAgYmFja2dyb3VuZDogJHtcbiAgICAgICAgZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclRvZ2dsZUlucHV0VGh1bWJXaGVuRGlzYWJsZWRcbiAgICAgIH07XG4gICAgICBib3gtc2hhZG93OiAke2Rlc2lnblRva2Vucy5zaGFkb3dGb3JUb2dnbGVJbnB1dFRodW1ifTtcbiAgICB9XG4gIH1cblxuICAvKiB3aGVuIGRpc2FibGVkIGFuZCBjaGVja2VkICovXG4gICY6ZGlzYWJsZWQmOmNoZWNrZWQge1xuICAgICYgKyBzcGFuOjpiZWZvcmUge1xuICAgICAgYmFja2dyb3VuZDogJHtcbiAgICAgICAgZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclRvZ2dsZUlucHV0VHJhY2tXaGVuQ2hlY2tlZEFuZERpc2FibGVkXG4gICAgICB9O1xuICAgIH1cbiAgICAmICsgc3Bhbjo6YWZ0ZXIge1xuICAgICAgYmFja2dyb3VuZDogJHtcbiAgICAgICAgZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclRvZ2dsZUlucHV0VGh1bWJXaGVuQ2hlY2tlZEFuZERpc2FibGVkXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIDpub3QoOmRpc2FibGVkKSY6aG92ZXIgKyBzcGFuOjphZnRlcixcbiAgOm5vdCg6ZGlzYWJsZWQpJjpmb2N1cyArIHNwYW46OmFmdGVyIHtcbiAgICBib3gtc2hhZG93OiBub25lO1xuICAgIG91dGxpbmU6ICR7YCR7XG4gICAgICBwcm9wcy50aHVtYlNpemVzW3Byb3BzLnNpemVdLmhvdmVyQXJlYVdpZHRoXG4gICAgfSBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMSlgfVxuYDtcblxuZXhwb3J0IHsgTGFiZWwsIFNwYW4sIHRyYWNrU2l6ZXMsIHRodW1iU2l6ZXMsIGdldElucHV0U3R5bGVzIH07XG4iXX0= */");
const getMargin = props => {
  var _context5, _context6;
  return /*#__PURE__*/css("margin:", _concatInstanceProperty(_context5 = _concatInstanceProperty(_context6 = "calc(2px + ".concat(props.thumbSizes[props.size].hoverAreaWidth, " + (")).call(_context6, props.thumbSizes[props.size].diameter, " - ")).call(_context5, props.trackSizes[props.size].height, ") / 2)"), ";" + (process.env.NODE_ENV === "production" ? "" : ";label:getMargin;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvZ2dsZS1pbnB1dC5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0ZLIiwiZmlsZSI6InRvZ2dsZS1pbnB1dC5zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcbmltcG9ydCB0eXBlIHsgVFRvZ2dsZUlucHV0UHJvcHMgfSBmcm9tICcuL3RvZ2dsZS1pbnB1dCc7XG5cbnR5cGUgU2l6ZXNQcm9wcyA9IHtcbiAgdHJhY2tTaXplczogdHlwZW9mIHRyYWNrU2l6ZXM7XG4gIHRodW1iU2l6ZXM6IHR5cGVvZiB0aHVtYlNpemVzO1xufTtcblxudHlwZSBUU3R5bGVkTGFiZWxQcm9wcyA9IFBpY2s8VFRvZ2dsZUlucHV0UHJvcHMsICdpc0Rpc2FibGVkJyB8ICdzaXplJz4gJlxuICBTaXplc1Byb3BzO1xudHlwZSBUU3R5bGVkU3BhblByb3BzID0gUGljazxUVG9nZ2xlSW5wdXRQcm9wcywgJ3NpemUnPiAmIFNpemVzUHJvcHM7XG5cbmNvbnN0IHRyYWNrU2l6ZXMgPSB7XG4gIHNtYWxsOiB7XG4gICAgd2lkdGg6ICcyOXB4JyxcbiAgICBoZWlnaHQ6ICcxMnB4JyxcbiAgfSxcbiAgYmlnOiB7XG4gICAgd2lkdGg6ICc1NnB4JyxcbiAgICBoZWlnaHQ6ICcyNHB4JyxcbiAgfSxcbn07XG5jb25zdCB0aHVtYlNpemVzID0ge1xuICBzbWFsbDoge1xuICAgIGRpYW1ldGVyOiAnMThweCcsXG4gICAgc2hpZnQ6ICczcHgnLFxuICAgIGhvdmVyQXJlYVdpZHRoOiAnNHB4JyxcbiAgfSxcbiAgYmlnOiB7XG4gICAgZGlhbWV0ZXI6ICczMnB4JyxcbiAgICBzaGlmdDogJzRweCcsXG4gICAgaG92ZXJBcmVhV2lkdGg6ICc4cHgnLFxuICB9LFxufTtcblxuY29uc3QgbGFiZWxTaXplU3R5bGVzID0gKHByb3BzOiBUU3R5bGVkTGFiZWxQcm9wcykgPT4gY3NzYFxuICBoZWlnaHQ6ICR7cHJvcHMudHJhY2tTaXplc1twcm9wcy5zaXplXS5oZWlnaHR9O1xuICB3aWR0aDogJHtwcm9wcy50cmFja1NpemVzW3Byb3BzLnNpemVdLndpZHRofTtcbmA7XG5cbmNvbnN0IGdldFRodW1iU2l6ZSA9IChwcm9wczogVFN0eWxlZFNwYW5Qcm9wcykgPT5cbiAgcHJvcHMudGh1bWJTaXplc1twcm9wcy5zaXplXS5kaWFtZXRlcjtcblxuY29uc3QgZ2V0VGh1bWJTaGlmdCA9IChwcm9wczogVFN0eWxlZFNwYW5Qcm9wcykgPT5cbiAgYC0ke3Byb3BzLnRodW1iU2l6ZXNbcHJvcHMuc2l6ZV0uc2hpZnR9YDtcblxuY29uc3QgZ2V0Rm9jdXNJbmRpY2F0b3JXaWR0aCA9IChwcm9wczogVFN0eWxlZFNwYW5Qcm9wcykgPT4gYFxuICAgIGNhbGMoXG4gICAgICAke3Byb3BzLnRyYWNrU2l6ZXNbcHJvcHMuc2l6ZV0ud2lkdGh9ICsgMiAqXG4gICAgICAgICR7cHJvcHMudGh1bWJTaXplc1twcm9wcy5zaXplXS5ob3ZlckFyZWFXaWR0aH0gKyAyICpcbiAgICAgICAgJHtwcm9wcy50aHVtYlNpemVzW3Byb3BzLnNpemVdLnNoaWZ0fSArIDJweFxuICAgIClgO1xuXG5jb25zdCBnZXRGb2N1c0luZGljYXRvckhlaWdodCA9IChwcm9wczogVFN0eWxlZFNwYW5Qcm9wcykgPT4gYFxuICAgIGNhbGMoXG4gICAgICAke3Byb3BzLnRodW1iU2l6ZXNbcHJvcHMuc2l6ZV0uZGlhbWV0ZXJ9ICsgMiAqXG4gICAgICAgICR7cHJvcHMudGh1bWJTaXplc1twcm9wcy5zaXplXS5ob3ZlckFyZWFXaWR0aH0gKyAycHhcbiAgICApXG5gO1xuXG5jb25zdCBnZXRGb2N1c0luZGljYXRvckxlZnRQb3NpdGlvbmluZyA9IChwcm9wczogVFN0eWxlZFNwYW5Qcm9wcykgPT4gYFxuICAgIGNhbGMoXG4gICAgICAtJHtwcm9wcy50aHVtYlNpemVzW3Byb3BzLnNpemVdLmhvdmVyQXJlYVdpZHRofSAtICR7XG4gIHByb3BzLnRodW1iU2l6ZXNbcHJvcHMuc2l6ZV0uc2hpZnRcbn0gLSAxcHhcbiAgICApXG5gO1xuXG5jb25zdCBnZXRGb2N1c0luZGljYXRvclRvcFBvc2l0aW9uaW5nID0gKHByb3BzOiBUU3R5bGVkU3BhblByb3BzKSA9PlxuICBgY2FsYygtNTAlIC0gJHtwcm9wcy5zaXplID09PSAnc21hbGwnID8gJzJweCcgOiAnMXB4J30pYDtcblxuY29uc3QgZ2V0Rm9jdXNJbmRpY2F0b3IgPSAocHJvcHM6IFRTdHlsZWRTcGFuUHJvcHMpID0+IGNzc2BcbiAgJjo6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBvdXRsaW5lOiBhdXRvIDJweCAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWR9O1xuICAgIGhlaWdodDogJHtnZXRGb2N1c0luZGljYXRvckhlaWdodChwcm9wcyl9O1xuICAgIHRvcDogJHtnZXRGb2N1c0luZGljYXRvclRvcFBvc2l0aW9uaW5nKHByb3BzKX07XG4gICAgd2lkdGg6ICR7Z2V0Rm9jdXNJbmRpY2F0b3JXaWR0aChwcm9wcyl9O1xuICAgIGxlZnQ6ICR7Z2V0Rm9jdXNJbmRpY2F0b3JMZWZ0UG9zaXRpb25pbmcocHJvcHMpfTtcbiAgfVxuYDtcblxuY29uc3QgZ2V0TWFyZ2luID0gKHByb3BzOiBUU3R5bGVkTGFiZWxQcm9wcykgPT5cbiAgY3NzYFxuICAgIG1hcmdpbjogJHtgY2FsYygycHggKyAke3Byb3BzLnRodW1iU2l6ZXNbcHJvcHMuc2l6ZV0uaG92ZXJBcmVhV2lkdGh9ICsgKCR7XG4gICAgICBwcm9wcy50aHVtYlNpemVzW3Byb3BzLnNpemVdLmRpYW1ldGVyXG4gICAgfSAtICR7cHJvcHMudHJhY2tTaXplc1twcm9wcy5zaXplXS5oZWlnaHR9KSAvIDIpYH07XG4gIGA7XG5cbmNvbnN0IExhYmVsID0gc3R5bGVkLmxhYmVsPFRTdHlsZWRMYWJlbFByb3BzPmBcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGN1cnNvcjogJHsocHJvcHMpID0+IChwcm9wcy5pc0Rpc2FibGVkID8gJ25vdC1hbGxvd2VkJyA6ICdwb2ludGVyJyl9O1xuICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gICR7Z2V0TWFyZ2lufVxuXG4gICR7bGFiZWxTaXplU3R5bGVzfVxuXG4gICY6Zm9jdXMtd2l0aGluIHtcbiAgJHsocHJvcHMpID0+IGdldEZvY3VzSW5kaWNhdG9yKHByb3BzKX1cbmA7XG5cbmNvbnN0IFNwYW4gPSBzdHlsZWQuc3BhbjxUU3R5bGVkU3BhblByb3BzPmBcbiAgLyogdGhpcyBpcyB0aGUgdHJhY2sgKi9cblxuICAmOjpiZWZvcmUge1xuICAgIGJvcmRlci1yYWRpdXM6IDEycHg7XG4gICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JUb2dnbGVJbnB1dFRyYWNrfTtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogNTAlO1xuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC4ycyBlYXNlLWluLW91dDtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG4gIC8qIHRoaXMgaXMgdGhlIHRodW1iICovXG4gICY6OmFmdGVyIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICAgIHRvcDogNTAlO1xuICAgIGxlZnQ6ICR7Z2V0VGh1bWJTaGlmdH07XG4gICAgaGVpZ2h0OiAke2dldFRodW1iU2l6ZX07XG4gICAgd2lkdGg6ICR7Z2V0VGh1bWJTaXplfTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLnNoYWRvd0ZvclRvZ2dsZUlucHV0VGh1bWJ9O1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4ycyBlYXNlLCBiYWNrZ3JvdW5kIDAuMnMgZWFzZTtcbiAgfVxuYDtcblxuY29uc3QgZ2V0SW5wdXRTdHlsZXMgPSAocHJvcHM6IFRUb2dnbGVJbnB1dFByb3BzICYgU2l6ZXNQcm9wcykgPT4gY3NzYFxuICAvKiB3aGVuIGNoZWNrZWQgKi9cbiAgJjpjaGVja2VkIHtcbiAgICArIHNwYW46OmJlZm9yZSB7XG4gICAgICBiYWNrZ3JvdW5kOiAke2Rlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JUb2dnbGVJbnB1dFRyYWNrV2hlbkNoZWNrZWR9O1xuICAgIH1cbiAgICAmICsgc3Bhbjo6YWZ0ZXIge1xuICAgICAgYmFja2dyb3VuZDogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yVG9nZ2xlSW5wdXRUaHVtYldoZW5DaGVja2VkfTtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKCR7cHJvcHMudGh1bWJTaXplc1twcm9wcy5zaXplXS5kaWFtZXRlcn0sIC01MCUpO1xuICAgIH1cbiAgfVxuXG4gIC8qIHdoZW4gZGlzYWJsZWQgKi9cbiAgJjpkaXNhYmxlZCB7XG4gICAgJiArIHNwYW46OmJlZm9yZSB7XG4gICAgICBiYWNrZ3JvdW5kOiAke1xuICAgICAgICBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yVG9nZ2xlSW5wdXRUcmFja1doZW5EaXNhYmxlZFxuICAgICAgfTtcbiAgICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgfVxuICAgICYgKyBzcGFuOjphZnRlciB7XG4gICAgICBiYWNrZ3JvdW5kOiAke1xuICAgICAgICBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yVG9nZ2xlSW5wdXRUaHVtYldoZW5EaXNhYmxlZFxuICAgICAgfTtcbiAgICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLnNoYWRvd0ZvclRvZ2dsZUlucHV0VGh1bWJ9O1xuICAgIH1cbiAgfVxuXG4gIC8qIHdoZW4gZGlzYWJsZWQgYW5kIGNoZWNrZWQgKi9cbiAgJjpkaXNhYmxlZCY6Y2hlY2tlZCB7XG4gICAgJiArIHNwYW46OmJlZm9yZSB7XG4gICAgICBiYWNrZ3JvdW5kOiAke1xuICAgICAgICBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yVG9nZ2xlSW5wdXRUcmFja1doZW5DaGVja2VkQW5kRGlzYWJsZWRcbiAgICAgIH07XG4gICAgfVxuICAgICYgKyBzcGFuOjphZnRlciB7XG4gICAgICBiYWNrZ3JvdW5kOiAke1xuICAgICAgICBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yVG9nZ2xlSW5wdXRUaHVtYldoZW5DaGVja2VkQW5kRGlzYWJsZWRcbiAgICAgIH07XG4gICAgfVxuICB9XG5cbiAgOm5vdCg6ZGlzYWJsZWQpJjpob3ZlciArIHNwYW46OmFmdGVyLFxuICA6bm90KDpkaXNhYmxlZCkmOmZvY3VzICsgc3Bhbjo6YWZ0ZXIge1xuICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgb3V0bGluZTogJHtgJHtcbiAgICAgIHByb3BzLnRodW1iU2l6ZXNbcHJvcHMuc2l6ZV0uaG92ZXJBcmVhV2lkdGhcbiAgICB9IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xKWB9XG5gO1xuXG5leHBvcnQgeyBMYWJlbCwgU3BhbiwgdHJhY2tTaXplcywgdGh1bWJTaXplcywgZ2V0SW5wdXRTdHlsZXMgfTtcbiJdfQ== */");
};
const Label = /*#__PURE__*/_styled("label", process.env.NODE_ENV === "production" ? {
  target: "e1p8kklm1"
} : {
  target: "e1p8kklm1",
  label: "Label"
})("position:relative;display:inline-block;cursor:", props => props.isDisabled ? 'not-allowed' : 'pointer', ";align-self:center;", getMargin, " ", labelSizeStyles, " &:focus-within{", props => getFocusIndicator(props), ";}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvZ2dsZS1pbnB1dC5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNEY2QyIsImZpbGUiOiJ0b2dnbGUtaW5wdXQuc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5pbXBvcnQgdHlwZSB7IFRUb2dnbGVJbnB1dFByb3BzIH0gZnJvbSAnLi90b2dnbGUtaW5wdXQnO1xuXG50eXBlIFNpemVzUHJvcHMgPSB7XG4gIHRyYWNrU2l6ZXM6IHR5cGVvZiB0cmFja1NpemVzO1xuICB0aHVtYlNpemVzOiB0eXBlb2YgdGh1bWJTaXplcztcbn07XG5cbnR5cGUgVFN0eWxlZExhYmVsUHJvcHMgPSBQaWNrPFRUb2dnbGVJbnB1dFByb3BzLCAnaXNEaXNhYmxlZCcgfCAnc2l6ZSc+ICZcbiAgU2l6ZXNQcm9wcztcbnR5cGUgVFN0eWxlZFNwYW5Qcm9wcyA9IFBpY2s8VFRvZ2dsZUlucHV0UHJvcHMsICdzaXplJz4gJiBTaXplc1Byb3BzO1xuXG5jb25zdCB0cmFja1NpemVzID0ge1xuICBzbWFsbDoge1xuICAgIHdpZHRoOiAnMjlweCcsXG4gICAgaGVpZ2h0OiAnMTJweCcsXG4gIH0sXG4gIGJpZzoge1xuICAgIHdpZHRoOiAnNTZweCcsXG4gICAgaGVpZ2h0OiAnMjRweCcsXG4gIH0sXG59O1xuY29uc3QgdGh1bWJTaXplcyA9IHtcbiAgc21hbGw6IHtcbiAgICBkaWFtZXRlcjogJzE4cHgnLFxuICAgIHNoaWZ0OiAnM3B4JyxcbiAgICBob3ZlckFyZWFXaWR0aDogJzRweCcsXG4gIH0sXG4gIGJpZzoge1xuICAgIGRpYW1ldGVyOiAnMzJweCcsXG4gICAgc2hpZnQ6ICc0cHgnLFxuICAgIGhvdmVyQXJlYVdpZHRoOiAnOHB4JyxcbiAgfSxcbn07XG5cbmNvbnN0IGxhYmVsU2l6ZVN0eWxlcyA9IChwcm9wczogVFN0eWxlZExhYmVsUHJvcHMpID0+IGNzc2BcbiAgaGVpZ2h0OiAke3Byb3BzLnRyYWNrU2l6ZXNbcHJvcHMuc2l6ZV0uaGVpZ2h0fTtcbiAgd2lkdGg6ICR7cHJvcHMudHJhY2tTaXplc1twcm9wcy5zaXplXS53aWR0aH07XG5gO1xuXG5jb25zdCBnZXRUaHVtYlNpemUgPSAocHJvcHM6IFRTdHlsZWRTcGFuUHJvcHMpID0+XG4gIHByb3BzLnRodW1iU2l6ZXNbcHJvcHMuc2l6ZV0uZGlhbWV0ZXI7XG5cbmNvbnN0IGdldFRodW1iU2hpZnQgPSAocHJvcHM6IFRTdHlsZWRTcGFuUHJvcHMpID0+XG4gIGAtJHtwcm9wcy50aHVtYlNpemVzW3Byb3BzLnNpemVdLnNoaWZ0fWA7XG5cbmNvbnN0IGdldEZvY3VzSW5kaWNhdG9yV2lkdGggPSAocHJvcHM6IFRTdHlsZWRTcGFuUHJvcHMpID0+IGBcbiAgICBjYWxjKFxuICAgICAgJHtwcm9wcy50cmFja1NpemVzW3Byb3BzLnNpemVdLndpZHRofSArIDIgKlxuICAgICAgICAke3Byb3BzLnRodW1iU2l6ZXNbcHJvcHMuc2l6ZV0uaG92ZXJBcmVhV2lkdGh9ICsgMiAqXG4gICAgICAgICR7cHJvcHMudGh1bWJTaXplc1twcm9wcy5zaXplXS5zaGlmdH0gKyAycHhcbiAgICApYDtcblxuY29uc3QgZ2V0Rm9jdXNJbmRpY2F0b3JIZWlnaHQgPSAocHJvcHM6IFRTdHlsZWRTcGFuUHJvcHMpID0+IGBcbiAgICBjYWxjKFxuICAgICAgJHtwcm9wcy50aHVtYlNpemVzW3Byb3BzLnNpemVdLmRpYW1ldGVyfSArIDIgKlxuICAgICAgICAke3Byb3BzLnRodW1iU2l6ZXNbcHJvcHMuc2l6ZV0uaG92ZXJBcmVhV2lkdGh9ICsgMnB4XG4gICAgKVxuYDtcblxuY29uc3QgZ2V0Rm9jdXNJbmRpY2F0b3JMZWZ0UG9zaXRpb25pbmcgPSAocHJvcHM6IFRTdHlsZWRTcGFuUHJvcHMpID0+IGBcbiAgICBjYWxjKFxuICAgICAgLSR7cHJvcHMudGh1bWJTaXplc1twcm9wcy5zaXplXS5ob3ZlckFyZWFXaWR0aH0gLSAke1xuICBwcm9wcy50aHVtYlNpemVzW3Byb3BzLnNpemVdLnNoaWZ0XG59IC0gMXB4XG4gICAgKVxuYDtcblxuY29uc3QgZ2V0Rm9jdXNJbmRpY2F0b3JUb3BQb3NpdGlvbmluZyA9IChwcm9wczogVFN0eWxlZFNwYW5Qcm9wcykgPT5cbiAgYGNhbGMoLTUwJSAtICR7cHJvcHMuc2l6ZSA9PT0gJ3NtYWxsJyA/ICcycHgnIDogJzFweCd9KWA7XG5cbmNvbnN0IGdldEZvY3VzSW5kaWNhdG9yID0gKHByb3BzOiBUU3R5bGVkU3BhblByb3BzKSA9PiBjc3NgXG4gICY6OmFmdGVyIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgb3V0bGluZTogYXV0byAycHggJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkfTtcbiAgICBoZWlnaHQ6ICR7Z2V0Rm9jdXNJbmRpY2F0b3JIZWlnaHQocHJvcHMpfTtcbiAgICB0b3A6ICR7Z2V0Rm9jdXNJbmRpY2F0b3JUb3BQb3NpdGlvbmluZyhwcm9wcyl9O1xuICAgIHdpZHRoOiAke2dldEZvY3VzSW5kaWNhdG9yV2lkdGgocHJvcHMpfTtcbiAgICBsZWZ0OiAke2dldEZvY3VzSW5kaWNhdG9yTGVmdFBvc2l0aW9uaW5nKHByb3BzKX07XG4gIH1cbmA7XG5cbmNvbnN0IGdldE1hcmdpbiA9IChwcm9wczogVFN0eWxlZExhYmVsUHJvcHMpID0+XG4gIGNzc2BcbiAgICBtYXJnaW46ICR7YGNhbGMoMnB4ICsgJHtwcm9wcy50aHVtYlNpemVzW3Byb3BzLnNpemVdLmhvdmVyQXJlYVdpZHRofSArICgke1xuICAgICAgcHJvcHMudGh1bWJTaXplc1twcm9wcy5zaXplXS5kaWFtZXRlclxuICAgIH0gLSAke3Byb3BzLnRyYWNrU2l6ZXNbcHJvcHMuc2l6ZV0uaGVpZ2h0fSkgLyAyKWB9O1xuICBgO1xuXG5jb25zdCBMYWJlbCA9IHN0eWxlZC5sYWJlbDxUU3R5bGVkTGFiZWxQcm9wcz5gXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBjdXJzb3I6ICR7KHByb3BzKSA9PiAocHJvcHMuaXNEaXNhYmxlZCA/ICdub3QtYWxsb3dlZCcgOiAncG9pbnRlcicpfTtcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xuICAke2dldE1hcmdpbn1cblxuICAke2xhYmVsU2l6ZVN0eWxlc31cblxuICAmOmZvY3VzLXdpdGhpbiB7XG4gICR7KHByb3BzKSA9PiBnZXRGb2N1c0luZGljYXRvcihwcm9wcyl9XG5gO1xuXG5jb25zdCBTcGFuID0gc3R5bGVkLnNwYW48VFN0eWxlZFNwYW5Qcm9wcz5gXG4gIC8qIHRoaXMgaXMgdGhlIHRyYWNrICovXG5cbiAgJjo6YmVmb3JlIHtcbiAgICBib3JkZXItcmFkaXVzOiAxMnB4O1xuICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yVG9nZ2xlSW5wdXRUcmFja307XG4gICAgbGVmdDogMDtcbiAgICB0b3A6IDUwJTtcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuMnMgZWFzZS1pbi1vdXQ7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICAvKiB0aGlzIGlzIHRoZSB0aHVtYiAqL1xuICAmOjphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiAke2dldFRodW1iU2hpZnR9O1xuICAgIGhlaWdodDogJHtnZXRUaHVtYlNpemV9O1xuICAgIHdpZHRoOiAke2dldFRodW1iU2l6ZX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICBib3gtc2hhZG93OiAke2Rlc2lnblRva2Vucy5zaGFkb3dGb3JUb2dnbGVJbnB1dFRodW1ifTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMnMgZWFzZSwgYmFja2dyb3VuZCAwLjJzIGVhc2U7XG4gIH1cbmA7XG5cbmNvbnN0IGdldElucHV0U3R5bGVzID0gKHByb3BzOiBUVG9nZ2xlSW5wdXRQcm9wcyAmIFNpemVzUHJvcHMpID0+IGNzc2BcbiAgLyogd2hlbiBjaGVja2VkICovXG4gICY6Y2hlY2tlZCB7XG4gICAgKyBzcGFuOjpiZWZvcmUge1xuICAgICAgYmFja2dyb3VuZDogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yVG9nZ2xlSW5wdXRUcmFja1doZW5DaGVja2VkfTtcbiAgICB9XG4gICAgJiArIHNwYW46OmFmdGVyIHtcbiAgICAgIGJhY2tncm91bmQ6ICR7ZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclRvZ2dsZUlucHV0VGh1bWJXaGVuQ2hlY2tlZH07XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgke3Byb3BzLnRodW1iU2l6ZXNbcHJvcHMuc2l6ZV0uZGlhbWV0ZXJ9LCAtNTAlKTtcbiAgICB9XG4gIH1cblxuICAvKiB3aGVuIGRpc2FibGVkICovXG4gICY6ZGlzYWJsZWQge1xuICAgICYgKyBzcGFuOjpiZWZvcmUge1xuICAgICAgYmFja2dyb3VuZDogJHtcbiAgICAgICAgZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclRvZ2dsZUlucHV0VHJhY2tXaGVuRGlzYWJsZWRcbiAgICAgIH07XG4gICAgICBib3gtc2hhZG93OiBub25lO1xuICAgIH1cbiAgICAmICsgc3Bhbjo6YWZ0ZXIge1xuICAgICAgYmFja2dyb3VuZDogJHtcbiAgICAgICAgZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclRvZ2dsZUlucHV0VGh1bWJXaGVuRGlzYWJsZWRcbiAgICAgIH07XG4gICAgICBib3gtc2hhZG93OiAke2Rlc2lnblRva2Vucy5zaGFkb3dGb3JUb2dnbGVJbnB1dFRodW1ifTtcbiAgICB9XG4gIH1cblxuICAvKiB3aGVuIGRpc2FibGVkIGFuZCBjaGVja2VkICovXG4gICY6ZGlzYWJsZWQmOmNoZWNrZWQge1xuICAgICYgKyBzcGFuOjpiZWZvcmUge1xuICAgICAgYmFja2dyb3VuZDogJHtcbiAgICAgICAgZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclRvZ2dsZUlucHV0VHJhY2tXaGVuQ2hlY2tlZEFuZERpc2FibGVkXG4gICAgICB9O1xuICAgIH1cbiAgICAmICsgc3Bhbjo6YWZ0ZXIge1xuICAgICAgYmFja2dyb3VuZDogJHtcbiAgICAgICAgZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclRvZ2dsZUlucHV0VGh1bWJXaGVuQ2hlY2tlZEFuZERpc2FibGVkXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIDpub3QoOmRpc2FibGVkKSY6aG92ZXIgKyBzcGFuOjphZnRlcixcbiAgOm5vdCg6ZGlzYWJsZWQpJjpmb2N1cyArIHNwYW46OmFmdGVyIHtcbiAgICBib3gtc2hhZG93OiBub25lO1xuICAgIG91dGxpbmU6ICR7YCR7XG4gICAgICBwcm9wcy50aHVtYlNpemVzW3Byb3BzLnNpemVdLmhvdmVyQXJlYVdpZHRoXG4gICAgfSBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMSlgfVxuYDtcblxuZXhwb3J0IHsgTGFiZWwsIFNwYW4sIHRyYWNrU2l6ZXMsIHRodW1iU2l6ZXMsIGdldElucHV0U3R5bGVzIH07XG4iXX0= */"));
const Span = /*#__PURE__*/_styled("span", process.env.NODE_ENV === "production" ? {
  target: "e1p8kklm0"
} : {
  target: "e1p8kklm0",
  label: "Span"
})("&::before{border-radius:12px;box-shadow:none;background-color:", designTokens.backgroundColorForToggleInputTrack, ";left:0;top:50%;transition:background 0.2s ease-in-out;content:'';position:absolute;transform:translateY(-50%);height:100%;width:100%;}&::after{content:'';position:absolute;transform:translateY(-50%);top:50%;left:", getThumbShift, ";height:", getThumbSize, ";width:", getThumbSize, ";background-color:", designTokens.colorSurface, ";box-shadow:", designTokens.shadowForToggleInputThumb, ";border-radius:50%;transition:transform 0.2s ease,background 0.2s ease;}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvZ2dsZS1pbnB1dC5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeUcwQyIsImZpbGUiOiJ0b2dnbGUtaW5wdXQuc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5pbXBvcnQgdHlwZSB7IFRUb2dnbGVJbnB1dFByb3BzIH0gZnJvbSAnLi90b2dnbGUtaW5wdXQnO1xuXG50eXBlIFNpemVzUHJvcHMgPSB7XG4gIHRyYWNrU2l6ZXM6IHR5cGVvZiB0cmFja1NpemVzO1xuICB0aHVtYlNpemVzOiB0eXBlb2YgdGh1bWJTaXplcztcbn07XG5cbnR5cGUgVFN0eWxlZExhYmVsUHJvcHMgPSBQaWNrPFRUb2dnbGVJbnB1dFByb3BzLCAnaXNEaXNhYmxlZCcgfCAnc2l6ZSc+ICZcbiAgU2l6ZXNQcm9wcztcbnR5cGUgVFN0eWxlZFNwYW5Qcm9wcyA9IFBpY2s8VFRvZ2dsZUlucHV0UHJvcHMsICdzaXplJz4gJiBTaXplc1Byb3BzO1xuXG5jb25zdCB0cmFja1NpemVzID0ge1xuICBzbWFsbDoge1xuICAgIHdpZHRoOiAnMjlweCcsXG4gICAgaGVpZ2h0OiAnMTJweCcsXG4gIH0sXG4gIGJpZzoge1xuICAgIHdpZHRoOiAnNTZweCcsXG4gICAgaGVpZ2h0OiAnMjRweCcsXG4gIH0sXG59O1xuY29uc3QgdGh1bWJTaXplcyA9IHtcbiAgc21hbGw6IHtcbiAgICBkaWFtZXRlcjogJzE4cHgnLFxuICAgIHNoaWZ0OiAnM3B4JyxcbiAgICBob3ZlckFyZWFXaWR0aDogJzRweCcsXG4gIH0sXG4gIGJpZzoge1xuICAgIGRpYW1ldGVyOiAnMzJweCcsXG4gICAgc2hpZnQ6ICc0cHgnLFxuICAgIGhvdmVyQXJlYVdpZHRoOiAnOHB4JyxcbiAgfSxcbn07XG5cbmNvbnN0IGxhYmVsU2l6ZVN0eWxlcyA9IChwcm9wczogVFN0eWxlZExhYmVsUHJvcHMpID0+IGNzc2BcbiAgaGVpZ2h0OiAke3Byb3BzLnRyYWNrU2l6ZXNbcHJvcHMuc2l6ZV0uaGVpZ2h0fTtcbiAgd2lkdGg6ICR7cHJvcHMudHJhY2tTaXplc1twcm9wcy5zaXplXS53aWR0aH07XG5gO1xuXG5jb25zdCBnZXRUaHVtYlNpemUgPSAocHJvcHM6IFRTdHlsZWRTcGFuUHJvcHMpID0+XG4gIHByb3BzLnRodW1iU2l6ZXNbcHJvcHMuc2l6ZV0uZGlhbWV0ZXI7XG5cbmNvbnN0IGdldFRodW1iU2hpZnQgPSAocHJvcHM6IFRTdHlsZWRTcGFuUHJvcHMpID0+XG4gIGAtJHtwcm9wcy50aHVtYlNpemVzW3Byb3BzLnNpemVdLnNoaWZ0fWA7XG5cbmNvbnN0IGdldEZvY3VzSW5kaWNhdG9yV2lkdGggPSAocHJvcHM6IFRTdHlsZWRTcGFuUHJvcHMpID0+IGBcbiAgICBjYWxjKFxuICAgICAgJHtwcm9wcy50cmFja1NpemVzW3Byb3BzLnNpemVdLndpZHRofSArIDIgKlxuICAgICAgICAke3Byb3BzLnRodW1iU2l6ZXNbcHJvcHMuc2l6ZV0uaG92ZXJBcmVhV2lkdGh9ICsgMiAqXG4gICAgICAgICR7cHJvcHMudGh1bWJTaXplc1twcm9wcy5zaXplXS5zaGlmdH0gKyAycHhcbiAgICApYDtcblxuY29uc3QgZ2V0Rm9jdXNJbmRpY2F0b3JIZWlnaHQgPSAocHJvcHM6IFRTdHlsZWRTcGFuUHJvcHMpID0+IGBcbiAgICBjYWxjKFxuICAgICAgJHtwcm9wcy50aHVtYlNpemVzW3Byb3BzLnNpemVdLmRpYW1ldGVyfSArIDIgKlxuICAgICAgICAke3Byb3BzLnRodW1iU2l6ZXNbcHJvcHMuc2l6ZV0uaG92ZXJBcmVhV2lkdGh9ICsgMnB4XG4gICAgKVxuYDtcblxuY29uc3QgZ2V0Rm9jdXNJbmRpY2F0b3JMZWZ0UG9zaXRpb25pbmcgPSAocHJvcHM6IFRTdHlsZWRTcGFuUHJvcHMpID0+IGBcbiAgICBjYWxjKFxuICAgICAgLSR7cHJvcHMudGh1bWJTaXplc1twcm9wcy5zaXplXS5ob3ZlckFyZWFXaWR0aH0gLSAke1xuICBwcm9wcy50aHVtYlNpemVzW3Byb3BzLnNpemVdLnNoaWZ0XG59IC0gMXB4XG4gICAgKVxuYDtcblxuY29uc3QgZ2V0Rm9jdXNJbmRpY2F0b3JUb3BQb3NpdGlvbmluZyA9IChwcm9wczogVFN0eWxlZFNwYW5Qcm9wcykgPT5cbiAgYGNhbGMoLTUwJSAtICR7cHJvcHMuc2l6ZSA9PT0gJ3NtYWxsJyA/ICcycHgnIDogJzFweCd9KWA7XG5cbmNvbnN0IGdldEZvY3VzSW5kaWNhdG9yID0gKHByb3BzOiBUU3R5bGVkU3BhblByb3BzKSA9PiBjc3NgXG4gICY6OmFmdGVyIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgb3V0bGluZTogYXV0byAycHggJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkfTtcbiAgICBoZWlnaHQ6ICR7Z2V0Rm9jdXNJbmRpY2F0b3JIZWlnaHQocHJvcHMpfTtcbiAgICB0b3A6ICR7Z2V0Rm9jdXNJbmRpY2F0b3JUb3BQb3NpdGlvbmluZyhwcm9wcyl9O1xuICAgIHdpZHRoOiAke2dldEZvY3VzSW5kaWNhdG9yV2lkdGgocHJvcHMpfTtcbiAgICBsZWZ0OiAke2dldEZvY3VzSW5kaWNhdG9yTGVmdFBvc2l0aW9uaW5nKHByb3BzKX07XG4gIH1cbmA7XG5cbmNvbnN0IGdldE1hcmdpbiA9IChwcm9wczogVFN0eWxlZExhYmVsUHJvcHMpID0+XG4gIGNzc2BcbiAgICBtYXJnaW46ICR7YGNhbGMoMnB4ICsgJHtwcm9wcy50aHVtYlNpemVzW3Byb3BzLnNpemVdLmhvdmVyQXJlYVdpZHRofSArICgke1xuICAgICAgcHJvcHMudGh1bWJTaXplc1twcm9wcy5zaXplXS5kaWFtZXRlclxuICAgIH0gLSAke3Byb3BzLnRyYWNrU2l6ZXNbcHJvcHMuc2l6ZV0uaGVpZ2h0fSkgLyAyKWB9O1xuICBgO1xuXG5jb25zdCBMYWJlbCA9IHN0eWxlZC5sYWJlbDxUU3R5bGVkTGFiZWxQcm9wcz5gXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBjdXJzb3I6ICR7KHByb3BzKSA9PiAocHJvcHMuaXNEaXNhYmxlZCA/ICdub3QtYWxsb3dlZCcgOiAncG9pbnRlcicpfTtcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xuICAke2dldE1hcmdpbn1cblxuICAke2xhYmVsU2l6ZVN0eWxlc31cblxuICAmOmZvY3VzLXdpdGhpbiB7XG4gICR7KHByb3BzKSA9PiBnZXRGb2N1c0luZGljYXRvcihwcm9wcyl9XG5gO1xuXG5jb25zdCBTcGFuID0gc3R5bGVkLnNwYW48VFN0eWxlZFNwYW5Qcm9wcz5gXG4gIC8qIHRoaXMgaXMgdGhlIHRyYWNrICovXG5cbiAgJjo6YmVmb3JlIHtcbiAgICBib3JkZXItcmFkaXVzOiAxMnB4O1xuICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yVG9nZ2xlSW5wdXRUcmFja307XG4gICAgbGVmdDogMDtcbiAgICB0b3A6IDUwJTtcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuMnMgZWFzZS1pbi1vdXQ7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICAvKiB0aGlzIGlzIHRoZSB0aHVtYiAqL1xuICAmOjphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiAke2dldFRodW1iU2hpZnR9O1xuICAgIGhlaWdodDogJHtnZXRUaHVtYlNpemV9O1xuICAgIHdpZHRoOiAke2dldFRodW1iU2l6ZX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICBib3gtc2hhZG93OiAke2Rlc2lnblRva2Vucy5zaGFkb3dGb3JUb2dnbGVJbnB1dFRodW1ifTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMnMgZWFzZSwgYmFja2dyb3VuZCAwLjJzIGVhc2U7XG4gIH1cbmA7XG5cbmNvbnN0IGdldElucHV0U3R5bGVzID0gKHByb3BzOiBUVG9nZ2xlSW5wdXRQcm9wcyAmIFNpemVzUHJvcHMpID0+IGNzc2BcbiAgLyogd2hlbiBjaGVja2VkICovXG4gICY6Y2hlY2tlZCB7XG4gICAgKyBzcGFuOjpiZWZvcmUge1xuICAgICAgYmFja2dyb3VuZDogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yVG9nZ2xlSW5wdXRUcmFja1doZW5DaGVja2VkfTtcbiAgICB9XG4gICAgJiArIHNwYW46OmFmdGVyIHtcbiAgICAgIGJhY2tncm91bmQ6ICR7ZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclRvZ2dsZUlucHV0VGh1bWJXaGVuQ2hlY2tlZH07XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgke3Byb3BzLnRodW1iU2l6ZXNbcHJvcHMuc2l6ZV0uZGlhbWV0ZXJ9LCAtNTAlKTtcbiAgICB9XG4gIH1cblxuICAvKiB3aGVuIGRpc2FibGVkICovXG4gICY6ZGlzYWJsZWQge1xuICAgICYgKyBzcGFuOjpiZWZvcmUge1xuICAgICAgYmFja2dyb3VuZDogJHtcbiAgICAgICAgZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclRvZ2dsZUlucHV0VHJhY2tXaGVuRGlzYWJsZWRcbiAgICAgIH07XG4gICAgICBib3gtc2hhZG93OiBub25lO1xuICAgIH1cbiAgICAmICsgc3Bhbjo6YWZ0ZXIge1xuICAgICAgYmFja2dyb3VuZDogJHtcbiAgICAgICAgZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclRvZ2dsZUlucHV0VGh1bWJXaGVuRGlzYWJsZWRcbiAgICAgIH07XG4gICAgICBib3gtc2hhZG93OiAke2Rlc2lnblRva2Vucy5zaGFkb3dGb3JUb2dnbGVJbnB1dFRodW1ifTtcbiAgICB9XG4gIH1cblxuICAvKiB3aGVuIGRpc2FibGVkIGFuZCBjaGVja2VkICovXG4gICY6ZGlzYWJsZWQmOmNoZWNrZWQge1xuICAgICYgKyBzcGFuOjpiZWZvcmUge1xuICAgICAgYmFja2dyb3VuZDogJHtcbiAgICAgICAgZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclRvZ2dsZUlucHV0VHJhY2tXaGVuQ2hlY2tlZEFuZERpc2FibGVkXG4gICAgICB9O1xuICAgIH1cbiAgICAmICsgc3Bhbjo6YWZ0ZXIge1xuICAgICAgYmFja2dyb3VuZDogJHtcbiAgICAgICAgZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclRvZ2dsZUlucHV0VGh1bWJXaGVuQ2hlY2tlZEFuZERpc2FibGVkXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIDpub3QoOmRpc2FibGVkKSY6aG92ZXIgKyBzcGFuOjphZnRlcixcbiAgOm5vdCg6ZGlzYWJsZWQpJjpmb2N1cyArIHNwYW46OmFmdGVyIHtcbiAgICBib3gtc2hhZG93OiBub25lO1xuICAgIG91dGxpbmU6ICR7YCR7XG4gICAgICBwcm9wcy50aHVtYlNpemVzW3Byb3BzLnNpemVdLmhvdmVyQXJlYVdpZHRoXG4gICAgfSBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMSlgfVxuYDtcblxuZXhwb3J0IHsgTGFiZWwsIFNwYW4sIHRyYWNrU2l6ZXMsIHRodW1iU2l6ZXMsIGdldElucHV0U3R5bGVzIH07XG4iXX0= */"));
const getInputStyles = props => /*#__PURE__*/css("&:checked{+span::before{background:", designTokens.backgroundColorForToggleInputTrackWhenChecked, ";}&+span::after{background:", designTokens.backgroundColorForToggleInputThumbWhenChecked, ";transform:translate(", props.thumbSizes[props.size].diameter, ", -50%);}}&:disabled{&+span::before{background:", designTokens.backgroundColorForToggleInputTrackWhenDisabled, ";box-shadow:none;}&+span::after{background:", designTokens.backgroundColorForToggleInputThumbWhenDisabled, ";box-shadow:", designTokens.shadowForToggleInputThumb, ";}}&:disabled&:checked{&+span::before{background:", designTokens.backgroundColorForToggleInputTrackWhenCheckedAndDisabled, ";}&+span::after{background:", designTokens.backgroundColorForToggleInputThumbWhenCheckedAndDisabled, ";}}:not(:disabled)&:hover+span::after,:not(:disabled)&:focus+span::after{box-shadow:none;outline:", "".concat(props.thumbSizes[props.size].hoverAreaWidth, " solid rgba(0, 0, 0, 0.1)"), ";}" + (process.env.NODE_ENV === "production" ? "" : ";label:getInputStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvZ2dsZS1pbnB1dC5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMElxRSIsImZpbGUiOiJ0b2dnbGUtaW5wdXQuc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5pbXBvcnQgdHlwZSB7IFRUb2dnbGVJbnB1dFByb3BzIH0gZnJvbSAnLi90b2dnbGUtaW5wdXQnO1xuXG50eXBlIFNpemVzUHJvcHMgPSB7XG4gIHRyYWNrU2l6ZXM6IHR5cGVvZiB0cmFja1NpemVzO1xuICB0aHVtYlNpemVzOiB0eXBlb2YgdGh1bWJTaXplcztcbn07XG5cbnR5cGUgVFN0eWxlZExhYmVsUHJvcHMgPSBQaWNrPFRUb2dnbGVJbnB1dFByb3BzLCAnaXNEaXNhYmxlZCcgfCAnc2l6ZSc+ICZcbiAgU2l6ZXNQcm9wcztcbnR5cGUgVFN0eWxlZFNwYW5Qcm9wcyA9IFBpY2s8VFRvZ2dsZUlucHV0UHJvcHMsICdzaXplJz4gJiBTaXplc1Byb3BzO1xuXG5jb25zdCB0cmFja1NpemVzID0ge1xuICBzbWFsbDoge1xuICAgIHdpZHRoOiAnMjlweCcsXG4gICAgaGVpZ2h0OiAnMTJweCcsXG4gIH0sXG4gIGJpZzoge1xuICAgIHdpZHRoOiAnNTZweCcsXG4gICAgaGVpZ2h0OiAnMjRweCcsXG4gIH0sXG59O1xuY29uc3QgdGh1bWJTaXplcyA9IHtcbiAgc21hbGw6IHtcbiAgICBkaWFtZXRlcjogJzE4cHgnLFxuICAgIHNoaWZ0OiAnM3B4JyxcbiAgICBob3ZlckFyZWFXaWR0aDogJzRweCcsXG4gIH0sXG4gIGJpZzoge1xuICAgIGRpYW1ldGVyOiAnMzJweCcsXG4gICAgc2hpZnQ6ICc0cHgnLFxuICAgIGhvdmVyQXJlYVdpZHRoOiAnOHB4JyxcbiAgfSxcbn07XG5cbmNvbnN0IGxhYmVsU2l6ZVN0eWxlcyA9IChwcm9wczogVFN0eWxlZExhYmVsUHJvcHMpID0+IGNzc2BcbiAgaGVpZ2h0OiAke3Byb3BzLnRyYWNrU2l6ZXNbcHJvcHMuc2l6ZV0uaGVpZ2h0fTtcbiAgd2lkdGg6ICR7cHJvcHMudHJhY2tTaXplc1twcm9wcy5zaXplXS53aWR0aH07XG5gO1xuXG5jb25zdCBnZXRUaHVtYlNpemUgPSAocHJvcHM6IFRTdHlsZWRTcGFuUHJvcHMpID0+XG4gIHByb3BzLnRodW1iU2l6ZXNbcHJvcHMuc2l6ZV0uZGlhbWV0ZXI7XG5cbmNvbnN0IGdldFRodW1iU2hpZnQgPSAocHJvcHM6IFRTdHlsZWRTcGFuUHJvcHMpID0+XG4gIGAtJHtwcm9wcy50aHVtYlNpemVzW3Byb3BzLnNpemVdLnNoaWZ0fWA7XG5cbmNvbnN0IGdldEZvY3VzSW5kaWNhdG9yV2lkdGggPSAocHJvcHM6IFRTdHlsZWRTcGFuUHJvcHMpID0+IGBcbiAgICBjYWxjKFxuICAgICAgJHtwcm9wcy50cmFja1NpemVzW3Byb3BzLnNpemVdLndpZHRofSArIDIgKlxuICAgICAgICAke3Byb3BzLnRodW1iU2l6ZXNbcHJvcHMuc2l6ZV0uaG92ZXJBcmVhV2lkdGh9ICsgMiAqXG4gICAgICAgICR7cHJvcHMudGh1bWJTaXplc1twcm9wcy5zaXplXS5zaGlmdH0gKyAycHhcbiAgICApYDtcblxuY29uc3QgZ2V0Rm9jdXNJbmRpY2F0b3JIZWlnaHQgPSAocHJvcHM6IFRTdHlsZWRTcGFuUHJvcHMpID0+IGBcbiAgICBjYWxjKFxuICAgICAgJHtwcm9wcy50aHVtYlNpemVzW3Byb3BzLnNpemVdLmRpYW1ldGVyfSArIDIgKlxuICAgICAgICAke3Byb3BzLnRodW1iU2l6ZXNbcHJvcHMuc2l6ZV0uaG92ZXJBcmVhV2lkdGh9ICsgMnB4XG4gICAgKVxuYDtcblxuY29uc3QgZ2V0Rm9jdXNJbmRpY2F0b3JMZWZ0UG9zaXRpb25pbmcgPSAocHJvcHM6IFRTdHlsZWRTcGFuUHJvcHMpID0+IGBcbiAgICBjYWxjKFxuICAgICAgLSR7cHJvcHMudGh1bWJTaXplc1twcm9wcy5zaXplXS5ob3ZlckFyZWFXaWR0aH0gLSAke1xuICBwcm9wcy50aHVtYlNpemVzW3Byb3BzLnNpemVdLnNoaWZ0XG59IC0gMXB4XG4gICAgKVxuYDtcblxuY29uc3QgZ2V0Rm9jdXNJbmRpY2F0b3JUb3BQb3NpdGlvbmluZyA9IChwcm9wczogVFN0eWxlZFNwYW5Qcm9wcykgPT5cbiAgYGNhbGMoLTUwJSAtICR7cHJvcHMuc2l6ZSA9PT0gJ3NtYWxsJyA/ICcycHgnIDogJzFweCd9KWA7XG5cbmNvbnN0IGdldEZvY3VzSW5kaWNhdG9yID0gKHByb3BzOiBUU3R5bGVkU3BhblByb3BzKSA9PiBjc3NgXG4gICY6OmFmdGVyIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgb3V0bGluZTogYXV0byAycHggJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkfTtcbiAgICBoZWlnaHQ6ICR7Z2V0Rm9jdXNJbmRpY2F0b3JIZWlnaHQocHJvcHMpfTtcbiAgICB0b3A6ICR7Z2V0Rm9jdXNJbmRpY2F0b3JUb3BQb3NpdGlvbmluZyhwcm9wcyl9O1xuICAgIHdpZHRoOiAke2dldEZvY3VzSW5kaWNhdG9yV2lkdGgocHJvcHMpfTtcbiAgICBsZWZ0OiAke2dldEZvY3VzSW5kaWNhdG9yTGVmdFBvc2l0aW9uaW5nKHByb3BzKX07XG4gIH1cbmA7XG5cbmNvbnN0IGdldE1hcmdpbiA9IChwcm9wczogVFN0eWxlZExhYmVsUHJvcHMpID0+XG4gIGNzc2BcbiAgICBtYXJnaW46ICR7YGNhbGMoMnB4ICsgJHtwcm9wcy50aHVtYlNpemVzW3Byb3BzLnNpemVdLmhvdmVyQXJlYVdpZHRofSArICgke1xuICAgICAgcHJvcHMudGh1bWJTaXplc1twcm9wcy5zaXplXS5kaWFtZXRlclxuICAgIH0gLSAke3Byb3BzLnRyYWNrU2l6ZXNbcHJvcHMuc2l6ZV0uaGVpZ2h0fSkgLyAyKWB9O1xuICBgO1xuXG5jb25zdCBMYWJlbCA9IHN0eWxlZC5sYWJlbDxUU3R5bGVkTGFiZWxQcm9wcz5gXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBjdXJzb3I6ICR7KHByb3BzKSA9PiAocHJvcHMuaXNEaXNhYmxlZCA/ICdub3QtYWxsb3dlZCcgOiAncG9pbnRlcicpfTtcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xuICAke2dldE1hcmdpbn1cblxuICAke2xhYmVsU2l6ZVN0eWxlc31cblxuICAmOmZvY3VzLXdpdGhpbiB7XG4gICR7KHByb3BzKSA9PiBnZXRGb2N1c0luZGljYXRvcihwcm9wcyl9XG5gO1xuXG5jb25zdCBTcGFuID0gc3R5bGVkLnNwYW48VFN0eWxlZFNwYW5Qcm9wcz5gXG4gIC8qIHRoaXMgaXMgdGhlIHRyYWNrICovXG5cbiAgJjo6YmVmb3JlIHtcbiAgICBib3JkZXItcmFkaXVzOiAxMnB4O1xuICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yVG9nZ2xlSW5wdXRUcmFja307XG4gICAgbGVmdDogMDtcbiAgICB0b3A6IDUwJTtcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuMnMgZWFzZS1pbi1vdXQ7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICAvKiB0aGlzIGlzIHRoZSB0aHVtYiAqL1xuICAmOjphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiAke2dldFRodW1iU2hpZnR9O1xuICAgIGhlaWdodDogJHtnZXRUaHVtYlNpemV9O1xuICAgIHdpZHRoOiAke2dldFRodW1iU2l6ZX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICBib3gtc2hhZG93OiAke2Rlc2lnblRva2Vucy5zaGFkb3dGb3JUb2dnbGVJbnB1dFRodW1ifTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMnMgZWFzZSwgYmFja2dyb3VuZCAwLjJzIGVhc2U7XG4gIH1cbmA7XG5cbmNvbnN0IGdldElucHV0U3R5bGVzID0gKHByb3BzOiBUVG9nZ2xlSW5wdXRQcm9wcyAmIFNpemVzUHJvcHMpID0+IGNzc2BcbiAgLyogd2hlbiBjaGVja2VkICovXG4gICY6Y2hlY2tlZCB7XG4gICAgKyBzcGFuOjpiZWZvcmUge1xuICAgICAgYmFja2dyb3VuZDogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yVG9nZ2xlSW5wdXRUcmFja1doZW5DaGVja2VkfTtcbiAgICB9XG4gICAgJiArIHNwYW46OmFmdGVyIHtcbiAgICAgIGJhY2tncm91bmQ6ICR7ZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclRvZ2dsZUlucHV0VGh1bWJXaGVuQ2hlY2tlZH07XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgke3Byb3BzLnRodW1iU2l6ZXNbcHJvcHMuc2l6ZV0uZGlhbWV0ZXJ9LCAtNTAlKTtcbiAgICB9XG4gIH1cblxuICAvKiB3aGVuIGRpc2FibGVkICovXG4gICY6ZGlzYWJsZWQge1xuICAgICYgKyBzcGFuOjpiZWZvcmUge1xuICAgICAgYmFja2dyb3VuZDogJHtcbiAgICAgICAgZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclRvZ2dsZUlucHV0VHJhY2tXaGVuRGlzYWJsZWRcbiAgICAgIH07XG4gICAgICBib3gtc2hhZG93OiBub25lO1xuICAgIH1cbiAgICAmICsgc3Bhbjo6YWZ0ZXIge1xuICAgICAgYmFja2dyb3VuZDogJHtcbiAgICAgICAgZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclRvZ2dsZUlucHV0VGh1bWJXaGVuRGlzYWJsZWRcbiAgICAgIH07XG4gICAgICBib3gtc2hhZG93OiAke2Rlc2lnblRva2Vucy5zaGFkb3dGb3JUb2dnbGVJbnB1dFRodW1ifTtcbiAgICB9XG4gIH1cblxuICAvKiB3aGVuIGRpc2FibGVkIGFuZCBjaGVja2VkICovXG4gICY6ZGlzYWJsZWQmOmNoZWNrZWQge1xuICAgICYgKyBzcGFuOjpiZWZvcmUge1xuICAgICAgYmFja2dyb3VuZDogJHtcbiAgICAgICAgZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclRvZ2dsZUlucHV0VHJhY2tXaGVuQ2hlY2tlZEFuZERpc2FibGVkXG4gICAgICB9O1xuICAgIH1cbiAgICAmICsgc3Bhbjo6YWZ0ZXIge1xuICAgICAgYmFja2dyb3VuZDogJHtcbiAgICAgICAgZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclRvZ2dsZUlucHV0VGh1bWJXaGVuQ2hlY2tlZEFuZERpc2FibGVkXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIDpub3QoOmRpc2FibGVkKSY6aG92ZXIgKyBzcGFuOjphZnRlcixcbiAgOm5vdCg6ZGlzYWJsZWQpJjpmb2N1cyArIHNwYW46OmFmdGVyIHtcbiAgICBib3gtc2hhZG93OiBub25lO1xuICAgIG91dGxpbmU6ICR7YCR7XG4gICAgICBwcm9wcy50aHVtYlNpemVzW3Byb3BzLnNpemVdLmhvdmVyQXJlYVdpZHRoXG4gICAgfSBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMSlgfVxuYDtcblxuZXhwb3J0IHsgTGFiZWwsIFNwYW4sIHRyYWNrU2l6ZXMsIHRodW1iU2l6ZXMsIGdldElucHV0U3R5bGVzIH07XG4iXX0= */");

function ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); enumerableOnly && (symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var _context, _context2; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty(_context = ownKeys(Object(source), !0)).call(_context, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)) : _forEachInstanceProperty(_context2 = ownKeys(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } return target; }
const defaultProps = {
  isDisabled: false,
  isChecked: false,
  size: 'big'
};
const ToggleInput = props => {
  return jsxs(Label, {
    htmlFor: props.id,
    size: props.size,
    isDisabled: props.isDisabled,
    trackSizes: trackSizes,
    thumbSizes: thumbSizes,
    children: [jsx("input", _objectSpread(_objectSpread({
      type: "checkbox",
      css: [accessibleHiddenInputStyles, getInputStyles(_objectSpread(_objectSpread({}, props), {}, {
        trackSizes,
        thumbSizes
      })), process.env.NODE_ENV === "production" ? "" : ";label:ToggleInput;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRvZ2dsZS1pbnB1dC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0VRIiwiZmlsZSI6InRvZ2dsZS1pbnB1dC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IENoYW5nZUV2ZW50SGFuZGxlciB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7XG4gIGZpbHRlckRhdGFBdHRyaWJ1dGVzLFxuICBmaWx0ZXJBcmlhQXR0cmlidXRlcyxcbn0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvdXRpbHMnO1xuaW1wb3J0IHsgYWNjZXNzaWJsZUhpZGRlbklucHV0U3R5bGVzIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvaW5wdXQtdXRpbHMnO1xuaW1wb3J0IHtcbiAgTGFiZWwsXG4gIFNwYW4sXG4gIGdldElucHV0U3R5bGVzLFxuICB0cmFja1NpemVzLFxuICB0aHVtYlNpemVzLFxufSBmcm9tICcuL3RvZ2dsZS1pbnB1dC5zdHlsZXMnO1xuXG5leHBvcnQgdHlwZSBUVG9nZ2xlSW5wdXRQcm9wcyA9IHtcbiAgLyoqXG4gICAqIFVzZWQgYXMgdGhlIEhUTUwgYGlkYCBwcm9wZXJ0eVxuICAgKi9cbiAgaWQ/OiBzdHJpbmc7XG4gIC8qKlxuICAgKiBVc2VkIGFzIHRoZSBIVE1MIGBuYW1lYCBwcm9wZXJ0eVxuICAgKi9cbiAgbmFtZT86IHN0cmluZztcbiAgLyoqXG4gICAqIFRoZSBzaXplIG9mIHRoZSBUb2dnbGVJbnB1dCBjb21wb25lbnQuXG4gICAqL1xuICBzaXplOiAnc21hbGwnIHwgJ2JpZyc7XG4gIC8qKlxuICAgKiBEaXNhYmxlcyB0aGUgVG9nZ2xlSW5wdXRcbiAgICovXG4gIGlzRGlzYWJsZWQ6IGJvb2xlYW47XG4gIC8qKlxuICAgKiBDaGVja3MgdGhlIFRvZ2dsZUlucHV0XG4gICAqL1xuICBpc0NoZWNrZWQ6IGJvb2xlYW47XG4gIC8qKlxuICAgKiBEZXRlcm1pbmVzIHRoZSB0b2dnbGUgc3RhdGUuXG4gICAqL1xuICB2YWx1ZT86IHN0cmluZztcbiAgLyoqXG4gICAqIEhhbmRsZXIgd2hlbiB0b2dnbGUgc3RhdGUgY2hhbmdlcy4gPGJyLz5cbiAgICogKipOb3RlKio6IHRoYXQga2V5IHZhbHVlIG9mIHRoZSBgdGFyZ2V0YCBpcyBgY2hlY2tlZGAuXG4gICAqL1xuICBvbkNoYW5nZTogQ2hhbmdlRXZlbnRIYW5kbGVyPEhUTUxJbnB1dEVsZW1lbnQ+O1xufTtcblxuZXhwb3J0IGNvbnN0IGRlZmF1bHRQcm9wczogUGljazxcbiAgVFRvZ2dsZUlucHV0UHJvcHMsXG4gICdpc0Rpc2FibGVkJyB8ICdpc0NoZWNrZWQnIHwgJ3NpemUnXG4+ID0ge1xuICBpc0Rpc2FibGVkOiBmYWxzZSxcbiAgaXNDaGVja2VkOiBmYWxzZSxcbiAgc2l6ZTogJ2JpZycsXG59O1xuXG5jb25zdCBUb2dnbGVJbnB1dCA9IChwcm9wczogVFRvZ2dsZUlucHV0UHJvcHMpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8TGFiZWxcbiAgICAgIGh0bWxGb3I9e3Byb3BzLmlkfVxuICAgICAgc2l6ZT17cHJvcHMuc2l6ZX1cbiAgICAgIGlzRGlzYWJsZWQ9e3Byb3BzLmlzRGlzYWJsZWR9XG4gICAgICB0cmFja1NpemVzPXt0cmFja1NpemVzfVxuICAgICAgdGh1bWJTaXplcz17dGh1bWJTaXplc31cbiAgICA+XG4gICAgICA8aW5wdXRcbiAgICAgICAgdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgY3NzPXtbXG4gICAgICAgICAgYWNjZXNzaWJsZUhpZGRlbklucHV0U3R5bGVzLFxuICAgICAgICAgIGdldElucHV0U3R5bGVzKHsgLi4ucHJvcHMsIHRyYWNrU2l6ZXMsIHRodW1iU2l6ZXMgfSksXG4gICAgICAgIF19XG4gICAgICAgIGlkPXtwcm9wcy5pZH1cbiAgICAgICAgbmFtZT17cHJvcHMubmFtZX1cbiAgICAgICAgb25DaGFuZ2U9e3Byb3BzLm9uQ2hhbmdlfVxuICAgICAgICBkaXNhYmxlZD17cHJvcHMuaXNEaXNhYmxlZH1cbiAgICAgICAgY2hlY2tlZD17cHJvcHMuaXNDaGVja2VkfVxuICAgICAgICB2YWx1ZT17cHJvcHMudmFsdWV9XG4gICAgICAgIHsuLi5maWx0ZXJEYXRhQXR0cmlidXRlcyhwcm9wcyl9XG4gICAgICAgIHsuLi5maWx0ZXJBcmlhQXR0cmlidXRlcyhwcm9wcyl9XG4gICAgICAvPlxuICAgICAgPFNwYW5cbiAgICAgICAgYXJpYS1oaWRkZW49XCJ0cnVlXCJcbiAgICAgICAgc2l6ZT17cHJvcHMuc2l6ZX1cbiAgICAgICAgdHJhY2tTaXplcz17dHJhY2tTaXplc31cbiAgICAgICAgdGh1bWJTaXplcz17dGh1bWJTaXplc31cbiAgICAgIC8+XG4gICAgPC9MYWJlbD5cbiAgKTtcbn07XG5cblRvZ2dsZUlucHV0LmRpc3BsYXlOYW1lID0gJ1RvZ2dsZSc7XG5Ub2dnbGVJbnB1dC5kZWZhdWx0UHJvcHMgPSBkZWZhdWx0UHJvcHM7XG5cbmV4cG9ydCBkZWZhdWx0IFRvZ2dsZUlucHV0O1xuIl19 */"],
      id: props.id,
      name: props.name,
      onChange: props.onChange,
      disabled: props.isDisabled,
      checked: props.isChecked,
      value: props.value
    }, filterDataAttributes(props)), filterAriaAttributes(props))), jsx(Span, {
      "aria-hidden": "true",
      size: props.size,
      trackSizes: trackSizes,
      thumbSizes: thumbSizes
    })]
  });
};
ToggleInput.propTypes = process.env.NODE_ENV !== "production" ? {
  id: _pt.string,
  name: _pt.string,
  size: _pt.oneOf(['small', 'big']).isRequired,
  isDisabled: _pt.bool.isRequired,
  isChecked: _pt.bool.isRequired,
  value: _pt.string,
  onChange: _pt.func.isRequired
} : {};
ToggleInput.displayName = 'Toggle';
ToggleInput.defaultProps = defaultProps;
var ToggleInput$1 = ToggleInput;

// NOTE: This string will be replaced on build time with the package version.
var version = "16.11.0";

export { ToggleInput$1 as default, version };
