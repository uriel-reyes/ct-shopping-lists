import _Object$keys from '@babel/runtime-corejs3/core-js-stable/object/keys';
import _Object$getOwnPropertySymbols from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols';
import _filterInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/filter';
import _Object$getOwnPropertyDescriptor from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor';
import _forEachInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/for-each';
import _Object$getOwnPropertyDescriptors from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors';
import _Object$defineProperties from '@babel/runtime-corejs3/core-js-stable/object/define-properties';
import _Object$defineProperty from '@babel/runtime-corejs3/core-js-stable/object/define-property';
import _defineProperty from '@babel/runtime-corejs3/helpers/esm/defineProperty';
import _pt from 'prop-types';
import 'react';
import Text from '@commercetools-uikit/text';
import { filterDataAttributes } from '@commercetools-uikit/utils';
import { jsx } from '@emotion/react/jsx-runtime';

function ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); enumerableOnly && (symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var _context, _context2; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty(_context = ownKeys(Object(source), !0)).call(_context, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)) : _forEachInstanceProperty(_context2 = ownKeys(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } return target; }
const ErrorMessage = props => jsx(Text.Detail, _objectSpread(_objectSpread({
  id: props.id,
  intlMessage: props.intlMessage,
  tone: "negative"
}, filterDataAttributes(props)), {}, {
  children: props.children
}));
ErrorMessage.propTypes = process.env.NODE_ENV !== "production" ? {
  id: _pt.string,
  intlMessage: _pt.shape({
    id: _pt.string.isRequired,
    description: _pt.oneOfType([_pt.string, _pt.object]),
    defaultMessage: _pt.string.isRequired,
    values: _pt.objectOf(_pt.node)
  }),
  children: _pt.node
} : {};
ErrorMessage.displayName = 'ErrorMessage';
var ErrorMessage$1 = ErrorMessage;

const WarningMessage = props => jsx(Text.Detail, {
  intlMessage: props.intlMessage,
  tone: "warning",
  children: props.children
});
WarningMessage.propTypes = process.env.NODE_ENV !== "production" ? {
  intlMessage: _pt.shape({
    id: _pt.string.isRequired,
    description: _pt.oneOfType([_pt.string, _pt.object]),
    defaultMessage: _pt.string.isRequired,
    values: _pt.objectOf(_pt.node)
  }),
  children: _pt.node
} : {};
WarningMessage.displayName = 'WarningMessage';
var WarningMessage$1 = WarningMessage;

// NOTE: This string will be replaced on build time with the package version.
var version = "16.11.0";

export { ErrorMessage$1 as ErrorMessage, WarningMessage$1 as WarningMessage, version };
