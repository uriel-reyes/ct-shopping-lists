import { type FocusEventHandler, type ChangeEventHandler, type ForwardRefExoticComponent, type RefAttributes } from 'react';
export type TSearchTextInputProps = {
    id?: string;
    autoComplete?: string;
    'aria-invalid'?: boolean;
    'aria-errormessage'?: string;
    name?: string;
    value: string;
    onChange?: ChangeEventHandler<HTMLInputElement>;
    onBlur?: FocusEventHandler<HTMLInputElement>;
    onFocus?: FocusEventHandler<HTMLInputElement>;
    onSubmit: (searchValue: string) => void;
    onReset: () => void;
    isAutofocussed?: boolean;
    isDisabled?: boolean;
    isReadOnly?: boolean;
    hasError?: boolean;
    hasWarning?: boolean;
    placeholder?: string;
    isClearable?: boolean;
    horizontalConstraint?: 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 'scale' | 'auto';
};
type StaticProps = {
    isEmpty: typeof isEmpty;
};
declare const SearchTextInput: ForwardRefExoticComponent<TSearchTextInputProps & RefAttributes<HTMLInputElement>> & Partial<StaticProps>;
declare const isEmpty: (value: TSearchTextInputProps['value']) => boolean;
export default SearchTextInput;
