import _Object$getOwnPropertySymbols from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols';
import _filterInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/filter';
import _Object$getOwnPropertyDescriptor from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor';
import _forEachInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/for-each';
import _Object$getOwnPropertyDescriptors from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors';
import _Object$defineProperties from '@babel/runtime-corejs3/core-js-stable/object/define-properties';
import _Object$defineProperty from '@babel/runtime-corejs3/core-js-stable/object/define-property';
import _slicedToArray from '@babel/runtime-corejs3/helpers/esm/slicedToArray';
import _defineProperty from '@babel/runtime-corejs3/helpers/esm/defineProperty';
import _pt from 'prop-types';
import _Object$keys from '@babel/runtime-corejs3/core-js-stable/object/keys';
import _mapInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/map';
import { useCallback } from 'react';
import { FormattedMessage } from 'react-intl';
import { css } from '@emotion/react';
import { useToggleState, useFieldId } from '@commercetools-uikit/hooks';
import { ErrorMessage } from '@commercetools-uikit/messages';
import Stack from '@commercetools-uikit/spacings-stack';
import Constraints from '@commercetools-uikit/constraints';
import { sortLanguages, getHasErrorOnRemainingLanguages, createLocalizedDataAttributes, getId, getName, createLocalizedString, isEmpty, omitEmptyTranslations, isTouched } from '@commercetools-uikit/localized-utils';
import { createSequentialId, warning } from '@commercetools-uikit/utils';
import TextInput from '@commercetools-uikit/text-input';
import { LocalizedInputToggle, messagesLocalizedInput } from '@commercetools-uikit/input-utils';
import { designTokens } from '@commercetools-uikit/design-system';
import { jsx, jsxs } from '@emotion/react/jsx-runtime';

function _EMOTION_STRINGIFIED_CSS_ERROR__$1() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }
var _ref$1 = process.env.NODE_ENV === "production" ? {
  name: "1ps4mw6",
  styles: "border-top-left-radius:0;border-bottom-left-radius:0;border-style:solid;flex:auto"
} : {
  name: "bqcila-getLocalizedInputStyles",
  styles: "border-top-left-radius:0;border-bottom-left-radius:0;border-style:solid;flex:auto;label:getLocalizedInputStyles;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvY2FsaXplZC10ZXh0LWlucHV0LnN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFTSyIsImZpbGUiOiJsb2NhbGl6ZWQtdGV4dC1pbnB1dC5zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcbmltcG9ydCB0eXBlIHsgVExvY2FsaXplZElucHV0UHJvcHMgfSBmcm9tICcuL2xvY2FsaXplZC10ZXh0LWlucHV0JztcblxuLy8gTk9URTogb3JkZXIgaXMgaW1wb3J0YW50IGhlcmVcbi8vICogYSBkaXNhYmxlZC1maWVsZCBjdXJyZW50bHkgZG9lcyBub3QgZGlzcGxheSB3YXJuaW5nL2Vycm9yLXN0YXRlcyBzbyBpdCB0YWtlcyBwcmVjZWRlbmNlXG4vLyAqIGEgcmVhZG9ubHktZmllbGQgY2Fubm90IGJlIGNoYW5nZWQsIGJ1dCBpdCBtaWdodCBiZSByZWxldmFudCBmb3IgdmFsaWRhdGlvbiwgc28gZXJyb3IgYW5kIHdhcm5pbmcgYXJlIGNoZWNrZWQgZmlyc3Rcbi8vIGhvdyB5b3UgY2FuIGludGVyYWN0IHdpdGggdGhlIGZpZWxkIGlzIGNvbnRyb2xsZWQgc2VwYXJhdGVseSBieSB0aGUgcHJvcHMsIHRoaXMgb25seSBpbmZsdWVuY2VzIHZpc3VhbHNcbmNvbnN0IGdldExvY2FsaXplZElucHV0U3R5bGVzID0gKCkgPT4gW1xuICBjc3NgXG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcbiAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwO1xuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgZmxleDogYXV0bztcbiAgYCxcbl07XG5cbmNvbnN0IGdldExhbmd1YWdlTGFiZWxCYWNrZ3JvdW5kQ29sb3IgPSAocHJvcHM6IFRMb2NhbGl6ZWRJbnB1dFByb3BzKSA9PiB7XG4gIGlmIChwcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JMb2NhbGl6ZWRJbnB1dExhYmVsV2hlbkRpc2FibGVkO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JMb2NhbGl6ZWRJbnB1dExhYmVsV2hlblJlYWRvbmx5O1xuICB9XG4gIHJldHVybiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yTG9jYWxpemVkSW5wdXRMYWJlbDtcbn07XG5cbmNvbnN0IGdldExhbmd1YWdlTGFiZWxCb3JkZXJDb2xvciA9IChwcm9wczogVExvY2FsaXplZElucHV0UHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLmlzRGlzYWJsZWQpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWQ7XG4gIH1cbiAgcmV0dXJuIHByb3BzLmlzUmVhZE9ubHlcbiAgICA/IGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvckxvY2FsaXplZElucHV0TGFiZWxXaGVuUmVhZG9ubHlcbiAgICA6IGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvckxvY2FsaXplZElucHV0TGFiZWw7XG59O1xuXG5jb25zdCBnZXRMYW5ndWFnZUxhYmVsU3R5bGVzID0gKHByb3BzOiBUTG9jYWxpemVkSW5wdXRQcm9wcykgPT4ge1xuICByZXR1cm4gY3NzYFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAvKiBhdm9pZCB3cmFwcGluZyBsYWJlbCBvbnRvIG5ldyBsaW5lcyAqL1xuICAgIGZsZXg6IDEgMCBhdXRvO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvckxvY2FsaXplZElucHV0TGFiZWx9O1xuICAgIGN1cnNvcjogJHtwcm9wcy5pc0Rpc2FibGVkID8gJ25vdC1hbGxvd2VkJyA6ICdkZWZhdWx0J307XG4gICAgaGVpZ2h0OiAke2Rlc2lnblRva2Vucy5oZWlnaHRGb3JJbnB1dH07XG4gICAgZm9udC1zaXplOiAke2Rlc2lnblRva2Vucy5mb250U2l6ZUZvckxvY2FsaXplZElucHV0TGFiZWx9O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7Z2V0TGFuZ3VhZ2VMYWJlbEJhY2tncm91bmRDb2xvcihwcm9wcyl9O1xuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1c0ZvcklucHV0fTtcbiAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gICAgYm9yZGVyOiAxcHggc29saWQgJHtnZXRMYW5ndWFnZUxhYmVsQm9yZGVyQ29sb3IocHJvcHMpfTtcbiAgICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yTG9jYWxpemVkSW5wdXRMYWJlbH07XG4gICAgdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yICR7ZGVzaWduVG9rZW5zLnRyYW5zaXRpb25TdGFuZGFyZH0sXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yICR7ZGVzaWduVG9rZW5zLnRyYW5zaXRpb25TdGFuZGFyZH0sXG4gICAgICBjb2xvciAke2Rlc2lnblRva2Vucy50cmFuc2l0aW9uU3RhbmRhcmR9O1xuICAgIGJvcmRlci1yaWdodDogMDtcbiAgICBib3gtc2hhZG93OiBub25lO1xuICAgIGFwcGVhcmFuY2U6IG5vbmU7XG4gIGA7XG59O1xuXG5leHBvcnQgeyBnZXRMb2NhbGl6ZWRJbnB1dFN0eWxlcywgZ2V0TGFuZ3VhZ2VMYWJlbFN0eWxlcyB9O1xuIl19 */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__$1
};
// NOTE: order is important here
// * a disabled-field currently does not display warning/error-states so it takes precedence
// * a readonly-field cannot be changed, but it might be relevant for validation, so error and warning are checked first
// how you can interact with the field is controlled separately by the props, this only influences visuals
const getLocalizedInputStyles = () => [_ref$1];
const getLanguageLabelBackgroundColor = props => {
  if (props.isDisabled) {
    return designTokens.backgroundColorForLocalizedInputLabelWhenDisabled;
  }
  if (props.isReadOnly) {
    return designTokens.backgroundColorForLocalizedInputLabelWhenReadonly;
  }
  return designTokens.backgroundColorForLocalizedInputLabel;
};
const getLanguageLabelBorderColor = props => {
  if (props.isDisabled) {
    return designTokens.borderColorForInputWhenDisabled;
  }
  return props.isReadOnly ? designTokens.borderColorForLocalizedInputLabelWhenReadonly : designTokens.borderColorForLocalizedInputLabel;
};
const getLanguageLabelStyles = props => {
  return /*#__PURE__*/css("display:flex;flex-direction:column;justify-content:center;flex:1 0 auto;box-sizing:border-box;color:", designTokens.fontColorForLocalizedInputLabel, ";cursor:", props.isDisabled ? 'not-allowed' : 'default', ";height:", designTokens.heightForInput, ";font-size:", designTokens.fontSizeForLocalizedInputLabel, ";background-color:", getLanguageLabelBackgroundColor(props), ";border-top-left-radius:", designTokens.borderRadiusForInput, ";border-bottom-left-radius:", designTokens.borderRadiusForInput, ";border:1px solid ", getLanguageLabelBorderColor(props), ";padding:", designTokens.paddingForLocalizedInputLabel, ";transition:border-color ", designTokens.transitionStandard, ",background-color ", designTokens.transitionStandard, ",color ", designTokens.transitionStandard, ";border-right:0;box-shadow:none;appearance:none;" + (process.env.NODE_ENV === "production" ? "" : ";label:getLanguageLabelStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvY2FsaXplZC10ZXh0LWlucHV0LnN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxQ1kiLCJmaWxlIjoibG9jYWxpemVkLXRleHQtaW5wdXQuc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5pbXBvcnQgdHlwZSB7IFRMb2NhbGl6ZWRJbnB1dFByb3BzIH0gZnJvbSAnLi9sb2NhbGl6ZWQtdGV4dC1pbnB1dCc7XG5cbi8vIE5PVEU6IG9yZGVyIGlzIGltcG9ydGFudCBoZXJlXG4vLyAqIGEgZGlzYWJsZWQtZmllbGQgY3VycmVudGx5IGRvZXMgbm90IGRpc3BsYXkgd2FybmluZy9lcnJvci1zdGF0ZXMgc28gaXQgdGFrZXMgcHJlY2VkZW5jZVxuLy8gKiBhIHJlYWRvbmx5LWZpZWxkIGNhbm5vdCBiZSBjaGFuZ2VkLCBidXQgaXQgbWlnaHQgYmUgcmVsZXZhbnQgZm9yIHZhbGlkYXRpb24sIHNvIGVycm9yIGFuZCB3YXJuaW5nIGFyZSBjaGVja2VkIGZpcnN0XG4vLyBob3cgeW91IGNhbiBpbnRlcmFjdCB3aXRoIHRoZSBmaWVsZCBpcyBjb250cm9sbGVkIHNlcGFyYXRlbHkgYnkgdGhlIHByb3BzLCB0aGlzIG9ubHkgaW5mbHVlbmNlcyB2aXN1YWxzXG5jb25zdCBnZXRMb2NhbGl6ZWRJbnB1dFN0eWxlcyA9ICgpID0+IFtcbiAgY3NzYFxuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMDtcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgIGZsZXg6IGF1dG87XG4gIGAsXG5dO1xuXG5jb25zdCBnZXRMYW5ndWFnZUxhYmVsQmFja2dyb3VuZENvbG9yID0gKHByb3BzOiBUTG9jYWxpemVkSW5wdXRQcm9wcykgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yTG9jYWxpemVkSW5wdXRMYWJlbFdoZW5EaXNhYmxlZDtcbiAgfVxuICBpZiAocHJvcHMuaXNSZWFkT25seSkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yTG9jYWxpemVkSW5wdXRMYWJlbFdoZW5SZWFkb25seTtcbiAgfVxuICByZXR1cm4gZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvckxvY2FsaXplZElucHV0TGFiZWw7XG59O1xuXG5jb25zdCBnZXRMYW5ndWFnZUxhYmVsQm9yZGVyQ29sb3IgPSAocHJvcHM6IFRMb2NhbGl6ZWRJbnB1dFByb3BzKSA9PiB7XG4gIGlmIChwcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkRpc2FibGVkO1xuICB9XG4gIHJldHVybiBwcm9wcy5pc1JlYWRPbmx5XG4gICAgPyBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JMb2NhbGl6ZWRJbnB1dExhYmVsV2hlblJlYWRvbmx5XG4gICAgOiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JMb2NhbGl6ZWRJbnB1dExhYmVsO1xufTtcblxuY29uc3QgZ2V0TGFuZ3VhZ2VMYWJlbFN0eWxlcyA9IChwcm9wczogVExvY2FsaXplZElucHV0UHJvcHMpID0+IHtcbiAgcmV0dXJuIGNzc2BcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgLyogYXZvaWQgd3JhcHBpbmcgbGFiZWwgb250byBuZXcgbGluZXMgKi9cbiAgICBmbGV4OiAxIDAgYXV0bztcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JMb2NhbGl6ZWRJbnB1dExhYmVsfTtcbiAgICBjdXJzb3I6ICR7cHJvcHMuaXNEaXNhYmxlZCA/ICdub3QtYWxsb3dlZCcgOiAnZGVmYXVsdCd9O1xuICAgIGhlaWdodDogJHtkZXNpZ25Ub2tlbnMuaGVpZ2h0Rm9ySW5wdXR9O1xuICAgIGZvbnQtc2l6ZTogJHtkZXNpZ25Ub2tlbnMuZm9udFNpemVGb3JMb2NhbGl6ZWRJbnB1dExhYmVsfTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2dldExhbmd1YWdlTGFiZWxCYWNrZ3JvdW5kQ29sb3IocHJvcHMpfTtcbiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzRm9ySW5wdXR9O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICR7Z2V0TGFuZ3VhZ2VMYWJlbEJvcmRlckNvbG9yKHByb3BzKX07XG4gICAgcGFkZGluZzogJHtkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvckxvY2FsaXplZElucHV0TGFiZWx9O1xuICAgIHRyYW5zaXRpb246IGJvcmRlci1jb2xvciAke2Rlc2lnblRva2Vucy50cmFuc2l0aW9uU3RhbmRhcmR9LFxuICAgICAgYmFja2dyb3VuZC1jb2xvciAke2Rlc2lnblRva2Vucy50cmFuc2l0aW9uU3RhbmRhcmR9LFxuICAgICAgY29sb3IgJHtkZXNpZ25Ub2tlbnMudHJhbnNpdGlvblN0YW5kYXJkfTtcbiAgICBib3JkZXItcmlnaHQ6IDA7XG4gICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICBhcHBlYXJhbmNlOiBub25lO1xuICBgO1xufTtcblxuZXhwb3J0IHsgZ2V0TG9jYWxpemVkSW5wdXRTdHlsZXMsIGdldExhbmd1YWdlTGFiZWxTdHlsZXMgfTtcbiJdfQ== */");
};

function ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); enumerableOnly && (symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var _context, _context2; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty(_context = ownKeys(Object(source), !0)).call(_context, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)) : _forEachInstanceProperty(_context2 = ownKeys(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } return target; }
function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }
const sequentialId = createSequentialId('localized-text-input-');
var _ref = process.env.NODE_ENV === "production" ? {
  name: "1ktetz7",
  styles: "width:100%;position:relative;display:flex"
} : {
  name: "1ysn02y-LocalizedInput",
  styles: "width:100%;position:relative;display:flex;label:LocalizedInput;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};
const LocalizedInput = props => {
  const onChange = props.onChange;
  const handleChange = useCallback(event => {
    // We manipulate the event to add the language to the target.
    // That way the users of LocalizedTextInput's onChange can read
    // event.target.language and event.target.value to determine the next value.
    //
    // We only need this information for the story, the MC application code will
    // never need to access the information in such an inconvenient way, as
    // Formik can deal with a name like "foo.en" and sets the value correctly.
    // We can't use this as we aren't guaranteed a name in the story as the user
    // might clear it using the knob, and then we can't parse the language from
    // the input name anymore.
    //
    event.target.language = props.language;
    onChange === null || onChange === void 0 ? void 0 : onChange(event);
  }, [props.language, onChange]);
  if (!props.isReadOnly) {
    process.env.NODE_ENV !== "production" ? warning(typeof props.onChange === 'function', 'LocalizedTextInput: "onChange" is required when isReadOnly is not true') : void 0;
  }
  return jsxs("div", {
    css: _ref,
    children: [jsx("label", {
      htmlFor: props.id,
      css: getLanguageLabelStyles(props),
      children: props.language.toUpperCase()
    }), jsx(TextInput, _objectSpread(_objectSpread({}, props), {}, {
      onChange: handleChange,
      css: getLocalizedInputStyles
    }))]
  }, props.language);
};
LocalizedInput.propTypes = process.env.NODE_ENV !== "production" ? {
  id: _pt.string,
  name: _pt.string,
  autoComplete: _pt.string,
  value: _pt.string.isRequired,
  onChange: _pt.func,
  language: _pt.string.isRequired,
  onBlur: _pt.func,
  onFocus: _pt.func,
  isAutofocussed: _pt.bool,
  isDisabled: _pt.bool,
  isReadOnly: _pt.bool,
  hasError: _pt.bool,
  placeholder: _pt.string
} : {};
LocalizedInput.displayName = 'LocalizedInput';
const RequiredValueErrorMessage = () => jsx(ErrorMessage, {
  children: jsx(FormattedMessage, _objectSpread({}, messagesLocalizedInput.missingRequiredField))
});
RequiredValueErrorMessage.displayName = 'RequiredValueErrorMessage';
const LocalizedTextInput = props => {
  const defaultExpansionState = props.hideLanguageExpansionControls || props.defaultExpandLanguages ||
  // default to `false`, because useToggleState defaults to `true`
  false;
  const _useToggleState = useToggleState(defaultExpansionState),
    _useToggleState2 = _slicedToArray(_useToggleState, 2),
    areLanguagesExpanded = _useToggleState2[0],
    toggleLanguages = _useToggleState2[1];
  const onLocalizedInputToggle = useCallback(() => toggleLanguages(), [toggleLanguages]);
  const languages = sortLanguages(props.selectedLanguage, _Object$keys(props.value));
  const id = useFieldId(props.id, sequentialId);
  const hasErrorInRemainingLanguages = props.hasError || getHasErrorOnRemainingLanguages(props.errors, props.selectedLanguage);
  if (hasErrorInRemainingLanguages) {
    // this update within render replaces the old `getDerivedStateFromProps` functionality
    // https://reactjs.org/docs/hooks-faq.html#how-do-i-implement-getderivedstatefromprops
    if (hasErrorInRemainingLanguages !== areLanguagesExpanded) {
      toggleLanguages();
    }
  }
  const shouldRenderLanguagesButton = languages.length > 1 && !props.hideLanguageExpansionControls;
  if (!props.isReadOnly) {
    process.env.NODE_ENV !== "production" ? warning(typeof props.onChange === 'function', 'LocalizedTextInput: "onChange" is required when isReadOnly is not true') : void 0;
  }
  if (props.hideLanguageExpansionControls) {
    process.env.NODE_ENV !== "production" ? warning(typeof props.defaultExpandLanguages !== 'boolean', 'LocalizedTextInput: "defaultExpandLanguages" does not have any effect when "hideLanguageExpansionControls" is set.') : void 0;
  }
  return jsx(Constraints.Horizontal, {
    max: props.horizontalConstraint,
    children: jsxs(Stack, {
      scale: "xs",
      children: [jsx(Stack, {
        children: _mapInstanceProperty(languages).call(languages, (language, index) => {
          const isFirstLanguage = index === 0;
          if (!isFirstLanguage && !areLanguagesExpanded) return null;
          return jsx("div", {
            children: jsxs(Stack, {
              scale: "xs",
              children: [jsx(LocalizedInput, _objectSpread(_objectSpread({
                autoComplete: props.autoComplete,
                id: LocalizedTextInput.getId(id, language),
                name: LocalizedTextInput.getName(props.name, language),
                value: props.value[language],
                onChange: props.onChange,
                language: language,
                placeholder: props.placeholder ? props.placeholder[language] : undefined,
                onBlur: props.onBlur,
                onFocus: props.onFocus,
                isAutofocussed: index === 0 && props.isAutofocussed,
                isDisabled: props.isDisabled,
                isReadOnly: props.isReadOnly,
                hasError: Boolean(props.hasError || props.errors && props.errors[language])
              }, createLocalizedDataAttributes(props, language)), {}, {
                /* ARIA */
                "aria-invalid": props['aria-invalid'],
                "aria-errormessage": props['aria-errormessage']
              })), props.errors && props.errors[language]]
            })
          }, language);
        })
      }), shouldRenderLanguagesButton && jsx(LocalizedInputToggle, {
        isOpen: areLanguagesExpanded,
        onClick: onLocalizedInputToggle,
        isDisabled: areLanguagesExpanded && hasErrorInRemainingLanguages,
        remainingLocalizations: languages.length - 1
      })]
    })
  });
};
LocalizedTextInput.propTypes = process.env.NODE_ENV !== "production" ? {
  id: _pt.string,
  name: _pt.string,
  autoComplete: _pt.string,
  'aria-invalid': _pt.bool,
  'aria-errormessage': _pt.string,
  value: _pt.objectOf(_pt.string).isRequired,
  onChange: _pt.func,
  selectedLanguage: _pt.string.isRequired,
  onBlur: _pt.func,
  onFocus: _pt.func,
  hideLanguageExpansionControls: _pt.bool,
  defaultExpandLanguages: _pt.bool,
  isAutofocussed: _pt.bool,
  isDisabled: _pt.bool,
  isReadOnly: _pt.bool,
  placeholder: _pt.objectOf(_pt.string),
  horizontalConstraint: _pt.oneOf([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 'scale', 'auto']),
  hasError: _pt.bool,
  errors: _pt.objectOf(_pt.string)
} : {};
LocalizedTextInput.displayName = 'LocalizedTextInput';
LocalizedTextInput.RequiredValueErrorMessage = RequiredValueErrorMessage;
LocalizedTextInput.defaultProps = {
  horizontalConstraint: 'scale'
};
LocalizedTextInput.getId = getId;
LocalizedTextInput.getName = getName;
LocalizedTextInput.createLocalizedString = createLocalizedString;
LocalizedTextInput.isEmpty = isEmpty;
LocalizedTextInput.omitEmptyTranslations = omitEmptyTranslations;
LocalizedTextInput.isTouched = isTouched;
var LocalizedTextInput$1 = LocalizedTextInput;

// NOTE: This string will be replaced on build time with the package version.
var version = "16.11.0";

export { LocalizedTextInput$1 as default, version };
