import { type ReactElement, type ReactNode, type MouseEventHandler } from 'react';
import { type TDataTableSettingsProps } from './data-table-settings';
export interface TRow {
    id: string;
}
export type TColumnProps = {
    key: string;
    label: ReactNode;
    width?: string;
    align?: 'left' | 'center' | 'right';
    onClick?: (event: MouseEventHandler) => void;
    renderItem?: <T extends TRow>(row: T, isRowCollapsed: boolean) => ReactNode;
    headerIcon?: ReactNode;
    isTruncated?: boolean;
    isSortable?: boolean;
    disableResizing?: boolean;
    shouldIgnoreRowClick?: boolean;
};
type TDataTableManagerProps = {
    columns: TColumnProps[];
    children: ReactElement;
    displaySettings?: TDataTableSettingsProps['displaySettings'];
    columnManager?: TDataTableSettingsProps['columnManager'];
    onSettingsChange?: (settingName: string, settingValue: boolean | string[]) => void;
    topBar?: ReactNode;
    managerTheme?: 'light' | 'dark';
};
declare const DataTableManager: {
    (props: TDataTableManagerProps): import("@emotion/react/jsx-runtime").JSX.Element;
    displayName: string;
};
export default DataTableManager;
