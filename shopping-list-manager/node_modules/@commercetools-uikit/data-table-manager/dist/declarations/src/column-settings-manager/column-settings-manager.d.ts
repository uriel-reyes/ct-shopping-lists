import { type ReactElement, type ReactNode, type MouseEvent, type KeyboardEvent, type Dispatch } from 'react';
import { type DropResult } from 'react-beautiful-dnd';
export type TColumnData = {
    key: string;
    label: ReactNode;
};
export type TColumnSettingsManagerProps = {
    availableColumns: TColumnData[];
    selectedColumns: TColumnData[];
    onUpdateColumns: (updatedColums: TColumnData[]) => void;
    areHiddenColumnsSearchable?: boolean;
    searchHiddenColumns?: (searchTerm: string) => Promise<void> | void;
    searchHiddenColumnsPlaceholder?: string;
    onClose: (event: MouseEvent<HTMLButtonElement> | KeyboardEvent<HTMLButtonElement>) => void;
    primaryButton?: ReactElement;
    secondaryButton?: ReactElement;
    managerTheme?: 'light' | 'dark';
};
export declare const handleColumnsUpdate: (dragResult: DropResult, onUpdateColumns: TColumnSettingsManagerProps['onUpdateColumns'], selectedColumns: TColumnSettingsManagerProps['selectedColumns'], availableColumns: TColumnSettingsManagerProps['availableColumns'], setIsDragging: Dispatch<boolean>) => void;
export declare const ColumnSettingsManager: {
    (props: TColumnSettingsManagerProps): import("@emotion/react/jsx-runtime").JSX.Element;
    displayName: string;
    defaultProps: Pick<TColumnSettingsManagerProps, "availableColumns">;
};
export default ColumnSettingsManager;
