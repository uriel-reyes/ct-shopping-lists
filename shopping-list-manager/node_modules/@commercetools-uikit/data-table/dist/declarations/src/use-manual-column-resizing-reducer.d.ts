import { MutableRefObject } from 'react';
type TTableRef = MutableRefObject<HTMLTableElement | undefined>;
export type TRenderedColumnMeasurements = {
    key: string | null;
    width: number;
};
declare const useManualColumnResizing: (tableRef?: TTableRef) => {
    reset: () => void;
    getSizes: () => TRenderedColumnMeasurements[] | undefined;
    startResizing: (headerRef: MutableRefObject<{
        cellIndex: number;
    } & HTMLTableElement>, mouseEvent: MouseEvent) => void;
    onDragResizing: (event: MouseEvent, columnIndex: number) => void;
    finishResizing: () => TRenderedColumnMeasurements[] | undefined;
    getHasTableBeenResized: () => boolean | undefined;
    getIsColumnBeingResized: (columnIndex: number) => boolean;
    getIsAnyColumnBeingResized: () => boolean;
    getTotalResizedTableWidth: () => number;
};
export default useManualColumnResizing;
