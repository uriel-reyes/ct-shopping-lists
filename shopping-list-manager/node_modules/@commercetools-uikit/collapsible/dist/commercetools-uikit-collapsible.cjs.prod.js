'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _Object$keys = require('@babel/runtime-corejs3/core-js-stable/object/keys');
var _Object$getOwnPropertySymbols = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols');
var _filterInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/filter');
var _Object$getOwnPropertyDescriptor = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor');
var _forEachInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/for-each');
var _Object$getOwnPropertyDescriptors = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors');
var _Object$defineProperties = require('@babel/runtime-corejs3/core-js-stable/object/define-properties');
var _Object$defineProperty = require('@babel/runtime-corejs3/core-js-stable/object/define-property');
var _defineProperty = require('@babel/runtime-corejs3/helpers/defineProperty');
var _slicedToArray = require('@babel/runtime-corejs3/helpers/slicedToArray');
require('prop-types');
require('react');
var isNil = require('lodash/isNil');
require('@commercetools-uikit/utils');
var hooks = require('@commercetools-uikit/hooks');
var jsxRuntime = require('@emotion/react/jsx-runtime');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

var _Object$keys__default = /*#__PURE__*/_interopDefault(_Object$keys);
var _Object$getOwnPropertySymbols__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertySymbols);
var _filterInstanceProperty__default = /*#__PURE__*/_interopDefault(_filterInstanceProperty);
var _Object$getOwnPropertyDescriptor__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertyDescriptor);
var _forEachInstanceProperty__default = /*#__PURE__*/_interopDefault(_forEachInstanceProperty);
var _Object$getOwnPropertyDescriptors__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertyDescriptors);
var _Object$defineProperties__default = /*#__PURE__*/_interopDefault(_Object$defineProperties);
var _Object$defineProperty__default = /*#__PURE__*/_interopDefault(_Object$defineProperty);
var isNil__default = /*#__PURE__*/_interopDefault(isNil);

function ownKeys(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var _context, _context2; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context = ownKeys(Object(source), !0)).call(_context, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context2 = ownKeys(Object(source))).call(_context2, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const ControlledCollapsible = props => jsxRuntime.jsx(jsxRuntime.Fragment, {
  children: props.children({
    isOpen: !props.isClosed,
    toggle: props.onToggle
  })
});
ControlledCollapsible.displayName = 'ControlledCollapsible';
const UncontrolledCollapsible = props => {
  const _useToggleState = hooks.useToggleState(!props.isDefaultClosed),
    _useToggleState2 = _slicedToArray(_useToggleState, 2),
    isOpen = _useToggleState2[0],
    toggle = _useToggleState2[1];
  return jsxRuntime.jsx(jsxRuntime.Fragment, {
    children: props.children({
      isOpen,
      toggle
    })
  });
};
UncontrolledCollapsible.displayName = 'UncontrolledCollapsible';
const Collapsible = props => {
  const isControlledComponent = !isNil__default["default"](props.isClosed);
  !isNil__default["default"](props.onToggle);
  if (isControlledComponent) {
    return jsxRuntime.jsx(ControlledCollapsible, _objectSpread({}, props));
  }
  return jsxRuntime.jsx(UncontrolledCollapsible, _objectSpread({}, props));
};
Collapsible.propTypes = {};
Collapsible.displayName = 'Collapsible';
const collapsibleDefaultProps = {
  isDefaultClosed: false
};
Collapsible.defaultProps = collapsibleDefaultProps;
var Collapsible$1 = Collapsible;

// NOTE: This string will be replaced on build time with the package version.
var version = "16.11.0";

exports["default"] = Collapsible$1;
exports.version = version;
