import _sliceInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/slice';
import _mapInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/map';
import _Array$from from '@babel/runtime-corejs3/core-js-stable/array/from';
import _Array$isArray from '@babel/runtime-corejs3/core-js-stable/array/is-array';
import _sortInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/sort';
import moment from 'moment';
import inRange from 'lodash/inRange';
import _Object$keys from '@babel/runtime-corejs3/core-js-stable/object/keys';
import _Object$getOwnPropertySymbols from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols';
import _filterInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/filter';
import _Object$getOwnPropertyDescriptor from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor';
import _forEachInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/for-each';
import _Object$getOwnPropertyDescriptors from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors';
import _Object$defineProperties from '@babel/runtime-corejs3/core-js-stable/object/define-properties';
import _Object$defineProperty from '@babel/runtime-corejs3/core-js-stable/object/define-property';
import _defineProperty from '@babel/runtime-corejs3/helpers/esm/defineProperty';
import _slicedToArray from '@babel/runtime-corejs3/helpers/esm/slicedToArray';
import _pt from 'prop-types';
import { useCallback, Component } from 'react';
import { ClockIcon, CalendarIcon, CloseIcon, AngleLeftIcon, CircleIcon, AngleRightIcon } from '@commercetools-uikit/icons';
import Inline from '@commercetools-uikit/spacings-inline';
import { useToggleState } from '@commercetools-uikit/hooks';
import AccessibleButton from '@commercetools-uikit/accessible-button';
import { css } from '@emotion/react';
import { designTokens } from '@commercetools-uikit/design-system';
import { getInputStyles } from '@commercetools-uikit/input-utils';
import { jsx, jsxs } from '@emotion/react/jsx-runtime';
import _styled from '@emotion/styled/base';
import _objectWithoutProperties from '@babel/runtime-corejs3/helpers/esm/objectWithoutProperties';
import _includesInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/includes';
import { defineMessages, useIntl } from 'react-intl';
import SecondaryIconButton from '@commercetools-uikit/secondary-icon-button';
import Text from '@commercetools-uikit/text';
import Tooltip from '@commercetools-uikit/tooltip';
import _Reflect$construct from '@babel/runtime-corejs3/core-js-stable/reflect/construct';
import _classCallCheck from '@babel/runtime-corejs3/helpers/esm/classCallCheck';
import _createClass from '@babel/runtime-corejs3/helpers/esm/createClass';
import _inherits from '@babel/runtime-corejs3/helpers/esm/inherits';
import _possibleConstructorReturn from '@babel/runtime-corejs3/helpers/esm/possibleConstructorReturn';
import _getPrototypeOf from '@babel/runtime-corejs3/helpers/esm/getPrototypeOf';

const getDaysInMonth = day => moment(day).daysInMonth();
const getDateInMonth = day => moment(day).date();
const getToday = () => moment().format('YYYY-MM-DD');
const formatDate = (day, locale) => day ? moment(day, 'YYYY-MM-DD', locale).format('L') : '';
const changeMonth = (day, delta) => moment(day).add(delta, 'month').format('YYYY-MM-DD');
const getNextDay = day => moment(day).add(1, 'day').format('YYYY-MM-DD');
const getPreviousDay = day => moment(day).subtract(1, 'day').format('YYYY-MM-DD');
const getPaddingDayCount = (day, locale) => {
  const firstDayOfWeek = moment.localeData(locale).firstDayOfWeek();
  const firstDayOfMonth = moment(day).startOf('month').day();
  const paddingDayCount = (firstDayOfMonth - firstDayOfWeek + 7) % 7;

  // ensure number is always positive
  return inRange(paddingDayCount, 0, 6) ? paddingDayCount : 0;
};
const getWeekdayNames = locale => {
  const weekDays = moment.localeData(locale).weekdaysMin();
  const firstDay = moment.localeData(locale).firstDayOfWeek();
  return [..._sliceInstanceProperty(weekDays).call(weekDays, firstDay), ..._sliceInstanceProperty(weekDays).call(weekDays, 0, firstDay)];
};
const getMonthCalendarLabel = (day, locale) => moment(day, 'YYYY-MM-DD', locale).format('MMMM');
const getYearCalendarLabel = (day, locale) => moment(day, 'YYYY-MM-DD', locale).format('YYYY');
const isSameDay = (a, b) => moment(a).isSame(b, 'day');
const getCalendarDayLabel = day => moment(day).format('D');
const isBetween = (item, start, end) => {
  const itemDate = moment(item);
  const startDate = moment(start);
  const endDate = moment(end);
  return itemDate.isBetween(startDate, endDate) || itemDate.isBetween(endDate, startDate);
};
const changeDateInMonth = (day, dayOfMonth) => moment(day).date(dayOfMonth).format('YYYY-MM-DD');
const createCalendarItems = day => {
  var _context;
  return _mapInstanceProperty(_context = _Array$from({
    length: getDaysInMonth(day)
  })).call(_context, (_, i) => {
    const dayOfMonth = i + 1;
    const date = changeDateInMonth(day, dayOfMonth);
    return date;
  });
};
const createItemRangeToString = locale => item => _Array$isArray(item) ? _mapInstanceProperty(item).call(item, i => i ? formatDate(i, locale) : '').join(' - ') : formatDate(item, locale);
const createItemToString = locale => item => item ? formatDate(item, locale) : '';
const formatRange = (range, locale) => {
  var _context2;
  return _mapInstanceProperty(_context2 = _sortInstanceProperty(range).call(range)).call(_context2, item => formatDate(item, locale)).join(' - ');
};
const parseInputToDate = (text, locale) => {
  const localeDate = moment(text, moment.localeData(locale).longDateFormat('L'), locale);
  if (localeDate.isValid()) return localeDate.format('YYYY-MM-DD');
  return '';
};
const getIsDateInRange = (item, min, max) => {
  const itemDate = moment(item);
  if (min && max) {
    return itemDate.isBetween(min, max, null, '[]');
  }
  if (min && !max) {
    return itemDate.isSameOrAfter(min);
  }
  if (!min && max) {
    return itemDate.isSameOrBefore(max);
  }
  return true;
};
const getExampleDateStrings = () => ({
  currentDate: moment().format('YYYY-MM-DD'),
  preselectedDate: moment().add(3, 'days').format('YYYY-MM-DD'),
  minDate: moment().format('YYYY-MM-DD'),
  maxDate: moment().add(1, 'year').format('YYYY-MM-DD')
});

function _EMOTION_STRINGIFIED_CSS_ERROR__$4() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }
// NOTE: order is important here
// * a disabled-field currently does not display warning/error-states so it takes precedence
// * a readonly-field cannot be changed, but it might be relevant for validation, so error and warning are checked first
// how you can interact with the field is controlled separately by the props, this only influences visuals
const getClearSectionStyles = () => {
  return /*#__PURE__*/css("align-items:center;box-sizing:border-box;display:flex;margin-right:", designTokens.spacing10, ";cursor:pointer;transition:color ", designTokens.transitionStandard, ",border-color ", designTokens.transitionStandard, ";& svg *:not([fill='none']){fill:", designTokens.iconColorForDatetimeInputIcon, ";}&:hover svg *{fill:", designTokens.iconColorForDatetimeInputIconWhenHovered, ";}" + (process.env.NODE_ENV === "production" ? "" : ";label:getClearSectionStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
};
const getIconBorderColor = (props, state) => {
  if (props.isDisabled) {
    return designTokens.borderColorForInputWhenDisabled;
  }
  if (props.hasError) {
    return designTokens.borderColorForInputWhenError;
  }
  if (props.hasWarning) {
    return designTokens.borderColorForInputWhenWarning;
  }
  if (props.isReadOnly) {
    return designTokens.borderColorForInputWhenReadonly;
  }
  if (props.isOpen || state.isFocused) {
    return designTokens.borderColorForInputWhenFocused;
  }
  return designTokens.borderColorForInput;
};
const getIconFontColor = props => {
  if (props.isDisabled) {
    return designTokens.fontColorForInputWhenDisabled;
  }
  if (props.hasError) {
    return designTokens.fontColorForInputWhenError;
  }
  if (props.hasWarning) {
    return designTokens.fontColorForInputWhenWarning;
  }
  if (props.isReadOnly) {
    return designTokens.fontColorForInputWhenReadonly;
  }
  return 'initial';
};
const getCalendarIconContainerStyles = (props, state) => {
  return [/*#__PURE__*/css("align-items:center;box-sizing:border-box;background:none;border:0;border-top-right-radius:", designTokens.borderRadiusForInput, ";border-bottom-right-radius:", designTokens.borderRadiusForInput, ";border-color:", getIconBorderColor(props, state), ";color:", getIconFontColor(props), ";cursor:", props.isDisabled ? 'not-allowed' : 'default', ";height:100%;display:flex;padding:", designTokens.spacing10, ";outline:0;transition:color ", designTokens.transitionStandard, ",border-color ", designTokens.transitionStandard, ";&:active,&:hover:not(:disabled)&:not(:read-only),&:focus{border-color:", designTokens.borderColorForInputWhenFocused, ";}" + (process.env.NODE_ENV === "production" ? "" : ";label:getCalendarIconContainerStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */")];
};
const getInputBorderColor = (props, state) => {
  if (props.isDisabled) {
    return designTokens.borderColorForInputWhenDisabled;
  }
  if (props.hasError) {
    return designTokens.borderColorForInputWhenError;
  }
  if (props.hasWarning) {
    return designTokens.borderColorForInputWhenWarning;
  }
  if (props.isReadOnly) {
    return designTokens.borderColorForInputWhenReadonly;
  }
  if ((props.isOpen || state.isFocused) && !props.isReadOnly) {
    return designTokens.borderColorForInputWhenFocused;
  }
  return designTokens.borderColorForInput;
};
const getInputFontColor = props => {
  if (props.isDisabled) {
    return designTokens.fontColorForInputWhenDisabled;
  }
  if (props.hasError) {
    return designTokens.fontColorForInputWhenError;
  }
  if (props.hasWarning) {
    return designTokens.fontColorForInputWhenWarning;
  }
  if (props.isReadOnly) {
    return designTokens.fontColorForInputWhenReadonly;
  }
  return designTokens.fontColorForInput;
};
const getInputContainerBackgroundColor = props => {
  if (props.isDisabled) {
    return designTokens.backgroundColorForInputWhenDisabled;
  }
  if (props.isReadOnly) {
    return designTokens.backgroundColorForInputWhenReadonly;
  }
  return designTokens.backgroundColorForInput;
};
const getInputContainerStyles = (props, state) => {
  return [/*#__PURE__*/css("appearance:none;background-color:", getInputContainerBackgroundColor(props), ";border:1px solid ", getInputBorderColor(props, state), ";border-radius:", designTokens.borderRadiusForInput, ";box-sizing:border-box;color:", getInputFontColor(props), ";cursor:", props.isDisabled ? 'not-allowed' : 'default', ";width:100%;height:", designTokens.heightForInput, ";align-items:center;display:flex;font-size:", designTokens.fontSizeForInput, ";font-family:inherit;min-width:", designTokens.constraint5, ";transition:border-color ", designTokens.transitionStandard, ",box-shadow ", designTokens.transitionStandard, ";&:hover:not(:focus){background-color:", !props.isDisabled && !props.isReadOnly ? designTokens.backgroundColorForInputWhenHovered : null, ";}&:focus{border-color:", props.isDisabled || props.hasError || props.hasWarning || props.isReadOnly || (props.isOpen || state.isFocused) && !props.isReadOnly ? '' : designTokens.borderColorForInputWhenFocused, ";}" + (process.env.NODE_ENV === "production" ? "" : ";label:getInputContainerStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"), !props.isReadOnly && /*#__PURE__*/css("&:focus-within{border-color:", designTokens.borderColorForInputWhenFocused, ";box-shadow:", designTokens.boxShadowForDatetimeInputWhenHovered, " ", designTokens.borderColorForInputWhenFocused, ";&:hover{background-color:", designTokens.colorSurface, ";}}" + (process.env.NODE_ENV === "production" ? "" : ";label:getInputContainerStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"), (props.hasError || props.hasWarning) && /*#__PURE__*/css("box-shadow:", designTokens.boxShadowForDatetimeInputWhenHovered, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:getInputContainerStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhbGVuZGFyLWJvZHkuc3R5bGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTZMUyIsImZpbGUiOiJjYWxlbmRhci1ib2R5LnN0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB7IGRlc2lnblRva2VucyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuaW1wb3J0IHsgZ2V0SW5wdXRTdHlsZXMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9pbnB1dC11dGlscyc7XG5pbXBvcnQgdHlwZSB7IFRDYWxlbmRhckJvZHkgfSBmcm9tICcuL2NhbGVuZGFyLWJvZHknO1xuXG4vLyBOT1RFOiBvcmRlciBpcyBpbXBvcnRhbnQgaGVyZVxuLy8gKiBhIGRpc2FibGVkLWZpZWxkIGN1cnJlbnRseSBkb2VzIG5vdCBkaXNwbGF5IHdhcm5pbmcvZXJyb3Itc3RhdGVzIHNvIGl0IHRha2VzIHByZWNlZGVuY2Vcbi8vICogYSByZWFkb25seS1maWVsZCBjYW5ub3QgYmUgY2hhbmdlZCwgYnV0IGl0IG1pZ2h0IGJlIHJlbGV2YW50IGZvciB2YWxpZGF0aW9uLCBzbyBlcnJvciBhbmQgd2FybmluZyBhcmUgY2hlY2tlZCBmaXJzdFxuLy8gaG93IHlvdSBjYW4gaW50ZXJhY3Qgd2l0aCB0aGUgZmllbGQgaXMgY29udHJvbGxlZCBzZXBhcmF0ZWx5IGJ5IHRoZSBwcm9wcywgdGhpcyBvbmx5IGluZmx1ZW5jZXMgdmlzdWFsc1xuY29uc3QgZ2V0Q2xlYXJTZWN0aW9uU3R5bGVzID0gKCkgPT4ge1xuICByZXR1cm4gY3NzYFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIG1hcmdpbi1yaWdodDogJHtkZXNpZ25Ub2tlbnMuc3BhY2luZzEwfTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgdHJhbnNpdGlvbjogY29sb3IgJHtkZXNpZ25Ub2tlbnMudHJhbnNpdGlvblN0YW5kYXJkfSxcbiAgICAgIGJvcmRlci1jb2xvciAke2Rlc2lnblRva2Vucy50cmFuc2l0aW9uU3RhbmRhcmR9O1xuXG4gICAgJiBzdmcgKjpub3QoW2ZpbGw9J25vbmUnXSkge1xuICAgICAgZmlsbDogJHtkZXNpZ25Ub2tlbnMuaWNvbkNvbG9yRm9yRGF0ZXRpbWVJbnB1dEljb259O1xuICAgIH1cbiAgICAmOmhvdmVyIHN2ZyAqIHtcbiAgICAgIGZpbGw6ICR7ZGVzaWduVG9rZW5zLmljb25Db2xvckZvckRhdGV0aW1lSW5wdXRJY29uV2hlbkhvdmVyZWR9O1xuICAgIH1cbiAgYDtcbn07XG5cbnR5cGUgVFN0YXRlID0ge1xuICBpc0ZvY3VzZWQ6IGJvb2xlYW47XG59O1xuXG5jb25zdCBnZXRJY29uQm9yZGVyQ29sb3IgPSAocHJvcHM6IFRDYWxlbmRhckJvZHksIHN0YXRlOiBUU3RhdGUpID0+IHtcbiAgaWYgKHByb3BzLmlzRGlzYWJsZWQpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWQ7XG4gIH1cbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkVycm9yO1xuICB9XG4gIGlmIChwcm9wcy5oYXNXYXJuaW5nKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbldhcm5pbmc7XG4gIH1cbiAgaWYgKHByb3BzLmlzUmVhZE9ubHkpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuUmVhZG9ubHk7XG4gIH1cbiAgaWYgKHByb3BzLmlzT3BlbiB8fCBzdGF0ZS5pc0ZvY3VzZWQpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZDtcbiAgfVxuICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXQ7XG59O1xuXG5jb25zdCBnZXRJY29uRm9udENvbG9yID0gKHByb3BzOiBUQ2FsZW5kYXJCb2R5KSA9PiB7XG4gIGlmIChwcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5EaXNhYmxlZDtcbiAgfVxuICBpZiAocHJvcHMuaGFzRXJyb3IpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlbkVycm9yO1xuICB9XG4gIGlmIChwcm9wcy5oYXNXYXJuaW5nKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5SZWFkb25seTtcbiAgfVxuICByZXR1cm4gJ2luaXRpYWwnO1xufTtcblxuY29uc3QgZ2V0Q2FsZW5kYXJJY29uQ29udGFpbmVyU3R5bGVzID0gKFxuICBwcm9wczogVENhbGVuZGFyQm9keSxcbiAgc3RhdGU6IFRTdGF0ZVxuKSA9PiB7XG4gIHJldHVybiBbXG4gICAgY3NzYFxuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgICAgYm9yZGVyOiAwO1xuICAgICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1c0ZvcklucHV0fTtcbiAgICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gICAgICBib3JkZXItY29sb3I6ICR7Z2V0SWNvbkJvcmRlckNvbG9yKHByb3BzLCBzdGF0ZSl9O1xuICAgICAgY29sb3I6ICR7Z2V0SWNvbkZvbnRDb2xvcihwcm9wcyl9O1xuICAgICAgY3Vyc29yOiAke3Byb3BzLmlzRGlzYWJsZWQgPyAnbm90LWFsbG93ZWQnIDogJ2RlZmF1bHQnfTtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5zcGFjaW5nMTB9O1xuICAgICAgb3V0bGluZTogMDtcbiAgICAgIHRyYW5zaXRpb246IGNvbG9yICR7ZGVzaWduVG9rZW5zLnRyYW5zaXRpb25TdGFuZGFyZH0sXG4gICAgICAgIGJvcmRlci1jb2xvciAke2Rlc2lnblRva2Vucy50cmFuc2l0aW9uU3RhbmRhcmR9O1xuICAgICAgJjphY3RpdmUsXG4gICAgICAmOmhvdmVyOm5vdCg6ZGlzYWJsZWQpJjpub3QoOnJlYWQtb25seSksXG4gICAgICAmOmZvY3VzIHtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWR9O1xuICAgICAgfVxuICAgIGAsXG4gIF07XG59O1xuXG5jb25zdCBnZXRJbnB1dEJvcmRlckNvbG9yID0gKHByb3BzOiBUQ2FsZW5kYXJCb2R5LCBzdGF0ZTogVFN0YXRlKSA9PiB7XG4gIGlmIChwcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkRpc2FibGVkO1xuICB9XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5FcnJvcjtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIGlmICgocHJvcHMuaXNPcGVuIHx8IHN0YXRlLmlzRm9jdXNlZCkgJiYgIXByb3BzLmlzUmVhZE9ubHkpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZDtcbiAgfVxuICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXQ7XG59O1xuXG5jb25zdCBnZXRJbnB1dEZvbnRDb2xvciA9IChwcm9wczogVENhbGVuZGFyQm9keSkgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWQ7XG4gIH1cbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5FcnJvcjtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuV2FybmluZztcbiAgfVxuICBpZiAocHJvcHMuaXNSZWFkT25seSkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuUmVhZG9ubHk7XG4gIH1cbiAgcmV0dXJuIGRlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dDtcbn07XG5cbmNvbnN0IGdldElucHV0Q29udGFpbmVyQmFja2dyb3VuZENvbG9yID0gKHByb3BzOiBUQ2FsZW5kYXJCb2R5KSA9PiB7XG4gIGlmIChwcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JJbnB1dFdoZW5EaXNhYmxlZDtcbiAgfVxuICBpZiAocHJvcHMuaXNSZWFkT25seSkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXRXaGVuUmVhZG9ubHk7XG4gIH1cbiAgcmV0dXJuIGRlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JJbnB1dDtcbn07XG5cbmNvbnN0IGdldElucHV0Q29udGFpbmVyU3R5bGVzID0gKHByb3BzOiBUQ2FsZW5kYXJCb2R5LCBzdGF0ZTogVFN0YXRlKSA9PiB7XG4gIHJldHVybiBbXG4gICAgY3NzYFxuICAgICAgYXBwZWFyYW5jZTogbm9uZTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Z2V0SW5wdXRDb250YWluZXJCYWNrZ3JvdW5kQ29sb3IocHJvcHMpfTtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICR7Z2V0SW5wdXRCb3JkZXJDb2xvcihwcm9wcywgc3RhdGUpfTtcbiAgICAgIGJvcmRlci1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1c0ZvcklucHV0fTtcbiAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICBjb2xvcjogJHtnZXRJbnB1dEZvbnRDb2xvcihwcm9wcyl9O1xuICAgICAgY3Vyc29yOiAke3Byb3BzLmlzRGlzYWJsZWQgPyAnbm90LWFsbG93ZWQnIDogJ2RlZmF1bHQnfTtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiAke2Rlc2lnblRva2Vucy5oZWlnaHRGb3JJbnB1dH07XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZvbnQtc2l6ZTogJHtkZXNpZ25Ub2tlbnMuZm9udFNpemVGb3JJbnB1dH07XG4gICAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICAgIG1pbi13aWR0aDogJHtkZXNpZ25Ub2tlbnMuY29uc3RyYWludDV9O1xuICAgICAgdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yICR7ZGVzaWduVG9rZW5zLnRyYW5zaXRpb25TdGFuZGFyZH0sXG4gICAgICAgIGJveC1zaGFkb3cgJHtkZXNpZ25Ub2tlbnMudHJhbnNpdGlvblN0YW5kYXJkfTtcblxuICAgICAgJjpob3Zlcjpub3QoOmZvY3VzKSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7IXByb3BzLmlzRGlzYWJsZWQgJiYgIXByb3BzLmlzUmVhZE9ubHlcbiAgICAgICAgICA/IGRlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JJbnB1dFdoZW5Ib3ZlcmVkXG4gICAgICAgICAgOiBudWxsfTtcbiAgICAgIH1cbiAgICAgICY6Zm9jdXMge1xuICAgICAgICBib3JkZXItY29sb3I6ICR7cHJvcHMuaXNEaXNhYmxlZCB8fFxuICAgICAgICBwcm9wcy5oYXNFcnJvciB8fFxuICAgICAgICBwcm9wcy5oYXNXYXJuaW5nIHx8XG4gICAgICAgIHByb3BzLmlzUmVhZE9ubHkgfHxcbiAgICAgICAgKChwcm9wcy5pc09wZW4gfHwgc3RhdGUuaXNGb2N1c2VkKSAmJiAhcHJvcHMuaXNSZWFkT25seSlcbiAgICAgICAgICA/ICcnXG4gICAgICAgICAgOiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkfTtcbiAgICAgIH1cbiAgICBgLFxuICAgICFwcm9wcy5pc1JlYWRPbmx5ICYmXG4gICAgICBjc3NgXG4gICAgICAgICY6Zm9jdXMtd2l0aGluIHtcbiAgICAgICAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgICAgICAgYm94LXNoYWRvdzogJHtkZXNpZ25Ub2tlbnMuYm94U2hhZG93Rm9yRGF0ZXRpbWVJbnB1dFdoZW5Ib3ZlcmVkfVxuICAgICAgICAgICAgJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkfTtcbiAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBgLFxuICAgIChwcm9wcy5oYXNFcnJvciB8fCBwcm9wcy5oYXNXYXJuaW5nKSAmJlxuICAgICAgY3NzYFxuICAgICAgICBib3gtc2hhZG93OiAke2Rlc2lnblRva2Vucy5ib3hTaGFkb3dGb3JEYXRldGltZUlucHV0V2hlbkhvdmVyZWR9O1xuICAgICAgYCxcbiAgXTtcbn07XG5cbmNvbnN0IGdldERhdGVUaW1lSW5wdXRTdHlsZXMgPSAocHJvcHM6IFRDYWxlbmRhckJvZHkpID0+IHtcbiAgY29uc3QgYmFzZVN0eWxlcyA9IFtcbiAgICBnZXRJbnB1dFN0eWxlcyhwcm9wcyksXG4gICAgY3NzYFxuICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgYmFja2dyb3VuZDogbm9uZSAhaW1wb3J0YW50O1xuICAgICAgJixcbiAgICAgICY6Zm9jdXM6bm90KDpyZWFkLW9ubHkpIHtcbiAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICAgIH1cbiAgICBgLFxuICBdO1xuICByZXR1cm4gYmFzZVN0eWxlcztcbn07XG5cbmV4cG9ydCB7XG4gIGdldENsZWFyU2VjdGlvblN0eWxlcyxcbiAgZ2V0SW5wdXRDb250YWluZXJTdHlsZXMsXG4gIGdldERhdGVUaW1lSW5wdXRTdHlsZXMsXG4gIGdldENhbGVuZGFySWNvbkNvbnRhaW5lclN0eWxlcyxcbn07XG4iXX0= */")];
};
var _ref$2 = process.env.NODE_ENV === "production" ? {
  name: "1wj7icd",
  styles: "border:none;background:none!important;&,&:focus:not(:read-only){box-shadow:none;}"
} : {
  name: "16bmemp-baseStyles",
  styles: "border:none;background:none!important;&,&:focus:not(:read-only){box-shadow:none;};label:baseStyles;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__$4
};
const getDateTimeInputStyles = props => {
  const baseStyles = [getInputStyles(props), _ref$2];
  return baseStyles;
};

function ownKeys$2(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); enumerableOnly && (symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var _context, _context2; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty(_context = ownKeys$2(Object(source), !0)).call(_context, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)) : _forEachInstanceProperty(_context2 = ownKeys$2(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } return target; }
const ClearSection = props => {
  return jsx(AccessibleButton, {
    css: getClearSectionStyles(),
    label: "clear",
    onClick: props.onClear,
    "aria-label": "clear",
    children: jsx(CloseIcon, {
      size: "medium"
    })
  });
};
ClearSection.propTypes = process.env.NODE_ENV !== "production" ? {
  isDisabled: _pt.bool,
  hasError: _pt.bool,
  hasWarning: _pt.bool,
  onClear: _pt.func,
  theme: _pt.any,
  isFocused: _pt.bool,
  isOpen: _pt.bool
} : {};
ClearSection.displayName = 'ClearSection';
const defaultProps = {
  isClearable: true
};
const CalendarBody = props => {
  var _props$inputProps, _props$inputProps2, _props$toggleButtonPr, _props$toggleButtonPr2, _props$inputProps3;
  const _useToggleState = useToggleState(false),
    _useToggleState2 = _slicedToArray(_useToggleState, 2),
    isFocused = _useToggleState2[0],
    toggleIsFocused = _useToggleState2[1];
  const onInputFocus = (_props$inputProps = props.inputProps) === null || _props$inputProps === void 0 ? void 0 : _props$inputProps.onFocus;
  const handleInputFocus = useCallback(event => {
    toggleIsFocused(true);
    if (onInputFocus) onInputFocus(event);
  }, [onInputFocus, toggleIsFocused]);
  const onInputBlur = (_props$inputProps2 = props.inputProps) === null || _props$inputProps2 === void 0 ? void 0 : _props$inputProps2.onBlur;
  const handleInputBlur = useCallback(event => {
    toggleIsFocused(false);
    if (onInputBlur) onInputBlur(event);
  }, [onInputBlur, toggleIsFocused]);
  const onToggleFocus = (_props$toggleButtonPr = props.toggleButtonProps) === null || _props$toggleButtonPr === void 0 ? void 0 : _props$toggleButtonPr.onFocus;
  const handleToggleFocus = useCallback(event => {
    toggleIsFocused(true);
    if (onToggleFocus) onToggleFocus(event);
  }, [onToggleFocus, toggleIsFocused]);
  const onToggleBlur = (_props$toggleButtonPr2 = props.toggleButtonProps) === null || _props$toggleButtonPr2 === void 0 ? void 0 : _props$toggleButtonPr2.onBlur;
  const handleToggleBlur = useCallback(event => {
    toggleIsFocused(false);
    if (onToggleBlur) onToggleBlur(event);
  }, [onToggleBlur, toggleIsFocused]);
  const disabledOrReadOnly = props.isDisabled || props.isReadOnly;
  return jsx(Inline, {
    alignItems: "center",
    children: jsxs("div", {
      css: getInputContainerStyles(props, {
        isFocused
      }),
      children: [jsx("input", _objectSpread$2(_objectSpread$2({
        ref: props.inputRef
      }, props.inputProps), {}, {
        disabled: props.isDisabled,
        readOnly: props.isReadOnly,
        css: getDateTimeInputStyles(props),
        onFocus: handleInputFocus,
        onBlur: handleInputBlur,
        "aria-readonly": props.isReadOnly
      })), !disabledOrReadOnly && props.hasSelection && props.isClearable && jsx(ClearSection, {
        hasError: props.hasError,
        hasWarning: props.hasWarning,
        isFocused: isFocused,
        isOpen: props.isOpen,
        onClear: props.onClear
      }), jsx("button", _objectSpread$2(_objectSpread$2({
        type: "button",
        css: getCalendarIconContainerStyles(props, {
          isFocused
        })
      }, props.toggleButtonProps), {}, {
        onFocus: handleToggleFocus,
        onBlur: handleToggleBlur,
        disabled: disabledOrReadOnly,
        onKeyDown: (_props$inputProps3 = props.inputProps) === null || _props$inputProps3 === void 0 ? void 0 : _props$inputProps3.onKeyDown
        /* keyboard users don't need this button */,
        tabIndex: -1,
        children: props.icon === 'clock' ? jsx(ClockIcon, {
          color: "neutral60"
        }) : jsx(CalendarIcon, {
          color: "neutral60"
        })
      }))]
    })
  });
};
CalendarBody.propTypes = process.env.NODE_ENV !== "production" ? {
  inputRef: _pt.any.isRequired,
  icon: _pt.string,
  id: _pt.string,
  inputProps: _pt.shape({
    'aria-invalid': _pt.bool,
    'aria-errormessage': _pt.string,
    onBlur: _pt.func,
    onFocus: _pt.func,
    onKeyDown: _pt.func
  }),
  isClearable: _pt.bool,
  toggleButtonProps: _pt.any,
  value: _pt.string,
  isDisabled: _pt.bool,
  isReadOnly: _pt.bool,
  isOpen: _pt.bool,
  hasSelection: _pt.bool,
  hasWarning: _pt.bool,
  hasError: _pt.bool,
  onClear: _pt.func,
  placeholder: _pt.string,
  theme: _pt.any
} : {};
CalendarBody.displayName = 'CalendarBody';
CalendarBody.defaultProps = defaultProps;
var CalendarBody$1 = CalendarBody;

function _EMOTION_STRINGIFIED_CSS_ERROR__$3() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }
const CalendarContent = /*#__PURE__*/_styled("ul", process.env.NODE_ENV === "production" ? {
  target: "e17zfb0v0"
} : {
  target: "e17zfb0v0",
  label: "CalendarContent"
})(process.env.NODE_ENV === "production" ? {
  name: "1en5ct5",
  styles: "margin:0;padding:0 1%"
} : {
  name: "1en5ct5",
  styles: "margin:0;padding:0 1%",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhbGVuZGFyLWNvbnRlbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRWlDIiwiZmlsZSI6ImNhbGVuZGFyLWNvbnRlbnQudHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5cbmNvbnN0IENhbGVuZGFyQ29udGVudCA9IHN0eWxlZC51bGBcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwIDElO1xuYDtcblxuZXhwb3J0IGRlZmF1bHQgQ2FsZW5kYXJDb250ZW50O1xuIl19 */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__$3
});
var CalendarContent$1 = CalendarContent;

const _excluded$1 = ["isHighlighted", "isSelected", "isRangeStart", "isRangeBetween", "isRangeEnd", "isToday"];
function ownKeys$1(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); enumerableOnly && (symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty(_context3 = ownKeys$1(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)) : _forEachInstanceProperty(_context4 = ownKeys$1(Object(source))).call(_context4, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } return target; }
function _EMOTION_STRINGIFIED_CSS_ERROR__$2() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }
const getStyles = props => {
  var _context, _context2;
  const styles = [];
  if (!_includesInstanceProperty(_context = ['heading', 'spacing']).call(_context, props.type || '')) {
    styles.push( /*#__PURE__*/css("text-align:center;padding:", designTokens.spacing20, " 0;cursor:default;border-radius:", designTokens.borderRadius4, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:getStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhbGVuZGFyLWRheS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0JtQiIsImZpbGUiOiJjYWxlbmRhci1kYXkudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVhY3ROb2RlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5cbnR5cGUgVENhbGVuZGFyRGF5ID0ge1xuICBjaGlsZHJlbj86IFJlYWN0Tm9kZTtcbiAgdHlwZT86ICdoZWFkaW5nJyB8ICdzcGFjaW5nJyB8ICdkYXknO1xuICBpc0hpZ2hsaWdodGVkPzogYm9vbGVhbjtcbiAgaXNTZWxlY3RlZD86IGJvb2xlYW47XG4gIGlzUmFuZ2VTdGFydD86IGJvb2xlYW47XG4gIGlzUmFuZ2VCZXR3ZWVuPzogYm9vbGVhbjtcbiAgaXNSYW5nZUVuZD86IGJvb2xlYW47XG4gIGlzVG9kYXk/OiBib29sZWFuO1xuICBkaXNhYmxlZD86IGJvb2xlYW47XG59O1xuXG5jb25zdCBnZXRTdHlsZXMgPSAocHJvcHM6IFRDYWxlbmRhckRheSkgPT4ge1xuICBjb25zdCBzdHlsZXMgPSBbXTtcblxuICBpZiAoIVsnaGVhZGluZycsICdzcGFjaW5nJ10uaW5jbHVkZXMocHJvcHMudHlwZSB8fCAnJykpIHtcbiAgICBzdHlsZXMucHVzaChjc3NgXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5zcGFjaW5nMjB9IDA7XG4gICAgICBjdXJzb3I6IGRlZmF1bHQ7XG4gICAgICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXM0fTtcbiAgICBgKTtcbiAgfVxuICBpZiAoWydoZWFkaW5nJywgJ3NwYWNpbmcnXS5pbmNsdWRlcyhwcm9wcy50eXBlIHx8ICcnKSkge1xuICAgIHN0eWxlcy5wdXNoKGNzc2BcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcyMH0gMDtcbiAgICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw2MH07XG4gICAgYCk7XG4gIH1cbiAgaWYgKHByb3BzLmlzSGlnaGxpZ2h0ZWQpIHtcbiAgICBzdHlsZXMucHVzaChcbiAgICAgIGNzc2BcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsOTB9O1xuICAgICAgYFxuICAgICk7XG4gIH1cbiAgaWYgKHByb3BzLmlzU2VsZWN0ZWQpIHtcbiAgICBzdHlsZXMucHVzaChcbiAgICAgIGNzc2BcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JQcmltYXJ5fTtcbiAgICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG4gICAgICBgXG4gICAgKTtcbiAgfVxuICBpZiAocHJvcHMuaXNSYW5nZVN0YXJ0IHx8IHByb3BzLmlzUmFuZ2VFbmQpIHtcbiAgICBzdHlsZXMucHVzaChcbiAgICAgIGNzc2BcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JQcmltYXJ5NDB9O1xuICAgICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICAgIGBcbiAgICApO1xuICB9XG4gIGlmIChwcm9wcy5pc1JhbmdlQmV0d2Vlbikge1xuICAgIHN0eWxlcy5wdXNoKFxuICAgICAgY3NzYFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw5MH07XG4gICAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dH07XG4gICAgICBgXG4gICAgKTtcbiAgfVxuICBpZiAoXG4gICAgIXByb3BzLmlzU2VsZWN0ZWQgJiZcbiAgICAhcHJvcHMuaXNSYW5nZVN0YXJ0ICYmXG4gICAgIXByb3BzLmlzUmFuZ2VFbmQgJiZcbiAgICBwcm9wcy5pc1RvZGF5XG4gICkge1xuICAgIHN0eWxlcy5wdXNoKGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvckluZm99O1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgYCk7XG4gIH1cblxuICBpZiAocHJvcHMuZGlzYWJsZWQpIHtcbiAgICBzdHlsZXMucHVzaChjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWR9O1xuICAgICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbiAgICBgKTtcbiAgfVxuXG4gIHJldHVybiBzdHlsZXM7XG59O1xuXG5jb25zdCBDYWxlbmRhckRheSA9IChwcm9wczogVENhbGVuZGFyRGF5KSA9PiB7XG4gIGNvbnN0IHtcbiAgICBpc0hpZ2hsaWdodGVkLFxuICAgIGlzU2VsZWN0ZWQsXG4gICAgaXNSYW5nZVN0YXJ0LFxuICAgIGlzUmFuZ2VCZXR3ZWVuLFxuICAgIGlzUmFuZ2VFbmQsXG4gICAgaXNUb2RheSxcbiAgICAuLi5yZXN0XG4gIH0gPSBwcm9wcztcbiAgcmV0dXJuIChcbiAgICA8bGlcbiAgICAgIGNzcz17Y3NzYFxuICAgICAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgbWFyZ2luOiAycHggMSU7XG4gICAgICAgIHdpZHRoOiAxMiU7XG4gICAgICBgfVxuICAgID5cbiAgICAgIDxkaXYgY3NzPXtnZXRTdHlsZXMocHJvcHMpfSB7Li4ucmVzdH0gLz5cbiAgICA8L2xpPlxuICApO1xufTtcblxuQ2FsZW5kYXJEYXkuZGlzcGxheU5hbWUgPSAnQ2FsZW5kYXJEYXknO1xuXG5leHBvcnQgZGVmYXVsdCBDYWxlbmRhckRheTtcbiJdfQ== */"));
  }
  if (_includesInstanceProperty(_context2 = ['heading', 'spacing']).call(_context2, props.type || '')) {
    styles.push( /*#__PURE__*/css("text-align:center;padding:", designTokens.spacing20, " 0;cursor:default;color:", designTokens.colorNeutral60, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:getStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhbGVuZGFyLWRheS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNEJtQiIsImZpbGUiOiJjYWxlbmRhci1kYXkudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVhY3ROb2RlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5cbnR5cGUgVENhbGVuZGFyRGF5ID0ge1xuICBjaGlsZHJlbj86IFJlYWN0Tm9kZTtcbiAgdHlwZT86ICdoZWFkaW5nJyB8ICdzcGFjaW5nJyB8ICdkYXknO1xuICBpc0hpZ2hsaWdodGVkPzogYm9vbGVhbjtcbiAgaXNTZWxlY3RlZD86IGJvb2xlYW47XG4gIGlzUmFuZ2VTdGFydD86IGJvb2xlYW47XG4gIGlzUmFuZ2VCZXR3ZWVuPzogYm9vbGVhbjtcbiAgaXNSYW5nZUVuZD86IGJvb2xlYW47XG4gIGlzVG9kYXk/OiBib29sZWFuO1xuICBkaXNhYmxlZD86IGJvb2xlYW47XG59O1xuXG5jb25zdCBnZXRTdHlsZXMgPSAocHJvcHM6IFRDYWxlbmRhckRheSkgPT4ge1xuICBjb25zdCBzdHlsZXMgPSBbXTtcblxuICBpZiAoIVsnaGVhZGluZycsICdzcGFjaW5nJ10uaW5jbHVkZXMocHJvcHMudHlwZSB8fCAnJykpIHtcbiAgICBzdHlsZXMucHVzaChjc3NgXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5zcGFjaW5nMjB9IDA7XG4gICAgICBjdXJzb3I6IGRlZmF1bHQ7XG4gICAgICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXM0fTtcbiAgICBgKTtcbiAgfVxuICBpZiAoWydoZWFkaW5nJywgJ3NwYWNpbmcnXS5pbmNsdWRlcyhwcm9wcy50eXBlIHx8ICcnKSkge1xuICAgIHN0eWxlcy5wdXNoKGNzc2BcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcyMH0gMDtcbiAgICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw2MH07XG4gICAgYCk7XG4gIH1cbiAgaWYgKHByb3BzLmlzSGlnaGxpZ2h0ZWQpIHtcbiAgICBzdHlsZXMucHVzaChcbiAgICAgIGNzc2BcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsOTB9O1xuICAgICAgYFxuICAgICk7XG4gIH1cbiAgaWYgKHByb3BzLmlzU2VsZWN0ZWQpIHtcbiAgICBzdHlsZXMucHVzaChcbiAgICAgIGNzc2BcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JQcmltYXJ5fTtcbiAgICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG4gICAgICBgXG4gICAgKTtcbiAgfVxuICBpZiAocHJvcHMuaXNSYW5nZVN0YXJ0IHx8IHByb3BzLmlzUmFuZ2VFbmQpIHtcbiAgICBzdHlsZXMucHVzaChcbiAgICAgIGNzc2BcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JQcmltYXJ5NDB9O1xuICAgICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICAgIGBcbiAgICApO1xuICB9XG4gIGlmIChwcm9wcy5pc1JhbmdlQmV0d2Vlbikge1xuICAgIHN0eWxlcy5wdXNoKFxuICAgICAgY3NzYFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw5MH07XG4gICAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dH07XG4gICAgICBgXG4gICAgKTtcbiAgfVxuICBpZiAoXG4gICAgIXByb3BzLmlzU2VsZWN0ZWQgJiZcbiAgICAhcHJvcHMuaXNSYW5nZVN0YXJ0ICYmXG4gICAgIXByb3BzLmlzUmFuZ2VFbmQgJiZcbiAgICBwcm9wcy5pc1RvZGF5XG4gICkge1xuICAgIHN0eWxlcy5wdXNoKGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvckluZm99O1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgYCk7XG4gIH1cblxuICBpZiAocHJvcHMuZGlzYWJsZWQpIHtcbiAgICBzdHlsZXMucHVzaChjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWR9O1xuICAgICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbiAgICBgKTtcbiAgfVxuXG4gIHJldHVybiBzdHlsZXM7XG59O1xuXG5jb25zdCBDYWxlbmRhckRheSA9IChwcm9wczogVENhbGVuZGFyRGF5KSA9PiB7XG4gIGNvbnN0IHtcbiAgICBpc0hpZ2hsaWdodGVkLFxuICAgIGlzU2VsZWN0ZWQsXG4gICAgaXNSYW5nZVN0YXJ0LFxuICAgIGlzUmFuZ2VCZXR3ZWVuLFxuICAgIGlzUmFuZ2VFbmQsXG4gICAgaXNUb2RheSxcbiAgICAuLi5yZXN0XG4gIH0gPSBwcm9wcztcbiAgcmV0dXJuIChcbiAgICA8bGlcbiAgICAgIGNzcz17Y3NzYFxuICAgICAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgbWFyZ2luOiAycHggMSU7XG4gICAgICAgIHdpZHRoOiAxMiU7XG4gICAgICBgfVxuICAgID5cbiAgICAgIDxkaXYgY3NzPXtnZXRTdHlsZXMocHJvcHMpfSB7Li4ucmVzdH0gLz5cbiAgICA8L2xpPlxuICApO1xufTtcblxuQ2FsZW5kYXJEYXkuZGlzcGxheU5hbWUgPSAnQ2FsZW5kYXJEYXknO1xuXG5leHBvcnQgZGVmYXVsdCBDYWxlbmRhckRheTtcbiJdfQ== */"));
  }
  if (props.isHighlighted) {
    styles.push( /*#__PURE__*/css("background-color:", designTokens.colorNeutral90, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:getStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhbGVuZGFyLWRheS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUNTIiwiZmlsZSI6ImNhbGVuZGFyLWRheS50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZWFjdE5vZGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcblxudHlwZSBUQ2FsZW5kYXJEYXkgPSB7XG4gIGNoaWxkcmVuPzogUmVhY3ROb2RlO1xuICB0eXBlPzogJ2hlYWRpbmcnIHwgJ3NwYWNpbmcnIHwgJ2RheSc7XG4gIGlzSGlnaGxpZ2h0ZWQ/OiBib29sZWFuO1xuICBpc1NlbGVjdGVkPzogYm9vbGVhbjtcbiAgaXNSYW5nZVN0YXJ0PzogYm9vbGVhbjtcbiAgaXNSYW5nZUJldHdlZW4/OiBib29sZWFuO1xuICBpc1JhbmdlRW5kPzogYm9vbGVhbjtcbiAgaXNUb2RheT86IGJvb2xlYW47XG4gIGRpc2FibGVkPzogYm9vbGVhbjtcbn07XG5cbmNvbnN0IGdldFN0eWxlcyA9IChwcm9wczogVENhbGVuZGFyRGF5KSA9PiB7XG4gIGNvbnN0IHN0eWxlcyA9IFtdO1xuXG4gIGlmICghWydoZWFkaW5nJywgJ3NwYWNpbmcnXS5pbmNsdWRlcyhwcm9wcy50eXBlIHx8ICcnKSkge1xuICAgIHN0eWxlcy5wdXNoKGNzc2BcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcyMH0gMDtcbiAgICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICAgIGJvcmRlci1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1czR9O1xuICAgIGApO1xuICB9XG4gIGlmIChbJ2hlYWRpbmcnLCAnc3BhY2luZyddLmluY2x1ZGVzKHByb3BzLnR5cGUgfHwgJycpKSB7XG4gICAgc3R5bGVzLnB1c2goY3NzYFxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgcGFkZGluZzogJHtkZXNpZ25Ub2tlbnMuc3BhY2luZzIwfSAwO1xuICAgICAgY3Vyc29yOiBkZWZhdWx0O1xuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDYwfTtcbiAgICBgKTtcbiAgfVxuICBpZiAocHJvcHMuaXNIaWdobGlnaHRlZCkge1xuICAgIHN0eWxlcy5wdXNoKFxuICAgICAgY3NzYFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw5MH07XG4gICAgICBgXG4gICAgKTtcbiAgfVxuICBpZiAocHJvcHMuaXNTZWxlY3RlZCkge1xuICAgIHN0eWxlcy5wdXNoKFxuICAgICAgY3NzYFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclByaW1hcnl9O1xuICAgICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICAgIGBcbiAgICApO1xuICB9XG4gIGlmIChwcm9wcy5pc1JhbmdlU3RhcnQgfHwgcHJvcHMuaXNSYW5nZUVuZCkge1xuICAgIHN0eWxlcy5wdXNoKFxuICAgICAgY3NzYFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclByaW1hcnk0MH07XG4gICAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICAgICAgYFxuICAgICk7XG4gIH1cbiAgaWYgKHByb3BzLmlzUmFuZ2VCZXR3ZWVuKSB7XG4gICAgc3R5bGVzLnB1c2goXG4gICAgICBjc3NgXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDkwfTtcbiAgICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0fTtcbiAgICAgIGBcbiAgICApO1xuICB9XG4gIGlmIChcbiAgICAhcHJvcHMuaXNTZWxlY3RlZCAmJlxuICAgICFwcm9wcy5pc1JhbmdlU3RhcnQgJiZcbiAgICAhcHJvcHMuaXNSYW5nZUVuZCAmJlxuICAgIHByb3BzLmlzVG9kYXlcbiAgKSB7XG4gICAgc3R5bGVzLnB1c2goY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9ySW5mb307XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBgKTtcbiAgfVxuXG4gIGlmIChwcm9wcy5kaXNhYmxlZCkge1xuICAgIHN0eWxlcy5wdXNoKGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5EaXNhYmxlZH07XG4gICAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICAgIGApO1xuICB9XG5cbiAgcmV0dXJuIHN0eWxlcztcbn07XG5cbmNvbnN0IENhbGVuZGFyRGF5ID0gKHByb3BzOiBUQ2FsZW5kYXJEYXkpID0+IHtcbiAgY29uc3Qge1xuICAgIGlzSGlnaGxpZ2h0ZWQsXG4gICAgaXNTZWxlY3RlZCxcbiAgICBpc1JhbmdlU3RhcnQsXG4gICAgaXNSYW5nZUJldHdlZW4sXG4gICAgaXNSYW5nZUVuZCxcbiAgICBpc1RvZGF5LFxuICAgIC4uLnJlc3RcbiAgfSA9IHByb3BzO1xuICByZXR1cm4gKFxuICAgIDxsaVxuICAgICAgY3NzPXtjc3NgXG4gICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBtYXJnaW46IDJweCAxJTtcbiAgICAgICAgd2lkdGg6IDEyJTtcbiAgICAgIGB9XG4gICAgPlxuICAgICAgPGRpdiBjc3M9e2dldFN0eWxlcyhwcm9wcyl9IHsuLi5yZXN0fSAvPlxuICAgIDwvbGk+XG4gICk7XG59O1xuXG5DYWxlbmRhckRheS5kaXNwbGF5TmFtZSA9ICdDYWxlbmRhckRheSc7XG5cbmV4cG9ydCBkZWZhdWx0IENhbGVuZGFyRGF5O1xuIl19 */"));
  }
  if (props.isSelected) {
    styles.push( /*#__PURE__*/css("background-color:", designTokens.colorPrimary, ";color:", designTokens.colorSurface, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:getStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhbGVuZGFyLWRheS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNENTIiwiZmlsZSI6ImNhbGVuZGFyLWRheS50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZWFjdE5vZGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcblxudHlwZSBUQ2FsZW5kYXJEYXkgPSB7XG4gIGNoaWxkcmVuPzogUmVhY3ROb2RlO1xuICB0eXBlPzogJ2hlYWRpbmcnIHwgJ3NwYWNpbmcnIHwgJ2RheSc7XG4gIGlzSGlnaGxpZ2h0ZWQ/OiBib29sZWFuO1xuICBpc1NlbGVjdGVkPzogYm9vbGVhbjtcbiAgaXNSYW5nZVN0YXJ0PzogYm9vbGVhbjtcbiAgaXNSYW5nZUJldHdlZW4/OiBib29sZWFuO1xuICBpc1JhbmdlRW5kPzogYm9vbGVhbjtcbiAgaXNUb2RheT86IGJvb2xlYW47XG4gIGRpc2FibGVkPzogYm9vbGVhbjtcbn07XG5cbmNvbnN0IGdldFN0eWxlcyA9IChwcm9wczogVENhbGVuZGFyRGF5KSA9PiB7XG4gIGNvbnN0IHN0eWxlcyA9IFtdO1xuXG4gIGlmICghWydoZWFkaW5nJywgJ3NwYWNpbmcnXS5pbmNsdWRlcyhwcm9wcy50eXBlIHx8ICcnKSkge1xuICAgIHN0eWxlcy5wdXNoKGNzc2BcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcyMH0gMDtcbiAgICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICAgIGJvcmRlci1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1czR9O1xuICAgIGApO1xuICB9XG4gIGlmIChbJ2hlYWRpbmcnLCAnc3BhY2luZyddLmluY2x1ZGVzKHByb3BzLnR5cGUgfHwgJycpKSB7XG4gICAgc3R5bGVzLnB1c2goY3NzYFxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgcGFkZGluZzogJHtkZXNpZ25Ub2tlbnMuc3BhY2luZzIwfSAwO1xuICAgICAgY3Vyc29yOiBkZWZhdWx0O1xuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDYwfTtcbiAgICBgKTtcbiAgfVxuICBpZiAocHJvcHMuaXNIaWdobGlnaHRlZCkge1xuICAgIHN0eWxlcy5wdXNoKFxuICAgICAgY3NzYFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw5MH07XG4gICAgICBgXG4gICAgKTtcbiAgfVxuICBpZiAocHJvcHMuaXNTZWxlY3RlZCkge1xuICAgIHN0eWxlcy5wdXNoKFxuICAgICAgY3NzYFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclByaW1hcnl9O1xuICAgICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICAgIGBcbiAgICApO1xuICB9XG4gIGlmIChwcm9wcy5pc1JhbmdlU3RhcnQgfHwgcHJvcHMuaXNSYW5nZUVuZCkge1xuICAgIHN0eWxlcy5wdXNoKFxuICAgICAgY3NzYFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclByaW1hcnk0MH07XG4gICAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICAgICAgYFxuICAgICk7XG4gIH1cbiAgaWYgKHByb3BzLmlzUmFuZ2VCZXR3ZWVuKSB7XG4gICAgc3R5bGVzLnB1c2goXG4gICAgICBjc3NgXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDkwfTtcbiAgICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0fTtcbiAgICAgIGBcbiAgICApO1xuICB9XG4gIGlmIChcbiAgICAhcHJvcHMuaXNTZWxlY3RlZCAmJlxuICAgICFwcm9wcy5pc1JhbmdlU3RhcnQgJiZcbiAgICAhcHJvcHMuaXNSYW5nZUVuZCAmJlxuICAgIHByb3BzLmlzVG9kYXlcbiAgKSB7XG4gICAgc3R5bGVzLnB1c2goY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9ySW5mb307XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBgKTtcbiAgfVxuXG4gIGlmIChwcm9wcy5kaXNhYmxlZCkge1xuICAgIHN0eWxlcy5wdXNoKGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5EaXNhYmxlZH07XG4gICAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICAgIGApO1xuICB9XG5cbiAgcmV0dXJuIHN0eWxlcztcbn07XG5cbmNvbnN0IENhbGVuZGFyRGF5ID0gKHByb3BzOiBUQ2FsZW5kYXJEYXkpID0+IHtcbiAgY29uc3Qge1xuICAgIGlzSGlnaGxpZ2h0ZWQsXG4gICAgaXNTZWxlY3RlZCxcbiAgICBpc1JhbmdlU3RhcnQsXG4gICAgaXNSYW5nZUJldHdlZW4sXG4gICAgaXNSYW5nZUVuZCxcbiAgICBpc1RvZGF5LFxuICAgIC4uLnJlc3RcbiAgfSA9IHByb3BzO1xuICByZXR1cm4gKFxuICAgIDxsaVxuICAgICAgY3NzPXtjc3NgXG4gICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBtYXJnaW46IDJweCAxJTtcbiAgICAgICAgd2lkdGg6IDEyJTtcbiAgICAgIGB9XG4gICAgPlxuICAgICAgPGRpdiBjc3M9e2dldFN0eWxlcyhwcm9wcyl9IHsuLi5yZXN0fSAvPlxuICAgIDwvbGk+XG4gICk7XG59O1xuXG5DYWxlbmRhckRheS5kaXNwbGF5TmFtZSA9ICdDYWxlbmRhckRheSc7XG5cbmV4cG9ydCBkZWZhdWx0IENhbGVuZGFyRGF5O1xuIl19 */"));
  }
  if (props.isRangeStart || props.isRangeEnd) {
    styles.push( /*#__PURE__*/css("background-color:", designTokens.colorPrimary40, ";color:", designTokens.colorSurface, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:getStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhbGVuZGFyLWRheS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0RTIiwiZmlsZSI6ImNhbGVuZGFyLWRheS50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZWFjdE5vZGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcblxudHlwZSBUQ2FsZW5kYXJEYXkgPSB7XG4gIGNoaWxkcmVuPzogUmVhY3ROb2RlO1xuICB0eXBlPzogJ2hlYWRpbmcnIHwgJ3NwYWNpbmcnIHwgJ2RheSc7XG4gIGlzSGlnaGxpZ2h0ZWQ/OiBib29sZWFuO1xuICBpc1NlbGVjdGVkPzogYm9vbGVhbjtcbiAgaXNSYW5nZVN0YXJ0PzogYm9vbGVhbjtcbiAgaXNSYW5nZUJldHdlZW4/OiBib29sZWFuO1xuICBpc1JhbmdlRW5kPzogYm9vbGVhbjtcbiAgaXNUb2RheT86IGJvb2xlYW47XG4gIGRpc2FibGVkPzogYm9vbGVhbjtcbn07XG5cbmNvbnN0IGdldFN0eWxlcyA9IChwcm9wczogVENhbGVuZGFyRGF5KSA9PiB7XG4gIGNvbnN0IHN0eWxlcyA9IFtdO1xuXG4gIGlmICghWydoZWFkaW5nJywgJ3NwYWNpbmcnXS5pbmNsdWRlcyhwcm9wcy50eXBlIHx8ICcnKSkge1xuICAgIHN0eWxlcy5wdXNoKGNzc2BcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcyMH0gMDtcbiAgICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICAgIGJvcmRlci1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1czR9O1xuICAgIGApO1xuICB9XG4gIGlmIChbJ2hlYWRpbmcnLCAnc3BhY2luZyddLmluY2x1ZGVzKHByb3BzLnR5cGUgfHwgJycpKSB7XG4gICAgc3R5bGVzLnB1c2goY3NzYFxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgcGFkZGluZzogJHtkZXNpZ25Ub2tlbnMuc3BhY2luZzIwfSAwO1xuICAgICAgY3Vyc29yOiBkZWZhdWx0O1xuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDYwfTtcbiAgICBgKTtcbiAgfVxuICBpZiAocHJvcHMuaXNIaWdobGlnaHRlZCkge1xuICAgIHN0eWxlcy5wdXNoKFxuICAgICAgY3NzYFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw5MH07XG4gICAgICBgXG4gICAgKTtcbiAgfVxuICBpZiAocHJvcHMuaXNTZWxlY3RlZCkge1xuICAgIHN0eWxlcy5wdXNoKFxuICAgICAgY3NzYFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclByaW1hcnl9O1xuICAgICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICAgIGBcbiAgICApO1xuICB9XG4gIGlmIChwcm9wcy5pc1JhbmdlU3RhcnQgfHwgcHJvcHMuaXNSYW5nZUVuZCkge1xuICAgIHN0eWxlcy5wdXNoKFxuICAgICAgY3NzYFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclByaW1hcnk0MH07XG4gICAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICAgICAgYFxuICAgICk7XG4gIH1cbiAgaWYgKHByb3BzLmlzUmFuZ2VCZXR3ZWVuKSB7XG4gICAgc3R5bGVzLnB1c2goXG4gICAgICBjc3NgXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDkwfTtcbiAgICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0fTtcbiAgICAgIGBcbiAgICApO1xuICB9XG4gIGlmIChcbiAgICAhcHJvcHMuaXNTZWxlY3RlZCAmJlxuICAgICFwcm9wcy5pc1JhbmdlU3RhcnQgJiZcbiAgICAhcHJvcHMuaXNSYW5nZUVuZCAmJlxuICAgIHByb3BzLmlzVG9kYXlcbiAgKSB7XG4gICAgc3R5bGVzLnB1c2goY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9ySW5mb307XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBgKTtcbiAgfVxuXG4gIGlmIChwcm9wcy5kaXNhYmxlZCkge1xuICAgIHN0eWxlcy5wdXNoKGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5EaXNhYmxlZH07XG4gICAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICAgIGApO1xuICB9XG5cbiAgcmV0dXJuIHN0eWxlcztcbn07XG5cbmNvbnN0IENhbGVuZGFyRGF5ID0gKHByb3BzOiBUQ2FsZW5kYXJEYXkpID0+IHtcbiAgY29uc3Qge1xuICAgIGlzSGlnaGxpZ2h0ZWQsXG4gICAgaXNTZWxlY3RlZCxcbiAgICBpc1JhbmdlU3RhcnQsXG4gICAgaXNSYW5nZUJldHdlZW4sXG4gICAgaXNSYW5nZUVuZCxcbiAgICBpc1RvZGF5LFxuICAgIC4uLnJlc3RcbiAgfSA9IHByb3BzO1xuICByZXR1cm4gKFxuICAgIDxsaVxuICAgICAgY3NzPXtjc3NgXG4gICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBtYXJnaW46IDJweCAxJTtcbiAgICAgICAgd2lkdGg6IDEyJTtcbiAgICAgIGB9XG4gICAgPlxuICAgICAgPGRpdiBjc3M9e2dldFN0eWxlcyhwcm9wcyl9IHsuLi5yZXN0fSAvPlxuICAgIDwvbGk+XG4gICk7XG59O1xuXG5DYWxlbmRhckRheS5kaXNwbGF5TmFtZSA9ICdDYWxlbmRhckRheSc7XG5cbmV4cG9ydCBkZWZhdWx0IENhbGVuZGFyRGF5O1xuIl19 */"));
  }
  if (props.isRangeBetween) {
    styles.push( /*#__PURE__*/css("background-color:", designTokens.colorNeutral90, ";color:", designTokens.fontColorForInput, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:getStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhbGVuZGFyLWRheS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNERTIiwiZmlsZSI6ImNhbGVuZGFyLWRheS50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZWFjdE5vZGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcblxudHlwZSBUQ2FsZW5kYXJEYXkgPSB7XG4gIGNoaWxkcmVuPzogUmVhY3ROb2RlO1xuICB0eXBlPzogJ2hlYWRpbmcnIHwgJ3NwYWNpbmcnIHwgJ2RheSc7XG4gIGlzSGlnaGxpZ2h0ZWQ/OiBib29sZWFuO1xuICBpc1NlbGVjdGVkPzogYm9vbGVhbjtcbiAgaXNSYW5nZVN0YXJ0PzogYm9vbGVhbjtcbiAgaXNSYW5nZUJldHdlZW4/OiBib29sZWFuO1xuICBpc1JhbmdlRW5kPzogYm9vbGVhbjtcbiAgaXNUb2RheT86IGJvb2xlYW47XG4gIGRpc2FibGVkPzogYm9vbGVhbjtcbn07XG5cbmNvbnN0IGdldFN0eWxlcyA9IChwcm9wczogVENhbGVuZGFyRGF5KSA9PiB7XG4gIGNvbnN0IHN0eWxlcyA9IFtdO1xuXG4gIGlmICghWydoZWFkaW5nJywgJ3NwYWNpbmcnXS5pbmNsdWRlcyhwcm9wcy50eXBlIHx8ICcnKSkge1xuICAgIHN0eWxlcy5wdXNoKGNzc2BcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcyMH0gMDtcbiAgICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICAgIGJvcmRlci1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1czR9O1xuICAgIGApO1xuICB9XG4gIGlmIChbJ2hlYWRpbmcnLCAnc3BhY2luZyddLmluY2x1ZGVzKHByb3BzLnR5cGUgfHwgJycpKSB7XG4gICAgc3R5bGVzLnB1c2goY3NzYFxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgcGFkZGluZzogJHtkZXNpZ25Ub2tlbnMuc3BhY2luZzIwfSAwO1xuICAgICAgY3Vyc29yOiBkZWZhdWx0O1xuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDYwfTtcbiAgICBgKTtcbiAgfVxuICBpZiAocHJvcHMuaXNIaWdobGlnaHRlZCkge1xuICAgIHN0eWxlcy5wdXNoKFxuICAgICAgY3NzYFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw5MH07XG4gICAgICBgXG4gICAgKTtcbiAgfVxuICBpZiAocHJvcHMuaXNTZWxlY3RlZCkge1xuICAgIHN0eWxlcy5wdXNoKFxuICAgICAgY3NzYFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclByaW1hcnl9O1xuICAgICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICAgIGBcbiAgICApO1xuICB9XG4gIGlmIChwcm9wcy5pc1JhbmdlU3RhcnQgfHwgcHJvcHMuaXNSYW5nZUVuZCkge1xuICAgIHN0eWxlcy5wdXNoKFxuICAgICAgY3NzYFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclByaW1hcnk0MH07XG4gICAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICAgICAgYFxuICAgICk7XG4gIH1cbiAgaWYgKHByb3BzLmlzUmFuZ2VCZXR3ZWVuKSB7XG4gICAgc3R5bGVzLnB1c2goXG4gICAgICBjc3NgXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDkwfTtcbiAgICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0fTtcbiAgICAgIGBcbiAgICApO1xuICB9XG4gIGlmIChcbiAgICAhcHJvcHMuaXNTZWxlY3RlZCAmJlxuICAgICFwcm9wcy5pc1JhbmdlU3RhcnQgJiZcbiAgICAhcHJvcHMuaXNSYW5nZUVuZCAmJlxuICAgIHByb3BzLmlzVG9kYXlcbiAgKSB7XG4gICAgc3R5bGVzLnB1c2goY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9ySW5mb307XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBgKTtcbiAgfVxuXG4gIGlmIChwcm9wcy5kaXNhYmxlZCkge1xuICAgIHN0eWxlcy5wdXNoKGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5EaXNhYmxlZH07XG4gICAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICAgIGApO1xuICB9XG5cbiAgcmV0dXJuIHN0eWxlcztcbn07XG5cbmNvbnN0IENhbGVuZGFyRGF5ID0gKHByb3BzOiBUQ2FsZW5kYXJEYXkpID0+IHtcbiAgY29uc3Qge1xuICAgIGlzSGlnaGxpZ2h0ZWQsXG4gICAgaXNTZWxlY3RlZCxcbiAgICBpc1JhbmdlU3RhcnQsXG4gICAgaXNSYW5nZUJldHdlZW4sXG4gICAgaXNSYW5nZUVuZCxcbiAgICBpc1RvZGF5LFxuICAgIC4uLnJlc3RcbiAgfSA9IHByb3BzO1xuICByZXR1cm4gKFxuICAgIDxsaVxuICAgICAgY3NzPXtjc3NgXG4gICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBtYXJnaW46IDJweCAxJTtcbiAgICAgICAgd2lkdGg6IDEyJTtcbiAgICAgIGB9XG4gICAgPlxuICAgICAgPGRpdiBjc3M9e2dldFN0eWxlcyhwcm9wcyl9IHsuLi5yZXN0fSAvPlxuICAgIDwvbGk+XG4gICk7XG59O1xuXG5DYWxlbmRhckRheS5kaXNwbGF5TmFtZSA9ICdDYWxlbmRhckRheSc7XG5cbmV4cG9ydCBkZWZhdWx0IENhbGVuZGFyRGF5O1xuIl19 */"));
  }
  if (!props.isSelected && !props.isRangeStart && !props.isRangeEnd && props.isToday) {
    styles.push( /*#__PURE__*/css("color:", designTokens.colorInfo, ";font-weight:bold;" + (process.env.NODE_ENV === "production" ? "" : ";label:getStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhbGVuZGFyLWRheS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0VtQiIsImZpbGUiOiJjYWxlbmRhci1kYXkudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVhY3ROb2RlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5cbnR5cGUgVENhbGVuZGFyRGF5ID0ge1xuICBjaGlsZHJlbj86IFJlYWN0Tm9kZTtcbiAgdHlwZT86ICdoZWFkaW5nJyB8ICdzcGFjaW5nJyB8ICdkYXknO1xuICBpc0hpZ2hsaWdodGVkPzogYm9vbGVhbjtcbiAgaXNTZWxlY3RlZD86IGJvb2xlYW47XG4gIGlzUmFuZ2VTdGFydD86IGJvb2xlYW47XG4gIGlzUmFuZ2VCZXR3ZWVuPzogYm9vbGVhbjtcbiAgaXNSYW5nZUVuZD86IGJvb2xlYW47XG4gIGlzVG9kYXk/OiBib29sZWFuO1xuICBkaXNhYmxlZD86IGJvb2xlYW47XG59O1xuXG5jb25zdCBnZXRTdHlsZXMgPSAocHJvcHM6IFRDYWxlbmRhckRheSkgPT4ge1xuICBjb25zdCBzdHlsZXMgPSBbXTtcblxuICBpZiAoIVsnaGVhZGluZycsICdzcGFjaW5nJ10uaW5jbHVkZXMocHJvcHMudHlwZSB8fCAnJykpIHtcbiAgICBzdHlsZXMucHVzaChjc3NgXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5zcGFjaW5nMjB9IDA7XG4gICAgICBjdXJzb3I6IGRlZmF1bHQ7XG4gICAgICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXM0fTtcbiAgICBgKTtcbiAgfVxuICBpZiAoWydoZWFkaW5nJywgJ3NwYWNpbmcnXS5pbmNsdWRlcyhwcm9wcy50eXBlIHx8ICcnKSkge1xuICAgIHN0eWxlcy5wdXNoKGNzc2BcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcyMH0gMDtcbiAgICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw2MH07XG4gICAgYCk7XG4gIH1cbiAgaWYgKHByb3BzLmlzSGlnaGxpZ2h0ZWQpIHtcbiAgICBzdHlsZXMucHVzaChcbiAgICAgIGNzc2BcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsOTB9O1xuICAgICAgYFxuICAgICk7XG4gIH1cbiAgaWYgKHByb3BzLmlzU2VsZWN0ZWQpIHtcbiAgICBzdHlsZXMucHVzaChcbiAgICAgIGNzc2BcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JQcmltYXJ5fTtcbiAgICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG4gICAgICBgXG4gICAgKTtcbiAgfVxuICBpZiAocHJvcHMuaXNSYW5nZVN0YXJ0IHx8IHByb3BzLmlzUmFuZ2VFbmQpIHtcbiAgICBzdHlsZXMucHVzaChcbiAgICAgIGNzc2BcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JQcmltYXJ5NDB9O1xuICAgICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICAgIGBcbiAgICApO1xuICB9XG4gIGlmIChwcm9wcy5pc1JhbmdlQmV0d2Vlbikge1xuICAgIHN0eWxlcy5wdXNoKFxuICAgICAgY3NzYFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw5MH07XG4gICAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dH07XG4gICAgICBgXG4gICAgKTtcbiAgfVxuICBpZiAoXG4gICAgIXByb3BzLmlzU2VsZWN0ZWQgJiZcbiAgICAhcHJvcHMuaXNSYW5nZVN0YXJ0ICYmXG4gICAgIXByb3BzLmlzUmFuZ2VFbmQgJiZcbiAgICBwcm9wcy5pc1RvZGF5XG4gICkge1xuICAgIHN0eWxlcy5wdXNoKGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvckluZm99O1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgYCk7XG4gIH1cblxuICBpZiAocHJvcHMuZGlzYWJsZWQpIHtcbiAgICBzdHlsZXMucHVzaChjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWR9O1xuICAgICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbiAgICBgKTtcbiAgfVxuXG4gIHJldHVybiBzdHlsZXM7XG59O1xuXG5jb25zdCBDYWxlbmRhckRheSA9IChwcm9wczogVENhbGVuZGFyRGF5KSA9PiB7XG4gIGNvbnN0IHtcbiAgICBpc0hpZ2hsaWdodGVkLFxuICAgIGlzU2VsZWN0ZWQsXG4gICAgaXNSYW5nZVN0YXJ0LFxuICAgIGlzUmFuZ2VCZXR3ZWVuLFxuICAgIGlzUmFuZ2VFbmQsXG4gICAgaXNUb2RheSxcbiAgICAuLi5yZXN0XG4gIH0gPSBwcm9wcztcbiAgcmV0dXJuIChcbiAgICA8bGlcbiAgICAgIGNzcz17Y3NzYFxuICAgICAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgbWFyZ2luOiAycHggMSU7XG4gICAgICAgIHdpZHRoOiAxMiU7XG4gICAgICBgfVxuICAgID5cbiAgICAgIDxkaXYgY3NzPXtnZXRTdHlsZXMocHJvcHMpfSB7Li4ucmVzdH0gLz5cbiAgICA8L2xpPlxuICApO1xufTtcblxuQ2FsZW5kYXJEYXkuZGlzcGxheU5hbWUgPSAnQ2FsZW5kYXJEYXknO1xuXG5leHBvcnQgZGVmYXVsdCBDYWxlbmRhckRheTtcbiJdfQ== */"));
  }
  if (props.disabled) {
    styles.push( /*#__PURE__*/css("color:", designTokens.fontColorForInputWhenDisabled, ";cursor:not-allowed;" + (process.env.NODE_ENV === "production" ? "" : ";label:getStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhbGVuZGFyLWRheS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBK0VtQiIsImZpbGUiOiJjYWxlbmRhci1kYXkudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVhY3ROb2RlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5cbnR5cGUgVENhbGVuZGFyRGF5ID0ge1xuICBjaGlsZHJlbj86IFJlYWN0Tm9kZTtcbiAgdHlwZT86ICdoZWFkaW5nJyB8ICdzcGFjaW5nJyB8ICdkYXknO1xuICBpc0hpZ2hsaWdodGVkPzogYm9vbGVhbjtcbiAgaXNTZWxlY3RlZD86IGJvb2xlYW47XG4gIGlzUmFuZ2VTdGFydD86IGJvb2xlYW47XG4gIGlzUmFuZ2VCZXR3ZWVuPzogYm9vbGVhbjtcbiAgaXNSYW5nZUVuZD86IGJvb2xlYW47XG4gIGlzVG9kYXk/OiBib29sZWFuO1xuICBkaXNhYmxlZD86IGJvb2xlYW47XG59O1xuXG5jb25zdCBnZXRTdHlsZXMgPSAocHJvcHM6IFRDYWxlbmRhckRheSkgPT4ge1xuICBjb25zdCBzdHlsZXMgPSBbXTtcblxuICBpZiAoIVsnaGVhZGluZycsICdzcGFjaW5nJ10uaW5jbHVkZXMocHJvcHMudHlwZSB8fCAnJykpIHtcbiAgICBzdHlsZXMucHVzaChjc3NgXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5zcGFjaW5nMjB9IDA7XG4gICAgICBjdXJzb3I6IGRlZmF1bHQ7XG4gICAgICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXM0fTtcbiAgICBgKTtcbiAgfVxuICBpZiAoWydoZWFkaW5nJywgJ3NwYWNpbmcnXS5pbmNsdWRlcyhwcm9wcy50eXBlIHx8ICcnKSkge1xuICAgIHN0eWxlcy5wdXNoKGNzc2BcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcyMH0gMDtcbiAgICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw2MH07XG4gICAgYCk7XG4gIH1cbiAgaWYgKHByb3BzLmlzSGlnaGxpZ2h0ZWQpIHtcbiAgICBzdHlsZXMucHVzaChcbiAgICAgIGNzc2BcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsOTB9O1xuICAgICAgYFxuICAgICk7XG4gIH1cbiAgaWYgKHByb3BzLmlzU2VsZWN0ZWQpIHtcbiAgICBzdHlsZXMucHVzaChcbiAgICAgIGNzc2BcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JQcmltYXJ5fTtcbiAgICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG4gICAgICBgXG4gICAgKTtcbiAgfVxuICBpZiAocHJvcHMuaXNSYW5nZVN0YXJ0IHx8IHByb3BzLmlzUmFuZ2VFbmQpIHtcbiAgICBzdHlsZXMucHVzaChcbiAgICAgIGNzc2BcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JQcmltYXJ5NDB9O1xuICAgICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICAgIGBcbiAgICApO1xuICB9XG4gIGlmIChwcm9wcy5pc1JhbmdlQmV0d2Vlbikge1xuICAgIHN0eWxlcy5wdXNoKFxuICAgICAgY3NzYFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw5MH07XG4gICAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dH07XG4gICAgICBgXG4gICAgKTtcbiAgfVxuICBpZiAoXG4gICAgIXByb3BzLmlzU2VsZWN0ZWQgJiZcbiAgICAhcHJvcHMuaXNSYW5nZVN0YXJ0ICYmXG4gICAgIXByb3BzLmlzUmFuZ2VFbmQgJiZcbiAgICBwcm9wcy5pc1RvZGF5XG4gICkge1xuICAgIHN0eWxlcy5wdXNoKGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvckluZm99O1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgYCk7XG4gIH1cblxuICBpZiAocHJvcHMuZGlzYWJsZWQpIHtcbiAgICBzdHlsZXMucHVzaChjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWR9O1xuICAgICAgY3Vyc29yOiBub3QtYWxsb3dlZDtcbiAgICBgKTtcbiAgfVxuXG4gIHJldHVybiBzdHlsZXM7XG59O1xuXG5jb25zdCBDYWxlbmRhckRheSA9IChwcm9wczogVENhbGVuZGFyRGF5KSA9PiB7XG4gIGNvbnN0IHtcbiAgICBpc0hpZ2hsaWdodGVkLFxuICAgIGlzU2VsZWN0ZWQsXG4gICAgaXNSYW5nZVN0YXJ0LFxuICAgIGlzUmFuZ2VCZXR3ZWVuLFxuICAgIGlzUmFuZ2VFbmQsXG4gICAgaXNUb2RheSxcbiAgICAuLi5yZXN0XG4gIH0gPSBwcm9wcztcbiAgcmV0dXJuIChcbiAgICA8bGlcbiAgICAgIGNzcz17Y3NzYFxuICAgICAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgbWFyZ2luOiAycHggMSU7XG4gICAgICAgIHdpZHRoOiAxMiU7XG4gICAgICBgfVxuICAgID5cbiAgICAgIDxkaXYgY3NzPXtnZXRTdHlsZXMocHJvcHMpfSB7Li4ucmVzdH0gLz5cbiAgICA8L2xpPlxuICApO1xufTtcblxuQ2FsZW5kYXJEYXkuZGlzcGxheU5hbWUgPSAnQ2FsZW5kYXJEYXknO1xuXG5leHBvcnQgZGVmYXVsdCBDYWxlbmRhckRheTtcbiJdfQ== */"));
  }
  return styles;
};
var _ref$1 = process.env.NODE_ENV === "production" ? {
  name: "9xt9sg",
  styles: "list-style-type:none;display:inline-block;margin:2px 1%;width:12%"
} : {
  name: "fgho4u-CalendarDay",
  styles: "list-style-type:none;display:inline-block;margin:2px 1%;width:12%;label:CalendarDay;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhbGVuZGFyLWRheS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0djIiwiZmlsZSI6ImNhbGVuZGFyLWRheS50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZWFjdE5vZGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcblxudHlwZSBUQ2FsZW5kYXJEYXkgPSB7XG4gIGNoaWxkcmVuPzogUmVhY3ROb2RlO1xuICB0eXBlPzogJ2hlYWRpbmcnIHwgJ3NwYWNpbmcnIHwgJ2RheSc7XG4gIGlzSGlnaGxpZ2h0ZWQ/OiBib29sZWFuO1xuICBpc1NlbGVjdGVkPzogYm9vbGVhbjtcbiAgaXNSYW5nZVN0YXJ0PzogYm9vbGVhbjtcbiAgaXNSYW5nZUJldHdlZW4/OiBib29sZWFuO1xuICBpc1JhbmdlRW5kPzogYm9vbGVhbjtcbiAgaXNUb2RheT86IGJvb2xlYW47XG4gIGRpc2FibGVkPzogYm9vbGVhbjtcbn07XG5cbmNvbnN0IGdldFN0eWxlcyA9IChwcm9wczogVENhbGVuZGFyRGF5KSA9PiB7XG4gIGNvbnN0IHN0eWxlcyA9IFtdO1xuXG4gIGlmICghWydoZWFkaW5nJywgJ3NwYWNpbmcnXS5pbmNsdWRlcyhwcm9wcy50eXBlIHx8ICcnKSkge1xuICAgIHN0eWxlcy5wdXNoKGNzc2BcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcyMH0gMDtcbiAgICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICAgIGJvcmRlci1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1czR9O1xuICAgIGApO1xuICB9XG4gIGlmIChbJ2hlYWRpbmcnLCAnc3BhY2luZyddLmluY2x1ZGVzKHByb3BzLnR5cGUgfHwgJycpKSB7XG4gICAgc3R5bGVzLnB1c2goY3NzYFxuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgcGFkZGluZzogJHtkZXNpZ25Ub2tlbnMuc3BhY2luZzIwfSAwO1xuICAgICAgY3Vyc29yOiBkZWZhdWx0O1xuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDYwfTtcbiAgICBgKTtcbiAgfVxuICBpZiAocHJvcHMuaXNIaWdobGlnaHRlZCkge1xuICAgIHN0eWxlcy5wdXNoKFxuICAgICAgY3NzYFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw5MH07XG4gICAgICBgXG4gICAgKTtcbiAgfVxuICBpZiAocHJvcHMuaXNTZWxlY3RlZCkge1xuICAgIHN0eWxlcy5wdXNoKFxuICAgICAgY3NzYFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclByaW1hcnl9O1xuICAgICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICAgIGBcbiAgICApO1xuICB9XG4gIGlmIChwcm9wcy5pc1JhbmdlU3RhcnQgfHwgcHJvcHMuaXNSYW5nZUVuZCkge1xuICAgIHN0eWxlcy5wdXNoKFxuICAgICAgY3NzYFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclByaW1hcnk0MH07XG4gICAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICAgICAgYFxuICAgICk7XG4gIH1cbiAgaWYgKHByb3BzLmlzUmFuZ2VCZXR3ZWVuKSB7XG4gICAgc3R5bGVzLnB1c2goXG4gICAgICBjc3NgXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDkwfTtcbiAgICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0fTtcbiAgICAgIGBcbiAgICApO1xuICB9XG4gIGlmIChcbiAgICAhcHJvcHMuaXNTZWxlY3RlZCAmJlxuICAgICFwcm9wcy5pc1JhbmdlU3RhcnQgJiZcbiAgICAhcHJvcHMuaXNSYW5nZUVuZCAmJlxuICAgIHByb3BzLmlzVG9kYXlcbiAgKSB7XG4gICAgc3R5bGVzLnB1c2goY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9ySW5mb307XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBgKTtcbiAgfVxuXG4gIGlmIChwcm9wcy5kaXNhYmxlZCkge1xuICAgIHN0eWxlcy5wdXNoKGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5EaXNhYmxlZH07XG4gICAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICAgIGApO1xuICB9XG5cbiAgcmV0dXJuIHN0eWxlcztcbn07XG5cbmNvbnN0IENhbGVuZGFyRGF5ID0gKHByb3BzOiBUQ2FsZW5kYXJEYXkpID0+IHtcbiAgY29uc3Qge1xuICAgIGlzSGlnaGxpZ2h0ZWQsXG4gICAgaXNTZWxlY3RlZCxcbiAgICBpc1JhbmdlU3RhcnQsXG4gICAgaXNSYW5nZUJldHdlZW4sXG4gICAgaXNSYW5nZUVuZCxcbiAgICBpc1RvZGF5LFxuICAgIC4uLnJlc3RcbiAgfSA9IHByb3BzO1xuICByZXR1cm4gKFxuICAgIDxsaVxuICAgICAgY3NzPXtjc3NgXG4gICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBtYXJnaW46IDJweCAxJTtcbiAgICAgICAgd2lkdGg6IDEyJTtcbiAgICAgIGB9XG4gICAgPlxuICAgICAgPGRpdiBjc3M9e2dldFN0eWxlcyhwcm9wcyl9IHsuLi5yZXN0fSAvPlxuICAgIDwvbGk+XG4gICk7XG59O1xuXG5DYWxlbmRhckRheS5kaXNwbGF5TmFtZSA9ICdDYWxlbmRhckRheSc7XG5cbmV4cG9ydCBkZWZhdWx0IENhbGVuZGFyRGF5O1xuIl19 */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__$2
};
const CalendarDay = props => {
  props.isHighlighted;
    props.isSelected;
    props.isRangeStart;
    props.isRangeBetween;
    props.isRangeEnd;
    props.isToday;
    const rest = _objectWithoutProperties(props, _excluded$1);
  return jsx("li", {
    css: _ref$1,
    children: jsx("div", _objectSpread$1({
      css: getStyles(props)
    }, rest))
  });
};
CalendarDay.propTypes = process.env.NODE_ENV !== "production" ? {
  children: _pt.node,
  type: _pt.oneOf(['heading', 'spacing', 'day']),
  isHighlighted: _pt.bool,
  isSelected: _pt.bool,
  isRangeStart: _pt.bool,
  isRangeBetween: _pt.bool,
  isRangeEnd: _pt.bool,
  isToday: _pt.bool,
  disabled: _pt.bool
} : {};
CalendarDay.displayName = 'CalendarDay';
var CalendarDay$1 = CalendarDay;

var messages = defineMessages({
  todayTooltip: {
    id: 'UIKit.CalendarHeader.todayTooltip',
    description: 'Tooltip title when user hovers the today button',
    defaultMessage: 'Today'
  },
  previousMonthTooltip: {
    id: 'UIKit.CalendarHeader.previousMonthTooltip',
    description: 'Tooltip title when user hovers the previous month button',
    defaultMessage: 'Previous month'
  },
  nextMonthTooltip: {
    id: 'UIKit.CalendarHeader.nextMonthTooltip',
    description: 'Tooltip title when user hovers the next month button',
    defaultMessage: 'Next month'
  },
  previousYearTooltip: {
    id: 'UIKit.CalendarHeader.previousYearTooltip',
    description: 'Tooltip title when user hovers the previous year button',
    defaultMessage: 'Previous year'
  },
  nextYearTooltip: {
    id: 'UIKit.CalendarHeader.nextYearTooltip',
    description: 'Tooltip title when user hovers the next year button',
    defaultMessage: 'Next year'
  }
});

function _EMOTION_STRINGIFIED_CSS_ERROR__$1() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }
const WrapperComponent = /*#__PURE__*/_styled("div", process.env.NODE_ENV === "production" ? {
  target: "e1q1nv850"
} : {
  target: "e1q1nv850",
  label: "WrapperComponent"
})(process.env.NODE_ENV === "production" ? {
  name: "zjik7",
  styles: "display:flex"
} : {
  name: "zjik7",
  styles: "display:flex",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhbGVuZGFyLWhlYWRlci50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZ0JtQyIsImZpbGUiOiJjYWxlbmRhci1oZWFkZXIudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyB1c2VJbnRsIH0gZnJvbSAncmVhY3QtaW50bCc7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcbmltcG9ydCBTZWNvbmRhcnlJY29uQnV0dG9uIGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L3NlY29uZGFyeS1pY29uLWJ1dHRvbic7XG5pbXBvcnQge1xuICBBbmdsZUxlZnRJY29uLFxuICBBbmdsZVJpZ2h0SWNvbixcbiAgQ2lyY2xlSWNvbixcbn0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvaWNvbnMnO1xuaW1wb3J0IFRleHQgZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvdGV4dCc7XG5pbXBvcnQgSW5saW5lIGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L3NwYWNpbmdzLWlubGluZSc7XG5pbXBvcnQgVG9vbHRpcCBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC90b29sdGlwJztcbmltcG9ydCBtZXNzYWdlcyBmcm9tICcuL21lc3NhZ2VzJztcblxuY29uc3QgV3JhcHBlckNvbXBvbmVudCA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG5gO1xuXG50eXBlIFRDYWxlbmRhckhlYWRlciA9IHtcbiAgbW9udGhMYWJlbDogc3RyaW5nO1xuICB5ZWFyTGFiZWw6IHN0cmluZztcbiAgb25QcmV2TW9udGhDbGljazogKCkgPT4gdm9pZDtcbiAgb25Ub2RheUNsaWNrOiAoKSA9PiB2b2lkO1xuICBvbk5leHRNb250aENsaWNrOiAoKSA9PiB2b2lkO1xuICBvblByZXZZZWFyQ2xpY2s6ICgpID0+IHZvaWQ7XG4gIG9uTmV4dFllYXJDbGljazogKCkgPT4gdm9pZDtcbn07XG5cbmNvbnN0IENhbGVuZGFySGVhZGVyID0gKHByb3BzOiBUQ2FsZW5kYXJIZWFkZXIpID0+IHtcbiAgY29uc3QgaW50bCA9IHVzZUludGwoKTtcbiAgLy8gaHR0cHM6Ly9jb2RlcGVuLmlvL211ZGFzc2lyMDkwOS9wZW4vZUlIcUJcblxuICAvLyB3ZSBwcmV2ZW50IGFsbCBvdXIgZGVmaW5lZCBvbkNsaWNrcyBpbnNpZGUgb2YgdGhlIENhbGVuZGFySGVhZGVyXG4gIC8vIGZyb20gYmx1cnJpbmcgb3VyIGlucHV0LlxuICBjb25zdCBvbk1vdXNlRG93biA9IHVzZUNhbGxiYWNrKChldmVudCkgPT4ge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gIH0sIFtdKTtcbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBvbk1vdXNlRG93bj17b25Nb3VzZURvd259XG4gICAgICBjc3M9e2Nzc2BcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgcGFkZGluZzogMTBweCAyJSA2cHg7XG4gICAgICAgIG1hcmdpbi1ib3R0b206ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcxMH07XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDkwfTtcbiAgICAgIGB9XG4gICAgPlxuICAgICAgPElubGluZSBzY2FsZT1cInhzXCIgYWxpZ25JdGVtcz1cImNlbnRlclwiPlxuICAgICAgICA8VG9vbHRpcFxuICAgICAgICAgIHRpdGxlPXtpbnRsLmZvcm1hdE1lc3NhZ2UobWVzc2FnZXMucHJldmlvdXNNb250aFRvb2x0aXApfVxuICAgICAgICAgIGNvbXBvbmVudHM9e3sgV3JhcHBlckNvbXBvbmVudCB9fVxuICAgICAgICA+XG4gICAgICAgICAgPFNlY29uZGFyeUljb25CdXR0b25cbiAgICAgICAgICAgIGxhYmVsPVwic2hvdyBwcmV2IG1vbnRoXCJcbiAgICAgICAgICAgIG9uQ2xpY2s9e3Byb3BzLm9uUHJldk1vbnRoQ2xpY2t9XG4gICAgICAgICAgICBpY29uPXs8QW5nbGVMZWZ0SWNvbiAvPn1cbiAgICAgICAgICAgIHNpemU9XCJtZWRpdW1cIlxuICAgICAgICAgIC8+XG4gICAgICAgIDwvVG9vbHRpcD5cbiAgICAgICAgPFRvb2x0aXBcbiAgICAgICAgICB0aXRsZT17aW50bC5mb3JtYXRNZXNzYWdlKG1lc3NhZ2VzLnRvZGF5VG9vbHRpcCl9XG4gICAgICAgICAgY29tcG9uZW50cz17eyBXcmFwcGVyQ29tcG9uZW50IH19XG4gICAgICAgID5cbiAgICAgICAgICA8U2Vjb25kYXJ5SWNvbkJ1dHRvblxuICAgICAgICAgICAgbGFiZWw9XCJzaG93IHRvZGF5XCJcbiAgICAgICAgICAgIG9uQ2xpY2s9e3Byb3BzLm9uVG9kYXlDbGlja31cbiAgICAgICAgICAgIGljb249ezxDaXJjbGVJY29uIC8+fVxuICAgICAgICAgICAgc2l6ZT1cIm1lZGl1bVwiXG4gICAgICAgICAgLz5cbiAgICAgICAgPC9Ub29sdGlwPlxuICAgICAgICA8VG9vbHRpcFxuICAgICAgICAgIHRpdGxlPXtpbnRsLmZvcm1hdE1lc3NhZ2UobWVzc2FnZXMubmV4dE1vbnRoVG9vbHRpcCl9XG4gICAgICAgICAgY29tcG9uZW50cz17eyBXcmFwcGVyQ29tcG9uZW50IH19XG4gICAgICAgID5cbiAgICAgICAgICA8U2Vjb25kYXJ5SWNvbkJ1dHRvblxuICAgICAgICAgICAgbGFiZWw9XCJzaG93IG5leHQgbW9udGhcIlxuICAgICAgICAgICAgb25DbGljaz17cHJvcHMub25OZXh0TW9udGhDbGlja31cbiAgICAgICAgICAgIGljb249ezxBbmdsZVJpZ2h0SWNvbiAvPn1cbiAgICAgICAgICAgIHNpemU9XCJtZWRpdW1cIlxuICAgICAgICAgIC8+XG4gICAgICAgIDwvVG9vbHRpcD5cbiAgICAgICAgPFRleHQuQm9keSBhcz1cInNwYW5cIiBmb250V2VpZ2h0PVwiYm9sZFwiPlxuICAgICAgICAgIHtwcm9wcy5tb250aExhYmVsfVxuICAgICAgICA8L1RleHQuQm9keT5cbiAgICAgIDwvSW5saW5lPlxuICAgICAgPElubGluZSBzY2FsZT1cInhzXCIgYWxpZ25JdGVtcz1cImNlbnRlclwiPlxuICAgICAgICA8VG9vbHRpcFxuICAgICAgICAgIHRpdGxlPXtpbnRsLmZvcm1hdE1lc3NhZ2UobWVzc2FnZXMucHJldmlvdXNZZWFyVG9vbHRpcCl9XG4gICAgICAgICAgY29tcG9uZW50cz17eyBXcmFwcGVyQ29tcG9uZW50IH19XG4gICAgICAgID5cbiAgICAgICAgICA8U2Vjb25kYXJ5SWNvbkJ1dHRvblxuICAgICAgICAgICAgbGFiZWw9XCJzaG93IHByZXYgeWVhclwiXG4gICAgICAgICAgICBvbkNsaWNrPXtwcm9wcy5vblByZXZZZWFyQ2xpY2t9XG4gICAgICAgICAgICBpY29uPXs8QW5nbGVMZWZ0SWNvbiAvPn1cbiAgICAgICAgICAgIHNpemU9XCJtZWRpdW1cIlxuICAgICAgICAgIC8+XG4gICAgICAgIDwvVG9vbHRpcD5cbiAgICAgICAgPFRleHQuQm9keSBmb250V2VpZ2h0PVwiYm9sZFwiPntwcm9wcy55ZWFyTGFiZWx9PC9UZXh0LkJvZHk+XG4gICAgICAgIDxUb29sdGlwXG4gICAgICAgICAgdGl0bGU9e2ludGwuZm9ybWF0TWVzc2FnZShtZXNzYWdlcy5uZXh0WWVhclRvb2x0aXApfVxuICAgICAgICAgIGNvbXBvbmVudHM9e3sgV3JhcHBlckNvbXBvbmVudCB9fVxuICAgICAgICA+XG4gICAgICAgICAgPFNlY29uZGFyeUljb25CdXR0b25cbiAgICAgICAgICAgIGxhYmVsPVwic2hvdyBuZXh0IHllYXJcIlxuICAgICAgICAgICAgb25DbGljaz17cHJvcHMub25OZXh0WWVhckNsaWNrfVxuICAgICAgICAgICAgaWNvbj17PEFuZ2xlUmlnaHRJY29uIC8+fVxuICAgICAgICAgICAgc2l6ZT1cIm1lZGl1bVwiXG4gICAgICAgICAgLz5cbiAgICAgICAgPC9Ub29sdGlwPlxuICAgICAgPC9JbmxpbmU+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5DYWxlbmRhckhlYWRlci5kaXNwbGF5TmFtZSA9ICdDYWxlbmRhckhlYWRlcic7XG5cbmV4cG9ydCBkZWZhdWx0IENhbGVuZGFySGVhZGVyO1xuIl19 */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__$1
});
const CalendarHeader = props => {
  const intl = useIntl();
  // https://codepen.io/mudassir0909/pen/eIHqB

  // we prevent all our defined onClicks inside of the CalendarHeader
  // from blurring our input.
  const onMouseDown = useCallback(event => {
    event.preventDefault();
  }, []);
  return jsxs("div", {
    onMouseDown: onMouseDown,
    css: /*#__PURE__*/css("display:flex;padding:10px 2% 6px;margin-bottom:", designTokens.spacing10, ";justify-content:space-between;border-bottom:1px solid ", designTokens.colorNeutral90, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:CalendarHeader;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhbGVuZGFyLWhlYWRlci50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMENjIiwiZmlsZSI6ImNhbGVuZGFyLWhlYWRlci50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IHVzZUludGwgfSBmcm9tICdyZWFjdC1pbnRsJztcbmltcG9ydCB7IGRlc2lnblRva2VucyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuaW1wb3J0IFNlY29uZGFyeUljb25CdXR0b24gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvc2Vjb25kYXJ5LWljb24tYnV0dG9uJztcbmltcG9ydCB7XG4gIEFuZ2xlTGVmdEljb24sXG4gIEFuZ2xlUmlnaHRJY29uLFxuICBDaXJjbGVJY29uLFxufSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9pY29ucyc7XG5pbXBvcnQgVGV4dCBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC90ZXh0JztcbmltcG9ydCBJbmxpbmUgZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvc3BhY2luZ3MtaW5saW5lJztcbmltcG9ydCBUb29sdGlwIGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L3Rvb2x0aXAnO1xuaW1wb3J0IG1lc3NhZ2VzIGZyb20gJy4vbWVzc2FnZXMnO1xuXG5jb25zdCBXcmFwcGVyQ29tcG9uZW50ID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZmxleDtcbmA7XG5cbnR5cGUgVENhbGVuZGFySGVhZGVyID0ge1xuICBtb250aExhYmVsOiBzdHJpbmc7XG4gIHllYXJMYWJlbDogc3RyaW5nO1xuICBvblByZXZNb250aENsaWNrOiAoKSA9PiB2b2lkO1xuICBvblRvZGF5Q2xpY2s6ICgpID0+IHZvaWQ7XG4gIG9uTmV4dE1vbnRoQ2xpY2s6ICgpID0+IHZvaWQ7XG4gIG9uUHJldlllYXJDbGljazogKCkgPT4gdm9pZDtcbiAgb25OZXh0WWVhckNsaWNrOiAoKSA9PiB2b2lkO1xufTtcblxuY29uc3QgQ2FsZW5kYXJIZWFkZXIgPSAocHJvcHM6IFRDYWxlbmRhckhlYWRlcikgPT4ge1xuICBjb25zdCBpbnRsID0gdXNlSW50bCgpO1xuICAvLyBodHRwczovL2NvZGVwZW4uaW8vbXVkYXNzaXIwOTA5L3Blbi9lSUhxQlxuXG4gIC8vIHdlIHByZXZlbnQgYWxsIG91ciBkZWZpbmVkIG9uQ2xpY2tzIGluc2lkZSBvZiB0aGUgQ2FsZW5kYXJIZWFkZXJcbiAgLy8gZnJvbSBibHVycmluZyBvdXIgaW5wdXQuXG4gIGNvbnN0IG9uTW91c2VEb3duID0gdXNlQ2FsbGJhY2soKGV2ZW50KSA9PiB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgfSwgW10pO1xuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIG9uTW91c2VEb3duPXtvbk1vdXNlRG93bn1cbiAgICAgIGNzcz17Y3NzYFxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBwYWRkaW5nOiAxMHB4IDIlIDZweDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogJHtkZXNpZ25Ub2tlbnMuc3BhY2luZzEwfTtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJHtkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsOTB9O1xuICAgICAgYH1cbiAgICA+XG4gICAgICA8SW5saW5lIHNjYWxlPVwieHNcIiBhbGlnbkl0ZW1zPVwiY2VudGVyXCI+XG4gICAgICAgIDxUb29sdGlwXG4gICAgICAgICAgdGl0bGU9e2ludGwuZm9ybWF0TWVzc2FnZShtZXNzYWdlcy5wcmV2aW91c01vbnRoVG9vbHRpcCl9XG4gICAgICAgICAgY29tcG9uZW50cz17eyBXcmFwcGVyQ29tcG9uZW50IH19XG4gICAgICAgID5cbiAgICAgICAgICA8U2Vjb25kYXJ5SWNvbkJ1dHRvblxuICAgICAgICAgICAgbGFiZWw9XCJzaG93IHByZXYgbW9udGhcIlxuICAgICAgICAgICAgb25DbGljaz17cHJvcHMub25QcmV2TW9udGhDbGlja31cbiAgICAgICAgICAgIGljb249ezxBbmdsZUxlZnRJY29uIC8+fVxuICAgICAgICAgICAgc2l6ZT1cIm1lZGl1bVwiXG4gICAgICAgICAgLz5cbiAgICAgICAgPC9Ub29sdGlwPlxuICAgICAgICA8VG9vbHRpcFxuICAgICAgICAgIHRpdGxlPXtpbnRsLmZvcm1hdE1lc3NhZ2UobWVzc2FnZXMudG9kYXlUb29sdGlwKX1cbiAgICAgICAgICBjb21wb25lbnRzPXt7IFdyYXBwZXJDb21wb25lbnQgfX1cbiAgICAgICAgPlxuICAgICAgICAgIDxTZWNvbmRhcnlJY29uQnV0dG9uXG4gICAgICAgICAgICBsYWJlbD1cInNob3cgdG9kYXlcIlxuICAgICAgICAgICAgb25DbGljaz17cHJvcHMub25Ub2RheUNsaWNrfVxuICAgICAgICAgICAgaWNvbj17PENpcmNsZUljb24gLz59XG4gICAgICAgICAgICBzaXplPVwibWVkaXVtXCJcbiAgICAgICAgICAvPlxuICAgICAgICA8L1Rvb2x0aXA+XG4gICAgICAgIDxUb29sdGlwXG4gICAgICAgICAgdGl0bGU9e2ludGwuZm9ybWF0TWVzc2FnZShtZXNzYWdlcy5uZXh0TW9udGhUb29sdGlwKX1cbiAgICAgICAgICBjb21wb25lbnRzPXt7IFdyYXBwZXJDb21wb25lbnQgfX1cbiAgICAgICAgPlxuICAgICAgICAgIDxTZWNvbmRhcnlJY29uQnV0dG9uXG4gICAgICAgICAgICBsYWJlbD1cInNob3cgbmV4dCBtb250aFwiXG4gICAgICAgICAgICBvbkNsaWNrPXtwcm9wcy5vbk5leHRNb250aENsaWNrfVxuICAgICAgICAgICAgaWNvbj17PEFuZ2xlUmlnaHRJY29uIC8+fVxuICAgICAgICAgICAgc2l6ZT1cIm1lZGl1bVwiXG4gICAgICAgICAgLz5cbiAgICAgICAgPC9Ub29sdGlwPlxuICAgICAgICA8VGV4dC5Cb2R5IGFzPVwic3BhblwiIGZvbnRXZWlnaHQ9XCJib2xkXCI+XG4gICAgICAgICAge3Byb3BzLm1vbnRoTGFiZWx9XG4gICAgICAgIDwvVGV4dC5Cb2R5PlxuICAgICAgPC9JbmxpbmU+XG4gICAgICA8SW5saW5lIHNjYWxlPVwieHNcIiBhbGlnbkl0ZW1zPVwiY2VudGVyXCI+XG4gICAgICAgIDxUb29sdGlwXG4gICAgICAgICAgdGl0bGU9e2ludGwuZm9ybWF0TWVzc2FnZShtZXNzYWdlcy5wcmV2aW91c1llYXJUb29sdGlwKX1cbiAgICAgICAgICBjb21wb25lbnRzPXt7IFdyYXBwZXJDb21wb25lbnQgfX1cbiAgICAgICAgPlxuICAgICAgICAgIDxTZWNvbmRhcnlJY29uQnV0dG9uXG4gICAgICAgICAgICBsYWJlbD1cInNob3cgcHJldiB5ZWFyXCJcbiAgICAgICAgICAgIG9uQ2xpY2s9e3Byb3BzLm9uUHJldlllYXJDbGlja31cbiAgICAgICAgICAgIGljb249ezxBbmdsZUxlZnRJY29uIC8+fVxuICAgICAgICAgICAgc2l6ZT1cIm1lZGl1bVwiXG4gICAgICAgICAgLz5cbiAgICAgICAgPC9Ub29sdGlwPlxuICAgICAgICA8VGV4dC5Cb2R5IGZvbnRXZWlnaHQ9XCJib2xkXCI+e3Byb3BzLnllYXJMYWJlbH08L1RleHQuQm9keT5cbiAgICAgICAgPFRvb2x0aXBcbiAgICAgICAgICB0aXRsZT17aW50bC5mb3JtYXRNZXNzYWdlKG1lc3NhZ2VzLm5leHRZZWFyVG9vbHRpcCl9XG4gICAgICAgICAgY29tcG9uZW50cz17eyBXcmFwcGVyQ29tcG9uZW50IH19XG4gICAgICAgID5cbiAgICAgICAgICA8U2Vjb25kYXJ5SWNvbkJ1dHRvblxuICAgICAgICAgICAgbGFiZWw9XCJzaG93IG5leHQgeWVhclwiXG4gICAgICAgICAgICBvbkNsaWNrPXtwcm9wcy5vbk5leHRZZWFyQ2xpY2t9XG4gICAgICAgICAgICBpY29uPXs8QW5nbGVSaWdodEljb24gLz59XG4gICAgICAgICAgICBzaXplPVwibWVkaXVtXCJcbiAgICAgICAgICAvPlxuICAgICAgICA8L1Rvb2x0aXA+XG4gICAgICA8L0lubGluZT5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbkNhbGVuZGFySGVhZGVyLmRpc3BsYXlOYW1lID0gJ0NhbGVuZGFySGVhZGVyJztcblxuZXhwb3J0IGRlZmF1bHQgQ2FsZW5kYXJIZWFkZXI7XG4iXX0= */"),
    children: [jsxs(Inline, {
      scale: "xs",
      alignItems: "center",
      children: [jsx(Tooltip, {
        title: intl.formatMessage(messages.previousMonthTooltip),
        components: {
          WrapperComponent
        },
        children: jsx(SecondaryIconButton, {
          label: "show prev month",
          onClick: props.onPrevMonthClick,
          icon: jsx(AngleLeftIcon, {}),
          size: "medium"
        })
      }), jsx(Tooltip, {
        title: intl.formatMessage(messages.todayTooltip),
        components: {
          WrapperComponent
        },
        children: jsx(SecondaryIconButton, {
          label: "show today",
          onClick: props.onTodayClick,
          icon: jsx(CircleIcon, {}),
          size: "medium"
        })
      }), jsx(Tooltip, {
        title: intl.formatMessage(messages.nextMonthTooltip),
        components: {
          WrapperComponent
        },
        children: jsx(SecondaryIconButton, {
          label: "show next month",
          onClick: props.onNextMonthClick,
          icon: jsx(AngleRightIcon, {}),
          size: "medium"
        })
      }), jsx(Text.Body, {
        as: "span",
        fontWeight: "bold",
        children: props.monthLabel
      })]
    }), jsxs(Inline, {
      scale: "xs",
      alignItems: "center",
      children: [jsx(Tooltip, {
        title: intl.formatMessage(messages.previousYearTooltip),
        components: {
          WrapperComponent
        },
        children: jsx(SecondaryIconButton, {
          label: "show prev year",
          onClick: props.onPrevYearClick,
          icon: jsx(AngleLeftIcon, {}),
          size: "medium"
        })
      }), jsx(Text.Body, {
        fontWeight: "bold",
        children: props.yearLabel
      }), jsx(Tooltip, {
        title: intl.formatMessage(messages.nextYearTooltip),
        components: {
          WrapperComponent
        },
        children: jsx(SecondaryIconButton, {
          label: "show next year",
          onClick: props.onNextYearClick,
          icon: jsx(AngleRightIcon, {}),
          size: "medium"
        })
      })]
    })]
  });
};
CalendarHeader.propTypes = process.env.NODE_ENV !== "production" ? {
  monthLabel: _pt.string.isRequired,
  yearLabel: _pt.string.isRequired,
  onPrevMonthClick: _pt.func.isRequired,
  onTodayClick: _pt.func.isRequired,
  onNextMonthClick: _pt.func.isRequired,
  onPrevYearClick: _pt.func.isRequired,
  onNextYearClick: _pt.func.isRequired
} : {};
CalendarHeader.displayName = 'CalendarHeader';
var CalendarHeader$1 = CalendarHeader;

const _excluded = ["hasFooter", "hasWarning", "hasError"];
function ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); enumerableOnly && (symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var _context, _context2; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty(_context = ownKeys(Object(source), !0)).call(_context, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)) : _forEachInstanceProperty(_context2 = ownKeys(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }
var _ref = process.env.NODE_ENV === "production" ? {
  name: "1yaiq4p",
  styles: "padding-bottom:10px"
} : {
  name: "1u5go34-CalendarMenu",
  styles: "padding-bottom:10px;label:CalendarMenu;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhbGVuZGFyLW1lbnUudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXNDZSIsImZpbGUiOiJjYWxlbmRhci1tZW51LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgUmVhY3ROb2RlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5cbnR5cGUgVENhbGVuZGFyTWVudSA9IHtcbiAgY2hpbGRyZW46IFJlYWN0Tm9kZTtcbiAgaGFzRm9vdGVyPzogYm9vbGVhbjtcbiAgaGFzRXJyb3I/OiBib29sZWFuO1xuICBoYXNXYXJuaW5nPzogYm9vbGVhbjtcbiAgZm9vdGVyPzogUmVhY3ROb2RlO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FsZW5kYXJNZW51IGV4dGVuZHMgQ29tcG9uZW50PFRDYWxlbmRhck1lbnU+IHtcbiAgc3RhdGljIGRpc3BsYXlOYW1lID0gJ0NhbGVuZGFyTWVudSc7XG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGhhc0Zvb3RlciwgaGFzV2FybmluZywgaGFzRXJyb3IsIC4uLnJlc3QgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdlxuICAgICAgICB7Li4ucmVzdH1cbiAgICAgICAgY3NzPXtbXG4gICAgICAgICAgY3NzYFxuICAgICAgICAgICAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICAgICAgICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU29saWR9O1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgICAgICAgICBib3JkZXI6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckZvckNhbGVuZGFyTWVudVdoZW5Gb2N1c2VkfTtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLmJveFNoYWRvd0ZvckNhbGVuZGFyTWVudVdoZW5Gb2N1c2VkfTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1c0ZvcklucHV0fTtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcxMH07XG4gICAgICAgICAgICBmb250LXNpemU6ICR7ZGVzaWduVG9rZW5zLmZvbnRTaXplRGVmYXVsdH07XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICAgICAgICAgICAgbWluLXdpZHRoOiAke2Rlc2lnblRva2Vucy5jb25zdHJhaW50NX07XG4gICAgICAgICAgICB6LWluZGV4OiA5OTk5OTsgLyogY29waWVkIGZyb20gZmxhdHBpY2tyICovXG4gICAgICAgICAgYCxcbiAgICAgICAgICAhaGFzRm9vdGVyICYmXG4gICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xuICAgICAgICAgICAgYCxcbiAgICAgICAgICBoYXNFcnJvciAmJlxuICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRXJyb3J9O1xuICAgICAgICAgICAgYCxcbiAgICAgICAgICBoYXNXYXJuaW5nICYmXG4gICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nfTtcbiAgICAgICAgICAgIGAsXG4gICAgICAgIF19XG4gICAgICA+XG4gICAgICAgIHt0aGlzLnByb3BzLmNoaWxkcmVufVxuICAgICAgICB7dGhpcy5wcm9wcy5mb290ZXJ9XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG4iXX0= */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};
let CalendarMenu = /*#__PURE__*/function (_Component) {
  _inherits(CalendarMenu, _Component);
  var _super = _createSuper(CalendarMenu);
  function CalendarMenu() {
    _classCallCheck(this, CalendarMenu);
    return _super.apply(this, arguments);
  }
  _createClass(CalendarMenu, [{
    key: "render",
    value: function render() {
      const _this$props = this.props,
        hasFooter = _this$props.hasFooter,
        hasWarning = _this$props.hasWarning,
        hasError = _this$props.hasError,
        rest = _objectWithoutProperties(_this$props, _excluded);
      return jsxs("div", _objectSpread(_objectSpread({}, rest), {}, {
        css: [/*#__PURE__*/css("overflow-y:scroll;color:", designTokens.colorSolid, ";font-family:inherit;border:", designTokens.borderForCalendarMenuWhenFocused, ";box-shadow:", designTokens.boxShadowForCalendarMenuWhenFocused, ";border-radius:", designTokens.borderRadiusForInput, ";margin-top:", designTokens.spacing10, ";font-size:", designTokens.fontSizeDefault, ";position:absolute;box-sizing:border-box;width:100%;background-color:", designTokens.colorSurface, ";min-width:", designTokens.constraint5, ";z-index:99999;" + (process.env.NODE_ENV === "production" ? "" : ";label:CalendarMenu;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhbGVuZGFyLW1lbnUudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFCYSIsImZpbGUiOiJjYWxlbmRhci1tZW51LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgUmVhY3ROb2RlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5cbnR5cGUgVENhbGVuZGFyTWVudSA9IHtcbiAgY2hpbGRyZW46IFJlYWN0Tm9kZTtcbiAgaGFzRm9vdGVyPzogYm9vbGVhbjtcbiAgaGFzRXJyb3I/OiBib29sZWFuO1xuICBoYXNXYXJuaW5nPzogYm9vbGVhbjtcbiAgZm9vdGVyPzogUmVhY3ROb2RlO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FsZW5kYXJNZW51IGV4dGVuZHMgQ29tcG9uZW50PFRDYWxlbmRhck1lbnU+IHtcbiAgc3RhdGljIGRpc3BsYXlOYW1lID0gJ0NhbGVuZGFyTWVudSc7XG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGhhc0Zvb3RlciwgaGFzV2FybmluZywgaGFzRXJyb3IsIC4uLnJlc3QgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdlxuICAgICAgICB7Li4ucmVzdH1cbiAgICAgICAgY3NzPXtbXG4gICAgICAgICAgY3NzYFxuICAgICAgICAgICAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICAgICAgICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU29saWR9O1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgICAgICAgICBib3JkZXI6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckZvckNhbGVuZGFyTWVudVdoZW5Gb2N1c2VkfTtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLmJveFNoYWRvd0ZvckNhbGVuZGFyTWVudVdoZW5Gb2N1c2VkfTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1c0ZvcklucHV0fTtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcxMH07XG4gICAgICAgICAgICBmb250LXNpemU6ICR7ZGVzaWduVG9rZW5zLmZvbnRTaXplRGVmYXVsdH07XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICAgICAgICAgICAgbWluLXdpZHRoOiAke2Rlc2lnblRva2Vucy5jb25zdHJhaW50NX07XG4gICAgICAgICAgICB6LWluZGV4OiA5OTk5OTsgLyogY29waWVkIGZyb20gZmxhdHBpY2tyICovXG4gICAgICAgICAgYCxcbiAgICAgICAgICAhaGFzRm9vdGVyICYmXG4gICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xuICAgICAgICAgICAgYCxcbiAgICAgICAgICBoYXNFcnJvciAmJlxuICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRXJyb3J9O1xuICAgICAgICAgICAgYCxcbiAgICAgICAgICBoYXNXYXJuaW5nICYmXG4gICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nfTtcbiAgICAgICAgICAgIGAsXG4gICAgICAgIF19XG4gICAgICA+XG4gICAgICAgIHt0aGlzLnByb3BzLmNoaWxkcmVufVxuICAgICAgICB7dGhpcy5wcm9wcy5mb290ZXJ9XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG4iXX0= */"), !hasFooter && _ref, hasError && /*#__PURE__*/css("border-color:", designTokens.borderColorForInputWhenError, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:CalendarMenu;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhbGVuZGFyLW1lbnUudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTBDZSIsImZpbGUiOiJjYWxlbmRhci1tZW51LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgUmVhY3ROb2RlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5cbnR5cGUgVENhbGVuZGFyTWVudSA9IHtcbiAgY2hpbGRyZW46IFJlYWN0Tm9kZTtcbiAgaGFzRm9vdGVyPzogYm9vbGVhbjtcbiAgaGFzRXJyb3I/OiBib29sZWFuO1xuICBoYXNXYXJuaW5nPzogYm9vbGVhbjtcbiAgZm9vdGVyPzogUmVhY3ROb2RlO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FsZW5kYXJNZW51IGV4dGVuZHMgQ29tcG9uZW50PFRDYWxlbmRhck1lbnU+IHtcbiAgc3RhdGljIGRpc3BsYXlOYW1lID0gJ0NhbGVuZGFyTWVudSc7XG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGhhc0Zvb3RlciwgaGFzV2FybmluZywgaGFzRXJyb3IsIC4uLnJlc3QgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdlxuICAgICAgICB7Li4ucmVzdH1cbiAgICAgICAgY3NzPXtbXG4gICAgICAgICAgY3NzYFxuICAgICAgICAgICAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICAgICAgICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU29saWR9O1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgICAgICAgICBib3JkZXI6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckZvckNhbGVuZGFyTWVudVdoZW5Gb2N1c2VkfTtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLmJveFNoYWRvd0ZvckNhbGVuZGFyTWVudVdoZW5Gb2N1c2VkfTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1c0ZvcklucHV0fTtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcxMH07XG4gICAgICAgICAgICBmb250LXNpemU6ICR7ZGVzaWduVG9rZW5zLmZvbnRTaXplRGVmYXVsdH07XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICAgICAgICAgICAgbWluLXdpZHRoOiAke2Rlc2lnblRva2Vucy5jb25zdHJhaW50NX07XG4gICAgICAgICAgICB6LWluZGV4OiA5OTk5OTsgLyogY29waWVkIGZyb20gZmxhdHBpY2tyICovXG4gICAgICAgICAgYCxcbiAgICAgICAgICAhaGFzRm9vdGVyICYmXG4gICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xuICAgICAgICAgICAgYCxcbiAgICAgICAgICBoYXNFcnJvciAmJlxuICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRXJyb3J9O1xuICAgICAgICAgICAgYCxcbiAgICAgICAgICBoYXNXYXJuaW5nICYmXG4gICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nfTtcbiAgICAgICAgICAgIGAsXG4gICAgICAgIF19XG4gICAgICA+XG4gICAgICAgIHt0aGlzLnByb3BzLmNoaWxkcmVufVxuICAgICAgICB7dGhpcy5wcm9wcy5mb290ZXJ9XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG4iXX0= */"), hasWarning && /*#__PURE__*/css("border-color:", designTokens.borderColorForInputWhenWarning, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:CalendarMenu;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhbGVuZGFyLW1lbnUudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQThDZSIsImZpbGUiOiJjYWxlbmRhci1tZW51LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgUmVhY3ROb2RlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5cbnR5cGUgVENhbGVuZGFyTWVudSA9IHtcbiAgY2hpbGRyZW46IFJlYWN0Tm9kZTtcbiAgaGFzRm9vdGVyPzogYm9vbGVhbjtcbiAgaGFzRXJyb3I/OiBib29sZWFuO1xuICBoYXNXYXJuaW5nPzogYm9vbGVhbjtcbiAgZm9vdGVyPzogUmVhY3ROb2RlO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FsZW5kYXJNZW51IGV4dGVuZHMgQ29tcG9uZW50PFRDYWxlbmRhck1lbnU+IHtcbiAgc3RhdGljIGRpc3BsYXlOYW1lID0gJ0NhbGVuZGFyTWVudSc7XG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGhhc0Zvb3RlciwgaGFzV2FybmluZywgaGFzRXJyb3IsIC4uLnJlc3QgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdlxuICAgICAgICB7Li4ucmVzdH1cbiAgICAgICAgY3NzPXtbXG4gICAgICAgICAgY3NzYFxuICAgICAgICAgICAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICAgICAgICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU29saWR9O1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgICAgICAgICBib3JkZXI6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckZvckNhbGVuZGFyTWVudVdoZW5Gb2N1c2VkfTtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLmJveFNoYWRvd0ZvckNhbGVuZGFyTWVudVdoZW5Gb2N1c2VkfTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1c0ZvcklucHV0fTtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcxMH07XG4gICAgICAgICAgICBmb250LXNpemU6ICR7ZGVzaWduVG9rZW5zLmZvbnRTaXplRGVmYXVsdH07XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICAgICAgICAgICAgbWluLXdpZHRoOiAke2Rlc2lnblRva2Vucy5jb25zdHJhaW50NX07XG4gICAgICAgICAgICB6LWluZGV4OiA5OTk5OTsgLyogY29waWVkIGZyb20gZmxhdHBpY2tyICovXG4gICAgICAgICAgYCxcbiAgICAgICAgICAhaGFzRm9vdGVyICYmXG4gICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xuICAgICAgICAgICAgYCxcbiAgICAgICAgICBoYXNFcnJvciAmJlxuICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRXJyb3J9O1xuICAgICAgICAgICAgYCxcbiAgICAgICAgICBoYXNXYXJuaW5nICYmXG4gICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nfTtcbiAgICAgICAgICAgIGAsXG4gICAgICAgIF19XG4gICAgICA+XG4gICAgICAgIHt0aGlzLnByb3BzLmNoaWxkcmVufVxuICAgICAgICB7dGhpcy5wcm9wcy5mb290ZXJ9XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG4iXX0= */"), process.env.NODE_ENV === "production" ? "" : ";label:render;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhbGVuZGFyLW1lbnUudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9CUSIsImZpbGUiOiJjYWxlbmRhci1tZW51LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgUmVhY3ROb2RlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5cbnR5cGUgVENhbGVuZGFyTWVudSA9IHtcbiAgY2hpbGRyZW46IFJlYWN0Tm9kZTtcbiAgaGFzRm9vdGVyPzogYm9vbGVhbjtcbiAgaGFzRXJyb3I/OiBib29sZWFuO1xuICBoYXNXYXJuaW5nPzogYm9vbGVhbjtcbiAgZm9vdGVyPzogUmVhY3ROb2RlO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FsZW5kYXJNZW51IGV4dGVuZHMgQ29tcG9uZW50PFRDYWxlbmRhck1lbnU+IHtcbiAgc3RhdGljIGRpc3BsYXlOYW1lID0gJ0NhbGVuZGFyTWVudSc7XG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGhhc0Zvb3RlciwgaGFzV2FybmluZywgaGFzRXJyb3IsIC4uLnJlc3QgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdlxuICAgICAgICB7Li4ucmVzdH1cbiAgICAgICAgY3NzPXtbXG4gICAgICAgICAgY3NzYFxuICAgICAgICAgICAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICAgICAgICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU29saWR9O1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gICAgICAgICAgICBib3JkZXI6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckZvckNhbGVuZGFyTWVudVdoZW5Gb2N1c2VkfTtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLmJveFNoYWRvd0ZvckNhbGVuZGFyTWVudVdoZW5Gb2N1c2VkfTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1c0ZvcklucHV0fTtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcxMH07XG4gICAgICAgICAgICBmb250LXNpemU6ICR7ZGVzaWduVG9rZW5zLmZvbnRTaXplRGVmYXVsdH07XG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICAgICAgICAgICAgbWluLXdpZHRoOiAke2Rlc2lnblRva2Vucy5jb25zdHJhaW50NX07XG4gICAgICAgICAgICB6LWluZGV4OiA5OTk5OTsgLyogY29waWVkIGZyb20gZmxhdHBpY2tyICovXG4gICAgICAgICAgYCxcbiAgICAgICAgICAhaGFzRm9vdGVyICYmXG4gICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xuICAgICAgICAgICAgYCxcbiAgICAgICAgICBoYXNFcnJvciAmJlxuICAgICAgICAgICAgY3NzYFxuICAgICAgICAgICAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRXJyb3J9O1xuICAgICAgICAgICAgYCxcbiAgICAgICAgICBoYXNXYXJuaW5nICYmXG4gICAgICAgICAgICBjc3NgXG4gICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nfTtcbiAgICAgICAgICAgIGAsXG4gICAgICAgIF19XG4gICAgICA+XG4gICAgICAgIHt0aGlzLnByb3BzLmNoaWxkcmVufVxuICAgICAgICB7dGhpcy5wcm9wcy5mb290ZXJ9XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG4iXX0= */"],
        children: [this.props.children, this.props.footer]
      }));
    }
  }]);
  return CalendarMenu;
}(Component);
CalendarMenu.displayName = 'CalendarMenu';
CalendarMenu.propTypes = process.env.NODE_ENV !== "production" ? {
  children: _pt.node.isRequired,
  hasFooter: _pt.bool,
  hasError: _pt.bool,
  hasWarning: _pt.bool,
  footer: _pt.node
} : {};

// NOTE: This string will be replaced on build time with the package version.
var version = "16.11.0";

export { CalendarBody$1 as CalendarBody, CalendarContent$1 as CalendarContent, CalendarDay$1 as CalendarDay, CalendarHeader$1 as CalendarHeader, CalendarMenu, changeMonth, createCalendarItems, createItemRangeToString, createItemToString, formatDate, formatRange, getCalendarDayLabel, getDateInMonth, getDaysInMonth, getExampleDateStrings, getIsDateInRange, getMonthCalendarLabel, getNextDay, getPaddingDayCount, getPreviousDay, getToday, getWeekdayNames, getYearCalendarLabel, isBetween, isSameDay, parseInputToDate, version };
