import { ReactNode } from 'react';
export type TCollapsiblePanel = {
    id?: string;
    header: ReactNode;
    secondaryHeader?: ReactNode;
    description?: string;
    className?: string;
    isSticky?: boolean;
    headerControls?: ReactNode;
    isDisabled?: boolean;
    children?: ReactNode;
    tone?: 'urgent' | 'primary';
    theme?: 'dark' | 'light';
    condensed?: boolean;
    hideExpansionControls?: boolean;
    headerControlsAlignment?: 'left' | 'right';
    isDefaultClosed?: boolean;
    isClosed?: boolean;
    onToggle?: () => void;
    horizontalConstraint?: 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 'scale' | 'auto';
};
declare const CollapsiblePanel: {
    (props: TCollapsiblePanel): import("@emotion/react/jsx-runtime").JSX.Element;
    getPanelContentId(): string;
    displayName: string;
    defaultProps: Pick<TCollapsiblePanel, "theme" | "condensed" | "isDisabled" | "horizontalConstraint" | "headerControlsAlignment">;
    Header: {
        (props: {
            children: ReactNode;
            isCondensed?: boolean | undefined;
        }): import("@emotion/react/jsx-runtime").JSX.Element;
        displayName: string;
    };
};
export default CollapsiblePanel;
