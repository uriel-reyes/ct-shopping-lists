'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _slicedToArray = require('@babel/runtime-corejs3/helpers/slicedToArray');
var _taggedTemplateLiteral = require('@babel/runtime-corejs3/helpers/taggedTemplateLiteral');
require('prop-types');
var _setTimeout = require('@babel/runtime-corejs3/core-js-stable/set-timeout');
var react$1 = require('react');
var react = require('@emotion/react');
var designSystem = require('@commercetools-uikit/design-system');
var Text = require('@commercetools-uikit/text');
var Inline = require('@commercetools-uikit/spacings-inline');
var jsxRuntime = require('@emotion/react/jsx-runtime');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

var _setTimeout__default = /*#__PURE__*/_interopDefault(_setTimeout);
var Text__default = /*#__PURE__*/_interopDefault(Text);
var Inline__default = /*#__PURE__*/_interopDefault(Inline);

var _templateObject;
const circlePath = 'M20.201,5.169c-8.254,0-14.946,6.692-14.946,14.946c0,8.255,6.692,14.946,14.946,14.946 s14.946-6.691,14.946-14.946C35.146,11.861,28.455,5.169,20.201,5.169z M20.201,31.749c-6.425,0-11.634-5.208-11.634-11.634c0-6.425,5.209-11.634,11.634-11.634c6.425,0,11.633,5.209,11.633,11.634C31.834,26.541,26.626,31.749,20.201,31.749z';
const pointerPath = 'M26.013,10.047l1.654-2.866c-2.198-1.272-4.743-2.012-7.466-2.012h0v3.312h0 C22.32,8.481,24.301,9.057,26.013,10.047z';
const spin = react.keyframes(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n"])));
const sizePerScale = {
  s: '18px',
  l: '32px'
};
const positionOrigin = '20px';
const defaultProps = {
  scale: 'l',
  maxDelayDuration: 1000
};
const LoadingSpinner = props => {
  var _props$maxDelayDurati;
  const _useState = react$1.useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    showSpinner = _useState2[0],
    setShowSpinner = _useState2[1];
  const size = sizePerScale[props.scale];
  react$1.useEffect(() => {
    const delaySpinnerTimeout = _setTimeout__default["default"](() => setShowSpinner(true), props.maxDelayDuration);
    return () => clearTimeout(delaySpinnerTimeout);
  }, [props.maxDelayDuration]);
  if (!showSpinner && ((_props$maxDelayDurati = props.maxDelayDuration) !== null && _props$maxDelayDurati !== void 0 ? _props$maxDelayDurati : 0) > 0) return null;
  return jsxRuntime.jsxs(Inline__default["default"], {
    alignItems: "center",
    children: [jsxRuntime.jsx("div", {
      css: /*#__PURE__*/react.css("width:", size, ";height:", size, ";" + ("" ), "" ),
      children: jsxRuntime.jsxs("svg", {
        css: /*#__PURE__*/react.css("width:", size, ";height:", size, ";" + ("" ), "" ),
        viewBox: "0 0 40 40",
        children: [jsxRuntime.jsx("path", {
          css: /*#__PURE__*/react.css("fill:", designSystem.designTokens.colorAccent, ";opacity:0.2;" + ("" ), "" ),
          d: circlePath
        }), jsxRuntime.jsx("path", {
          css: /*#__PURE__*/react.css("animation:", spin, " 0.5s infinite linear;fill:", designSystem.designTokens.colorAccent, ";transform-origin:", positionOrigin, " ", positionOrigin, " 0;" + ("" ), "" ),
          d: pointerPath
        })]
      })
    }), props.children && jsxRuntime.jsx(Text__default["default"].Detail, {
      tone: "secondary",
      children: props.children
    })]
  });
};
LoadingSpinner.propTypes = {};
LoadingSpinner.displayName = 'LoadingSpinner';
LoadingSpinner.defaultProps = defaultProps;
var LoadingSpinner$1 = LoadingSpinner;

// NOTE: This string will be replaced on build time with the package version.
var version = "16.11.0";

exports["default"] = LoadingSpinner$1;
exports.version = version;
