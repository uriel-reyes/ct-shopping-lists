'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _Object$getOwnPropertySymbols = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols');
var _Object$getOwnPropertyDescriptor = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor');
var _forEachInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/for-each');
var _Object$getOwnPropertyDescriptors = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors');
var _Object$defineProperties = require('@babel/runtime-corejs3/core-js-stable/object/define-properties');
var _Object$defineProperty = require('@babel/runtime-corejs3/core-js-stable/object/define-property');
var _defineProperty = require('@babel/runtime-corejs3/helpers/defineProperty');
var _slicedToArray = require('@babel/runtime-corejs3/helpers/slicedToArray');
var _concatInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/concat');
var _filterInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/filter');
var _sortInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/sort');
var _Object$entries = require('@babel/runtime-corejs3/core-js-stable/object/entries');
var _reduceInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/reduce');
var _Object$keys = require('@babel/runtime-corejs3/core-js-stable/object/keys');
var _someInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/some');
var _everyInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/every');
var _Object$values = require('@babel/runtime-corejs3/core-js-stable/object/values');
var _trimInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/trim');
var uniq = require('lodash/uniq');
var utils = require('@commercetools-uikit/utils');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

var _Object$getOwnPropertySymbols__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertySymbols);
var _Object$getOwnPropertyDescriptor__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertyDescriptor);
var _forEachInstanceProperty__default = /*#__PURE__*/_interopDefault(_forEachInstanceProperty);
var _Object$getOwnPropertyDescriptors__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertyDescriptors);
var _Object$defineProperties__default = /*#__PURE__*/_interopDefault(_Object$defineProperties);
var _Object$defineProperty__default = /*#__PURE__*/_interopDefault(_Object$defineProperty);
var _concatInstanceProperty__default = /*#__PURE__*/_interopDefault(_concatInstanceProperty);
var _filterInstanceProperty__default = /*#__PURE__*/_interopDefault(_filterInstanceProperty);
var _sortInstanceProperty__default = /*#__PURE__*/_interopDefault(_sortInstanceProperty);
var _Object$entries__default = /*#__PURE__*/_interopDefault(_Object$entries);
var _reduceInstanceProperty__default = /*#__PURE__*/_interopDefault(_reduceInstanceProperty);
var _Object$keys__default = /*#__PURE__*/_interopDefault(_Object$keys);
var _someInstanceProperty__default = /*#__PURE__*/_interopDefault(_someInstanceProperty);
var _everyInstanceProperty__default = /*#__PURE__*/_interopDefault(_everyInstanceProperty);
var _Object$values__default = /*#__PURE__*/_interopDefault(_Object$values);
var _trimInstanceProperty__default = /*#__PURE__*/_interopDefault(_trimInstanceProperty);
var uniq__default = /*#__PURE__*/_interopDefault(uniq);

function ownKeys(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var _context9, _context10; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context9 = ownKeys(Object(source), !0)).call(_context9, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context10 = ownKeys(Object(source))).call(_context10, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const getId = (idPrefix, language) => {
  var _context;
  return idPrefix && language ? _concatInstanceProperty__default["default"](_context = "".concat(idPrefix, ".")).call(_context, language) : undefined;
};
const getName = (namePrefix, language) => {
  var _context2;
  return namePrefix && language ? _concatInstanceProperty__default["default"](_context2 = "".concat(namePrefix, ".")).call(_context2, language) : undefined;
};
const getPrimaryLanguage = language => language.split('-')[0];

// splits the languages into two groups:
//  - the first group starts with the same tag as the selected language
//  - the second group starts with a different tag
const splitLanguages = (selectedLanguage, languages) => {
  const primaryLanguage = getPrimaryLanguage(selectedLanguage);
  const related = _filterInstanceProperty__default["default"](languages).call(languages, language => getPrimaryLanguage(language) === primaryLanguage);
  const unrelated = _filterInstanceProperty__default["default"](languages).call(languages, language => getPrimaryLanguage(language) !== primaryLanguage);
  return {
    unrelated,
    related
  };
};

// sorts the languages with the following priority:
// - The selected language is placed first (e.g pt-BR)
// - All languages using the same primary language as the selected language
//   follow (e.g. pt, pt-PT). They are sorted alphabetically.
// - All other languages follow, sorted alphabetically as well
const sortLanguages = (selectedLanguage, allLanguages) => {
  const _splitLanguages = splitLanguages(selectedLanguage, _filterInstanceProperty__default["default"](allLanguages).call(allLanguages, language => language !== selectedLanguage)),
    related = _splitLanguages.related,
    unrelated = _splitLanguages.unrelated;
  return [selectedLanguage, ..._sortInstanceProperty__default["default"](related).call(related), ..._sortInstanceProperty__default["default"](unrelated).call(unrelated)];
};
const createLocalizedDataAttributes = (props, language) => {
  const entries = _Object$entries__default["default"](utils.filterDataAttributes(props));
  return _reduceInstanceProperty__default["default"](entries).call(entries, (localizedDataAttributes, _ref) => {
    var _context3;
    let _ref2 = _slicedToArray(_ref, 2),
      key = _ref2[0],
      value = _ref2[1];
    switch (key) {
      case 'data-track-component':
      case 'data-testid':
      case 'data-test':
        localizedDataAttributes[key] = _concatInstanceProperty__default["default"](_context3 = "".concat(value, "-")).call(_context3, language);
        break;
      default:
        localizedDataAttributes[key] = value;
    }
    return localizedDataAttributes;
  }, {});
};
const getHasErrorOnRemainingLanguages = (errors, selectedLanguage) => {
  if (errors && _Object$keys__default["default"](errors).length > 0 && selectedLanguage) {
    var _context4;
    return _someInstanceProperty__default["default"](_context4 = _Object$keys__default["default"](errors)).call(_context4, language => language !== selectedLanguage);
  }
  return false;
};
const getHasWarningOnRemainingLanguages = (warnings, selectedLanguage) => {
  if (warnings && _Object$keys__default["default"](warnings).length > 0 && selectedLanguage) {
    var _context5;
    return _someInstanceProperty__default["default"](_context5 = _Object$keys__default["default"](warnings)).call(_context5, language => language !== selectedLanguage);
  }
  return false;
};
const createLocalizedString = function (languages) {
  let existingTranslations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  const mergedLanguages = existingTranslations ? uniq__default["default"]([...languages, ..._Object$keys__default["default"](existingTranslations)]) : languages;
  return _reduceInstanceProperty__default["default"](mergedLanguages).call(mergedLanguages, (localizedString, locale) => _objectSpread(_objectSpread({}, localizedString), {}, {
    [locale]: existingTranslations && existingTranslations[locale] || ''
  }), {});
};
const isEmpty = localizedString => {
  var _context6;
  if (!localizedString) return true;
  return _everyInstanceProperty__default["default"](_context6 = _Object$values__default["default"](localizedString)).call(_context6, value => !value || _trimInstanceProperty__default["default"](value).call(value).length === 0);
};
const omitEmptyTranslations = localizedString => {
  var _context7;
  process.env.NODE_ENV !== "production" ? utils.warning(typeof localizedString === 'object', 'omitEmptyTranslations must be called with an object') : void 0;
  return _reduceInstanceProperty__default["default"](_context7 = _Object$entries__default["default"](localizedString)).call(_context7, (localizedStringWithoutEmptyTranslations, _ref3) => {
    let _ref4 = _slicedToArray(_ref3, 2),
      locale = _ref4[0],
      value = _ref4[1];
    if (value && _trimInstanceProperty__default["default"](value).call(value).length > 0) {
      return _objectSpread(_objectSpread({}, localizedStringWithoutEmptyTranslations), {}, {
        [locale]: value
      });
    }
    return localizedStringWithoutEmptyTranslations;
  }, {});
};
const isTouched = touched => {
  if (touched) {
    var _context8;
    return _someInstanceProperty__default["default"](_context8 = _Object$values__default["default"](touched)).call(_context8, Boolean);
  }
  return false;
};

// NOTE: This string will be replaced on build time with the package version.
var version = "16.11.0";

exports.createLocalizedDataAttributes = createLocalizedDataAttributes;
exports.createLocalizedString = createLocalizedString;
exports.getHasErrorOnRemainingLanguages = getHasErrorOnRemainingLanguages;
exports.getHasWarningOnRemainingLanguages = getHasWarningOnRemainingLanguages;
exports.getId = getId;
exports.getName = getName;
exports.getPrimaryLanguage = getPrimaryLanguage;
exports.isEmpty = isEmpty;
exports.isTouched = isTouched;
exports.omitEmptyTranslations = omitEmptyTranslations;
exports.sortLanguages = sortLanguages;
exports.splitLanguages = splitLanguages;
exports.version = version;
