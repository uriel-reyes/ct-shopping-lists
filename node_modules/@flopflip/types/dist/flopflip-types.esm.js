let AdapterSubscriptionStatus = /*#__PURE__*/function (AdapterSubscriptionStatus) {
  AdapterSubscriptionStatus[AdapterSubscriptionStatus["Subscribed"] = 0] = "Subscribed";
  AdapterSubscriptionStatus[AdapterSubscriptionStatus["Unsubscribed"] = 1] = "Unsubscribed";
  return AdapterSubscriptionStatus;
}({});
let AdapterConfigurationStatus = /*#__PURE__*/function (AdapterConfigurationStatus) {
  AdapterConfigurationStatus[AdapterConfigurationStatus["Unconfigured"] = 0] = "Unconfigured";
  AdapterConfigurationStatus[AdapterConfigurationStatus["Configuring"] = 1] = "Configuring";
  AdapterConfigurationStatus[AdapterConfigurationStatus["Configured"] = 2] = "Configured";
  return AdapterConfigurationStatus;
}({});
let AdapterInitializationStatus = /*#__PURE__*/function (AdapterInitializationStatus) {
  AdapterInitializationStatus[AdapterInitializationStatus["Succeeded"] = 0] = "Succeeded";
  AdapterInitializationStatus[AdapterInitializationStatus["Failed"] = 1] = "Failed";
  return AdapterInitializationStatus;
}({});
const adapterIdentifiers = {
  launchdarkly: 'launchdarkly',
  localstorage: 'localstorage',
  memory: 'memory',
  splitio: 'splitio',
  graphql: 'graphql',
  http: 'http',
  combined: 'combined'
};
const cacheIdentifiers = {
  local: 'local',
  session: 'session'
};

// eslint-disable-next-line @typescript-eslint/consistent-type-definitions

// eslint-disable-next-line @typescript-eslint/consistent-type-definitions

// eslint-disable-next-line @typescript-eslint/consistent-type-definitions

// eslint-disable-next-line @typescript-eslint/consistent-type-definitions

// eslint-disable-next-line @typescript-eslint/consistent-type-definitions

// eslint-disable-next-line @typescript-eslint/consistent-type-definitions

// eslint-disable-next-line @typescript-eslint/consistent-type-definitions

// eslint-disable-next-line @typescript-eslint/consistent-type-definitions

export { AdapterConfigurationStatus, AdapterInitializationStatus, AdapterSubscriptionStatus, adapterIdentifiers, cacheIdentifiers };
