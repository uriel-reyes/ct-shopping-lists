'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var core = require('@commercetools-test-data/core');
var _Object$keys = require('@babel/runtime-corejs3/core-js-stable/object/keys');
var _Object$getOwnPropertySymbols = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols');
var _filterInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/filter');
var _Object$getOwnPropertyDescriptor = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor');
var _forEachInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/for-each');
var _Object$getOwnPropertyDescriptors = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors');
var _Object$defineProperties = require('@babel/runtime-corejs3/core-js-stable/object/define-properties');
var _Object$defineProperty = require('@babel/runtime-corejs3/core-js-stable/object/define-property');
var _defineProperty = require('@babel/runtime-corejs3/helpers/defineProperty');
var omit = require('lodash/omit');
var faker = require('@faker-js/faker');
var _slicedToArray = require('@babel/runtime-corejs3/helpers/slicedToArray');
var _mapInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/map');
var _Object$entries = require('@babel/runtime-corejs3/core-js-stable/object/entries');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

var _Object$keys__default = /*#__PURE__*/_interopDefault(_Object$keys);
var _Object$getOwnPropertySymbols__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertySymbols);
var _filterInstanceProperty__default = /*#__PURE__*/_interopDefault(_filterInstanceProperty);
var _Object$getOwnPropertyDescriptor__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertyDescriptor);
var _forEachInstanceProperty__default = /*#__PURE__*/_interopDefault(_forEachInstanceProperty);
var _Object$getOwnPropertyDescriptors__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertyDescriptors);
var _Object$defineProperties__default = /*#__PURE__*/_interopDefault(_Object$defineProperties);
var _Object$defineProperty__default = /*#__PURE__*/_interopDefault(_Object$defineProperty);
var omit__default = /*#__PURE__*/_interopDefault(omit);
var _mapInstanceProperty__default = /*#__PURE__*/_interopDefault(_mapInstanceProperty);
var _Object$entries__default = /*#__PURE__*/_interopDefault(_Object$entries);

var generator$4 = core.Generator({
  fields: {
    id: core.fake(function (f) {
      return f.random.alphaNumeric(8);
    }),
    key: core.fake(function (f) {
      return f.lorem.slug(2);
    }),
    title: core.fake(function (f) {
      return f.name.jobTitle();
    }),
    salutation: core.oneOf('Dear', 'To Whom it May Concern', 'Members of the Committee'),
    firstName: core.fake(function (f) {
      return f.name.firstName();
    }),
    lastName: core.fake(function (f) {
      return f.name.lastName();
    }),
    streetName: core.fake(function (f) {
      return f.address.street();
    }),
    streetNumber: core.fake(function (f) {
      return String(f.datatype.number());
    }),
    additionalStreetInfo: core.fake(function (f) {
      return f.address.street();
    }),
    postalCode: core.fake(function (f) {
      return f.address.zipCode();
    }),
    city: core.fake(function (f) {
      return f.address.city();
    }),
    region: null,
    state: core.fake(function (f) {
      return f.address.state();
    }),
    country: 'DE',
    company: core.fake(function (f) {
      return f.company.name();
    }),
    department: core.fake(function (f) {
      return f.commerce.department();
    }),
    building: null,
    apartment: null,
    pOBox: 'PO Box 1033',
    phone: core.fake(function (f) {
      return f.phone.number();
    }),
    mobile: core.fake(function (f) {
      return f.phone.number();
    }),
    fax: core.fake(function (f) {
      return f.phone.number();
    }),
    email: core.fake(function (f) {
      return f.internet.email();
    }),
    additionalAddressInfo: null,
    externalId: null,
    custom: null
  }
});

var transformers$4 = {
  default: core.Transformer('default', {}),
  rest: core.Transformer('rest', {}),
  graphql: core.Transformer('graphql', {
    addFields: function addFields() {
      return {
        __typename: 'Address'
      };
    }
  })
};

var Model$3 = function Model() {
  return core.Builder({
    generator: generator$4,
    transformers: transformers$4
  });
};

var presets$3 = {};

var index$5 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  random: Model$3,
  presets: presets$3
});

// https://docs.commercetools.com/api/types#addressdraft
var generator$3 = core.Generator({
  fields: {
    id: null,
    key: core.fake(function (f) {
      return f.lorem.slug(2);
    }),
    title: core.fake(function (f) {
      return f.name.jobTitle();
    }),
    salutation: core.oneOf('Dear', 'To Whom it May Concern', 'Members of the Committee'),
    firstName: core.fake(function (f) {
      return f.name.firstName();
    }),
    lastName: core.fake(function (f) {
      return f.name.lastName();
    }),
    streetName: core.fake(function (f) {
      return f.address.street();
    }),
    streetNumber: core.fake(function (f) {
      return String(f.datatype.number());
    }),
    additionalStreetInfo: core.fake(function (f) {
      return f.address.street();
    }),
    postalCode: core.fake(function (f) {
      return f.address.zipCode();
    }),
    city: core.fake(function (f) {
      return f.address.city();
    }),
    region: null,
    state: core.fake(function (f) {
      return f.address.state();
    }),
    country: 'DE',
    company: core.fake(function (f) {
      return f.company.name();
    }),
    department: core.fake(function (f) {
      return f.commerce.department();
    }),
    building: null,
    apartment: null,
    pOBox: 'PO Box 1033',
    phone: core.fake(function (f) {
      return f.phone.number();
    }),
    mobile: core.fake(function (f) {
      return f.phone.number();
    }),
    fax: core.fake(function (f) {
      return f.phone.number();
    }),
    email: core.fake(function (f) {
      return f.internet.email();
    }),
    additionalAddressInfo: null,
    externalId: null,
    custom: null
  }
});

var transformers$3 = {
  default: core.Transformer('default', {}),
  rest: core.Transformer('rest', {}),
  graphql: core.Transformer('graphql', {
    addFields: function addFields() {
      return {
        __typename: 'AddressDraft'
      };
    }
  })
};

var AddressDraft = function AddressDraft() {
  return core.Builder({
    generator: generator$3,
    transformers: transformers$3
  });
};

var empty$1 = function empty() {
  return AddressDraft().id(undefined).key(undefined).title(undefined).salutation(undefined).firstName(undefined).lastName(undefined).streetName(undefined).streetNumber(undefined).additionalStreetInfo(undefined).postalCode(undefined).city(undefined).state(undefined).region(undefined).company(undefined).department(undefined).building(undefined).apartment(undefined).pOBox(undefined).phone(undefined).mobile(undefined).fax(undefined).email(undefined).additionalAddressInfo(undefined).externalId(undefined).custom(undefined);
};

var presets$2 = {
  empty: empty$1
};

var index$4 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  random: AddressDraft,
  presets: presets$2
});

// https://docs.commercetools.com/api/types#referencetype
var generator$2 = core.Generator({
  fields: {
    id: core.fake(function (f) {
      return f.datatype.uuid();
    }),
    typeId: null,
    key: null
  }
});

function ownKeys(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var _context, _context2; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context = ownKeys(Object(source), !0)).call(_context, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context2 = ownKeys(Object(source))).call(_context2, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
var transformers$2 = {
  default: core.Transformer('default', {}),
  rest: core.Transformer('rest', {
    replaceFields: function replaceFields(_ref) {
      var fields = _ref.fields;
      return _objectSpread(_objectSpread({}, fields), {}, {
        obj: omit__default["default"](fields, ['typeId'])
      });
    }
  }),
  // we do not add the expanded object ourselves
  // since some fields are pure `*Ref`, e.g `channelsRef`
  // with no option to expand.
  graphql: core.Transformer('graphql', {
    addFields: function addFields() {
      return {
        __typename: 'Reference'
      };
    }
  })
};

var Model$2 = function Model() {
  return core.Builder({
    generator: generator$2,
    transformers: transformers$2
  });
};

var category = function category() {
  return Model$2().typeId('category');
};

var presets$1 = {
  category: category
};

var index$3 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  random: Model$2,
  presets: presets$1
});

// https://docs.commercetools.com/api/types#client-logging
var generator$1 = core.Generator({
  fields: {
    externalUserId: core.fake(function (f) {
      return f.datatype.uuid();
    }),
    anonymousId: core.fake(function (f) {
      return f.datatype.uuid();
    }),
    clientId: core.fake(function (f) {
      return f.datatype.uuid();
    }),
    customer: core.fake(function () {
      return Model$2().typeId('customer');
    })
  }
});

var transformers$1 = {
  default: core.Transformer('default', {
    buildFields: ['customer']
  }),
  rest: core.Transformer('rest', {
    buildFields: ['customer']
  }),
  graphql: core.Transformer('graphql', {
    replaceFields: function replaceFields(_ref) {
      var fields = _ref.fields;
      var customerRef = core.buildField(fields.customer, 'graphql');
      var userRef = Model$2().typeId('user').buildGraphql();
      return {
        __typename: 'Initiator',
        isPlatformClient: faker.faker.datatype.boolean(),
        externalUserId: fields.externalUserId,
        anonymousId: fields.anonymousId,
        clientId: fields.clientId,
        customerRef: customerRef,
        userRef: userRef
      };
    }
  })
};

var Model$1 = function Model() {
  return core.Builder({
    generator: generator$1,
    transformers: transformers$1
  });
};

var index$2 = {};

var index$1 = /*#__PURE__*/Object.freeze({
  __proto__: null,
  random: Model$1,
  presets: index$2
});

// https://docs.commercetools.com/api/types#localizedstring
var generator = core.Generator({
  fields: {
    de: core.fake(function (f) {
      return f.lorem.words(5);
    }),
    en: core.fake(function (f) {
      return f.lorem.words(3);
    }),
    fr: core.fake(function (f) {
      return f.lorem.words(4);
    })
  }
});

var isNil = function isNil(value) {
  return value === undefined || value === null;
};
var transformers = {
  default: core.Transformer('default', {}),
  rest: core.Transformer('rest', {}),
  graphql: core.Transformer('graphql', {
    replaceFields: function replaceFields(_ref) {
      var _context, _context2;
      var fields = _ref.fields;
      return _mapInstanceProperty__default["default"](_context = _filterInstanceProperty__default["default"](_context2 = _Object$entries__default["default"](fields)).call(_context2, function (_ref2) {
        var _ref3 = _slicedToArray(_ref2, 2),
          value = _ref3[1];
        return !isNil(value);
      })).call(_context, function (_ref4) {
        var _ref5 = _slicedToArray(_ref4, 2),
          locale = _ref5[0],
          value = _ref5[1];
        return {
          locale: locale,
          value: value,
          __typename: 'LocalizedString'
        };
      });
    }
  })
};

var Model = function Model() {
  return core.Builder({
    generator: generator,
    transformers: transformers
  });
};

var empty = function empty() {
  return Model().en(undefined).de(undefined).fr(undefined);
};

var ofSlugs = function ofSlugs() {
  return Model().en(faker.faker.lorem.slug()).de(faker.faker.lorem.slug()).fr(faker.faker.lorem.slug());
};

var presets = {
  empty: empty,
  ofSlugs: ofSlugs
};

var toLocalizedField = function toLocalizedField(value) {
  if (!value) {
    return null;
  }
  var localizedField = core.buildField(value, 'graphql');
  return localizedField;
};

var index = /*#__PURE__*/Object.freeze({
  __proto__: null,
  random: Model,
  presets: presets,
  toLocalizedField: toLocalizedField
});

exports.Address = index$5;
exports.AddressDraft = index$4;
exports.ClientLogging = index$1;
exports.LocalizedString = index;
exports.Reference = index$3;
