"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Waits for a collection of observables to _close_ (finish in success _or_ error).
 *
 * Returns any errors encountered, as well as values (as an array of results from `next`),
 * in the same order as the observables were given.
 */
function waitForObservables() {
    var observables = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        observables[_i] = arguments[_i];
    }
    return new Promise(function (resolve) {
        if (!observables.length) {
            throw new Error("waitFor must be given at least one observable");
        }
        var results = [];
        var numFinished = 0;
        function markOneFinished(index, result) {
            numFinished += 1;
            results[index] = result;
            if (numFinished < observables.length)
                return;
            resolve(results);
        }
        observables.forEach(function (observable, index) {
            var values = [];
            observable.subscribe({
                next: function (value) {
                    values.push(value);
                },
                complete: function () {
                    markOneFinished(index, { values: values });
                },
                error: function (error) {
                    markOneFinished(index, { error: error });
                },
            });
        });
    });
}
exports.default = waitForObservables;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUlBOzs7OztHQUtHO0FBQ0g7SUFBMkMscUJBQTRCO1NBQTVCLFVBQTRCLEVBQTVCLHFCQUE0QixFQUE1QixJQUE0QjtRQUE1QixnQ0FBNEI7O0lBQ3JFLE1BQU0sQ0FBQyxJQUFJLE9BQU8sQ0FBQyxVQUFBLE9BQU87UUFDeEIsRUFBRSxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUN4QixNQUFNLElBQUksS0FBSyxDQUFDLCtDQUErQyxDQUFDLENBQUM7UUFDbkUsQ0FBQztRQUVELElBQU0sT0FBTyxHQUF1QixFQUFFLENBQUM7UUFDdkMsSUFBSSxXQUFXLEdBQUcsQ0FBQyxDQUFDO1FBQ3BCLHlCQUF5QixLQUFhLEVBQUUsTUFBd0I7WUFDOUQsV0FBVyxJQUFJLENBQUMsQ0FBQztZQUNqQixPQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsTUFBTSxDQUFDO1lBRXhCLEVBQUUsQ0FBQyxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUMsTUFBTSxDQUFDO2dCQUFDLE1BQU0sQ0FBQztZQUM3QyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDbkIsQ0FBQztRQUVELFdBQVcsQ0FBQyxPQUFPLENBQUMsVUFBQyxVQUFVLEVBQUUsS0FBSztZQUNwQyxJQUFNLE1BQU0sR0FBVSxFQUFFLENBQUM7WUFDekIsVUFBVSxDQUFDLFNBQVMsQ0FBQztnQkFDbkIsSUFBSSxZQUFDLEtBQVU7b0JBQ2IsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztnQkFDckIsQ0FBQztnQkFDRCxRQUFRO29CQUNOLGVBQWUsQ0FBQyxLQUFLLEVBQUUsRUFBRSxNQUFNLFFBQUEsRUFBRSxDQUFDLENBQUM7Z0JBQ3JDLENBQUM7Z0JBQ0QsS0FBSyxZQUFDLEtBQVU7b0JBQ2QsZUFBZSxDQUFDLEtBQUssRUFBRSxFQUFFLEtBQUssT0FBQSxFQUFFLENBQUMsQ0FBQztnQkFDcEMsQ0FBQzthQUNGLENBQUMsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDO0FBL0JELHFDQStCQyJ9