import { type MouseEvent, type KeyboardEvent, type ElementType, type ReactElement, ComponentPropsWithRef } from 'react';
export type TFlatButtonProps<TStringOrComponent extends ElementType = 'button'> = {
    as?: TStringOrComponent;
    tone?: 'primary' | 'secondary' | 'inverted' | 'critical';
    type?: 'submit' | 'reset' | 'button';
    label: string;
    onClick?: (event: MouseEvent<HTMLButtonElement> | KeyboardEvent<HTMLButtonElement>) => void;
    icon?: ReactElement;
    iconPosition?: 'left' | 'right';
    isDisabled?: boolean;
} & ComponentPropsWithRef<TStringOrComponent>;
declare const FlatButton: {
    <TStringOrComponent extends ElementType = "button">(props: TFlatButtonProps<TStringOrComponent>): import("@emotion/react/jsx-runtime").JSX.Element;
    displayName: string;
    defaultProps: Pick<TFlatButtonProps<"button">, "type" | "isDisabled" | "tone" | "iconPosition">;
};
export default FlatButton;
