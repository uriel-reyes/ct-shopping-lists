import { type ChangeEventHandler, type FocusEventHandler } from 'react';
export type TMultilineTextInputProps = {
    name?: string;
    'aria-invalid'?: boolean;
    'aria-errormessage'?: string;
    autoComplete?: string;
    id?: string;
    value: string;
    onChange?: ChangeEventHandler<HTMLTextAreaElement>;
    onBlur?: FocusEventHandler<HTMLTextAreaElement>;
    onFocus?: FocusEventHandler<HTMLTextAreaElement>;
    isAutofocussed?: boolean;
    defaultExpandMultilineText?: boolean;
    isDisabled?: boolean;
    isReadOnly?: boolean;
    placeholder?: string;
    hasError?: boolean;
    hasWarning?: boolean;
    horizontalConstraint?: 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 'scale' | 'auto';
};
declare const MultilineTextInput: {
    (props: TMultilineTextInputProps): import("@emotion/react/jsx-runtime").JSX.Element;
    displayName: string;
    isEmpty(value: TMultilineTextInputProps['value']): boolean;
    defaultProps: Pick<TMultilineTextInputProps, "defaultExpandMultilineText">;
};
export default MultilineTextInput;
