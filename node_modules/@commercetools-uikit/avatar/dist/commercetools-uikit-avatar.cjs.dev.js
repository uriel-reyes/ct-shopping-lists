'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _defineProperty = require('@babel/runtime-corejs3/helpers/defineProperty');
var _pt = require('prop-types');
var _sliceInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/slice');
var _trimInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/trim');
var _concatInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/concat');
var _parseInt = require('@babel/runtime-corejs3/core-js-stable/parse-int');
var _Object$keys = require('@babel/runtime-corejs3/core-js-stable/object/keys');
var _Object$getOwnPropertySymbols = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols');
var _filterInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/filter');
var _Object$getOwnPropertyDescriptor = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor');
var _forEachInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/for-each');
var _Object$getOwnPropertyDescriptors = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors');
var _Object$defineProperties = require('@babel/runtime-corejs3/core-js-stable/object/define-properties');
var _Object$defineProperty = require('@babel/runtime-corejs3/core-js-stable/object/define-property');
var react$1 = require('react');
var react = require('@emotion/react');
var utils = require('@commercetools-uikit/utils');
var designSystem = require('@commercetools-uikit/design-system');
var startCase = require('lodash/startCase');
var jsxRuntime = require('@emotion/react/jsx-runtime');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

var _pt__default = /*#__PURE__*/_interopDefault(_pt);
var _sliceInstanceProperty__default = /*#__PURE__*/_interopDefault(_sliceInstanceProperty);
var _trimInstanceProperty__default = /*#__PURE__*/_interopDefault(_trimInstanceProperty);
var _concatInstanceProperty__default = /*#__PURE__*/_interopDefault(_concatInstanceProperty);
var _parseInt__default = /*#__PURE__*/_interopDefault(_parseInt);
var _Object$keys__default = /*#__PURE__*/_interopDefault(_Object$keys);
var _Object$getOwnPropertySymbols__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertySymbols);
var _filterInstanceProperty__default = /*#__PURE__*/_interopDefault(_filterInstanceProperty);
var _Object$getOwnPropertyDescriptor__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertyDescriptor);
var _forEachInstanceProperty__default = /*#__PURE__*/_interopDefault(_forEachInstanceProperty);
var _Object$getOwnPropertyDescriptors__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertyDescriptors);
var _Object$defineProperties__default = /*#__PURE__*/_interopDefault(_Object$defineProperties);
var _Object$defineProperty__default = /*#__PURE__*/_interopDefault(_Object$defineProperty);
var startCase__default = /*#__PURE__*/_interopDefault(startCase);

const fontSizeMap = {
  s: {
    narrow: designSystem.designTokens.fontSize30,
    wide: designSystem.designTokens.fontSize10
  },
  m: {
    narrow: designSystem.designTokens.fontSize50,
    wide: designSystem.designTokens.fontSize30
  },
  l: {
    narrow: designSystem.designTokens.fontSize90,
    wide: designSystem.designTokens.fontSize80
  }
};
const widthSizeMap = {
  s: '32px',
  m: '40px',
  l: '100px'
};
const colorsMap = {
  accent: {
    normal: designSystem.designTokens.colorAccent90,
    highlighted: designSystem.designTokens.colorAccent95
  },
  purple: {
    normal: designSystem.designTokens.colorPurple90,
    highlighted: designSystem.designTokens.colorPurple95
  },
  turquoise: {
    normal: designSystem.designTokens.colorTurquoise90,
    highlighted: designSystem.designTokens.colorTurquoise95
  },
  brown: {
    normal: designSystem.designTokens.colorBrown90,
    highlighted: designSystem.designTokens.colorBrown95
  }
};
const getFontSize = (avatarInitials, avatarSize) => {
  const widthCode = avatarInitials.length > 1 ? 'wide' : 'narrow';
  return fontSizeMap[avatarSize][widthCode];
};
const getWidthSize = avatarSize => widthSizeMap[avatarSize];
const getBackgroundColor = function () {
  let avatarColor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'accent';
  let isHighlighted = arguments.length > 1 ? arguments[1] : undefined;
  return colorsMap[avatarColor][isHighlighted ? 'highlighted' : 'normal'];
};
const getForegroundColor = avatarColor => {
  return avatarColor === 'accent' ? designSystem.designTokens.colorAccent40 : designSystem.designTokens["color".concat(startCase__default["default"](avatarColor), "50")];
};
const getAvatarStyles = avatarProps => {
  const avatarSize = getWidthSize(avatarProps.size);
  const backgroundColor = getBackgroundColor(avatarProps.color, avatarProps.isHighlighted);
  const foregroundColor = getForegroundColor(avatarProps.color);
  return /*#__PURE__*/react.css("align-items:center;background-color:", backgroundColor, ";border-radius:100%;font-size:", designSystem.designTokens.fontSizeDefault, ";font-weight:", designSystem.designTokens.fontWeight600, ";color:", foregroundColor, ";display:flex;justify-content:center;overflow:hidden;position:relative;fill:", foregroundColor, ";height:", avatarSize, ";width:", avatarSize, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:getAvatarStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF2YXRhci5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNEVZIiwiZmlsZSI6ImF2YXRhci5zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCBzdGFydENhc2UgZnJvbSAnbG9kYXNoL3N0YXJ0Q2FzZSc7XG5pbXBvcnQgeyBUQXZhdGFyUHJvcHMgfSBmcm9tICcuL2F2YXRhcic7XG5cbmNvbnN0IGZvbnRTaXplTWFwID0ge1xuICBzOiB7XG4gICAgbmFycm93OiBkZXNpZ25Ub2tlbnMuZm9udFNpemUzMCxcbiAgICB3aWRlOiBkZXNpZ25Ub2tlbnMuZm9udFNpemUxMCxcbiAgfSxcbiAgbToge1xuICAgIG5hcnJvdzogZGVzaWduVG9rZW5zLmZvbnRTaXplNTAsXG4gICAgd2lkZTogZGVzaWduVG9rZW5zLmZvbnRTaXplMzAsXG4gIH0sXG4gIGw6IHtcbiAgICBuYXJyb3c6IGRlc2lnblRva2Vucy5mb250U2l6ZTkwLFxuICAgIHdpZGU6IGRlc2lnblRva2Vucy5mb250U2l6ZTgwLFxuICB9LFxufTtcblxuY29uc3Qgd2lkdGhTaXplTWFwID0ge1xuICBzOiAnMzJweCcsXG4gIG06ICc0MHB4JyxcbiAgbDogJzEwMHB4Jyxcbn07XG5cbmNvbnN0IGNvbG9yc01hcCA9IHtcbiAgYWNjZW50OiB7XG4gICAgbm9ybWFsOiBkZXNpZ25Ub2tlbnMuY29sb3JBY2NlbnQ5MCxcbiAgICBoaWdobGlnaHRlZDogZGVzaWduVG9rZW5zLmNvbG9yQWNjZW50OTUsXG4gIH0sXG4gIHB1cnBsZToge1xuICAgIG5vcm1hbDogZGVzaWduVG9rZW5zLmNvbG9yUHVycGxlOTAsXG4gICAgaGlnaGxpZ2h0ZWQ6IGRlc2lnblRva2Vucy5jb2xvclB1cnBsZTk1LFxuICB9LFxuICB0dXJxdW9pc2U6IHtcbiAgICBub3JtYWw6IGRlc2lnblRva2Vucy5jb2xvclR1cnF1b2lzZTkwLFxuICAgIGhpZ2hsaWdodGVkOiBkZXNpZ25Ub2tlbnMuY29sb3JUdXJxdW9pc2U5NSxcbiAgfSxcbiAgYnJvd246IHtcbiAgICBub3JtYWw6IGRlc2lnblRva2Vucy5jb2xvckJyb3duOTAsXG4gICAgaGlnaGxpZ2h0ZWQ6IGRlc2lnblRva2Vucy5jb2xvckJyb3duOTUsXG4gIH0sXG59O1xuXG5leHBvcnQgY29uc3QgZ2V0Rm9udFNpemUgPSAoXG4gIGF2YXRhckluaXRpYWxzOiBzdHJpbmcsXG4gIGF2YXRhclNpemU6IFRBdmF0YXJQcm9wc1snc2l6ZSddXG4pID0+IHtcbiAgY29uc3Qgd2lkdGhDb2RlID0gYXZhdGFySW5pdGlhbHMubGVuZ3RoID4gMSA/ICd3aWRlJyA6ICduYXJyb3cnO1xuICByZXR1cm4gZm9udFNpemVNYXBbYXZhdGFyU2l6ZV1bd2lkdGhDb2RlXTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRXaWR0aFNpemUgPSAoYXZhdGFyU2l6ZTogVEF2YXRhclByb3BzWydzaXplJ10pID0+XG4gIHdpZHRoU2l6ZU1hcFthdmF0YXJTaXplXTtcblxuZXhwb3J0IGNvbnN0IGdldEJhY2tncm91bmRDb2xvciA9IChcbiAgYXZhdGFyQ29sb3I6IFRBdmF0YXJQcm9wc1snY29sb3InXSA9ICdhY2NlbnQnLFxuICBpc0hpZ2hsaWdodGVkOiBUQXZhdGFyUHJvcHNbJ2lzSGlnaGxpZ2h0ZWQnXVxuKSA9PiBjb2xvcnNNYXBbYXZhdGFyQ29sb3JdW2lzSGlnaGxpZ2h0ZWQgPyAnaGlnaGxpZ2h0ZWQnIDogJ25vcm1hbCddO1xuXG5leHBvcnQgY29uc3QgZ2V0Rm9yZWdyb3VuZENvbG9yID0gKGF2YXRhckNvbG9yOiBUQXZhdGFyUHJvcHNbJ2NvbG9yJ10pID0+IHtcbiAgcmV0dXJuIGF2YXRhckNvbG9yID09PSAnYWNjZW50J1xuICAgID8gZGVzaWduVG9rZW5zLmNvbG9yQWNjZW50NDBcbiAgICA6IGRlc2lnblRva2Vuc1tcbiAgICAgICAgYGNvbG9yJHtzdGFydENhc2UoYXZhdGFyQ29sb3IpfTUwYCBhcyBrZXlvZiB0eXBlb2YgZGVzaWduVG9rZW5zXG4gICAgICBdO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldEF2YXRhclN0eWxlcyA9IChhdmF0YXJQcm9wczogVEF2YXRhclByb3BzKSA9PiB7XG4gIGNvbnN0IGF2YXRhclNpemUgPSBnZXRXaWR0aFNpemUoYXZhdGFyUHJvcHMuc2l6ZSk7XG4gIGNvbnN0IGJhY2tncm91bmRDb2xvciA9IGdldEJhY2tncm91bmRDb2xvcihcbiAgICBhdmF0YXJQcm9wcy5jb2xvcixcbiAgICBhdmF0YXJQcm9wcy5pc0hpZ2hsaWdodGVkXG4gICk7XG4gIGNvbnN0IGZvcmVncm91bmRDb2xvciA9IGdldEZvcmVncm91bmRDb2xvcihhdmF0YXJQcm9wcy5jb2xvcik7XG4gIHJldHVybiBjc3NgXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2JhY2tncm91bmRDb2xvcn07XG4gICAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgICBmb250LXNpemU6ICR7ZGVzaWduVG9rZW5zLmZvbnRTaXplRGVmYXVsdH07XG4gICAgZm9udC13ZWlnaHQ6ICR7ZGVzaWduVG9rZW5zLmZvbnRXZWlnaHQ2MDB9O1xuICAgIGNvbG9yOiAke2ZvcmVncm91bmRDb2xvcn07XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBmaWxsOiAke2ZvcmVncm91bmRDb2xvcn07XG5cbiAgICBoZWlnaHQ6ICR7YXZhdGFyU2l6ZX07XG4gICAgd2lkdGg6ICR7YXZhdGFyU2l6ZX07XG4gIGA7XG59O1xuIl19 */");
};

function ownKeys(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var _context4, _context5; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context4 = ownKeys(Object(source), !0)).call(_context4, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context5 = ownKeys(Object(source))).call(_context5, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const defaultProps = {
  firstName: '',
  lastName: '',
  isHighlighted: false,
  size: 's',
  color: 'accent'
};
const getFirstChar = str => {
  var _context;
  return typeof str === 'string' ? _sliceInstanceProperty__default["default"](_context = _trimInstanceProperty__default["default"](str).call(str)).call(_context, 0, 1).toUpperCase() : '';
};
const getInitialsFromName = _ref => {
  var _context2;
  let _ref$firstName = _ref.firstName,
    firstName = _ref$firstName === void 0 ? '' : _ref$firstName,
    _ref$lastName = _ref.lastName,
    lastName = _ref$lastName === void 0 ? '' : _ref$lastName;
  return _concatInstanceProperty__default["default"](_context2 = "".concat(getFirstChar(firstName))).call(_context2, getFirstChar(lastName));
};
/**
 * `s` - defines the size. We want a bigger one if the user is on a retina-display
 * `d` - defines the default if the user is not known to Gravatar. It returns a blank image,
 *        which let the initials underneath shine through
 *
 * @see: https://de.gravatar.com/site/implement/images/
 */
const createGravatarImgUrl = function (md5Hash, size) {
  var _context3;
  let multiplyBy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
  const imageSize = getWidthSize(size);
  const sizeAsInt = _parseInt__default["default"](imageSize.replace(/px$/, ''), 10);
  const gravatarSize = sizeAsInt * multiplyBy;
  return _concatInstanceProperty__default["default"](_context3 = "https://www.gravatar.com/avatar/".concat(md5Hash, "?s=")).call(_context3, gravatarSize, "&d=blank");
};
const GravatarImg = props => jsxRuntime.jsx("img", {
  css: /*#__PURE__*/react.css("background-position:center center;background-size:contain;position:relative;z-index:10;", props.isHighlighted ? 'opacity: 0.7;' : '', ";" + (process.env.NODE_ENV === "production" ? "" : ";label:GravatarImg;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF2YXRhci50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeUZZIiwiZmlsZSI6ImF2YXRhci50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZWFjdEVsZW1lbnQsIGNsb25lRWxlbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB7IGZpbHRlckRhdGFBdHRyaWJ1dGVzIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvdXRpbHMnO1xuaW1wb3J0IHtcbiAgZ2V0QXZhdGFyU3R5bGVzLFxuICBnZXRGb250U2l6ZSxcbiAgZ2V0Rm9yZWdyb3VuZENvbG9yLFxuICBnZXRXaWR0aFNpemUsXG59IGZyb20gJy4vYXZhdGFyLnN0eWxlcyc7XG5cbmV4cG9ydCB0eXBlIFRBdmF0YXJQcm9wcyA9IHtcbiAgLyoqXG4gICAqIFRoZSBmaXJzdCBuYW1lIG9mIHRoZSB1c2VyLlxuICAgKi9cbiAgZmlyc3ROYW1lPzogc3RyaW5nO1xuICAvKipcbiAgICogVGhlIGxhc3QgbmFtZSBvZiB0aGUgdXNlci5cbiAgICovXG4gIGxhc3ROYW1lPzogc3RyaW5nO1xuICAvKipcbiAgICogVGhlIGhhc2hlZCBzdHJpbmcgb2YgdGhlIHVzZXIgZ3JhdmF0YXIuXG4gICAqL1xuICBncmF2YXRhckhhc2g6IHN0cmluZztcbiAgLyoqXG4gICAqIEVuaGFuY2VzIHRoZSBhcHBlYXJhbmNlIG9mIHRoZSBhdmF0YXIuXG4gICAqL1xuICBpc0hpZ2hsaWdodGVkPzogYm9vbGVhbjtcbiAgLyoqXG4gICAqIFRoZSBzaXplIG9mIHRoZSByZW5kZXJlZCBhdmF0YXIuXG4gICAqL1xuICBzaXplOiAncycgfCAnbScgfCAnbCc7XG4gIC8qKlxuICAgKiBUaGUgY29sb3Igb2YgdGhlIGF2YXRhci5cbiAgICovXG4gIGNvbG9yPzogJ2FjY2VudCcgfCAncHVycGxlJyB8ICd0dXJxdW9pc2UnIHwgJ2Jyb3duJztcbiAgLyoqIGFuIDxJY29uIC8+IGNvbXBvbmVudFxuICAgKi9cbiAgaWNvbj86IFJlYWN0RWxlbWVudDtcbn07XG5cbmV4cG9ydCB0eXBlIFRHcmF2YXRhckltZ1Byb3BzID0gUGljazxcbiAgVEF2YXRhclByb3BzLFxuICAnZ3JhdmF0YXJIYXNoJyB8ICdpc0hpZ2hsaWdodGVkJyB8ICdzaXplJ1xuPjtcblxuZXhwb3J0IHR5cGUgVEluaXRpYWxzUHJvcHMgPSBQaWNrPFxuICBUQXZhdGFyUHJvcHMsXG4gICdmaXJzdE5hbWUnIHwgJ2xhc3ROYW1lJyB8ICdzaXplJ1xuPjtcblxuY29uc3QgZGVmYXVsdFByb3BzOiBQaWNrPFxuICBUQXZhdGFyUHJvcHMsXG4gICdmaXJzdE5hbWUnIHwgJ2xhc3ROYW1lJyB8ICdpc0hpZ2hsaWdodGVkJyB8ICdzaXplJyB8ICdjb2xvcidcbj4gPSB7XG4gIGZpcnN0TmFtZTogJycsXG4gIGxhc3ROYW1lOiAnJyxcbiAgaXNIaWdobGlnaHRlZDogZmFsc2UsXG4gIHNpemU6ICdzJyxcbiAgY29sb3I6ICdhY2NlbnQnLFxufTtcblxuY29uc3QgZ2V0Rmlyc3RDaGFyID0gKHN0cjogc3RyaW5nKSA9PlxuICB0eXBlb2Ygc3RyID09PSAnc3RyaW5nJyA/IHN0ci50cmltKCkuc2xpY2UoMCwgMSkudG9VcHBlckNhc2UoKSA6ICcnO1xuXG5jb25zdCBnZXRJbml0aWFsc0Zyb21OYW1lID0gKHtcbiAgZmlyc3ROYW1lID0gJycsXG4gIGxhc3ROYW1lID0gJycsXG59OiBQaWNrPFRBdmF0YXJQcm9wcywgJ2ZpcnN0TmFtZScgfCAnbGFzdE5hbWUnPikgPT5cbiAgYCR7Z2V0Rmlyc3RDaGFyKGZpcnN0TmFtZSl9JHtnZXRGaXJzdENoYXIobGFzdE5hbWUpfWA7XG4vKipcbiAqIGBzYCAtIGRlZmluZXMgdGhlIHNpemUuIFdlIHdhbnQgYSBiaWdnZXIgb25lIGlmIHRoZSB1c2VyIGlzIG9uIGEgcmV0aW5hLWRpc3BsYXlcbiAqIGBkYCAtIGRlZmluZXMgdGhlIGRlZmF1bHQgaWYgdGhlIHVzZXIgaXMgbm90IGtub3duIHRvIEdyYXZhdGFyLiBJdCByZXR1cm5zIGEgYmxhbmsgaW1hZ2UsXG4gKiAgICAgICAgd2hpY2ggbGV0IHRoZSBpbml0aWFscyB1bmRlcm5lYXRoIHNoaW5lIHRocm91Z2hcbiAqXG4gKiBAc2VlOiBodHRwczovL2RlLmdyYXZhdGFyLmNvbS9zaXRlL2ltcGxlbWVudC9pbWFnZXMvXG4gKi9cbmNvbnN0IGNyZWF0ZUdyYXZhdGFySW1nVXJsID0gKFxuICBtZDVIYXNoOiBUQXZhdGFyUHJvcHNbJ2dyYXZhdGFySGFzaCddLFxuICBzaXplOiBUQXZhdGFyUHJvcHNbJ3NpemUnXSxcbiAgbXVsdGlwbHlCeTogbnVtYmVyID0gMVxuKSA9PiB7XG4gIGNvbnN0IGltYWdlU2l6ZSA9IGdldFdpZHRoU2l6ZShzaXplKTtcbiAgY29uc3Qgc2l6ZUFzSW50ID0gcGFyc2VJbnQoaW1hZ2VTaXplLnJlcGxhY2UoL3B4JC8sICcnKSwgMTApO1xuICBjb25zdCBncmF2YXRhclNpemUgPSBzaXplQXNJbnQgKiBtdWx0aXBseUJ5O1xuICByZXR1cm4gYGh0dHBzOi8vd3d3LmdyYXZhdGFyLmNvbS9hdmF0YXIvJHttZDVIYXNofT9zPSR7Z3JhdmF0YXJTaXplfSZkPWJsYW5rYDtcbn07XG5cbmNvbnN0IEdyYXZhdGFySW1nID0gKHByb3BzOiBUR3JhdmF0YXJJbWdQcm9wcykgPT4gKFxuICA8aW1nXG4gICAgY3NzPXtjc3NgXG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICAgICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgei1pbmRleDogMTA7XG5cbiAgICAgICR7cHJvcHMuaXNIaWdobGlnaHRlZCA/ICdvcGFjaXR5OiAwLjc7JyA6ICcnfVxuICAgIGB9XG4gICAgc3JjPXtjcmVhdGVHcmF2YXRhckltZ1VybChwcm9wcy5ncmF2YXRhckhhc2gsIHByb3BzLnNpemUpfVxuICAgIHNyY1NldD17W1xuICAgICAgYCR7Y3JlYXRlR3JhdmF0YXJJbWdVcmwocHJvcHMuZ3JhdmF0YXJIYXNoLCBwcm9wcy5zaXplKX0gMXhgLFxuICAgICAgYCR7Y3JlYXRlR3JhdmF0YXJJbWdVcmwocHJvcHMuZ3JhdmF0YXJIYXNoLCBwcm9wcy5zaXplLCAyKX0gMnhgLFxuICAgIF0uam9pbignLCcpfVxuICAgIC8qKlxuICAgICAqIEJhc2VkIG9uIGh0dHBzOi8vd3d3LnczLm9yZy9XQUkvdHV0b3JpYWxzL2ltYWdlcy9kZWNpc2lvbi10cmVlLzpcbiAgICAgKiBpbWFnZSBjb250cmlidXRlcyBtZWFuaW5nIHRvIHRoZSBjdXJyZW50IHBhZ2Ugb3IgY29udGV4dCBhbmQgaXQgc2hvd3MgY29udGVudCB0aGF0IGlzIHJlZHVuZGFudCB0byByZWFsIHRleHQgbmVhcmJ5XG4gICAgICovXG4gICAgYWx0PVwiXCJcbiAgLz5cbik7XG5HcmF2YXRhckltZy5kaXNwbGF5TmFtZSA9ICdHcmF2YXRhckltZyc7XG5cbmNvbnN0IEluaXRpYWxzID0gKHByb3BzOiBUSW5pdGlhbHNQcm9wcykgPT4ge1xuICBjb25zdCBpbml0aWFsc0Zyb21OYW1lID0gZ2V0SW5pdGlhbHNGcm9tTmFtZSh7XG4gICAgZmlyc3ROYW1lOiBwcm9wcy5maXJzdE5hbWUsXG4gICAgbGFzdE5hbWU6IHByb3BzLmxhc3ROYW1lLFxuICB9KTtcbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBjc3M9e2Nzc2BcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBmb250LXNpemU6ICR7Z2V0Rm9udFNpemUoaW5pdGlhbHNGcm9tTmFtZSwgcHJvcHMuc2l6ZSl9O1xuICAgICAgYH1cbiAgICA+XG4gICAgICB7aW5pdGlhbHNGcm9tTmFtZX1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5Jbml0aWFscy5kaXNwbGF5TmFtZSA9ICdJbml0aWFscyc7XG5cbmNvbnN0IEF2YXRhciA9IChwcm9wczogVEF2YXRhclByb3BzKSA9PiB7XG4gIGNvbnN0IGF2YXRhclNpemUgPSBnZXRXaWR0aFNpemUocHJvcHMuc2l6ZSk7XG4gIGNvbnN0IGZvcmVncm91bmRDb2xvciA9IGdldEZvcmVncm91bmRDb2xvcihwcm9wcy5jb2xvcik7XG4gIHJldHVybiAoXG4gICAgPGRpdiBjc3M9e2dldEF2YXRhclN0eWxlcyhwcm9wcyl9IHsuLi5maWx0ZXJEYXRhQXR0cmlidXRlcyhwcm9wcyl9PlxuICAgICAge3Byb3BzPy5pY29uID8gKFxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICBoZWlnaHQ6IGNhbGMoJHthdmF0YXJTaXplfSAtIDQ1JSk7XG4gICAgICAgICAgICB3aWR0aDogY2FsYygke2F2YXRhclNpemV9IC0gNDUlKTtcbiAgICAgICAgICBgfVxuICAgICAgICA+XG4gICAgICAgICAge2Nsb25lRWxlbWVudChwcm9wcz8uaWNvbiwge1xuICAgICAgICAgICAgc2l6ZTogJ3NjYWxlJyxcbiAgICAgICAgICAgIGNvbG9yOiBmb3JlZ3JvdW5kQ29sb3IsXG4gICAgICAgICAgICBiYWNrZ3JvdW5kY29sb3I6IGZvcmVncm91bmRDb2xvcixcbiAgICAgICAgICB9KX1cbiAgICAgICAgPC9kaXY+XG4gICAgICApIDogKFxuICAgICAgICA8PlxuICAgICAgICAgIDxHcmF2YXRhckltZ1xuICAgICAgICAgICAgZ3JhdmF0YXJIYXNoPXtwcm9wcy5ncmF2YXRhckhhc2h9XG4gICAgICAgICAgICBzaXplPXtwcm9wcy5zaXplfVxuICAgICAgICAgICAgaXNIaWdobGlnaHRlZD17cHJvcHMuaXNIaWdobGlnaHRlZH1cbiAgICAgICAgICAvPlxuICAgICAgICAgIDxJbml0aWFsc1xuICAgICAgICAgICAgc2l6ZT17cHJvcHMuc2l6ZX1cbiAgICAgICAgICAgIGZpcnN0TmFtZT17cHJvcHMuZmlyc3ROYW1lfVxuICAgICAgICAgICAgbGFzdE5hbWU9e3Byb3BzLmxhc3ROYW1lfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvPlxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5BdmF0YXIuZGlzcGxheU5hbWUgPSAnQXZhdGFyJztcbkF2YXRhci5kZWZhdWx0UHJvcHMgPSBkZWZhdWx0UHJvcHM7XG5cbmV4cG9ydCBkZWZhdWx0IEF2YXRhcjtcbiJdfQ== */"),
  src: createGravatarImgUrl(props.gravatarHash, props.size),
  srcSet: ["".concat(createGravatarImgUrl(props.gravatarHash, props.size), " 1x"), "".concat(createGravatarImgUrl(props.gravatarHash, props.size, 2), " 2x")].join(',')
  /**
   * Based on https://www.w3.org/WAI/tutorials/images/decision-tree/:
   * image contributes meaning to the current page or context and it shows content that is redundant to real text nearby
   */,
  alt: ""
});
GravatarImg.displayName = 'GravatarImg';
const Initials = props => {
  const initialsFromName = getInitialsFromName({
    firstName: props.firstName,
    lastName: props.lastName
  });
  return jsxRuntime.jsx("div", {
    css: /*#__PURE__*/react.css("position:absolute;font-size:", getFontSize(initialsFromName, props.size), ";" + (process.env.NODE_ENV === "production" ? "" : ";label:Initials;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF2YXRhci50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0hjIiwiZmlsZSI6ImF2YXRhci50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZWFjdEVsZW1lbnQsIGNsb25lRWxlbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB7IGZpbHRlckRhdGFBdHRyaWJ1dGVzIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvdXRpbHMnO1xuaW1wb3J0IHtcbiAgZ2V0QXZhdGFyU3R5bGVzLFxuICBnZXRGb250U2l6ZSxcbiAgZ2V0Rm9yZWdyb3VuZENvbG9yLFxuICBnZXRXaWR0aFNpemUsXG59IGZyb20gJy4vYXZhdGFyLnN0eWxlcyc7XG5cbmV4cG9ydCB0eXBlIFRBdmF0YXJQcm9wcyA9IHtcbiAgLyoqXG4gICAqIFRoZSBmaXJzdCBuYW1lIG9mIHRoZSB1c2VyLlxuICAgKi9cbiAgZmlyc3ROYW1lPzogc3RyaW5nO1xuICAvKipcbiAgICogVGhlIGxhc3QgbmFtZSBvZiB0aGUgdXNlci5cbiAgICovXG4gIGxhc3ROYW1lPzogc3RyaW5nO1xuICAvKipcbiAgICogVGhlIGhhc2hlZCBzdHJpbmcgb2YgdGhlIHVzZXIgZ3JhdmF0YXIuXG4gICAqL1xuICBncmF2YXRhckhhc2g6IHN0cmluZztcbiAgLyoqXG4gICAqIEVuaGFuY2VzIHRoZSBhcHBlYXJhbmNlIG9mIHRoZSBhdmF0YXIuXG4gICAqL1xuICBpc0hpZ2hsaWdodGVkPzogYm9vbGVhbjtcbiAgLyoqXG4gICAqIFRoZSBzaXplIG9mIHRoZSByZW5kZXJlZCBhdmF0YXIuXG4gICAqL1xuICBzaXplOiAncycgfCAnbScgfCAnbCc7XG4gIC8qKlxuICAgKiBUaGUgY29sb3Igb2YgdGhlIGF2YXRhci5cbiAgICovXG4gIGNvbG9yPzogJ2FjY2VudCcgfCAncHVycGxlJyB8ICd0dXJxdW9pc2UnIHwgJ2Jyb3duJztcbiAgLyoqIGFuIDxJY29uIC8+IGNvbXBvbmVudFxuICAgKi9cbiAgaWNvbj86IFJlYWN0RWxlbWVudDtcbn07XG5cbmV4cG9ydCB0eXBlIFRHcmF2YXRhckltZ1Byb3BzID0gUGljazxcbiAgVEF2YXRhclByb3BzLFxuICAnZ3JhdmF0YXJIYXNoJyB8ICdpc0hpZ2hsaWdodGVkJyB8ICdzaXplJ1xuPjtcblxuZXhwb3J0IHR5cGUgVEluaXRpYWxzUHJvcHMgPSBQaWNrPFxuICBUQXZhdGFyUHJvcHMsXG4gICdmaXJzdE5hbWUnIHwgJ2xhc3ROYW1lJyB8ICdzaXplJ1xuPjtcblxuY29uc3QgZGVmYXVsdFByb3BzOiBQaWNrPFxuICBUQXZhdGFyUHJvcHMsXG4gICdmaXJzdE5hbWUnIHwgJ2xhc3ROYW1lJyB8ICdpc0hpZ2hsaWdodGVkJyB8ICdzaXplJyB8ICdjb2xvcidcbj4gPSB7XG4gIGZpcnN0TmFtZTogJycsXG4gIGxhc3ROYW1lOiAnJyxcbiAgaXNIaWdobGlnaHRlZDogZmFsc2UsXG4gIHNpemU6ICdzJyxcbiAgY29sb3I6ICdhY2NlbnQnLFxufTtcblxuY29uc3QgZ2V0Rmlyc3RDaGFyID0gKHN0cjogc3RyaW5nKSA9PlxuICB0eXBlb2Ygc3RyID09PSAnc3RyaW5nJyA/IHN0ci50cmltKCkuc2xpY2UoMCwgMSkudG9VcHBlckNhc2UoKSA6ICcnO1xuXG5jb25zdCBnZXRJbml0aWFsc0Zyb21OYW1lID0gKHtcbiAgZmlyc3ROYW1lID0gJycsXG4gIGxhc3ROYW1lID0gJycsXG59OiBQaWNrPFRBdmF0YXJQcm9wcywgJ2ZpcnN0TmFtZScgfCAnbGFzdE5hbWUnPikgPT5cbiAgYCR7Z2V0Rmlyc3RDaGFyKGZpcnN0TmFtZSl9JHtnZXRGaXJzdENoYXIobGFzdE5hbWUpfWA7XG4vKipcbiAqIGBzYCAtIGRlZmluZXMgdGhlIHNpemUuIFdlIHdhbnQgYSBiaWdnZXIgb25lIGlmIHRoZSB1c2VyIGlzIG9uIGEgcmV0aW5hLWRpc3BsYXlcbiAqIGBkYCAtIGRlZmluZXMgdGhlIGRlZmF1bHQgaWYgdGhlIHVzZXIgaXMgbm90IGtub3duIHRvIEdyYXZhdGFyLiBJdCByZXR1cm5zIGEgYmxhbmsgaW1hZ2UsXG4gKiAgICAgICAgd2hpY2ggbGV0IHRoZSBpbml0aWFscyB1bmRlcm5lYXRoIHNoaW5lIHRocm91Z2hcbiAqXG4gKiBAc2VlOiBodHRwczovL2RlLmdyYXZhdGFyLmNvbS9zaXRlL2ltcGxlbWVudC9pbWFnZXMvXG4gKi9cbmNvbnN0IGNyZWF0ZUdyYXZhdGFySW1nVXJsID0gKFxuICBtZDVIYXNoOiBUQXZhdGFyUHJvcHNbJ2dyYXZhdGFySGFzaCddLFxuICBzaXplOiBUQXZhdGFyUHJvcHNbJ3NpemUnXSxcbiAgbXVsdGlwbHlCeTogbnVtYmVyID0gMVxuKSA9PiB7XG4gIGNvbnN0IGltYWdlU2l6ZSA9IGdldFdpZHRoU2l6ZShzaXplKTtcbiAgY29uc3Qgc2l6ZUFzSW50ID0gcGFyc2VJbnQoaW1hZ2VTaXplLnJlcGxhY2UoL3B4JC8sICcnKSwgMTApO1xuICBjb25zdCBncmF2YXRhclNpemUgPSBzaXplQXNJbnQgKiBtdWx0aXBseUJ5O1xuICByZXR1cm4gYGh0dHBzOi8vd3d3LmdyYXZhdGFyLmNvbS9hdmF0YXIvJHttZDVIYXNofT9zPSR7Z3JhdmF0YXJTaXplfSZkPWJsYW5rYDtcbn07XG5cbmNvbnN0IEdyYXZhdGFySW1nID0gKHByb3BzOiBUR3JhdmF0YXJJbWdQcm9wcykgPT4gKFxuICA8aW1nXG4gICAgY3NzPXtjc3NgXG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICAgICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgei1pbmRleDogMTA7XG5cbiAgICAgICR7cHJvcHMuaXNIaWdobGlnaHRlZCA/ICdvcGFjaXR5OiAwLjc7JyA6ICcnfVxuICAgIGB9XG4gICAgc3JjPXtjcmVhdGVHcmF2YXRhckltZ1VybChwcm9wcy5ncmF2YXRhckhhc2gsIHByb3BzLnNpemUpfVxuICAgIHNyY1NldD17W1xuICAgICAgYCR7Y3JlYXRlR3JhdmF0YXJJbWdVcmwocHJvcHMuZ3JhdmF0YXJIYXNoLCBwcm9wcy5zaXplKX0gMXhgLFxuICAgICAgYCR7Y3JlYXRlR3JhdmF0YXJJbWdVcmwocHJvcHMuZ3JhdmF0YXJIYXNoLCBwcm9wcy5zaXplLCAyKX0gMnhgLFxuICAgIF0uam9pbignLCcpfVxuICAgIC8qKlxuICAgICAqIEJhc2VkIG9uIGh0dHBzOi8vd3d3LnczLm9yZy9XQUkvdHV0b3JpYWxzL2ltYWdlcy9kZWNpc2lvbi10cmVlLzpcbiAgICAgKiBpbWFnZSBjb250cmlidXRlcyBtZWFuaW5nIHRvIHRoZSBjdXJyZW50IHBhZ2Ugb3IgY29udGV4dCBhbmQgaXQgc2hvd3MgY29udGVudCB0aGF0IGlzIHJlZHVuZGFudCB0byByZWFsIHRleHQgbmVhcmJ5XG4gICAgICovXG4gICAgYWx0PVwiXCJcbiAgLz5cbik7XG5HcmF2YXRhckltZy5kaXNwbGF5TmFtZSA9ICdHcmF2YXRhckltZyc7XG5cbmNvbnN0IEluaXRpYWxzID0gKHByb3BzOiBUSW5pdGlhbHNQcm9wcykgPT4ge1xuICBjb25zdCBpbml0aWFsc0Zyb21OYW1lID0gZ2V0SW5pdGlhbHNGcm9tTmFtZSh7XG4gICAgZmlyc3ROYW1lOiBwcm9wcy5maXJzdE5hbWUsXG4gICAgbGFzdE5hbWU6IHByb3BzLmxhc3ROYW1lLFxuICB9KTtcbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBjc3M9e2Nzc2BcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBmb250LXNpemU6ICR7Z2V0Rm9udFNpemUoaW5pdGlhbHNGcm9tTmFtZSwgcHJvcHMuc2l6ZSl9O1xuICAgICAgYH1cbiAgICA+XG4gICAgICB7aW5pdGlhbHNGcm9tTmFtZX1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5Jbml0aWFscy5kaXNwbGF5TmFtZSA9ICdJbml0aWFscyc7XG5cbmNvbnN0IEF2YXRhciA9IChwcm9wczogVEF2YXRhclByb3BzKSA9PiB7XG4gIGNvbnN0IGF2YXRhclNpemUgPSBnZXRXaWR0aFNpemUocHJvcHMuc2l6ZSk7XG4gIGNvbnN0IGZvcmVncm91bmRDb2xvciA9IGdldEZvcmVncm91bmRDb2xvcihwcm9wcy5jb2xvcik7XG4gIHJldHVybiAoXG4gICAgPGRpdiBjc3M9e2dldEF2YXRhclN0eWxlcyhwcm9wcyl9IHsuLi5maWx0ZXJEYXRhQXR0cmlidXRlcyhwcm9wcyl9PlxuICAgICAge3Byb3BzPy5pY29uID8gKFxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgICBoZWlnaHQ6IGNhbGMoJHthdmF0YXJTaXplfSAtIDQ1JSk7XG4gICAgICAgICAgICB3aWR0aDogY2FsYygke2F2YXRhclNpemV9IC0gNDUlKTtcbiAgICAgICAgICBgfVxuICAgICAgICA+XG4gICAgICAgICAge2Nsb25lRWxlbWVudChwcm9wcz8uaWNvbiwge1xuICAgICAgICAgICAgc2l6ZTogJ3NjYWxlJyxcbiAgICAgICAgICAgIGNvbG9yOiBmb3JlZ3JvdW5kQ29sb3IsXG4gICAgICAgICAgICBiYWNrZ3JvdW5kY29sb3I6IGZvcmVncm91bmRDb2xvcixcbiAgICAgICAgICB9KX1cbiAgICAgICAgPC9kaXY+XG4gICAgICApIDogKFxuICAgICAgICA8PlxuICAgICAgICAgIDxHcmF2YXRhckltZ1xuICAgICAgICAgICAgZ3JhdmF0YXJIYXNoPXtwcm9wcy5ncmF2YXRhckhhc2h9XG4gICAgICAgICAgICBzaXplPXtwcm9wcy5zaXplfVxuICAgICAgICAgICAgaXNIaWdobGlnaHRlZD17cHJvcHMuaXNIaWdobGlnaHRlZH1cbiAgICAgICAgICAvPlxuICAgICAgICAgIDxJbml0aWFsc1xuICAgICAgICAgICAgc2l6ZT17cHJvcHMuc2l6ZX1cbiAgICAgICAgICAgIGZpcnN0TmFtZT17cHJvcHMuZmlyc3ROYW1lfVxuICAgICAgICAgICAgbGFzdE5hbWU9e3Byb3BzLmxhc3ROYW1lfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvPlxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5BdmF0YXIuZGlzcGxheU5hbWUgPSAnQXZhdGFyJztcbkF2YXRhci5kZWZhdWx0UHJvcHMgPSBkZWZhdWx0UHJvcHM7XG5cbmV4cG9ydCBkZWZhdWx0IEF2YXRhcjtcbiJdfQ== */"),
    children: initialsFromName
  });
};
Initials.displayName = 'Initials';
const Avatar = props => {
  const avatarSize = getWidthSize(props.size);
  const foregroundColor = getForegroundColor(props.color);
  return jsxRuntime.jsx("div", _objectSpread(_objectSpread({
    css: getAvatarStyles(props)
  }, utils.filterDataAttributes(props)), {}, {
    children: props !== null && props !== void 0 && props.icon ? jsxRuntime.jsx("div", {
      css: /*#__PURE__*/react.css("height:calc(", avatarSize, " - 45%);width:calc(", avatarSize, " - 45%);" + (process.env.NODE_ENV === "production" ? "" : ";label:Avatar;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF2YXRhci50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0lrQiIsImZpbGUiOiJhdmF0YXIudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVhY3RFbGVtZW50LCBjbG9uZUVsZW1lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgeyBmaWx0ZXJEYXRhQXR0cmlidXRlcyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L3V0aWxzJztcbmltcG9ydCB7XG4gIGdldEF2YXRhclN0eWxlcyxcbiAgZ2V0Rm9udFNpemUsXG4gIGdldEZvcmVncm91bmRDb2xvcixcbiAgZ2V0V2lkdGhTaXplLFxufSBmcm9tICcuL2F2YXRhci5zdHlsZXMnO1xuXG5leHBvcnQgdHlwZSBUQXZhdGFyUHJvcHMgPSB7XG4gIC8qKlxuICAgKiBUaGUgZmlyc3QgbmFtZSBvZiB0aGUgdXNlci5cbiAgICovXG4gIGZpcnN0TmFtZT86IHN0cmluZztcbiAgLyoqXG4gICAqIFRoZSBsYXN0IG5hbWUgb2YgdGhlIHVzZXIuXG4gICAqL1xuICBsYXN0TmFtZT86IHN0cmluZztcbiAgLyoqXG4gICAqIFRoZSBoYXNoZWQgc3RyaW5nIG9mIHRoZSB1c2VyIGdyYXZhdGFyLlxuICAgKi9cbiAgZ3JhdmF0YXJIYXNoOiBzdHJpbmc7XG4gIC8qKlxuICAgKiBFbmhhbmNlcyB0aGUgYXBwZWFyYW5jZSBvZiB0aGUgYXZhdGFyLlxuICAgKi9cbiAgaXNIaWdobGlnaHRlZD86IGJvb2xlYW47XG4gIC8qKlxuICAgKiBUaGUgc2l6ZSBvZiB0aGUgcmVuZGVyZWQgYXZhdGFyLlxuICAgKi9cbiAgc2l6ZTogJ3MnIHwgJ20nIHwgJ2wnO1xuICAvKipcbiAgICogVGhlIGNvbG9yIG9mIHRoZSBhdmF0YXIuXG4gICAqL1xuICBjb2xvcj86ICdhY2NlbnQnIHwgJ3B1cnBsZScgfCAndHVycXVvaXNlJyB8ICdicm93bic7XG4gIC8qKiBhbiA8SWNvbiAvPiBjb21wb25lbnRcbiAgICovXG4gIGljb24/OiBSZWFjdEVsZW1lbnQ7XG59O1xuXG5leHBvcnQgdHlwZSBUR3JhdmF0YXJJbWdQcm9wcyA9IFBpY2s8XG4gIFRBdmF0YXJQcm9wcyxcbiAgJ2dyYXZhdGFySGFzaCcgfCAnaXNIaWdobGlnaHRlZCcgfCAnc2l6ZSdcbj47XG5cbmV4cG9ydCB0eXBlIFRJbml0aWFsc1Byb3BzID0gUGljazxcbiAgVEF2YXRhclByb3BzLFxuICAnZmlyc3ROYW1lJyB8ICdsYXN0TmFtZScgfCAnc2l6ZSdcbj47XG5cbmNvbnN0IGRlZmF1bHRQcm9wczogUGljazxcbiAgVEF2YXRhclByb3BzLFxuICAnZmlyc3ROYW1lJyB8ICdsYXN0TmFtZScgfCAnaXNIaWdobGlnaHRlZCcgfCAnc2l6ZScgfCAnY29sb3InXG4+ID0ge1xuICBmaXJzdE5hbWU6ICcnLFxuICBsYXN0TmFtZTogJycsXG4gIGlzSGlnaGxpZ2h0ZWQ6IGZhbHNlLFxuICBzaXplOiAncycsXG4gIGNvbG9yOiAnYWNjZW50Jyxcbn07XG5cbmNvbnN0IGdldEZpcnN0Q2hhciA9IChzdHI6IHN0cmluZykgPT5cbiAgdHlwZW9mIHN0ciA9PT0gJ3N0cmluZycgPyBzdHIudHJpbSgpLnNsaWNlKDAsIDEpLnRvVXBwZXJDYXNlKCkgOiAnJztcblxuY29uc3QgZ2V0SW5pdGlhbHNGcm9tTmFtZSA9ICh7XG4gIGZpcnN0TmFtZSA9ICcnLFxuICBsYXN0TmFtZSA9ICcnLFxufTogUGljazxUQXZhdGFyUHJvcHMsICdmaXJzdE5hbWUnIHwgJ2xhc3ROYW1lJz4pID0+XG4gIGAke2dldEZpcnN0Q2hhcihmaXJzdE5hbWUpfSR7Z2V0Rmlyc3RDaGFyKGxhc3ROYW1lKX1gO1xuLyoqXG4gKiBgc2AgLSBkZWZpbmVzIHRoZSBzaXplLiBXZSB3YW50IGEgYmlnZ2VyIG9uZSBpZiB0aGUgdXNlciBpcyBvbiBhIHJldGluYS1kaXNwbGF5XG4gKiBgZGAgLSBkZWZpbmVzIHRoZSBkZWZhdWx0IGlmIHRoZSB1c2VyIGlzIG5vdCBrbm93biB0byBHcmF2YXRhci4gSXQgcmV0dXJucyBhIGJsYW5rIGltYWdlLFxuICogICAgICAgIHdoaWNoIGxldCB0aGUgaW5pdGlhbHMgdW5kZXJuZWF0aCBzaGluZSB0aHJvdWdoXG4gKlxuICogQHNlZTogaHR0cHM6Ly9kZS5ncmF2YXRhci5jb20vc2l0ZS9pbXBsZW1lbnQvaW1hZ2VzL1xuICovXG5jb25zdCBjcmVhdGVHcmF2YXRhckltZ1VybCA9IChcbiAgbWQ1SGFzaDogVEF2YXRhclByb3BzWydncmF2YXRhckhhc2gnXSxcbiAgc2l6ZTogVEF2YXRhclByb3BzWydzaXplJ10sXG4gIG11bHRpcGx5Qnk6IG51bWJlciA9IDFcbikgPT4ge1xuICBjb25zdCBpbWFnZVNpemUgPSBnZXRXaWR0aFNpemUoc2l6ZSk7XG4gIGNvbnN0IHNpemVBc0ludCA9IHBhcnNlSW50KGltYWdlU2l6ZS5yZXBsYWNlKC9weCQvLCAnJyksIDEwKTtcbiAgY29uc3QgZ3JhdmF0YXJTaXplID0gc2l6ZUFzSW50ICogbXVsdGlwbHlCeTtcbiAgcmV0dXJuIGBodHRwczovL3d3dy5ncmF2YXRhci5jb20vYXZhdGFyLyR7bWQ1SGFzaH0/cz0ke2dyYXZhdGFyU2l6ZX0mZD1ibGFua2A7XG59O1xuXG5jb25zdCBHcmF2YXRhckltZyA9IChwcm9wczogVEdyYXZhdGFySW1nUHJvcHMpID0+IChcbiAgPGltZ1xuICAgIGNzcz17Y3NzYFxuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIHotaW5kZXg6IDEwO1xuXG4gICAgICAke3Byb3BzLmlzSGlnaGxpZ2h0ZWQgPyAnb3BhY2l0eTogMC43OycgOiAnJ31cbiAgICBgfVxuICAgIHNyYz17Y3JlYXRlR3JhdmF0YXJJbWdVcmwocHJvcHMuZ3JhdmF0YXJIYXNoLCBwcm9wcy5zaXplKX1cbiAgICBzcmNTZXQ9e1tcbiAgICAgIGAke2NyZWF0ZUdyYXZhdGFySW1nVXJsKHByb3BzLmdyYXZhdGFySGFzaCwgcHJvcHMuc2l6ZSl9IDF4YCxcbiAgICAgIGAke2NyZWF0ZUdyYXZhdGFySW1nVXJsKHByb3BzLmdyYXZhdGFySGFzaCwgcHJvcHMuc2l6ZSwgMil9IDJ4YCxcbiAgICBdLmpvaW4oJywnKX1cbiAgICAvKipcbiAgICAgKiBCYXNlZCBvbiBodHRwczovL3d3dy53My5vcmcvV0FJL3R1dG9yaWFscy9pbWFnZXMvZGVjaXNpb24tdHJlZS86XG4gICAgICogaW1hZ2UgY29udHJpYnV0ZXMgbWVhbmluZyB0byB0aGUgY3VycmVudCBwYWdlIG9yIGNvbnRleHQgYW5kIGl0IHNob3dzIGNvbnRlbnQgdGhhdCBpcyByZWR1bmRhbnQgdG8gcmVhbCB0ZXh0IG5lYXJieVxuICAgICAqL1xuICAgIGFsdD1cIlwiXG4gIC8+XG4pO1xuR3JhdmF0YXJJbWcuZGlzcGxheU5hbWUgPSAnR3JhdmF0YXJJbWcnO1xuXG5jb25zdCBJbml0aWFscyA9IChwcm9wczogVEluaXRpYWxzUHJvcHMpID0+IHtcbiAgY29uc3QgaW5pdGlhbHNGcm9tTmFtZSA9IGdldEluaXRpYWxzRnJvbU5hbWUoe1xuICAgIGZpcnN0TmFtZTogcHJvcHMuZmlyc3ROYW1lLFxuICAgIGxhc3ROYW1lOiBwcm9wcy5sYXN0TmFtZSxcbiAgfSk7XG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgY3NzPXtjc3NgXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgZm9udC1zaXplOiAke2dldEZvbnRTaXplKGluaXRpYWxzRnJvbU5hbWUsIHByb3BzLnNpemUpfTtcbiAgICAgIGB9XG4gICAgPlxuICAgICAge2luaXRpYWxzRnJvbU5hbWV9XG4gICAgPC9kaXY+XG4gICk7XG59O1xuSW5pdGlhbHMuZGlzcGxheU5hbWUgPSAnSW5pdGlhbHMnO1xuXG5jb25zdCBBdmF0YXIgPSAocHJvcHM6IFRBdmF0YXJQcm9wcykgPT4ge1xuICBjb25zdCBhdmF0YXJTaXplID0gZ2V0V2lkdGhTaXplKHByb3BzLnNpemUpO1xuICBjb25zdCBmb3JlZ3JvdW5kQ29sb3IgPSBnZXRGb3JlZ3JvdW5kQ29sb3IocHJvcHMuY29sb3IpO1xuICByZXR1cm4gKFxuICAgIDxkaXYgY3NzPXtnZXRBdmF0YXJTdHlsZXMocHJvcHMpfSB7Li4uZmlsdGVyRGF0YUF0dHJpYnV0ZXMocHJvcHMpfT5cbiAgICAgIHtwcm9wcz8uaWNvbiA/IChcbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgaGVpZ2h0OiBjYWxjKCR7YXZhdGFyU2l6ZX0gLSA0NSUpO1xuICAgICAgICAgICAgd2lkdGg6IGNhbGMoJHthdmF0YXJTaXplfSAtIDQ1JSk7XG4gICAgICAgICAgYH1cbiAgICAgICAgPlxuICAgICAgICAgIHtjbG9uZUVsZW1lbnQocHJvcHM/Lmljb24sIHtcbiAgICAgICAgICAgIHNpemU6ICdzY2FsZScsXG4gICAgICAgICAgICBjb2xvcjogZm9yZWdyb3VuZENvbG9yLFxuICAgICAgICAgICAgYmFja2dyb3VuZGNvbG9yOiBmb3JlZ3JvdW5kQ29sb3IsXG4gICAgICAgICAgfSl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgKSA6IChcbiAgICAgICAgPD5cbiAgICAgICAgICA8R3JhdmF0YXJJbWdcbiAgICAgICAgICAgIGdyYXZhdGFySGFzaD17cHJvcHMuZ3JhdmF0YXJIYXNofVxuICAgICAgICAgICAgc2l6ZT17cHJvcHMuc2l6ZX1cbiAgICAgICAgICAgIGlzSGlnaGxpZ2h0ZWQ9e3Byb3BzLmlzSGlnaGxpZ2h0ZWR9XG4gICAgICAgICAgLz5cbiAgICAgICAgICA8SW5pdGlhbHNcbiAgICAgICAgICAgIHNpemU9e3Byb3BzLnNpemV9XG4gICAgICAgICAgICBmaXJzdE5hbWU9e3Byb3BzLmZpcnN0TmFtZX1cbiAgICAgICAgICAgIGxhc3ROYW1lPXtwcm9wcy5sYXN0TmFtZX1cbiAgICAgICAgICAvPlxuICAgICAgICA8Lz5cbiAgICAgICl9XG4gICAgPC9kaXY+XG4gICk7XG59O1xuQXZhdGFyLmRpc3BsYXlOYW1lID0gJ0F2YXRhcic7XG5BdmF0YXIuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuXG5leHBvcnQgZGVmYXVsdCBBdmF0YXI7XG4iXX0= */"),
      children: /*#__PURE__*/react$1.cloneElement(props === null || props === void 0 ? void 0 : props.icon, {
        size: 'scale',
        color: foregroundColor,
        backgroundcolor: foregroundColor
      })
    }) : jsxRuntime.jsxs(jsxRuntime.Fragment, {
      children: [jsxRuntime.jsx(GravatarImg, {
        gravatarHash: props.gravatarHash,
        size: props.size,
        isHighlighted: props.isHighlighted
      }), jsxRuntime.jsx(Initials, {
        size: props.size,
        firstName: props.firstName,
        lastName: props.lastName
      })]
    })
  }));
};
Avatar.propTypes = process.env.NODE_ENV !== "production" ? {
  firstName: _pt__default["default"].string,
  lastName: _pt__default["default"].string,
  gravatarHash: _pt__default["default"].string.isRequired,
  isHighlighted: _pt__default["default"].bool,
  size: _pt__default["default"].oneOf(['s', 'm', 'l']).isRequired,
  color: _pt__default["default"].oneOf(['accent', 'purple', 'turquoise', 'brown']),
  icon: _pt__default["default"].element
} : {};
Avatar.displayName = 'Avatar';
Avatar.defaultProps = defaultProps;
var Avatar$1 = Avatar;

// NOTE: This string will be replaced on build time with the package version.
var version = "16.11.0";

exports["default"] = Avatar$1;
exports.version = version;
