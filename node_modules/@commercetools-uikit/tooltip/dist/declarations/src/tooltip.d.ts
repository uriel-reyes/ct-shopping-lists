import { Modifiers } from 'popper.js';
import { ComponentType, FocusEvent, ChangeEvent, CSSProperties, ReactElement } from 'react';
export type TComponents = {
    BodyComponent?: ComponentType;
    TooltipWrapperComponent?: ComponentType;
    WrapperComponent?: ComponentType;
};
export type TTooltipProps = {
    children: ReactElement;
    showAfter?: number;
    closeAfter?: number;
    styles?: Record<string, CSSProperties>;
    off: boolean;
    id?: string;
    onClose?: (e?: ChangeEvent | FocusEvent) => void;
    onOpen?: (e?: ChangeEvent | FocusEvent) => void;
    isOpen?: boolean;
    placement?: 'top' | 'top-start' | 'top-end' | 'right' | 'right-start' | 'right-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end';
    title: string;
    modifiers?: Modifiers;
    components?: TComponents;
    horizontalConstraint?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 'scale' | 'auto';
};
export type TTooltipState = 'closed' | 'entering' | 'opened' | 'exiting';
declare const Tooltip: {
    (props: TTooltipProps): import("@emotion/react/jsx-runtime").JSX.Element;
    displayName: string;
    defaultProps: Pick<TTooltipProps, "off" | "horizontalConstraint" | "showAfter" | "closeAfter" | "placement">;
};
export default Tooltip;
