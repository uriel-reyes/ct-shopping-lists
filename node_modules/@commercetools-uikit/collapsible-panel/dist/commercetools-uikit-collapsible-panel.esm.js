import _styled from '@emotion/styled/base';
import _pt from 'prop-types';
import { forwardRef, cloneElement } from 'react';
import isNil from 'lodash/isNil';
import { createSequentialId, filterDataAttributes, warning } from '@commercetools-uikit/utils';
import AccessibleButton from '@commercetools-uikit/accessible-button';
import { useFieldId } from '@commercetools-uikit/hooks';
import Spacings from '@commercetools-uikit/spacings';
import Text from '@commercetools-uikit/text';
import CollapsibleMotion from '@commercetools-uikit/collapsible-motion';
import Constraints from '@commercetools-uikit/constraints';
import { css } from '@emotion/react';
import { designTokens } from '@commercetools-uikit/design-system';
import { AngleRightIcon, AngleDownIcon } from '@commercetools-uikit/icons';
import { jsx, Fragment, jsxs } from '@emotion/react/jsx-runtime';

function _EMOTION_STRINGIFIED_CSS_ERROR__$1() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }
const getArrowColor = _ref2 => {
  let tone = _ref2.tone,
    isDisabled = _ref2.isDisabled;
  if (isDisabled) return 'neutral60';
  if (tone === 'urgent') return 'warning';
  return 'solid';
};
var _ref$1 = process.env.NODE_ENV === "production" ? {
  name: "1wnowod",
  styles: "display:flex;align-items:center;justify-content:center"
} : {
  name: "den7ns-HeaderIcon",
  styles: "display:flex;align-items:center;justify-content:center;label:HeaderIcon;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlYWRlci1pY29uLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5QlciLCJmaWxlIjoiaGVhZGVyLWljb24udHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5pbXBvcnQgeyBBbmdsZURvd25JY29uLCBBbmdsZVJpZ2h0SWNvbiB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2ljb25zJztcblxuY29uc3QgZ2V0QXJyb3dDb2xvciA9ICh7XG4gIHRvbmUsXG4gIGlzRGlzYWJsZWQsXG59OiBQaWNrPFRIZWFkZXJJY29uLCAnaXNEaXNhYmxlZCcgfCAndG9uZSc+KSA9PiB7XG4gIGlmIChpc0Rpc2FibGVkKSByZXR1cm4gJ25ldXRyYWw2MCc7XG4gIGlmICh0b25lID09PSAndXJnZW50JykgcmV0dXJuICd3YXJuaW5nJztcblxuICByZXR1cm4gJ3NvbGlkJztcbn07XG5cbnR5cGUgVEhlYWRlckljb24gPSB7XG4gIHRvbmU/OiAndXJnZW50JyB8ICdwcmltYXJ5JztcbiAgaXNDbG9zZWQ6IGJvb2xlYW47XG4gIGlzRGlzYWJsZWQ6IGJvb2xlYW47XG4gIHNpemU6ICdzbWFsbCcgfCAnbWVkaXVtJyB8ICdiaWcnIHwgJ3NjYWxlJztcbn07XG5cbmNvbnN0IEhlYWRlckljb24gPSAocHJvcHM6IFRIZWFkZXJJY29uKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgY3NzPXtbXG4gICAgICAgIGNzc2BcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGAsXG4gICAgICAgIHByb3BzLmlzRGlzYWJsZWQgJiZcbiAgICAgICAgICBjc3NgXG4gICAgICAgICAgICBib3gtc2hhZG93OiBub25lO1xuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWRcbiAgICAgICAgICAgICAgJHtkZXNpZ25Ub2tlbnMuYm9yZGVyRm9yQ29sbGFwc2libGVQYW5lbEhlYWRlckljb25XaGVuRGlzYWJsZWR9O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yQ29sbGFwc2libGVQYW5lbEhlYWRlckljb25XaGVuRGlzYWJsZWR9O1xuICAgICAgICAgIGAsXG4gICAgICBdfVxuICAgID5cbiAgICAgIHtwcm9wcy5pc0Nsb3NlZCA/IChcbiAgICAgICAgPEFuZ2xlUmlnaHRJY29uXG4gICAgICAgICAgY29sb3I9e2dldEFycm93Q29sb3Ioe1xuICAgICAgICAgICAgdG9uZTogcHJvcHMudG9uZSxcbiAgICAgICAgICAgIGlzRGlzYWJsZWQ6IHByb3BzLmlzRGlzYWJsZWQsXG4gICAgICAgICAgfSl9XG4gICAgICAgICAgc2l6ZT17cHJvcHMuc2l6ZX1cbiAgICAgICAgLz5cbiAgICAgICkgOiAoXG4gICAgICAgIDxBbmdsZURvd25JY29uXG4gICAgICAgICAgY29sb3I9e2dldEFycm93Q29sb3Ioe1xuICAgICAgICAgICAgdG9uZTogcHJvcHMudG9uZSxcbiAgICAgICAgICAgIGlzRGlzYWJsZWQ6IHByb3BzLmlzRGlzYWJsZWQsXG4gICAgICAgICAgfSl9XG4gICAgICAgICAgc2l6ZT17cHJvcHMuc2l6ZX1cbiAgICAgICAgLz5cbiAgICAgICl9XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5IZWFkZXJJY29uLmRpc3BsYXlOYW1lID0gJ0hlYWRlckljb24nO1xuSGVhZGVySWNvbi5kZWZhdWx0UHJvcHMgPSB7XG4gIHRvbmU6ICdwcmltYXJ5Jyxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEhlYWRlckljb247XG4iXX0= */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__$1
};
const HeaderIcon = props => {
  return jsx("div", {
    css: [_ref$1, props.isDisabled && /*#__PURE__*/css("box-shadow:none;border:1px solid ", designTokens.borderForCollapsiblePanelHeaderIconWhenDisabled, ";background-color:", designTokens.backgroundColorForCollapsiblePanelHeaderIconWhenDisabled, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:HeaderIcon;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlYWRlci1pY29uLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUErQmEiLCJmaWxlIjoiaGVhZGVyLWljb24udHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5pbXBvcnQgeyBBbmdsZURvd25JY29uLCBBbmdsZVJpZ2h0SWNvbiB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2ljb25zJztcblxuY29uc3QgZ2V0QXJyb3dDb2xvciA9ICh7XG4gIHRvbmUsXG4gIGlzRGlzYWJsZWQsXG59OiBQaWNrPFRIZWFkZXJJY29uLCAnaXNEaXNhYmxlZCcgfCAndG9uZSc+KSA9PiB7XG4gIGlmIChpc0Rpc2FibGVkKSByZXR1cm4gJ25ldXRyYWw2MCc7XG4gIGlmICh0b25lID09PSAndXJnZW50JykgcmV0dXJuICd3YXJuaW5nJztcblxuICByZXR1cm4gJ3NvbGlkJztcbn07XG5cbnR5cGUgVEhlYWRlckljb24gPSB7XG4gIHRvbmU/OiAndXJnZW50JyB8ICdwcmltYXJ5JztcbiAgaXNDbG9zZWQ6IGJvb2xlYW47XG4gIGlzRGlzYWJsZWQ6IGJvb2xlYW47XG4gIHNpemU6ICdzbWFsbCcgfCAnbWVkaXVtJyB8ICdiaWcnIHwgJ3NjYWxlJztcbn07XG5cbmNvbnN0IEhlYWRlckljb24gPSAocHJvcHM6IFRIZWFkZXJJY29uKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgY3NzPXtbXG4gICAgICAgIGNzc2BcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGAsXG4gICAgICAgIHByb3BzLmlzRGlzYWJsZWQgJiZcbiAgICAgICAgICBjc3NgXG4gICAgICAgICAgICBib3gtc2hhZG93OiBub25lO1xuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWRcbiAgICAgICAgICAgICAgJHtkZXNpZ25Ub2tlbnMuYm9yZGVyRm9yQ29sbGFwc2libGVQYW5lbEhlYWRlckljb25XaGVuRGlzYWJsZWR9O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yQ29sbGFwc2libGVQYW5lbEhlYWRlckljb25XaGVuRGlzYWJsZWR9O1xuICAgICAgICAgIGAsXG4gICAgICBdfVxuICAgID5cbiAgICAgIHtwcm9wcy5pc0Nsb3NlZCA/IChcbiAgICAgICAgPEFuZ2xlUmlnaHRJY29uXG4gICAgICAgICAgY29sb3I9e2dldEFycm93Q29sb3Ioe1xuICAgICAgICAgICAgdG9uZTogcHJvcHMudG9uZSxcbiAgICAgICAgICAgIGlzRGlzYWJsZWQ6IHByb3BzLmlzRGlzYWJsZWQsXG4gICAgICAgICAgfSl9XG4gICAgICAgICAgc2l6ZT17cHJvcHMuc2l6ZX1cbiAgICAgICAgLz5cbiAgICAgICkgOiAoXG4gICAgICAgIDxBbmdsZURvd25JY29uXG4gICAgICAgICAgY29sb3I9e2dldEFycm93Q29sb3Ioe1xuICAgICAgICAgICAgdG9uZTogcHJvcHMudG9uZSxcbiAgICAgICAgICAgIGlzRGlzYWJsZWQ6IHByb3BzLmlzRGlzYWJsZWQsXG4gICAgICAgICAgfSl9XG4gICAgICAgICAgc2l6ZT17cHJvcHMuc2l6ZX1cbiAgICAgICAgLz5cbiAgICAgICl9XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5IZWFkZXJJY29uLmRpc3BsYXlOYW1lID0gJ0hlYWRlckljb24nO1xuSGVhZGVySWNvbi5kZWZhdWx0UHJvcHMgPSB7XG4gIHRvbmU6ICdwcmltYXJ5Jyxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEhlYWRlckljb247XG4iXX0= */"), process.env.NODE_ENV === "production" ? "" : ";label:HeaderIcon;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlYWRlci1pY29uLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF3Qk0iLCJmaWxlIjoiaGVhZGVyLWljb24udHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5pbXBvcnQgeyBBbmdsZURvd25JY29uLCBBbmdsZVJpZ2h0SWNvbiB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2ljb25zJztcblxuY29uc3QgZ2V0QXJyb3dDb2xvciA9ICh7XG4gIHRvbmUsXG4gIGlzRGlzYWJsZWQsXG59OiBQaWNrPFRIZWFkZXJJY29uLCAnaXNEaXNhYmxlZCcgfCAndG9uZSc+KSA9PiB7XG4gIGlmIChpc0Rpc2FibGVkKSByZXR1cm4gJ25ldXRyYWw2MCc7XG4gIGlmICh0b25lID09PSAndXJnZW50JykgcmV0dXJuICd3YXJuaW5nJztcblxuICByZXR1cm4gJ3NvbGlkJztcbn07XG5cbnR5cGUgVEhlYWRlckljb24gPSB7XG4gIHRvbmU/OiAndXJnZW50JyB8ICdwcmltYXJ5JztcbiAgaXNDbG9zZWQ6IGJvb2xlYW47XG4gIGlzRGlzYWJsZWQ6IGJvb2xlYW47XG4gIHNpemU6ICdzbWFsbCcgfCAnbWVkaXVtJyB8ICdiaWcnIHwgJ3NjYWxlJztcbn07XG5cbmNvbnN0IEhlYWRlckljb24gPSAocHJvcHM6IFRIZWFkZXJJY29uKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgY3NzPXtbXG4gICAgICAgIGNzc2BcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGAsXG4gICAgICAgIHByb3BzLmlzRGlzYWJsZWQgJiZcbiAgICAgICAgICBjc3NgXG4gICAgICAgICAgICBib3gtc2hhZG93OiBub25lO1xuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWRcbiAgICAgICAgICAgICAgJHtkZXNpZ25Ub2tlbnMuYm9yZGVyRm9yQ29sbGFwc2libGVQYW5lbEhlYWRlckljb25XaGVuRGlzYWJsZWR9O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yQ29sbGFwc2libGVQYW5lbEhlYWRlckljb25XaGVuRGlzYWJsZWR9O1xuICAgICAgICAgIGAsXG4gICAgICBdfVxuICAgID5cbiAgICAgIHtwcm9wcy5pc0Nsb3NlZCA/IChcbiAgICAgICAgPEFuZ2xlUmlnaHRJY29uXG4gICAgICAgICAgY29sb3I9e2dldEFycm93Q29sb3Ioe1xuICAgICAgICAgICAgdG9uZTogcHJvcHMudG9uZSxcbiAgICAgICAgICAgIGlzRGlzYWJsZWQ6IHByb3BzLmlzRGlzYWJsZWQsXG4gICAgICAgICAgfSl9XG4gICAgICAgICAgc2l6ZT17cHJvcHMuc2l6ZX1cbiAgICAgICAgLz5cbiAgICAgICkgOiAoXG4gICAgICAgIDxBbmdsZURvd25JY29uXG4gICAgICAgICAgY29sb3I9e2dldEFycm93Q29sb3Ioe1xuICAgICAgICAgICAgdG9uZTogcHJvcHMudG9uZSxcbiAgICAgICAgICAgIGlzRGlzYWJsZWQ6IHByb3BzLmlzRGlzYWJsZWQsXG4gICAgICAgICAgfSl9XG4gICAgICAgICAgc2l6ZT17cHJvcHMuc2l6ZX1cbiAgICAgICAgLz5cbiAgICAgICl9XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5IZWFkZXJJY29uLmRpc3BsYXlOYW1lID0gJ0hlYWRlckljb24nO1xuSGVhZGVySWNvbi5kZWZhdWx0UHJvcHMgPSB7XG4gIHRvbmU6ICdwcmltYXJ5Jyxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEhlYWRlckljb247XG4iXX0= */"],
    children: props.isClosed ? jsx(AngleRightIcon, {
      color: getArrowColor({
        tone: props.tone,
        isDisabled: props.isDisabled
      }),
      size: props.size
    }) : jsx(AngleDownIcon, {
      color: getArrowColor({
        tone: props.tone,
        isDisabled: props.isDisabled
      }),
      size: props.size
    })
  });
};
HeaderIcon.displayName = 'HeaderIcon';
HeaderIcon.defaultProps = {
  tone: 'primary'
};
var HeaderIcon$1 = HeaderIcon;

function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }
function getThemeStyle(theme) {
  if (theme === 'light') {
    return /*#__PURE__*/css("background-color:", designTokens.colorSurface, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:getThemeStyle;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbGxhcHNpYmxlLXBhbmVsLnN0eWxlcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBUWMiLCJmaWxlIjoiY29sbGFwc2libGUtcGFuZWwuc3R5bGVzLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZvcndhcmRSZWYsIHR5cGUgUmVhY3ROb2RlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5pbXBvcnQgdHlwZSB7IFRDb2xsYXBzaWJsZVBhbmVsIH0gZnJvbSAnLi9jb2xsYXBzaWJsZS1wYW5lbCc7XG5cbmZ1bmN0aW9uIGdldFRoZW1lU3R5bGUodGhlbWU/OiBUQ29sbGFwc2libGVQYW5lbFsndGhlbWUnXSkge1xuICBpZiAodGhlbWUgPT09ICdsaWdodCcpIHtcbiAgICByZXR1cm4gY3NzYFxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICBgO1xuICB9XG4gIHJldHVybiBjc3NgXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsOTV9O1xuICBgO1xufVxuXG5jb25zdCBnZXRIZWFkZXJDb250YWluZXJTdHlsZXMgPSAoXG4gIHByb3BzOiBQaWNrPFxuICAgIFRDb2xsYXBzaWJsZVBhbmVsLFxuICAgICdoZWFkZXJDb250cm9sc0FsaWdubWVudCcgfCAnY29uZGVuc2VkJyB8ICdpc0Rpc2FibGVkJyB8ICdpc1N0aWNreSdcbiAgPixcbiAgaXNPcGVuOiBib29sZWFuXG4pID0+IHtcbiAgY29uc3QgYmFzZVN0eWxlcyA9IGNzc2BcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICAgIGJvcmRlci1ib3R0b206ICR7YDFweCBzb2xpZCAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvckNvbGxhcHNpYmxlUGFuZWxIZWFkZXJ9YH07XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1czZ9O1xuICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXM2fTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXg6IDE7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gICAganVzdGlmeS1jb250ZW50OiAke3Byb3BzLmhlYWRlckNvbnRyb2xzQWxpZ25tZW50ID09PSAnbGVmdCdcbiAgICAgID8gJ2ZsZXgtc3RhcnQnXG4gICAgICA6ICdzcGFjZS1iZXR3ZWVuJ307XG4gICAgcGFkZGluZzogJHtwcm9wcy5jb25kZW5zZWRcbiAgICAgID8gYCR7ZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JDb2xsYXBzaWJsZVBhbmVsSGVhZGVyQXNDb25kZW5zZWR9YFxuICAgICAgOiBgJHtkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvckNvbGxhcHNpYmxlUGFuZWxIZWFkZXJ9YH07XG4gIGA7XG4gIHJldHVybiBbXG4gICAgYmFzZVN0eWxlcyxcbiAgICBwcm9wcy5pc0Rpc2FibGVkICYmXG4gICAgICBjc3NgXG4gICAgICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICAgIGAsXG4gICAgcHJvcHMuaXNTdGlja3kgJiZcbiAgICAgIGlzT3BlbiAmJlxuICAgICAgY3NzYFxuICAgICAgICB6LWluZGV4OiAxO1xuICAgICAgICBwb3NpdGlvbjogc3RpY2t5O1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXM2fTtcbiAgICAgICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNn07XG4gICAgICBgLFxuICAgICFwcm9wcy5jb25kZW5zZWQgJiZcbiAgICAgIC8vIFRvIHVuZGVyc3RhbmQgd2h5IHRoaXMgbWluLWhlaWdodCBzZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9jb21tZXJjZXRvb2xzL3VpLWtpdC9wdWxsLzYxNlxuICAgICAgY3NzYFxuICAgICAgICBtaW4taGVpZ2h0OiAke2Rlc2lnblRva2Vucy5iaWdCdXR0b25IZWlnaHR9O1xuICAgICAgICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogbWFrZXMgdGhlIHBhZGRpbmcgZXh0ZW5kIGJleW9uZCB0aGUgbWluLWhlaWdodCAqL1xuICAgICAgYCxcbiAgXTtcbn07XG5cbmNvbnN0IGJhc2VDb250YWluZXJTdHlsZXMgPSBjc3NgXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWluLXdpZHRoOiAke2Rlc2lnblRva2Vucy5jb25zdHJhaW50Nn07XG4gIHBhZGRpbmc6IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclNvbGlkfTtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogJHtkZXNpZ25Ub2tlbnMuZm9udFNpemVEZWZhdWx0fTtcbmA7XG5cbmNvbnN0IEhlYWRlckNvbnRyb2xzV3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gIG1hcmdpbi1sZWZ0OiAke2Rlc2lnblRva2Vucy5zcGFjaW5nMzB9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gIC8qIHJlc2V0IHRoZSBjdXJzb3IgYmVjYXVzZSB0aGlzIGFyZWEgb2YgdGhlIGhlYWRlciBkb2Vzbid0IHRyaWdnZXIgaXRzIG9uQ2xpY2sgKi9cbiAgY3Vyc29yOiBhdXRvO1xuYDtcblxuY29uc3QgU2VjdGlvbkNvbnRlbnQgPSBzdHlsZWQuZGl2YFxuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbmA7XG5cbmNvbnN0IFNlY3Rpb25EZXNjcmlwdGlvbldyYXBwZXIgPSBzdHlsZWQuZGl2PHsgY29uZGVuc2VkPzogYm9vbGVhbiB9PmBcbiAgcGFkZGluZzogJHsoeyBjb25kZW5zZWQgfSkgPT5cbiAgICBjb25kZW5zZWRcbiAgICAgID8gZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JDb2xsYXBzaWJsZVBhbmVsU2VjdGlvbkRlc2NyaXB0aW9uQXNDb25kZW5zZWRcbiAgICAgIDogZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JDb2xsYXBzaWJsZVBhbmVsU2VjdGlvbkRlc2NyaXB0aW9ufTtcbmA7XG5cbnR5cGUgVFNlY3Rpb25XcmFwcGVyID0ge1xuICBjb25kZW5zZWQ/OiBib29sZWFuO1xuICBpc0V4cGFuZENvbnRyb2xIaWRkZW4/OiBib29sZWFuO1xuICBjaGlsZHJlbjogUmVhY3ROb2RlO1xufTtcbmNvbnN0IFNlY3Rpb25XcmFwcGVyID0gZm9yd2FyZFJlZjxIVE1MRGl2RWxlbWVudCwgVFNlY3Rpb25XcmFwcGVyPihcbiAgKHByb3BzLCByZWYpID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdlxuICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgY3NzPXtbXG4gICAgICAgICAgYFxuICAgICAgICAgIHBhZGRpbmc6ICR7XG4gICAgICAgICAgICBwcm9wcy5jb25kZW5zZWRcbiAgICAgICAgICAgICAgPyBkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvckNvbGxhcHNpYmxlUGFuZWxTZWN0aW9uV3JhcHBlckFzQ29uZGVuc2VkXG4gICAgICAgICAgICAgIDogZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JDb2xsYXBzaWJsZVBhbmVsU2VjdGlvbldyYXBwZXJcbiAgICAgICAgICB9O1xuICAgICAgICBgLFxuICAgICAgICAgIHByb3BzLmlzRXhwYW5kQ29udHJvbEhpZGRlbiAmJiAncGFkZGluZy1sZWZ0OiAwOycsXG4gICAgICAgIF19XG4gICAgICA+XG4gICAgICAgIHtwcm9wcy5jaGlsZHJlbn1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbik7XG5TZWN0aW9uV3JhcHBlci5kaXNwbGF5TmFtZSA9ICdTZWN0aW9uV3JhcHBlcic7XG5cbmV4cG9ydCB7XG4gIGJhc2VDb250YWluZXJTdHlsZXMsXG4gIGdldEhlYWRlckNvbnRhaW5lclN0eWxlcyxcbiAgZ2V0VGhlbWVTdHlsZSxcbiAgU2VjdGlvbkNvbnRlbnQsXG4gIFNlY3Rpb25EZXNjcmlwdGlvbldyYXBwZXIsXG4gIFNlY3Rpb25XcmFwcGVyLFxuICBIZWFkZXJDb250cm9sc1dyYXBwZXIsXG59O1xuIl19 */");
  }
  return /*#__PURE__*/css("background-color:", designTokens.colorNeutral95, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:getThemeStyle;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbGxhcHNpYmxlLXBhbmVsLnN0eWxlcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBWVkiLCJmaWxlIjoiY29sbGFwc2libGUtcGFuZWwuc3R5bGVzLnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZvcndhcmRSZWYsIHR5cGUgUmVhY3ROb2RlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5pbXBvcnQgdHlwZSB7IFRDb2xsYXBzaWJsZVBhbmVsIH0gZnJvbSAnLi9jb2xsYXBzaWJsZS1wYW5lbCc7XG5cbmZ1bmN0aW9uIGdldFRoZW1lU3R5bGUodGhlbWU/OiBUQ29sbGFwc2libGVQYW5lbFsndGhlbWUnXSkge1xuICBpZiAodGhlbWUgPT09ICdsaWdodCcpIHtcbiAgICByZXR1cm4gY3NzYFxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICBgO1xuICB9XG4gIHJldHVybiBjc3NgXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsOTV9O1xuICBgO1xufVxuXG5jb25zdCBnZXRIZWFkZXJDb250YWluZXJTdHlsZXMgPSAoXG4gIHByb3BzOiBQaWNrPFxuICAgIFRDb2xsYXBzaWJsZVBhbmVsLFxuICAgICdoZWFkZXJDb250cm9sc0FsaWdubWVudCcgfCAnY29uZGVuc2VkJyB8ICdpc0Rpc2FibGVkJyB8ICdpc1N0aWNreSdcbiAgPixcbiAgaXNPcGVuOiBib29sZWFuXG4pID0+IHtcbiAgY29uc3QgYmFzZVN0eWxlcyA9IGNzc2BcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICAgIGJvcmRlci1ib3R0b206ICR7YDFweCBzb2xpZCAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvckNvbGxhcHNpYmxlUGFuZWxIZWFkZXJ9YH07XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1czZ9O1xuICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXM2fTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXg6IDE7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gICAganVzdGlmeS1jb250ZW50OiAke3Byb3BzLmhlYWRlckNvbnRyb2xzQWxpZ25tZW50ID09PSAnbGVmdCdcbiAgICAgID8gJ2ZsZXgtc3RhcnQnXG4gICAgICA6ICdzcGFjZS1iZXR3ZWVuJ307XG4gICAgcGFkZGluZzogJHtwcm9wcy5jb25kZW5zZWRcbiAgICAgID8gYCR7ZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JDb2xsYXBzaWJsZVBhbmVsSGVhZGVyQXNDb25kZW5zZWR9YFxuICAgICAgOiBgJHtkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvckNvbGxhcHNpYmxlUGFuZWxIZWFkZXJ9YH07XG4gIGA7XG4gIHJldHVybiBbXG4gICAgYmFzZVN0eWxlcyxcbiAgICBwcm9wcy5pc0Rpc2FibGVkICYmXG4gICAgICBjc3NgXG4gICAgICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICAgIGAsXG4gICAgcHJvcHMuaXNTdGlja3kgJiZcbiAgICAgIGlzT3BlbiAmJlxuICAgICAgY3NzYFxuICAgICAgICB6LWluZGV4OiAxO1xuICAgICAgICBwb3NpdGlvbjogc3RpY2t5O1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXM2fTtcbiAgICAgICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNn07XG4gICAgICBgLFxuICAgICFwcm9wcy5jb25kZW5zZWQgJiZcbiAgICAgIC8vIFRvIHVuZGVyc3RhbmQgd2h5IHRoaXMgbWluLWhlaWdodCBzZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9jb21tZXJjZXRvb2xzL3VpLWtpdC9wdWxsLzYxNlxuICAgICAgY3NzYFxuICAgICAgICBtaW4taGVpZ2h0OiAke2Rlc2lnblRva2Vucy5iaWdCdXR0b25IZWlnaHR9O1xuICAgICAgICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogbWFrZXMgdGhlIHBhZGRpbmcgZXh0ZW5kIGJleW9uZCB0aGUgbWluLWhlaWdodCAqL1xuICAgICAgYCxcbiAgXTtcbn07XG5cbmNvbnN0IGJhc2VDb250YWluZXJTdHlsZXMgPSBjc3NgXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWluLXdpZHRoOiAke2Rlc2lnblRva2Vucy5jb25zdHJhaW50Nn07XG4gIHBhZGRpbmc6IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclNvbGlkfTtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogJHtkZXNpZ25Ub2tlbnMuZm9udFNpemVEZWZhdWx0fTtcbmA7XG5cbmNvbnN0IEhlYWRlckNvbnRyb2xzV3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gIG1hcmdpbi1sZWZ0OiAke2Rlc2lnblRva2Vucy5zcGFjaW5nMzB9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gIC8qIHJlc2V0IHRoZSBjdXJzb3IgYmVjYXVzZSB0aGlzIGFyZWEgb2YgdGhlIGhlYWRlciBkb2Vzbid0IHRyaWdnZXIgaXRzIG9uQ2xpY2sgKi9cbiAgY3Vyc29yOiBhdXRvO1xuYDtcblxuY29uc3QgU2VjdGlvbkNvbnRlbnQgPSBzdHlsZWQuZGl2YFxuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbmA7XG5cbmNvbnN0IFNlY3Rpb25EZXNjcmlwdGlvbldyYXBwZXIgPSBzdHlsZWQuZGl2PHsgY29uZGVuc2VkPzogYm9vbGVhbiB9PmBcbiAgcGFkZGluZzogJHsoeyBjb25kZW5zZWQgfSkgPT5cbiAgICBjb25kZW5zZWRcbiAgICAgID8gZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JDb2xsYXBzaWJsZVBhbmVsU2VjdGlvbkRlc2NyaXB0aW9uQXNDb25kZW5zZWRcbiAgICAgIDogZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JDb2xsYXBzaWJsZVBhbmVsU2VjdGlvbkRlc2NyaXB0aW9ufTtcbmA7XG5cbnR5cGUgVFNlY3Rpb25XcmFwcGVyID0ge1xuICBjb25kZW5zZWQ/OiBib29sZWFuO1xuICBpc0V4cGFuZENvbnRyb2xIaWRkZW4/OiBib29sZWFuO1xuICBjaGlsZHJlbjogUmVhY3ROb2RlO1xufTtcbmNvbnN0IFNlY3Rpb25XcmFwcGVyID0gZm9yd2FyZFJlZjxIVE1MRGl2RWxlbWVudCwgVFNlY3Rpb25XcmFwcGVyPihcbiAgKHByb3BzLCByZWYpID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdlxuICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgY3NzPXtbXG4gICAgICAgICAgYFxuICAgICAgICAgIHBhZGRpbmc6ICR7XG4gICAgICAgICAgICBwcm9wcy5jb25kZW5zZWRcbiAgICAgICAgICAgICAgPyBkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvckNvbGxhcHNpYmxlUGFuZWxTZWN0aW9uV3JhcHBlckFzQ29uZGVuc2VkXG4gICAgICAgICAgICAgIDogZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JDb2xsYXBzaWJsZVBhbmVsU2VjdGlvbldyYXBwZXJcbiAgICAgICAgICB9O1xuICAgICAgICBgLFxuICAgICAgICAgIHByb3BzLmlzRXhwYW5kQ29udHJvbEhpZGRlbiAmJiAncGFkZGluZy1sZWZ0OiAwOycsXG4gICAgICAgIF19XG4gICAgICA+XG4gICAgICAgIHtwcm9wcy5jaGlsZHJlbn1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbik7XG5TZWN0aW9uV3JhcHBlci5kaXNwbGF5TmFtZSA9ICdTZWN0aW9uV3JhcHBlcic7XG5cbmV4cG9ydCB7XG4gIGJhc2VDb250YWluZXJTdHlsZXMsXG4gIGdldEhlYWRlckNvbnRhaW5lclN0eWxlcyxcbiAgZ2V0VGhlbWVTdHlsZSxcbiAgU2VjdGlvbkNvbnRlbnQsXG4gIFNlY3Rpb25EZXNjcmlwdGlvbldyYXBwZXIsXG4gIFNlY3Rpb25XcmFwcGVyLFxuICBIZWFkZXJDb250cm9sc1dyYXBwZXIsXG59O1xuIl19 */");
}
var _ref = process.env.NODE_ENV === "production" ? {
  name: "1ll9bqd",
  styles: "cursor:default"
} : {
  name: "qkuh44-getHeaderContainerStyles",
  styles: "cursor:default;label:getHeaderContainerStyles;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbGxhcHNpYmxlLXBhbmVsLnN0eWxlcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNENTIiwiZmlsZSI6ImNvbGxhcHNpYmxlLXBhbmVsLnN0eWxlcy50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmb3J3YXJkUmVmLCB0eXBlIFJlYWN0Tm9kZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGRlc2lnblRva2VucyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuaW1wb3J0IHR5cGUgeyBUQ29sbGFwc2libGVQYW5lbCB9IGZyb20gJy4vY29sbGFwc2libGUtcGFuZWwnO1xuXG5mdW5jdGlvbiBnZXRUaGVtZVN0eWxlKHRoZW1lPzogVENvbGxhcHNpYmxlUGFuZWxbJ3RoZW1lJ10pIHtcbiAgaWYgKHRoZW1lID09PSAnbGlnaHQnKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG4gICAgYDtcbiAgfVxuICByZXR1cm4gY3NzYFxuICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDk1fTtcbiAgYDtcbn1cblxuY29uc3QgZ2V0SGVhZGVyQ29udGFpbmVyU3R5bGVzID0gKFxuICBwcm9wczogUGljazxcbiAgICBUQ29sbGFwc2libGVQYW5lbCxcbiAgICAnaGVhZGVyQ29udHJvbHNBbGlnbm1lbnQnIHwgJ2NvbmRlbnNlZCcgfCAnaXNEaXNhYmxlZCcgfCAnaXNTdGlja3knXG4gID4sXG4gIGlzT3BlbjogYm9vbGVhblxuKSA9PiB7XG4gIGNvbnN0IGJhc2VTdHlsZXMgPSBjc3NgXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICBib3JkZXItYm90dG9tOiAke2AxcHggc29saWQgJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JDb2xsYXBzaWJsZVBhbmVsSGVhZGVyfWB9O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXM2fTtcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNn07XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4OiAxO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICAgIGp1c3RpZnktY29udGVudDogJHtwcm9wcy5oZWFkZXJDb250cm9sc0FsaWdubWVudCA9PT0gJ2xlZnQnXG4gICAgICA/ICdmbGV4LXN0YXJ0J1xuICAgICAgOiAnc3BhY2UtYmV0d2Vlbid9O1xuICAgIHBhZGRpbmc6ICR7cHJvcHMuY29uZGVuc2VkXG4gICAgICA/IGAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yQ29sbGFwc2libGVQYW5lbEhlYWRlckFzQ29uZGVuc2VkfWBcbiAgICAgIDogYCR7ZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JDb2xsYXBzaWJsZVBhbmVsSGVhZGVyfWB9O1xuICBgO1xuICByZXR1cm4gW1xuICAgIGJhc2VTdHlsZXMsXG4gICAgcHJvcHMuaXNEaXNhYmxlZCAmJlxuICAgICAgY3NzYFxuICAgICAgICBjdXJzb3I6IGRlZmF1bHQ7XG4gICAgICBgLFxuICAgIHByb3BzLmlzU3RpY2t5ICYmXG4gICAgICBpc09wZW4gJiZcbiAgICAgIGNzc2BcbiAgICAgICAgei1pbmRleDogMTtcbiAgICAgICAgcG9zaXRpb246IHN0aWNreTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNn07XG4gICAgICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1czZ9O1xuICAgICAgYCxcbiAgICAhcHJvcHMuY29uZGVuc2VkICYmXG4gICAgICAvLyBUbyB1bmRlcnN0YW5kIHdoeSB0aGlzIG1pbi1oZWlnaHQgc2VlOiBodHRwczovL2dpdGh1Yi5jb20vY29tbWVyY2V0b29scy91aS1raXQvcHVsbC82MTZcbiAgICAgIGNzc2BcbiAgICAgICAgbWluLWhlaWdodDogJHtkZXNpZ25Ub2tlbnMuYmlnQnV0dG9uSGVpZ2h0fTtcbiAgICAgICAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIG1ha2VzIHRoZSBwYWRkaW5nIGV4dGVuZCBiZXlvbmQgdGhlIG1pbi1oZWlnaHQgKi9cbiAgICAgIGAsXG4gIF07XG59O1xuXG5jb25zdCBiYXNlQ29udGFpbmVyU3R5bGVzID0gY3NzYFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1pbi13aWR0aDogJHtkZXNpZ25Ub2tlbnMuY29uc3RyYWludDZ9O1xuICBwYWRkaW5nOiAwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JTb2xpZH07XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBmb250LXNpemU6ICR7ZGVzaWduVG9rZW5zLmZvbnRTaXplRGVmYXVsdH07XG5gO1xuXG5jb25zdCBIZWFkZXJDb250cm9sc1dyYXBwZXIgPSBzdHlsZWQuZGl2YFxuICBtYXJnaW4tbGVmdDogJHtkZXNpZ25Ub2tlbnMuc3BhY2luZzMwfTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAvKiByZXNldCB0aGUgY3Vyc29yIGJlY2F1c2UgdGhpcyBhcmVhIG9mIHRoZSBoZWFkZXIgZG9lc24ndCB0cmlnZ2VyIGl0cyBvbkNsaWNrICovXG4gIGN1cnNvcjogYXV0bztcbmA7XG5cbmNvbnN0IFNlY3Rpb25Db250ZW50ID0gc3R5bGVkLmRpdmBcbiAgd2lkdGg6IDEwMCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG5gO1xuXG5jb25zdCBTZWN0aW9uRGVzY3JpcHRpb25XcmFwcGVyID0gc3R5bGVkLmRpdjx7IGNvbmRlbnNlZD86IGJvb2xlYW4gfT5gXG4gIHBhZGRpbmc6ICR7KHsgY29uZGVuc2VkIH0pID0+XG4gICAgY29uZGVuc2VkXG4gICAgICA/IGRlc2lnblRva2Vucy5wYWRkaW5nRm9yQ29sbGFwc2libGVQYW5lbFNlY3Rpb25EZXNjcmlwdGlvbkFzQ29uZGVuc2VkXG4gICAgICA6IGRlc2lnblRva2Vucy5wYWRkaW5nRm9yQ29sbGFwc2libGVQYW5lbFNlY3Rpb25EZXNjcmlwdGlvbn07XG5gO1xuXG50eXBlIFRTZWN0aW9uV3JhcHBlciA9IHtcbiAgY29uZGVuc2VkPzogYm9vbGVhbjtcbiAgaXNFeHBhbmRDb250cm9sSGlkZGVuPzogYm9vbGVhbjtcbiAgY2hpbGRyZW46IFJlYWN0Tm9kZTtcbn07XG5jb25zdCBTZWN0aW9uV3JhcHBlciA9IGZvcndhcmRSZWY8SFRNTERpdkVsZW1lbnQsIFRTZWN0aW9uV3JhcHBlcj4oXG4gIChwcm9wcywgcmVmKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgIGNzcz17W1xuICAgICAgICAgIGBcbiAgICAgICAgICBwYWRkaW5nOiAke1xuICAgICAgICAgICAgcHJvcHMuY29uZGVuc2VkXG4gICAgICAgICAgICAgID8gZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JDb2xsYXBzaWJsZVBhbmVsU2VjdGlvbldyYXBwZXJBc0NvbmRlbnNlZFxuICAgICAgICAgICAgICA6IGRlc2lnblRva2Vucy5wYWRkaW5nRm9yQ29sbGFwc2libGVQYW5lbFNlY3Rpb25XcmFwcGVyXG4gICAgICAgICAgfTtcbiAgICAgICAgYCxcbiAgICAgICAgICBwcm9wcy5pc0V4cGFuZENvbnRyb2xIaWRkZW4gJiYgJ3BhZGRpbmctbGVmdDogMDsnLFxuICAgICAgICBdfVxuICAgICAgPlxuICAgICAgICB7cHJvcHMuY2hpbGRyZW59XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG4pO1xuU2VjdGlvbldyYXBwZXIuZGlzcGxheU5hbWUgPSAnU2VjdGlvbldyYXBwZXInO1xuXG5leHBvcnQge1xuICBiYXNlQ29udGFpbmVyU3R5bGVzLFxuICBnZXRIZWFkZXJDb250YWluZXJTdHlsZXMsXG4gIGdldFRoZW1lU3R5bGUsXG4gIFNlY3Rpb25Db250ZW50LFxuICBTZWN0aW9uRGVzY3JpcHRpb25XcmFwcGVyLFxuICBTZWN0aW9uV3JhcHBlcixcbiAgSGVhZGVyQ29udHJvbHNXcmFwcGVyLFxufTtcbiJdfQ== */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};
const getHeaderContainerStyles = (props, isOpen) => {
  const baseStyles = /*#__PURE__*/css("background-color:", designTokens.colorSurface, ";border-bottom:", "1px solid ".concat(designTokens.borderColorForCollapsiblePanelHeader), ";position:relative;border-top-left-radius:", designTokens.borderRadius6, ";border-top-right-radius:", designTokens.borderRadius6, ";display:flex;flex:1;align-items:center;list-style-type:none;justify-content:", props.headerControlsAlignment === 'left' ? 'flex-start' : 'space-between', ";padding:", props.condensed ? "".concat(designTokens.paddingForCollapsiblePanelHeaderAsCondensed) : "".concat(designTokens.paddingForCollapsiblePanelHeader), ";" + (process.env.NODE_ENV === "production" ? "" : ";label:baseStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbGxhcHNpYmxlLXBhbmVsLnN0eWxlcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0J3QiIsImZpbGUiOiJjb2xsYXBzaWJsZS1wYW5lbC5zdHlsZXMudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZm9yd2FyZFJlZiwgdHlwZSBSZWFjdE5vZGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcbmltcG9ydCB0eXBlIHsgVENvbGxhcHNpYmxlUGFuZWwgfSBmcm9tICcuL2NvbGxhcHNpYmxlLXBhbmVsJztcblxuZnVuY3Rpb24gZ2V0VGhlbWVTdHlsZSh0aGVtZT86IFRDb2xsYXBzaWJsZVBhbmVsWyd0aGVtZSddKSB7XG4gIGlmICh0aGVtZSA9PT0gJ2xpZ2h0Jykge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICAgIGA7XG4gIH1cbiAgcmV0dXJuIGNzc2BcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw5NX07XG4gIGA7XG59XG5cbmNvbnN0IGdldEhlYWRlckNvbnRhaW5lclN0eWxlcyA9IChcbiAgcHJvcHM6IFBpY2s8XG4gICAgVENvbGxhcHNpYmxlUGFuZWwsXG4gICAgJ2hlYWRlckNvbnRyb2xzQWxpZ25tZW50JyB8ICdjb25kZW5zZWQnIHwgJ2lzRGlzYWJsZWQnIHwgJ2lzU3RpY2t5J1xuICA+LFxuICBpc09wZW46IGJvb2xlYW5cbikgPT4ge1xuICBjb25zdCBiYXNlU3R5bGVzID0gY3NzYFxuICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG4gICAgYm9yZGVyLWJvdHRvbTogJHtgMXB4IHNvbGlkICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9yQ29sbGFwc2libGVQYW5lbEhlYWRlcn1gfTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNn07XG4gICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1czZ9O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleDogMTtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6ICR7cHJvcHMuaGVhZGVyQ29udHJvbHNBbGlnbm1lbnQgPT09ICdsZWZ0J1xuICAgICAgPyAnZmxleC1zdGFydCdcbiAgICAgIDogJ3NwYWNlLWJldHdlZW4nfTtcbiAgICBwYWRkaW5nOiAke3Byb3BzLmNvbmRlbnNlZFxuICAgICAgPyBgJHtkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvckNvbGxhcHNpYmxlUGFuZWxIZWFkZXJBc0NvbmRlbnNlZH1gXG4gICAgICA6IGAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yQ29sbGFwc2libGVQYW5lbEhlYWRlcn1gfTtcbiAgYDtcbiAgcmV0dXJuIFtcbiAgICBiYXNlU3R5bGVzLFxuICAgIHByb3BzLmlzRGlzYWJsZWQgJiZcbiAgICAgIGNzc2BcbiAgICAgICAgY3Vyc29yOiBkZWZhdWx0O1xuICAgICAgYCxcbiAgICBwcm9wcy5pc1N0aWNreSAmJlxuICAgICAgaXNPcGVuICYmXG4gICAgICBjc3NgXG4gICAgICAgIHotaW5kZXg6IDE7XG4gICAgICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1czZ9O1xuICAgICAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXM2fTtcbiAgICAgIGAsXG4gICAgIXByb3BzLmNvbmRlbnNlZCAmJlxuICAgICAgLy8gVG8gdW5kZXJzdGFuZCB3aHkgdGhpcyBtaW4taGVpZ2h0IHNlZTogaHR0cHM6Ly9naXRodWIuY29tL2NvbW1lcmNldG9vbHMvdWkta2l0L3B1bGwvNjE2XG4gICAgICBjc3NgXG4gICAgICAgIG1pbi1oZWlnaHQ6ICR7ZGVzaWduVG9rZW5zLmJpZ0J1dHRvbkhlaWdodH07XG4gICAgICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiBtYWtlcyB0aGUgcGFkZGluZyBleHRlbmQgYmV5b25kIHRoZSBtaW4taGVpZ2h0ICovXG4gICAgICBgLFxuICBdO1xufTtcblxuY29uc3QgYmFzZUNvbnRhaW5lclN0eWxlcyA9IGNzc2BcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtaW4td2lkdGg6ICR7ZGVzaWduVG9rZW5zLmNvbnN0cmFpbnQ2fTtcbiAgcGFkZGluZzogMDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU29saWR9O1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiAke2Rlc2lnblRva2Vucy5mb250U2l6ZURlZmF1bHR9O1xuYDtcblxuY29uc3QgSGVhZGVyQ29udHJvbHNXcmFwcGVyID0gc3R5bGVkLmRpdmBcbiAgbWFyZ2luLWxlZnQ6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmczMH07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgLyogcmVzZXQgdGhlIGN1cnNvciBiZWNhdXNlIHRoaXMgYXJlYSBvZiB0aGUgaGVhZGVyIGRvZXNuJ3QgdHJpZ2dlciBpdHMgb25DbGljayAqL1xuICBjdXJzb3I6IGF1dG87XG5gO1xuXG5jb25zdCBTZWN0aW9uQ29udGVudCA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuYDtcblxuY29uc3QgU2VjdGlvbkRlc2NyaXB0aW9uV3JhcHBlciA9IHN0eWxlZC5kaXY8eyBjb25kZW5zZWQ/OiBib29sZWFuIH0+YFxuICBwYWRkaW5nOiAkeyh7IGNvbmRlbnNlZCB9KSA9PlxuICAgIGNvbmRlbnNlZFxuICAgICAgPyBkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvckNvbGxhcHNpYmxlUGFuZWxTZWN0aW9uRGVzY3JpcHRpb25Bc0NvbmRlbnNlZFxuICAgICAgOiBkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvckNvbGxhcHNpYmxlUGFuZWxTZWN0aW9uRGVzY3JpcHRpb259O1xuYDtcblxudHlwZSBUU2VjdGlvbldyYXBwZXIgPSB7XG4gIGNvbmRlbnNlZD86IGJvb2xlYW47XG4gIGlzRXhwYW5kQ29udHJvbEhpZGRlbj86IGJvb2xlYW47XG4gIGNoaWxkcmVuOiBSZWFjdE5vZGU7XG59O1xuY29uc3QgU2VjdGlvbldyYXBwZXIgPSBmb3J3YXJkUmVmPEhUTUxEaXZFbGVtZW50LCBUU2VjdGlvbldyYXBwZXI+KFxuICAocHJvcHMsIHJlZikgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2XG4gICAgICAgIHJlZj17cmVmfVxuICAgICAgICBjc3M9e1tcbiAgICAgICAgICBgXG4gICAgICAgICAgcGFkZGluZzogJHtcbiAgICAgICAgICAgIHByb3BzLmNvbmRlbnNlZFxuICAgICAgICAgICAgICA/IGRlc2lnblRva2Vucy5wYWRkaW5nRm9yQ29sbGFwc2libGVQYW5lbFNlY3Rpb25XcmFwcGVyQXNDb25kZW5zZWRcbiAgICAgICAgICAgICAgOiBkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvckNvbGxhcHNpYmxlUGFuZWxTZWN0aW9uV3JhcHBlclxuICAgICAgICAgIH07XG4gICAgICAgIGAsXG4gICAgICAgICAgcHJvcHMuaXNFeHBhbmRDb250cm9sSGlkZGVuICYmICdwYWRkaW5nLWxlZnQ6IDA7JyxcbiAgICAgICAgXX1cbiAgICAgID5cbiAgICAgICAge3Byb3BzLmNoaWxkcmVufVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuKTtcblNlY3Rpb25XcmFwcGVyLmRpc3BsYXlOYW1lID0gJ1NlY3Rpb25XcmFwcGVyJztcblxuZXhwb3J0IHtcbiAgYmFzZUNvbnRhaW5lclN0eWxlcyxcbiAgZ2V0SGVhZGVyQ29udGFpbmVyU3R5bGVzLFxuICBnZXRUaGVtZVN0eWxlLFxuICBTZWN0aW9uQ29udGVudCxcbiAgU2VjdGlvbkRlc2NyaXB0aW9uV3JhcHBlcixcbiAgU2VjdGlvbldyYXBwZXIsXG4gIEhlYWRlckNvbnRyb2xzV3JhcHBlcixcbn07XG4iXX0= */");
  return [baseStyles, props.isDisabled && _ref, props.isSticky && isOpen && /*#__PURE__*/css("z-index:1;position:sticky;top:0;border-top-right-radius:", designTokens.borderRadius6, ";border-top-left-radius:", designTokens.borderRadius6, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:getHeaderContainerStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbGxhcHNpYmxlLXBhbmVsLnN0eWxlcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaURTIiwiZmlsZSI6ImNvbGxhcHNpYmxlLXBhbmVsLnN0eWxlcy50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmb3J3YXJkUmVmLCB0eXBlIFJlYWN0Tm9kZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGRlc2lnblRva2VucyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuaW1wb3J0IHR5cGUgeyBUQ29sbGFwc2libGVQYW5lbCB9IGZyb20gJy4vY29sbGFwc2libGUtcGFuZWwnO1xuXG5mdW5jdGlvbiBnZXRUaGVtZVN0eWxlKHRoZW1lPzogVENvbGxhcHNpYmxlUGFuZWxbJ3RoZW1lJ10pIHtcbiAgaWYgKHRoZW1lID09PSAnbGlnaHQnKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG4gICAgYDtcbiAgfVxuICByZXR1cm4gY3NzYFxuICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDk1fTtcbiAgYDtcbn1cblxuY29uc3QgZ2V0SGVhZGVyQ29udGFpbmVyU3R5bGVzID0gKFxuICBwcm9wczogUGljazxcbiAgICBUQ29sbGFwc2libGVQYW5lbCxcbiAgICAnaGVhZGVyQ29udHJvbHNBbGlnbm1lbnQnIHwgJ2NvbmRlbnNlZCcgfCAnaXNEaXNhYmxlZCcgfCAnaXNTdGlja3knXG4gID4sXG4gIGlzT3BlbjogYm9vbGVhblxuKSA9PiB7XG4gIGNvbnN0IGJhc2VTdHlsZXMgPSBjc3NgXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICBib3JkZXItYm90dG9tOiAke2AxcHggc29saWQgJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JDb2xsYXBzaWJsZVBhbmVsSGVhZGVyfWB9O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXM2fTtcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNn07XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4OiAxO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICAgIGp1c3RpZnktY29udGVudDogJHtwcm9wcy5oZWFkZXJDb250cm9sc0FsaWdubWVudCA9PT0gJ2xlZnQnXG4gICAgICA/ICdmbGV4LXN0YXJ0J1xuICAgICAgOiAnc3BhY2UtYmV0d2Vlbid9O1xuICAgIHBhZGRpbmc6ICR7cHJvcHMuY29uZGVuc2VkXG4gICAgICA/IGAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yQ29sbGFwc2libGVQYW5lbEhlYWRlckFzQ29uZGVuc2VkfWBcbiAgICAgIDogYCR7ZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JDb2xsYXBzaWJsZVBhbmVsSGVhZGVyfWB9O1xuICBgO1xuICByZXR1cm4gW1xuICAgIGJhc2VTdHlsZXMsXG4gICAgcHJvcHMuaXNEaXNhYmxlZCAmJlxuICAgICAgY3NzYFxuICAgICAgICBjdXJzb3I6IGRlZmF1bHQ7XG4gICAgICBgLFxuICAgIHByb3BzLmlzU3RpY2t5ICYmXG4gICAgICBpc09wZW4gJiZcbiAgICAgIGNzc2BcbiAgICAgICAgei1pbmRleDogMTtcbiAgICAgICAgcG9zaXRpb246IHN0aWNreTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNn07XG4gICAgICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1czZ9O1xuICAgICAgYCxcbiAgICAhcHJvcHMuY29uZGVuc2VkICYmXG4gICAgICAvLyBUbyB1bmRlcnN0YW5kIHdoeSB0aGlzIG1pbi1oZWlnaHQgc2VlOiBodHRwczovL2dpdGh1Yi5jb20vY29tbWVyY2V0b29scy91aS1raXQvcHVsbC82MTZcbiAgICAgIGNzc2BcbiAgICAgICAgbWluLWhlaWdodDogJHtkZXNpZ25Ub2tlbnMuYmlnQnV0dG9uSGVpZ2h0fTtcbiAgICAgICAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIG1ha2VzIHRoZSBwYWRkaW5nIGV4dGVuZCBiZXlvbmQgdGhlIG1pbi1oZWlnaHQgKi9cbiAgICAgIGAsXG4gIF07XG59O1xuXG5jb25zdCBiYXNlQ29udGFpbmVyU3R5bGVzID0gY3NzYFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1pbi13aWR0aDogJHtkZXNpZ25Ub2tlbnMuY29uc3RyYWludDZ9O1xuICBwYWRkaW5nOiAwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JTb2xpZH07XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBmb250LXNpemU6ICR7ZGVzaWduVG9rZW5zLmZvbnRTaXplRGVmYXVsdH07XG5gO1xuXG5jb25zdCBIZWFkZXJDb250cm9sc1dyYXBwZXIgPSBzdHlsZWQuZGl2YFxuICBtYXJnaW4tbGVmdDogJHtkZXNpZ25Ub2tlbnMuc3BhY2luZzMwfTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAvKiByZXNldCB0aGUgY3Vyc29yIGJlY2F1c2UgdGhpcyBhcmVhIG9mIHRoZSBoZWFkZXIgZG9lc24ndCB0cmlnZ2VyIGl0cyBvbkNsaWNrICovXG4gIGN1cnNvcjogYXV0bztcbmA7XG5cbmNvbnN0IFNlY3Rpb25Db250ZW50ID0gc3R5bGVkLmRpdmBcbiAgd2lkdGg6IDEwMCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG5gO1xuXG5jb25zdCBTZWN0aW9uRGVzY3JpcHRpb25XcmFwcGVyID0gc3R5bGVkLmRpdjx7IGNvbmRlbnNlZD86IGJvb2xlYW4gfT5gXG4gIHBhZGRpbmc6ICR7KHsgY29uZGVuc2VkIH0pID0+XG4gICAgY29uZGVuc2VkXG4gICAgICA/IGRlc2lnblRva2Vucy5wYWRkaW5nRm9yQ29sbGFwc2libGVQYW5lbFNlY3Rpb25EZXNjcmlwdGlvbkFzQ29uZGVuc2VkXG4gICAgICA6IGRlc2lnblRva2Vucy5wYWRkaW5nRm9yQ29sbGFwc2libGVQYW5lbFNlY3Rpb25EZXNjcmlwdGlvbn07XG5gO1xuXG50eXBlIFRTZWN0aW9uV3JhcHBlciA9IHtcbiAgY29uZGVuc2VkPzogYm9vbGVhbjtcbiAgaXNFeHBhbmRDb250cm9sSGlkZGVuPzogYm9vbGVhbjtcbiAgY2hpbGRyZW46IFJlYWN0Tm9kZTtcbn07XG5jb25zdCBTZWN0aW9uV3JhcHBlciA9IGZvcndhcmRSZWY8SFRNTERpdkVsZW1lbnQsIFRTZWN0aW9uV3JhcHBlcj4oXG4gIChwcm9wcywgcmVmKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgIGNzcz17W1xuICAgICAgICAgIGBcbiAgICAgICAgICBwYWRkaW5nOiAke1xuICAgICAgICAgICAgcHJvcHMuY29uZGVuc2VkXG4gICAgICAgICAgICAgID8gZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JDb2xsYXBzaWJsZVBhbmVsU2VjdGlvbldyYXBwZXJBc0NvbmRlbnNlZFxuICAgICAgICAgICAgICA6IGRlc2lnblRva2Vucy5wYWRkaW5nRm9yQ29sbGFwc2libGVQYW5lbFNlY3Rpb25XcmFwcGVyXG4gICAgICAgICAgfTtcbiAgICAgICAgYCxcbiAgICAgICAgICBwcm9wcy5pc0V4cGFuZENvbnRyb2xIaWRkZW4gJiYgJ3BhZGRpbmctbGVmdDogMDsnLFxuICAgICAgICBdfVxuICAgICAgPlxuICAgICAgICB7cHJvcHMuY2hpbGRyZW59XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG4pO1xuU2VjdGlvbldyYXBwZXIuZGlzcGxheU5hbWUgPSAnU2VjdGlvbldyYXBwZXInO1xuXG5leHBvcnQge1xuICBiYXNlQ29udGFpbmVyU3R5bGVzLFxuICBnZXRIZWFkZXJDb250YWluZXJTdHlsZXMsXG4gIGdldFRoZW1lU3R5bGUsXG4gIFNlY3Rpb25Db250ZW50LFxuICBTZWN0aW9uRGVzY3JpcHRpb25XcmFwcGVyLFxuICBTZWN0aW9uV3JhcHBlcixcbiAgSGVhZGVyQ29udHJvbHNXcmFwcGVyLFxufTtcbiJdfQ== */"), !props.condensed &&
  /*#__PURE__*/
  // To understand why this min-height see: https://github.com/commercetools/ui-kit/pull/616
  css("min-height:", designTokens.bigButtonHeight, ";box-sizing:content-box;" + (process.env.NODE_ENV === "production" ? "" : ";label:getHeaderContainerStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbGxhcHNpYmxlLXBhbmVsLnN0eWxlcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMERTIiwiZmlsZSI6ImNvbGxhcHNpYmxlLXBhbmVsLnN0eWxlcy50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmb3J3YXJkUmVmLCB0eXBlIFJlYWN0Tm9kZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGRlc2lnblRva2VucyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuaW1wb3J0IHR5cGUgeyBUQ29sbGFwc2libGVQYW5lbCB9IGZyb20gJy4vY29sbGFwc2libGUtcGFuZWwnO1xuXG5mdW5jdGlvbiBnZXRUaGVtZVN0eWxlKHRoZW1lPzogVENvbGxhcHNpYmxlUGFuZWxbJ3RoZW1lJ10pIHtcbiAgaWYgKHRoZW1lID09PSAnbGlnaHQnKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG4gICAgYDtcbiAgfVxuICByZXR1cm4gY3NzYFxuICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDk1fTtcbiAgYDtcbn1cblxuY29uc3QgZ2V0SGVhZGVyQ29udGFpbmVyU3R5bGVzID0gKFxuICBwcm9wczogUGljazxcbiAgICBUQ29sbGFwc2libGVQYW5lbCxcbiAgICAnaGVhZGVyQ29udHJvbHNBbGlnbm1lbnQnIHwgJ2NvbmRlbnNlZCcgfCAnaXNEaXNhYmxlZCcgfCAnaXNTdGlja3knXG4gID4sXG4gIGlzT3BlbjogYm9vbGVhblxuKSA9PiB7XG4gIGNvbnN0IGJhc2VTdHlsZXMgPSBjc3NgXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICBib3JkZXItYm90dG9tOiAke2AxcHggc29saWQgJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JDb2xsYXBzaWJsZVBhbmVsSGVhZGVyfWB9O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXM2fTtcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNn07XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4OiAxO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICAgIGp1c3RpZnktY29udGVudDogJHtwcm9wcy5oZWFkZXJDb250cm9sc0FsaWdubWVudCA9PT0gJ2xlZnQnXG4gICAgICA/ICdmbGV4LXN0YXJ0J1xuICAgICAgOiAnc3BhY2UtYmV0d2Vlbid9O1xuICAgIHBhZGRpbmc6ICR7cHJvcHMuY29uZGVuc2VkXG4gICAgICA/IGAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yQ29sbGFwc2libGVQYW5lbEhlYWRlckFzQ29uZGVuc2VkfWBcbiAgICAgIDogYCR7ZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JDb2xsYXBzaWJsZVBhbmVsSGVhZGVyfWB9O1xuICBgO1xuICByZXR1cm4gW1xuICAgIGJhc2VTdHlsZXMsXG4gICAgcHJvcHMuaXNEaXNhYmxlZCAmJlxuICAgICAgY3NzYFxuICAgICAgICBjdXJzb3I6IGRlZmF1bHQ7XG4gICAgICBgLFxuICAgIHByb3BzLmlzU3RpY2t5ICYmXG4gICAgICBpc09wZW4gJiZcbiAgICAgIGNzc2BcbiAgICAgICAgei1pbmRleDogMTtcbiAgICAgICAgcG9zaXRpb246IHN0aWNreTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNn07XG4gICAgICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1czZ9O1xuICAgICAgYCxcbiAgICAhcHJvcHMuY29uZGVuc2VkICYmXG4gICAgICAvLyBUbyB1bmRlcnN0YW5kIHdoeSB0aGlzIG1pbi1oZWlnaHQgc2VlOiBodHRwczovL2dpdGh1Yi5jb20vY29tbWVyY2V0b29scy91aS1raXQvcHVsbC82MTZcbiAgICAgIGNzc2BcbiAgICAgICAgbWluLWhlaWdodDogJHtkZXNpZ25Ub2tlbnMuYmlnQnV0dG9uSGVpZ2h0fTtcbiAgICAgICAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIG1ha2VzIHRoZSBwYWRkaW5nIGV4dGVuZCBiZXlvbmQgdGhlIG1pbi1oZWlnaHQgKi9cbiAgICAgIGAsXG4gIF07XG59O1xuXG5jb25zdCBiYXNlQ29udGFpbmVyU3R5bGVzID0gY3NzYFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1pbi13aWR0aDogJHtkZXNpZ25Ub2tlbnMuY29uc3RyYWludDZ9O1xuICBwYWRkaW5nOiAwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JTb2xpZH07XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBmb250LXNpemU6ICR7ZGVzaWduVG9rZW5zLmZvbnRTaXplRGVmYXVsdH07XG5gO1xuXG5jb25zdCBIZWFkZXJDb250cm9sc1dyYXBwZXIgPSBzdHlsZWQuZGl2YFxuICBtYXJnaW4tbGVmdDogJHtkZXNpZ25Ub2tlbnMuc3BhY2luZzMwfTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAvKiByZXNldCB0aGUgY3Vyc29yIGJlY2F1c2UgdGhpcyBhcmVhIG9mIHRoZSBoZWFkZXIgZG9lc24ndCB0cmlnZ2VyIGl0cyBvbkNsaWNrICovXG4gIGN1cnNvcjogYXV0bztcbmA7XG5cbmNvbnN0IFNlY3Rpb25Db250ZW50ID0gc3R5bGVkLmRpdmBcbiAgd2lkdGg6IDEwMCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG5gO1xuXG5jb25zdCBTZWN0aW9uRGVzY3JpcHRpb25XcmFwcGVyID0gc3R5bGVkLmRpdjx7IGNvbmRlbnNlZD86IGJvb2xlYW4gfT5gXG4gIHBhZGRpbmc6ICR7KHsgY29uZGVuc2VkIH0pID0+XG4gICAgY29uZGVuc2VkXG4gICAgICA/IGRlc2lnblRva2Vucy5wYWRkaW5nRm9yQ29sbGFwc2libGVQYW5lbFNlY3Rpb25EZXNjcmlwdGlvbkFzQ29uZGVuc2VkXG4gICAgICA6IGRlc2lnblRva2Vucy5wYWRkaW5nRm9yQ29sbGFwc2libGVQYW5lbFNlY3Rpb25EZXNjcmlwdGlvbn07XG5gO1xuXG50eXBlIFRTZWN0aW9uV3JhcHBlciA9IHtcbiAgY29uZGVuc2VkPzogYm9vbGVhbjtcbiAgaXNFeHBhbmRDb250cm9sSGlkZGVuPzogYm9vbGVhbjtcbiAgY2hpbGRyZW46IFJlYWN0Tm9kZTtcbn07XG5jb25zdCBTZWN0aW9uV3JhcHBlciA9IGZvcndhcmRSZWY8SFRNTERpdkVsZW1lbnQsIFRTZWN0aW9uV3JhcHBlcj4oXG4gIChwcm9wcywgcmVmKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgIGNzcz17W1xuICAgICAgICAgIGBcbiAgICAgICAgICBwYWRkaW5nOiAke1xuICAgICAgICAgICAgcHJvcHMuY29uZGVuc2VkXG4gICAgICAgICAgICAgID8gZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JDb2xsYXBzaWJsZVBhbmVsU2VjdGlvbldyYXBwZXJBc0NvbmRlbnNlZFxuICAgICAgICAgICAgICA6IGRlc2lnblRva2Vucy5wYWRkaW5nRm9yQ29sbGFwc2libGVQYW5lbFNlY3Rpb25XcmFwcGVyXG4gICAgICAgICAgfTtcbiAgICAgICAgYCxcbiAgICAgICAgICBwcm9wcy5pc0V4cGFuZENvbnRyb2xIaWRkZW4gJiYgJ3BhZGRpbmctbGVmdDogMDsnLFxuICAgICAgICBdfVxuICAgICAgPlxuICAgICAgICB7cHJvcHMuY2hpbGRyZW59XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG4pO1xuU2VjdGlvbldyYXBwZXIuZGlzcGxheU5hbWUgPSAnU2VjdGlvbldyYXBwZXInO1xuXG5leHBvcnQge1xuICBiYXNlQ29udGFpbmVyU3R5bGVzLFxuICBnZXRIZWFkZXJDb250YWluZXJTdHlsZXMsXG4gIGdldFRoZW1lU3R5bGUsXG4gIFNlY3Rpb25Db250ZW50LFxuICBTZWN0aW9uRGVzY3JpcHRpb25XcmFwcGVyLFxuICBTZWN0aW9uV3JhcHBlcixcbiAgSGVhZGVyQ29udHJvbHNXcmFwcGVyLFxufTtcbiJdfQ== */")];
};
const baseContainerStyles = /*#__PURE__*/css("position:relative;min-width:", designTokens.constraint6, ";padding:0;display:flex;flex-direction:column;color:", designTokens.colorSolid, ";font-family:inherit;font-size:", designTokens.fontSizeDefault, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:baseContainerStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbGxhcHNpYmxlLXBhbmVsLnN0eWxlcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaUUrQiIsImZpbGUiOiJjb2xsYXBzaWJsZS1wYW5lbC5zdHlsZXMudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZm9yd2FyZFJlZiwgdHlwZSBSZWFjdE5vZGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcbmltcG9ydCB0eXBlIHsgVENvbGxhcHNpYmxlUGFuZWwgfSBmcm9tICcuL2NvbGxhcHNpYmxlLXBhbmVsJztcblxuZnVuY3Rpb24gZ2V0VGhlbWVTdHlsZSh0aGVtZT86IFRDb2xsYXBzaWJsZVBhbmVsWyd0aGVtZSddKSB7XG4gIGlmICh0aGVtZSA9PT0gJ2xpZ2h0Jykge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICAgIGA7XG4gIH1cbiAgcmV0dXJuIGNzc2BcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw5NX07XG4gIGA7XG59XG5cbmNvbnN0IGdldEhlYWRlckNvbnRhaW5lclN0eWxlcyA9IChcbiAgcHJvcHM6IFBpY2s8XG4gICAgVENvbGxhcHNpYmxlUGFuZWwsXG4gICAgJ2hlYWRlckNvbnRyb2xzQWxpZ25tZW50JyB8ICdjb25kZW5zZWQnIHwgJ2lzRGlzYWJsZWQnIHwgJ2lzU3RpY2t5J1xuICA+LFxuICBpc09wZW46IGJvb2xlYW5cbikgPT4ge1xuICBjb25zdCBiYXNlU3R5bGVzID0gY3NzYFxuICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG4gICAgYm9yZGVyLWJvdHRvbTogJHtgMXB4IHNvbGlkICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9yQ29sbGFwc2libGVQYW5lbEhlYWRlcn1gfTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNn07XG4gICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1czZ9O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleDogMTtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6ICR7cHJvcHMuaGVhZGVyQ29udHJvbHNBbGlnbm1lbnQgPT09ICdsZWZ0J1xuICAgICAgPyAnZmxleC1zdGFydCdcbiAgICAgIDogJ3NwYWNlLWJldHdlZW4nfTtcbiAgICBwYWRkaW5nOiAke3Byb3BzLmNvbmRlbnNlZFxuICAgICAgPyBgJHtkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvckNvbGxhcHNpYmxlUGFuZWxIZWFkZXJBc0NvbmRlbnNlZH1gXG4gICAgICA6IGAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yQ29sbGFwc2libGVQYW5lbEhlYWRlcn1gfTtcbiAgYDtcbiAgcmV0dXJuIFtcbiAgICBiYXNlU3R5bGVzLFxuICAgIHByb3BzLmlzRGlzYWJsZWQgJiZcbiAgICAgIGNzc2BcbiAgICAgICAgY3Vyc29yOiBkZWZhdWx0O1xuICAgICAgYCxcbiAgICBwcm9wcy5pc1N0aWNreSAmJlxuICAgICAgaXNPcGVuICYmXG4gICAgICBjc3NgXG4gICAgICAgIHotaW5kZXg6IDE7XG4gICAgICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1czZ9O1xuICAgICAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXM2fTtcbiAgICAgIGAsXG4gICAgIXByb3BzLmNvbmRlbnNlZCAmJlxuICAgICAgLy8gVG8gdW5kZXJzdGFuZCB3aHkgdGhpcyBtaW4taGVpZ2h0IHNlZTogaHR0cHM6Ly9naXRodWIuY29tL2NvbW1lcmNldG9vbHMvdWkta2l0L3B1bGwvNjE2XG4gICAgICBjc3NgXG4gICAgICAgIG1pbi1oZWlnaHQ6ICR7ZGVzaWduVG9rZW5zLmJpZ0J1dHRvbkhlaWdodH07XG4gICAgICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiBtYWtlcyB0aGUgcGFkZGluZyBleHRlbmQgYmV5b25kIHRoZSBtaW4taGVpZ2h0ICovXG4gICAgICBgLFxuICBdO1xufTtcblxuY29uc3QgYmFzZUNvbnRhaW5lclN0eWxlcyA9IGNzc2BcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtaW4td2lkdGg6ICR7ZGVzaWduVG9rZW5zLmNvbnN0cmFpbnQ2fTtcbiAgcGFkZGluZzogMDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU29saWR9O1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiAke2Rlc2lnblRva2Vucy5mb250U2l6ZURlZmF1bHR9O1xuYDtcblxuY29uc3QgSGVhZGVyQ29udHJvbHNXcmFwcGVyID0gc3R5bGVkLmRpdmBcbiAgbWFyZ2luLWxlZnQ6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmczMH07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgLyogcmVzZXQgdGhlIGN1cnNvciBiZWNhdXNlIHRoaXMgYXJlYSBvZiB0aGUgaGVhZGVyIGRvZXNuJ3QgdHJpZ2dlciBpdHMgb25DbGljayAqL1xuICBjdXJzb3I6IGF1dG87XG5gO1xuXG5jb25zdCBTZWN0aW9uQ29udGVudCA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuYDtcblxuY29uc3QgU2VjdGlvbkRlc2NyaXB0aW9uV3JhcHBlciA9IHN0eWxlZC5kaXY8eyBjb25kZW5zZWQ/OiBib29sZWFuIH0+YFxuICBwYWRkaW5nOiAkeyh7IGNvbmRlbnNlZCB9KSA9PlxuICAgIGNvbmRlbnNlZFxuICAgICAgPyBkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvckNvbGxhcHNpYmxlUGFuZWxTZWN0aW9uRGVzY3JpcHRpb25Bc0NvbmRlbnNlZFxuICAgICAgOiBkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvckNvbGxhcHNpYmxlUGFuZWxTZWN0aW9uRGVzY3JpcHRpb259O1xuYDtcblxudHlwZSBUU2VjdGlvbldyYXBwZXIgPSB7XG4gIGNvbmRlbnNlZD86IGJvb2xlYW47XG4gIGlzRXhwYW5kQ29udHJvbEhpZGRlbj86IGJvb2xlYW47XG4gIGNoaWxkcmVuOiBSZWFjdE5vZGU7XG59O1xuY29uc3QgU2VjdGlvbldyYXBwZXIgPSBmb3J3YXJkUmVmPEhUTUxEaXZFbGVtZW50LCBUU2VjdGlvbldyYXBwZXI+KFxuICAocHJvcHMsIHJlZikgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2XG4gICAgICAgIHJlZj17cmVmfVxuICAgICAgICBjc3M9e1tcbiAgICAgICAgICBgXG4gICAgICAgICAgcGFkZGluZzogJHtcbiAgICAgICAgICAgIHByb3BzLmNvbmRlbnNlZFxuICAgICAgICAgICAgICA/IGRlc2lnblRva2Vucy5wYWRkaW5nRm9yQ29sbGFwc2libGVQYW5lbFNlY3Rpb25XcmFwcGVyQXNDb25kZW5zZWRcbiAgICAgICAgICAgICAgOiBkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvckNvbGxhcHNpYmxlUGFuZWxTZWN0aW9uV3JhcHBlclxuICAgICAgICAgIH07XG4gICAgICAgIGAsXG4gICAgICAgICAgcHJvcHMuaXNFeHBhbmRDb250cm9sSGlkZGVuICYmICdwYWRkaW5nLWxlZnQ6IDA7JyxcbiAgICAgICAgXX1cbiAgICAgID5cbiAgICAgICAge3Byb3BzLmNoaWxkcmVufVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuKTtcblNlY3Rpb25XcmFwcGVyLmRpc3BsYXlOYW1lID0gJ1NlY3Rpb25XcmFwcGVyJztcblxuZXhwb3J0IHtcbiAgYmFzZUNvbnRhaW5lclN0eWxlcyxcbiAgZ2V0SGVhZGVyQ29udGFpbmVyU3R5bGVzLFxuICBnZXRUaGVtZVN0eWxlLFxuICBTZWN0aW9uQ29udGVudCxcbiAgU2VjdGlvbkRlc2NyaXB0aW9uV3JhcHBlcixcbiAgU2VjdGlvbldyYXBwZXIsXG4gIEhlYWRlckNvbnRyb2xzV3JhcHBlcixcbn07XG4iXX0= */");
const HeaderControlsWrapper = /*#__PURE__*/_styled("div", process.env.NODE_ENV === "production" ? {
  target: "em5v1nl2"
} : {
  target: "em5v1nl2",
  label: "HeaderControlsWrapper"
})("margin-left:", designTokens.spacing30, ";display:flex;align-items:center;cursor:auto;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbGxhcHNpYmxlLXBhbmVsLnN0eWxlcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNEV3QyIsImZpbGUiOiJjb2xsYXBzaWJsZS1wYW5lbC5zdHlsZXMudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZm9yd2FyZFJlZiwgdHlwZSBSZWFjdE5vZGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcbmltcG9ydCB0eXBlIHsgVENvbGxhcHNpYmxlUGFuZWwgfSBmcm9tICcuL2NvbGxhcHNpYmxlLXBhbmVsJztcblxuZnVuY3Rpb24gZ2V0VGhlbWVTdHlsZSh0aGVtZT86IFRDb2xsYXBzaWJsZVBhbmVsWyd0aGVtZSddKSB7XG4gIGlmICh0aGVtZSA9PT0gJ2xpZ2h0Jykge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICAgIGA7XG4gIH1cbiAgcmV0dXJuIGNzc2BcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw5NX07XG4gIGA7XG59XG5cbmNvbnN0IGdldEhlYWRlckNvbnRhaW5lclN0eWxlcyA9IChcbiAgcHJvcHM6IFBpY2s8XG4gICAgVENvbGxhcHNpYmxlUGFuZWwsXG4gICAgJ2hlYWRlckNvbnRyb2xzQWxpZ25tZW50JyB8ICdjb25kZW5zZWQnIHwgJ2lzRGlzYWJsZWQnIHwgJ2lzU3RpY2t5J1xuICA+LFxuICBpc09wZW46IGJvb2xlYW5cbikgPT4ge1xuICBjb25zdCBiYXNlU3R5bGVzID0gY3NzYFxuICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG4gICAgYm9yZGVyLWJvdHRvbTogJHtgMXB4IHNvbGlkICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9yQ29sbGFwc2libGVQYW5lbEhlYWRlcn1gfTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNn07XG4gICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1czZ9O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleDogMTtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6ICR7cHJvcHMuaGVhZGVyQ29udHJvbHNBbGlnbm1lbnQgPT09ICdsZWZ0J1xuICAgICAgPyAnZmxleC1zdGFydCdcbiAgICAgIDogJ3NwYWNlLWJldHdlZW4nfTtcbiAgICBwYWRkaW5nOiAke3Byb3BzLmNvbmRlbnNlZFxuICAgICAgPyBgJHtkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvckNvbGxhcHNpYmxlUGFuZWxIZWFkZXJBc0NvbmRlbnNlZH1gXG4gICAgICA6IGAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yQ29sbGFwc2libGVQYW5lbEhlYWRlcn1gfTtcbiAgYDtcbiAgcmV0dXJuIFtcbiAgICBiYXNlU3R5bGVzLFxuICAgIHByb3BzLmlzRGlzYWJsZWQgJiZcbiAgICAgIGNzc2BcbiAgICAgICAgY3Vyc29yOiBkZWZhdWx0O1xuICAgICAgYCxcbiAgICBwcm9wcy5pc1N0aWNreSAmJlxuICAgICAgaXNPcGVuICYmXG4gICAgICBjc3NgXG4gICAgICAgIHotaW5kZXg6IDE7XG4gICAgICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1czZ9O1xuICAgICAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXM2fTtcbiAgICAgIGAsXG4gICAgIXByb3BzLmNvbmRlbnNlZCAmJlxuICAgICAgLy8gVG8gdW5kZXJzdGFuZCB3aHkgdGhpcyBtaW4taGVpZ2h0IHNlZTogaHR0cHM6Ly9naXRodWIuY29tL2NvbW1lcmNldG9vbHMvdWkta2l0L3B1bGwvNjE2XG4gICAgICBjc3NgXG4gICAgICAgIG1pbi1oZWlnaHQ6ICR7ZGVzaWduVG9rZW5zLmJpZ0J1dHRvbkhlaWdodH07XG4gICAgICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiBtYWtlcyB0aGUgcGFkZGluZyBleHRlbmQgYmV5b25kIHRoZSBtaW4taGVpZ2h0ICovXG4gICAgICBgLFxuICBdO1xufTtcblxuY29uc3QgYmFzZUNvbnRhaW5lclN0eWxlcyA9IGNzc2BcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtaW4td2lkdGg6ICR7ZGVzaWduVG9rZW5zLmNvbnN0cmFpbnQ2fTtcbiAgcGFkZGluZzogMDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU29saWR9O1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiAke2Rlc2lnblRva2Vucy5mb250U2l6ZURlZmF1bHR9O1xuYDtcblxuY29uc3QgSGVhZGVyQ29udHJvbHNXcmFwcGVyID0gc3R5bGVkLmRpdmBcbiAgbWFyZ2luLWxlZnQ6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmczMH07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgLyogcmVzZXQgdGhlIGN1cnNvciBiZWNhdXNlIHRoaXMgYXJlYSBvZiB0aGUgaGVhZGVyIGRvZXNuJ3QgdHJpZ2dlciBpdHMgb25DbGljayAqL1xuICBjdXJzb3I6IGF1dG87XG5gO1xuXG5jb25zdCBTZWN0aW9uQ29udGVudCA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuYDtcblxuY29uc3QgU2VjdGlvbkRlc2NyaXB0aW9uV3JhcHBlciA9IHN0eWxlZC5kaXY8eyBjb25kZW5zZWQ/OiBib29sZWFuIH0+YFxuICBwYWRkaW5nOiAkeyh7IGNvbmRlbnNlZCB9KSA9PlxuICAgIGNvbmRlbnNlZFxuICAgICAgPyBkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvckNvbGxhcHNpYmxlUGFuZWxTZWN0aW9uRGVzY3JpcHRpb25Bc0NvbmRlbnNlZFxuICAgICAgOiBkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvckNvbGxhcHNpYmxlUGFuZWxTZWN0aW9uRGVzY3JpcHRpb259O1xuYDtcblxudHlwZSBUU2VjdGlvbldyYXBwZXIgPSB7XG4gIGNvbmRlbnNlZD86IGJvb2xlYW47XG4gIGlzRXhwYW5kQ29udHJvbEhpZGRlbj86IGJvb2xlYW47XG4gIGNoaWxkcmVuOiBSZWFjdE5vZGU7XG59O1xuY29uc3QgU2VjdGlvbldyYXBwZXIgPSBmb3J3YXJkUmVmPEhUTUxEaXZFbGVtZW50LCBUU2VjdGlvbldyYXBwZXI+KFxuICAocHJvcHMsIHJlZikgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2XG4gICAgICAgIHJlZj17cmVmfVxuICAgICAgICBjc3M9e1tcbiAgICAgICAgICBgXG4gICAgICAgICAgcGFkZGluZzogJHtcbiAgICAgICAgICAgIHByb3BzLmNvbmRlbnNlZFxuICAgICAgICAgICAgICA/IGRlc2lnblRva2Vucy5wYWRkaW5nRm9yQ29sbGFwc2libGVQYW5lbFNlY3Rpb25XcmFwcGVyQXNDb25kZW5zZWRcbiAgICAgICAgICAgICAgOiBkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvckNvbGxhcHNpYmxlUGFuZWxTZWN0aW9uV3JhcHBlclxuICAgICAgICAgIH07XG4gICAgICAgIGAsXG4gICAgICAgICAgcHJvcHMuaXNFeHBhbmRDb250cm9sSGlkZGVuICYmICdwYWRkaW5nLWxlZnQ6IDA7JyxcbiAgICAgICAgXX1cbiAgICAgID5cbiAgICAgICAge3Byb3BzLmNoaWxkcmVufVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuKTtcblNlY3Rpb25XcmFwcGVyLmRpc3BsYXlOYW1lID0gJ1NlY3Rpb25XcmFwcGVyJztcblxuZXhwb3J0IHtcbiAgYmFzZUNvbnRhaW5lclN0eWxlcyxcbiAgZ2V0SGVhZGVyQ29udGFpbmVyU3R5bGVzLFxuICBnZXRUaGVtZVN0eWxlLFxuICBTZWN0aW9uQ29udGVudCxcbiAgU2VjdGlvbkRlc2NyaXB0aW9uV3JhcHBlcixcbiAgU2VjdGlvbldyYXBwZXIsXG4gIEhlYWRlckNvbnRyb2xzV3JhcHBlcixcbn07XG4iXX0= */"));
const SectionContent = /*#__PURE__*/_styled("div", process.env.NODE_ENV === "production" ? {
  target: "em5v1nl1"
} : {
  target: "em5v1nl1",
  label: "SectionContent"
})(process.env.NODE_ENV === "production" ? {
  name: "esy9f9",
  styles: "width:100%;display:flex;flex-wrap:wrap;align-items:flex-start"
} : {
  name: "esy9f9",
  styles: "width:100%;display:flex;flex-wrap:wrap;align-items:flex-start",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbGxhcHNpYmxlLXBhbmVsLnN0eWxlcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUZpQyIsImZpbGUiOiJjb2xsYXBzaWJsZS1wYW5lbC5zdHlsZXMudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZm9yd2FyZFJlZiwgdHlwZSBSZWFjdE5vZGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcbmltcG9ydCB0eXBlIHsgVENvbGxhcHNpYmxlUGFuZWwgfSBmcm9tICcuL2NvbGxhcHNpYmxlLXBhbmVsJztcblxuZnVuY3Rpb24gZ2V0VGhlbWVTdHlsZSh0aGVtZT86IFRDb2xsYXBzaWJsZVBhbmVsWyd0aGVtZSddKSB7XG4gIGlmICh0aGVtZSA9PT0gJ2xpZ2h0Jykge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICAgIGA7XG4gIH1cbiAgcmV0dXJuIGNzc2BcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw5NX07XG4gIGA7XG59XG5cbmNvbnN0IGdldEhlYWRlckNvbnRhaW5lclN0eWxlcyA9IChcbiAgcHJvcHM6IFBpY2s8XG4gICAgVENvbGxhcHNpYmxlUGFuZWwsXG4gICAgJ2hlYWRlckNvbnRyb2xzQWxpZ25tZW50JyB8ICdjb25kZW5zZWQnIHwgJ2lzRGlzYWJsZWQnIHwgJ2lzU3RpY2t5J1xuICA+LFxuICBpc09wZW46IGJvb2xlYW5cbikgPT4ge1xuICBjb25zdCBiYXNlU3R5bGVzID0gY3NzYFxuICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG4gICAgYm9yZGVyLWJvdHRvbTogJHtgMXB4IHNvbGlkICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9yQ29sbGFwc2libGVQYW5lbEhlYWRlcn1gfTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNn07XG4gICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1czZ9O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleDogMTtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6ICR7cHJvcHMuaGVhZGVyQ29udHJvbHNBbGlnbm1lbnQgPT09ICdsZWZ0J1xuICAgICAgPyAnZmxleC1zdGFydCdcbiAgICAgIDogJ3NwYWNlLWJldHdlZW4nfTtcbiAgICBwYWRkaW5nOiAke3Byb3BzLmNvbmRlbnNlZFxuICAgICAgPyBgJHtkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvckNvbGxhcHNpYmxlUGFuZWxIZWFkZXJBc0NvbmRlbnNlZH1gXG4gICAgICA6IGAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yQ29sbGFwc2libGVQYW5lbEhlYWRlcn1gfTtcbiAgYDtcbiAgcmV0dXJuIFtcbiAgICBiYXNlU3R5bGVzLFxuICAgIHByb3BzLmlzRGlzYWJsZWQgJiZcbiAgICAgIGNzc2BcbiAgICAgICAgY3Vyc29yOiBkZWZhdWx0O1xuICAgICAgYCxcbiAgICBwcm9wcy5pc1N0aWNreSAmJlxuICAgICAgaXNPcGVuICYmXG4gICAgICBjc3NgXG4gICAgICAgIHotaW5kZXg6IDE7XG4gICAgICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1czZ9O1xuICAgICAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXM2fTtcbiAgICAgIGAsXG4gICAgIXByb3BzLmNvbmRlbnNlZCAmJlxuICAgICAgLy8gVG8gdW5kZXJzdGFuZCB3aHkgdGhpcyBtaW4taGVpZ2h0IHNlZTogaHR0cHM6Ly9naXRodWIuY29tL2NvbW1lcmNldG9vbHMvdWkta2l0L3B1bGwvNjE2XG4gICAgICBjc3NgXG4gICAgICAgIG1pbi1oZWlnaHQ6ICR7ZGVzaWduVG9rZW5zLmJpZ0J1dHRvbkhlaWdodH07XG4gICAgICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiBtYWtlcyB0aGUgcGFkZGluZyBleHRlbmQgYmV5b25kIHRoZSBtaW4taGVpZ2h0ICovXG4gICAgICBgLFxuICBdO1xufTtcblxuY29uc3QgYmFzZUNvbnRhaW5lclN0eWxlcyA9IGNzc2BcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtaW4td2lkdGg6ICR7ZGVzaWduVG9rZW5zLmNvbnN0cmFpbnQ2fTtcbiAgcGFkZGluZzogMDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU29saWR9O1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiAke2Rlc2lnblRva2Vucy5mb250U2l6ZURlZmF1bHR9O1xuYDtcblxuY29uc3QgSGVhZGVyQ29udHJvbHNXcmFwcGVyID0gc3R5bGVkLmRpdmBcbiAgbWFyZ2luLWxlZnQ6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmczMH07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgLyogcmVzZXQgdGhlIGN1cnNvciBiZWNhdXNlIHRoaXMgYXJlYSBvZiB0aGUgaGVhZGVyIGRvZXNuJ3QgdHJpZ2dlciBpdHMgb25DbGljayAqL1xuICBjdXJzb3I6IGF1dG87XG5gO1xuXG5jb25zdCBTZWN0aW9uQ29udGVudCA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuYDtcblxuY29uc3QgU2VjdGlvbkRlc2NyaXB0aW9uV3JhcHBlciA9IHN0eWxlZC5kaXY8eyBjb25kZW5zZWQ/OiBib29sZWFuIH0+YFxuICBwYWRkaW5nOiAkeyh7IGNvbmRlbnNlZCB9KSA9PlxuICAgIGNvbmRlbnNlZFxuICAgICAgPyBkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvckNvbGxhcHNpYmxlUGFuZWxTZWN0aW9uRGVzY3JpcHRpb25Bc0NvbmRlbnNlZFxuICAgICAgOiBkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvckNvbGxhcHNpYmxlUGFuZWxTZWN0aW9uRGVzY3JpcHRpb259O1xuYDtcblxudHlwZSBUU2VjdGlvbldyYXBwZXIgPSB7XG4gIGNvbmRlbnNlZD86IGJvb2xlYW47XG4gIGlzRXhwYW5kQ29udHJvbEhpZGRlbj86IGJvb2xlYW47XG4gIGNoaWxkcmVuOiBSZWFjdE5vZGU7XG59O1xuY29uc3QgU2VjdGlvbldyYXBwZXIgPSBmb3J3YXJkUmVmPEhUTUxEaXZFbGVtZW50LCBUU2VjdGlvbldyYXBwZXI+KFxuICAocHJvcHMsIHJlZikgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2XG4gICAgICAgIHJlZj17cmVmfVxuICAgICAgICBjc3M9e1tcbiAgICAgICAgICBgXG4gICAgICAgICAgcGFkZGluZzogJHtcbiAgICAgICAgICAgIHByb3BzLmNvbmRlbnNlZFxuICAgICAgICAgICAgICA/IGRlc2lnblRva2Vucy5wYWRkaW5nRm9yQ29sbGFwc2libGVQYW5lbFNlY3Rpb25XcmFwcGVyQXNDb25kZW5zZWRcbiAgICAgICAgICAgICAgOiBkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvckNvbGxhcHNpYmxlUGFuZWxTZWN0aW9uV3JhcHBlclxuICAgICAgICAgIH07XG4gICAgICAgIGAsXG4gICAgICAgICAgcHJvcHMuaXNFeHBhbmRDb250cm9sSGlkZGVuICYmICdwYWRkaW5nLWxlZnQ6IDA7JyxcbiAgICAgICAgXX1cbiAgICAgID5cbiAgICAgICAge3Byb3BzLmNoaWxkcmVufVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuKTtcblNlY3Rpb25XcmFwcGVyLmRpc3BsYXlOYW1lID0gJ1NlY3Rpb25XcmFwcGVyJztcblxuZXhwb3J0IHtcbiAgYmFzZUNvbnRhaW5lclN0eWxlcyxcbiAgZ2V0SGVhZGVyQ29udGFpbmVyU3R5bGVzLFxuICBnZXRUaGVtZVN0eWxlLFxuICBTZWN0aW9uQ29udGVudCxcbiAgU2VjdGlvbkRlc2NyaXB0aW9uV3JhcHBlcixcbiAgU2VjdGlvbldyYXBwZXIsXG4gIEhlYWRlckNvbnRyb2xzV3JhcHBlcixcbn07XG4iXX0= */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});
const SectionDescriptionWrapper = /*#__PURE__*/_styled("div", process.env.NODE_ENV === "production" ? {
  target: "em5v1nl0"
} : {
  target: "em5v1nl0",
  label: "SectionDescriptionWrapper"
})("padding:", _ref2 => {
  let condensed = _ref2.condensed;
  return condensed ? designTokens.paddingForCollapsiblePanelSectionDescriptionAsCondensed : designTokens.paddingForCollapsiblePanelSectionDescription;
}, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbGxhcHNpYmxlLXBhbmVsLnN0eWxlcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNEZxRSIsImZpbGUiOiJjb2xsYXBzaWJsZS1wYW5lbC5zdHlsZXMudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZm9yd2FyZFJlZiwgdHlwZSBSZWFjdE5vZGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcbmltcG9ydCB0eXBlIHsgVENvbGxhcHNpYmxlUGFuZWwgfSBmcm9tICcuL2NvbGxhcHNpYmxlLXBhbmVsJztcblxuZnVuY3Rpb24gZ2V0VGhlbWVTdHlsZSh0aGVtZT86IFRDb2xsYXBzaWJsZVBhbmVsWyd0aGVtZSddKSB7XG4gIGlmICh0aGVtZSA9PT0gJ2xpZ2h0Jykge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICAgIGA7XG4gIH1cbiAgcmV0dXJuIGNzc2BcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw5NX07XG4gIGA7XG59XG5cbmNvbnN0IGdldEhlYWRlckNvbnRhaW5lclN0eWxlcyA9IChcbiAgcHJvcHM6IFBpY2s8XG4gICAgVENvbGxhcHNpYmxlUGFuZWwsXG4gICAgJ2hlYWRlckNvbnRyb2xzQWxpZ25tZW50JyB8ICdjb25kZW5zZWQnIHwgJ2lzRGlzYWJsZWQnIHwgJ2lzU3RpY2t5J1xuICA+LFxuICBpc09wZW46IGJvb2xlYW5cbikgPT4ge1xuICBjb25zdCBiYXNlU3R5bGVzID0gY3NzYFxuICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG4gICAgYm9yZGVyLWJvdHRvbTogJHtgMXB4IHNvbGlkICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9yQ29sbGFwc2libGVQYW5lbEhlYWRlcn1gfTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNn07XG4gICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1czZ9O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleDogMTtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6ICR7cHJvcHMuaGVhZGVyQ29udHJvbHNBbGlnbm1lbnQgPT09ICdsZWZ0J1xuICAgICAgPyAnZmxleC1zdGFydCdcbiAgICAgIDogJ3NwYWNlLWJldHdlZW4nfTtcbiAgICBwYWRkaW5nOiAke3Byb3BzLmNvbmRlbnNlZFxuICAgICAgPyBgJHtkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvckNvbGxhcHNpYmxlUGFuZWxIZWFkZXJBc0NvbmRlbnNlZH1gXG4gICAgICA6IGAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yQ29sbGFwc2libGVQYW5lbEhlYWRlcn1gfTtcbiAgYDtcbiAgcmV0dXJuIFtcbiAgICBiYXNlU3R5bGVzLFxuICAgIHByb3BzLmlzRGlzYWJsZWQgJiZcbiAgICAgIGNzc2BcbiAgICAgICAgY3Vyc29yOiBkZWZhdWx0O1xuICAgICAgYCxcbiAgICBwcm9wcy5pc1N0aWNreSAmJlxuICAgICAgaXNPcGVuICYmXG4gICAgICBjc3NgXG4gICAgICAgIHotaW5kZXg6IDE7XG4gICAgICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1czZ9O1xuICAgICAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXM2fTtcbiAgICAgIGAsXG4gICAgIXByb3BzLmNvbmRlbnNlZCAmJlxuICAgICAgLy8gVG8gdW5kZXJzdGFuZCB3aHkgdGhpcyBtaW4taGVpZ2h0IHNlZTogaHR0cHM6Ly9naXRodWIuY29tL2NvbW1lcmNldG9vbHMvdWkta2l0L3B1bGwvNjE2XG4gICAgICBjc3NgXG4gICAgICAgIG1pbi1oZWlnaHQ6ICR7ZGVzaWduVG9rZW5zLmJpZ0J1dHRvbkhlaWdodH07XG4gICAgICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiBtYWtlcyB0aGUgcGFkZGluZyBleHRlbmQgYmV5b25kIHRoZSBtaW4taGVpZ2h0ICovXG4gICAgICBgLFxuICBdO1xufTtcblxuY29uc3QgYmFzZUNvbnRhaW5lclN0eWxlcyA9IGNzc2BcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtaW4td2lkdGg6ICR7ZGVzaWduVG9rZW5zLmNvbnN0cmFpbnQ2fTtcbiAgcGFkZGluZzogMDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU29saWR9O1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiAke2Rlc2lnblRva2Vucy5mb250U2l6ZURlZmF1bHR9O1xuYDtcblxuY29uc3QgSGVhZGVyQ29udHJvbHNXcmFwcGVyID0gc3R5bGVkLmRpdmBcbiAgbWFyZ2luLWxlZnQ6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmczMH07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgLyogcmVzZXQgdGhlIGN1cnNvciBiZWNhdXNlIHRoaXMgYXJlYSBvZiB0aGUgaGVhZGVyIGRvZXNuJ3QgdHJpZ2dlciBpdHMgb25DbGljayAqL1xuICBjdXJzb3I6IGF1dG87XG5gO1xuXG5jb25zdCBTZWN0aW9uQ29udGVudCA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuYDtcblxuY29uc3QgU2VjdGlvbkRlc2NyaXB0aW9uV3JhcHBlciA9IHN0eWxlZC5kaXY8eyBjb25kZW5zZWQ/OiBib29sZWFuIH0+YFxuICBwYWRkaW5nOiAkeyh7IGNvbmRlbnNlZCB9KSA9PlxuICAgIGNvbmRlbnNlZFxuICAgICAgPyBkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvckNvbGxhcHNpYmxlUGFuZWxTZWN0aW9uRGVzY3JpcHRpb25Bc0NvbmRlbnNlZFxuICAgICAgOiBkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvckNvbGxhcHNpYmxlUGFuZWxTZWN0aW9uRGVzY3JpcHRpb259O1xuYDtcblxudHlwZSBUU2VjdGlvbldyYXBwZXIgPSB7XG4gIGNvbmRlbnNlZD86IGJvb2xlYW47XG4gIGlzRXhwYW5kQ29udHJvbEhpZGRlbj86IGJvb2xlYW47XG4gIGNoaWxkcmVuOiBSZWFjdE5vZGU7XG59O1xuY29uc3QgU2VjdGlvbldyYXBwZXIgPSBmb3J3YXJkUmVmPEhUTUxEaXZFbGVtZW50LCBUU2VjdGlvbldyYXBwZXI+KFxuICAocHJvcHMsIHJlZikgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2XG4gICAgICAgIHJlZj17cmVmfVxuICAgICAgICBjc3M9e1tcbiAgICAgICAgICBgXG4gICAgICAgICAgcGFkZGluZzogJHtcbiAgICAgICAgICAgIHByb3BzLmNvbmRlbnNlZFxuICAgICAgICAgICAgICA/IGRlc2lnblRva2Vucy5wYWRkaW5nRm9yQ29sbGFwc2libGVQYW5lbFNlY3Rpb25XcmFwcGVyQXNDb25kZW5zZWRcbiAgICAgICAgICAgICAgOiBkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvckNvbGxhcHNpYmxlUGFuZWxTZWN0aW9uV3JhcHBlclxuICAgICAgICAgIH07XG4gICAgICAgIGAsXG4gICAgICAgICAgcHJvcHMuaXNFeHBhbmRDb250cm9sSGlkZGVuICYmICdwYWRkaW5nLWxlZnQ6IDA7JyxcbiAgICAgICAgXX1cbiAgICAgID5cbiAgICAgICAge3Byb3BzLmNoaWxkcmVufVxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuKTtcblNlY3Rpb25XcmFwcGVyLmRpc3BsYXlOYW1lID0gJ1NlY3Rpb25XcmFwcGVyJztcblxuZXhwb3J0IHtcbiAgYmFzZUNvbnRhaW5lclN0eWxlcyxcbiAgZ2V0SGVhZGVyQ29udGFpbmVyU3R5bGVzLFxuICBnZXRUaGVtZVN0eWxlLFxuICBTZWN0aW9uQ29udGVudCxcbiAgU2VjdGlvbkRlc2NyaXB0aW9uV3JhcHBlcixcbiAgU2VjdGlvbldyYXBwZXIsXG4gIEhlYWRlckNvbnRyb2xzV3JhcHBlcixcbn07XG4iXX0= */"));
const SectionWrapper = /*#__PURE__*/forwardRef((props, ref) => {
  return jsx("div", {
    ref: ref,
    css: ["\n          padding: ".concat(props.condensed ? designTokens.paddingForCollapsiblePanelSectionWrapperAsCondensed : designTokens.paddingForCollapsiblePanelSectionWrapper, ";\n        "), props.isExpandControlHidden && 'padding-left: 0;', process.env.NODE_ENV === "production" ? "" : ";label:SectionWrapper;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbGxhcHNpYmxlLXBhbmVsLnN0eWxlcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNkdRIiwiZmlsZSI6ImNvbGxhcHNpYmxlLXBhbmVsLnN0eWxlcy50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmb3J3YXJkUmVmLCB0eXBlIFJlYWN0Tm9kZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGRlc2lnblRva2VucyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuaW1wb3J0IHR5cGUgeyBUQ29sbGFwc2libGVQYW5lbCB9IGZyb20gJy4vY29sbGFwc2libGUtcGFuZWwnO1xuXG5mdW5jdGlvbiBnZXRUaGVtZVN0eWxlKHRoZW1lPzogVENvbGxhcHNpYmxlUGFuZWxbJ3RoZW1lJ10pIHtcbiAgaWYgKHRoZW1lID09PSAnbGlnaHQnKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG4gICAgYDtcbiAgfVxuICByZXR1cm4gY3NzYFxuICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDk1fTtcbiAgYDtcbn1cblxuY29uc3QgZ2V0SGVhZGVyQ29udGFpbmVyU3R5bGVzID0gKFxuICBwcm9wczogUGljazxcbiAgICBUQ29sbGFwc2libGVQYW5lbCxcbiAgICAnaGVhZGVyQ29udHJvbHNBbGlnbm1lbnQnIHwgJ2NvbmRlbnNlZCcgfCAnaXNEaXNhYmxlZCcgfCAnaXNTdGlja3knXG4gID4sXG4gIGlzT3BlbjogYm9vbGVhblxuKSA9PiB7XG4gIGNvbnN0IGJhc2VTdHlsZXMgPSBjc3NgXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICBib3JkZXItYm90dG9tOiAke2AxcHggc29saWQgJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JDb2xsYXBzaWJsZVBhbmVsSGVhZGVyfWB9O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXM2fTtcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNn07XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4OiAxO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICAgIGp1c3RpZnktY29udGVudDogJHtwcm9wcy5oZWFkZXJDb250cm9sc0FsaWdubWVudCA9PT0gJ2xlZnQnXG4gICAgICA/ICdmbGV4LXN0YXJ0J1xuICAgICAgOiAnc3BhY2UtYmV0d2Vlbid9O1xuICAgIHBhZGRpbmc6ICR7cHJvcHMuY29uZGVuc2VkXG4gICAgICA/IGAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yQ29sbGFwc2libGVQYW5lbEhlYWRlckFzQ29uZGVuc2VkfWBcbiAgICAgIDogYCR7ZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JDb2xsYXBzaWJsZVBhbmVsSGVhZGVyfWB9O1xuICBgO1xuICByZXR1cm4gW1xuICAgIGJhc2VTdHlsZXMsXG4gICAgcHJvcHMuaXNEaXNhYmxlZCAmJlxuICAgICAgY3NzYFxuICAgICAgICBjdXJzb3I6IGRlZmF1bHQ7XG4gICAgICBgLFxuICAgIHByb3BzLmlzU3RpY2t5ICYmXG4gICAgICBpc09wZW4gJiZcbiAgICAgIGNzc2BcbiAgICAgICAgei1pbmRleDogMTtcbiAgICAgICAgcG9zaXRpb246IHN0aWNreTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNn07XG4gICAgICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1czZ9O1xuICAgICAgYCxcbiAgICAhcHJvcHMuY29uZGVuc2VkICYmXG4gICAgICAvLyBUbyB1bmRlcnN0YW5kIHdoeSB0aGlzIG1pbi1oZWlnaHQgc2VlOiBodHRwczovL2dpdGh1Yi5jb20vY29tbWVyY2V0b29scy91aS1raXQvcHVsbC82MTZcbiAgICAgIGNzc2BcbiAgICAgICAgbWluLWhlaWdodDogJHtkZXNpZ25Ub2tlbnMuYmlnQnV0dG9uSGVpZ2h0fTtcbiAgICAgICAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIG1ha2VzIHRoZSBwYWRkaW5nIGV4dGVuZCBiZXlvbmQgdGhlIG1pbi1oZWlnaHQgKi9cbiAgICAgIGAsXG4gIF07XG59O1xuXG5jb25zdCBiYXNlQ29udGFpbmVyU3R5bGVzID0gY3NzYFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1pbi13aWR0aDogJHtkZXNpZ25Ub2tlbnMuY29uc3RyYWludDZ9O1xuICBwYWRkaW5nOiAwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JTb2xpZH07XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBmb250LXNpemU6ICR7ZGVzaWduVG9rZW5zLmZvbnRTaXplRGVmYXVsdH07XG5gO1xuXG5jb25zdCBIZWFkZXJDb250cm9sc1dyYXBwZXIgPSBzdHlsZWQuZGl2YFxuICBtYXJnaW4tbGVmdDogJHtkZXNpZ25Ub2tlbnMuc3BhY2luZzMwfTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAvKiByZXNldCB0aGUgY3Vyc29yIGJlY2F1c2UgdGhpcyBhcmVhIG9mIHRoZSBoZWFkZXIgZG9lc24ndCB0cmlnZ2VyIGl0cyBvbkNsaWNrICovXG4gIGN1cnNvcjogYXV0bztcbmA7XG5cbmNvbnN0IFNlY3Rpb25Db250ZW50ID0gc3R5bGVkLmRpdmBcbiAgd2lkdGg6IDEwMCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG5gO1xuXG5jb25zdCBTZWN0aW9uRGVzY3JpcHRpb25XcmFwcGVyID0gc3R5bGVkLmRpdjx7IGNvbmRlbnNlZD86IGJvb2xlYW4gfT5gXG4gIHBhZGRpbmc6ICR7KHsgY29uZGVuc2VkIH0pID0+XG4gICAgY29uZGVuc2VkXG4gICAgICA/IGRlc2lnblRva2Vucy5wYWRkaW5nRm9yQ29sbGFwc2libGVQYW5lbFNlY3Rpb25EZXNjcmlwdGlvbkFzQ29uZGVuc2VkXG4gICAgICA6IGRlc2lnblRva2Vucy5wYWRkaW5nRm9yQ29sbGFwc2libGVQYW5lbFNlY3Rpb25EZXNjcmlwdGlvbn07XG5gO1xuXG50eXBlIFRTZWN0aW9uV3JhcHBlciA9IHtcbiAgY29uZGVuc2VkPzogYm9vbGVhbjtcbiAgaXNFeHBhbmRDb250cm9sSGlkZGVuPzogYm9vbGVhbjtcbiAgY2hpbGRyZW46IFJlYWN0Tm9kZTtcbn07XG5jb25zdCBTZWN0aW9uV3JhcHBlciA9IGZvcndhcmRSZWY8SFRNTERpdkVsZW1lbnQsIFRTZWN0aW9uV3JhcHBlcj4oXG4gIChwcm9wcywgcmVmKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgIGNzcz17W1xuICAgICAgICAgIGBcbiAgICAgICAgICBwYWRkaW5nOiAke1xuICAgICAgICAgICAgcHJvcHMuY29uZGVuc2VkXG4gICAgICAgICAgICAgID8gZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JDb2xsYXBzaWJsZVBhbmVsU2VjdGlvbldyYXBwZXJBc0NvbmRlbnNlZFxuICAgICAgICAgICAgICA6IGRlc2lnblRva2Vucy5wYWRkaW5nRm9yQ29sbGFwc2libGVQYW5lbFNlY3Rpb25XcmFwcGVyXG4gICAgICAgICAgfTtcbiAgICAgICAgYCxcbiAgICAgICAgICBwcm9wcy5pc0V4cGFuZENvbnRyb2xIaWRkZW4gJiYgJ3BhZGRpbmctbGVmdDogMDsnLFxuICAgICAgICBdfVxuICAgICAgPlxuICAgICAgICB7cHJvcHMuY2hpbGRyZW59XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG4pO1xuU2VjdGlvbldyYXBwZXIuZGlzcGxheU5hbWUgPSAnU2VjdGlvbldyYXBwZXInO1xuXG5leHBvcnQge1xuICBiYXNlQ29udGFpbmVyU3R5bGVzLFxuICBnZXRIZWFkZXJDb250YWluZXJTdHlsZXMsXG4gIGdldFRoZW1lU3R5bGUsXG4gIFNlY3Rpb25Db250ZW50LFxuICBTZWN0aW9uRGVzY3JpcHRpb25XcmFwcGVyLFxuICBTZWN0aW9uV3JhcHBlcixcbiAgSGVhZGVyQ29udHJvbHNXcmFwcGVyLFxufTtcbiJdfQ== */"],
    children: props.children
  });
});
SectionWrapper.displayName = 'SectionWrapper';

const CollapsiblePanelHeader = props => props.isCondensed ? jsx(Fragment, {
  children: props.children
}) : jsx(Text.Headline, {
  as: "h2",
  truncate: true,
  children: props.children
});
CollapsiblePanelHeader.propTypes = process.env.NODE_ENV !== "production" ? {
  children: _pt.node.isRequired,
  isCondensed: _pt.bool
} : {};
CollapsiblePanelHeader.displayName = 'CollapsiblePanelHeader';
var CollapsiblePanelHeader$1 = CollapsiblePanelHeader;

const HeaderContainer = /*#__PURE__*/_styled(AccessibleButton, process.env.NODE_ENV === "production" ? {
  target: "e1923bli0"
} : {
  target: "e1923bli0",
  label: "HeaderContainer"
})(process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */");
const panelButtonSequentialId = createSequentialId('collapsible-panel-button-');
const panelContentSequentialId = createSequentialId('collapsible-panel-content-');
const defaultProps = {
  theme: 'dark',
  condensed: false,
  isDisabled: false,
  headerControlsAlignment: 'right',
  horizontalConstraint: 'scale'
};
const HeadLineText = props => {
  if (!props.condensed) {
    return jsx(Fragment, {
      children: props.header
    });
  }
  return jsx(Text.Subheadline, {
    as: "h4",
    truncate: true,
    children: typeof props.header === 'string' ? props.header : /*#__PURE__*/cloneElement(props.header, {
      isCondensed: props.condensed
    })
  });
};

// When `isClosed` is provided the component behaves as a controlled component,
// otherwise it will behave like an uncontrolled component.
const CollapsiblePanel = props => {
  const panelButtonId = useFieldId(props.id, panelButtonSequentialId);
  const panelContentId = useFieldId(undefined, panelContentSequentialId);
  // Pass only `data-*` props
  const dataProps = filterDataAttributes(props);
  const scale = props.condensed ? 's' : 'm';
  const isClosedAndIsDefaultClosed = !isNil(props.isClosed) && !isNil(props.isDefaultClosed);
  process.env.NODE_ENV !== "production" ? warning(!isClosedAndIsDefaultClosed, "Invalid prop `isDefaultClosed` supplied to `CollapsiblePanel`. Component must either be controlled or uncontrolled. Pass either `isClosed` or `isDefaultClosed` but not both.") : void 0;
  const hasOnToggle = !isNil(props.onToggle);
  const isControlledComponent = !isNil(props.isClosed);

  // controlled
  if (isControlledComponent) {
    process.env.NODE_ENV !== "production" ? warning(hasOnToggle, "missing required prop `onToggle` when using the \"isClosed\" prop (controlled component).") : void 0;
  }

  // uncontrolled
  if (!isControlledComponent) {
    process.env.NODE_ENV !== "production" ? warning(!hasOnToggle, "Invalid prop `onToggle` supplied to `CollapsiblePanel`. `onToggle` does not have any effect when the component is uncontrolled.") : void 0;
  }
  return jsx(CollapsibleMotion, {
    isClosed: props.isClosed,
    onToggle: props.onToggle,
    isDefaultClosed: props.isDefaultClosed,
    children: _ref => {
      let isOpen = _ref.isOpen,
        toggle = _ref.toggle,
        containerStyles = _ref.containerStyles,
        registerContentNode = _ref.registerContentNode;
      return jsx(Constraints.Horizontal, {
        max: props.horizontalConstraint,
        children: jsxs("div", {
          css: [baseContainerStyles, getThemeStyle('light'), process.env.NODE_ENV === "production" ? "" : ";label:CollapsiblePanel;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"]
          // Allow to override the styles by passing a `className` prop.
          // Custom styles can also be passed using the `css` prop from emotion.
          // https://emotion.sh/docs/css-prop#style-precedence
          ,
          className: props.className,
          children: [jsxs(HeaderContainer, {
            as: "div",
            css: [getHeaderContainerStyles(props, isOpen), getThemeStyle('light'), process.env.NODE_ENV === "production" ? "" : ";label:CollapsiblePanel;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"],
            id: panelButtonId,
            label: "",
            onClick: props.isDisabled ? undefined : toggle,
            isDisabled: props.isDisabled,
            buttonAttributes: dataProps,
            "aria-controls": panelContentId,
            "aria-expanded": isOpen ? 'true' : 'false',
            children: [jsxs(Spacings.Inline, {
              alignItems: "center",
              scale: "xs",
              children: [!props.hideExpansionControls && jsx(HeaderIcon$1, {
                isClosed: !isOpen,
                isDisabled: props.isDisabled || false,
                tone: props.tone,
                size: 'medium'
              }), jsxs(Spacings.Inline, {
                alignItems: "baseline",
                scale: scale,
                children: [jsx(HeadLineText, {
                  header: props.header,
                  condensed: props.condensed
                }), props.secondaryHeader && jsx(Text.Detail, {
                  tone: "secondary",
                  truncate: true,
                  children: props.secondaryHeader
                })]
              })]
            }), props.headerControls && jsx(HeaderControlsWrapper, {
              onClick: event => event.stopPropagation(),
              children: props.headerControls
            })]
          }), jsx("div", {
            style: containerStyles,
            children: jsxs(SectionWrapper
            // @ts-ignore
            , {
              ref: registerContentNode,
              condensed: props.condensed,
              isExpandControlHidden: props.hideExpansionControls,
              children: [props.description && jsx(SectionDescriptionWrapper, {
                condensed: props.condensed,
                children: jsx(Text.Detail, {
                  tone: "secondary",
                  children: props.description
                })
              }), jsx(Spacings.Stack, {
                scale: scale,
                children: jsx(SectionContent, {
                  id: panelContentId,
                  role: "region",
                  "aria-labelledby": panelButtonId,
                  hidden: !isOpen,
                  children: props.children
                })
              })]
            })
          })]
        })
      });
    }
  });
};

/**
 * @deprecated This function is no longer supported.
 */
CollapsiblePanel.propTypes = process.env.NODE_ENV !== "production" ? {
  id: _pt.string,
  header: _pt.node.isRequired,
  secondaryHeader: _pt.node,
  description: _pt.string,
  className: _pt.string,
  isSticky: _pt.bool,
  headerControls: _pt.node,
  isDisabled: _pt.bool,
  children: _pt.node,
  tone: _pt.oneOf(['urgent', 'primary']),
  theme: _pt.oneOf(['dark', 'light']),
  condensed: _pt.bool,
  hideExpansionControls: _pt.bool,
  headerControlsAlignment: _pt.oneOf(['left', 'right']),
  isDefaultClosed: _pt.bool,
  isClosed: _pt.bool,
  onToggle: _pt.func,
  horizontalConstraint: _pt.oneOf([6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 'scale', 'auto'])
} : {};
CollapsiblePanel.getPanelContentId = () => '';
CollapsiblePanel.displayName = 'CollapsiblePanel';
CollapsiblePanel.defaultProps = defaultProps;
CollapsiblePanel.Header = CollapsiblePanelHeader$1;
var CollapsiblePanel$1 = CollapsiblePanel;

// NOTE: This string will be replaced on build time with the package version.
var version = "16.11.0";

export { CollapsiblePanel$1 as default, version };
