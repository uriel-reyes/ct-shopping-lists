import { type FocusEventHandler } from 'react';
import { type WrappedComponentProps } from 'react-intl';
type TCustomEvent = {
    target: {
        id?: string;
        name?: string;
        value?: string;
    };
};
export type TDateTimeInputProps = {
    'aria-invalid'?: boolean;
    'aria-errormessage'?: string;
    horizontalConstraint?: 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 'scale' | 'auto';
    value: string;
    onChange?: (event: TCustomEvent) => void;
    onFocus?: FocusEventHandler<HTMLDivElement>;
    onBlur?: (event: TCustomEvent) => void;
    timeZone: string;
    id?: string;
    name?: string;
    placeholder?: string;
    isDisabled?: boolean;
    isReadOnly?: boolean;
    hasError?: boolean;
    hasWarning?: boolean;
} & WrappedComponentProps;
declare const _default: import("react").FC<import("react-intl").WithIntlProps<TDateTimeInputProps>> & {
    WrappedComponent: import("react").ComponentType<TDateTimeInputProps>;
};
export default _default;
