import { type ReactNode, type Ref, type FocusEventHandler } from 'react';
import { type Descendant } from 'slate';
export type TEditorProps = {
    id?: string;
    name?: string;
    placeholder?: string;
    disabled?: boolean;
    readOnly?: boolean;
    horizontalConstraint?: 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 'scale' | 'auto';
    children?: ReactNode;
    isDisabled?: boolean;
    isReadOnly?: boolean;
    showExpandIcon: boolean;
    onClickExpand?: () => boolean;
    hasWarning?: boolean;
    hasError?: boolean;
    defaultExpandMultilineText?: boolean;
    value: Descendant[];
    onChange: (state: Descendant[]) => void;
    onFocus?: FocusEventHandler<HTMLDivElement>;
    onBlur?: FocusEventHandler<HTMLDivElement>;
    isAutofocused?: boolean;
    ref?: Ref<unknown>;
};
declare const Editor: import("react").ForwardRefExoticComponent<Omit<TEditorProps, "ref"> & import("react").RefAttributes<unknown>>;
export default Editor;
