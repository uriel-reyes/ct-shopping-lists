import _defineProperty from '@babel/runtime-corejs3/helpers/esm/defineProperty';
import _pt from 'prop-types';
import _filterInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/filter';
import _mapInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/map';
import _concatInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/concat';
import _Object$keys from '@babel/runtime-corejs3/core-js-stable/object/keys';
import _Object$getOwnPropertySymbols from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols';
import _Object$getOwnPropertyDescriptor from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor';
import _forEachInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/for-each';
import _Object$getOwnPropertyDescriptors from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors';
import _Object$defineProperties from '@babel/runtime-corejs3/core-js-stable/object/define-properties';
import _Object$defineProperty from '@babel/runtime-corejs3/core-js-stable/object/define-property';
import { isValidElement, useEffect, Children, cloneElement } from 'react';
import { warning, filterDataAttributes, filterInvalidAttributes } from '@commercetools-uikit/utils';
import Constraints from '@commercetools-uikit/constraints';
import Stack from '@commercetools-uikit/spacings-stack';
import Inline from '@commercetools-uikit/spacings-inline';
import { accessibleHiddenInputStyles } from '@commercetools-uikit/input-utils';
import _styled from '@emotion/styled/base';
import { css } from '@emotion/react';
import { designTokens } from '@commercetools-uikit/design-system';
import SpacingsInset from '@commercetools-uikit/spacings-inset';
import { jsx, Fragment, jsxs } from '@emotion/react/jsx-runtime';

function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }
const LabelTextWrapper = /*#__PURE__*/_styled("div", process.env.NODE_ENV === "production" ? {
  target: "e1x57rfz6"
} : {
  target: "e1x57rfz6",
  label: "LabelTextWrapper"
})("grid-area:label;margin-left:", designTokens.marginLeftForRadioInputLabel, ";font-size:1rem;font-family:inherit;display:flex;align-items:center;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJhZGlvLW9wdGlvbi5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS2lEIiwiZmlsZSI6InJhZGlvLW9wdGlvbi5zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcbmltcG9ydCB0eXBlIHsgVFN0eWxlc1Byb3BzIH0gZnJvbSAnLi9yYWRpby1vcHRpb24nO1xuXG5jb25zdCBMYWJlbFRleHRXcmFwcGVyID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICBncmlkLWFyZWE6IGxhYmVsO1xuICBtYXJnaW4tbGVmdDogJHtkZXNpZ25Ub2tlbnMubWFyZ2luTGVmdEZvclJhZGlvSW5wdXRMYWJlbH07XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5gO1xuXG5jb25zdCBBZGRpdGlvbmFsVGV4dFdyYXBwZXIgPSBzdHlsZWQuZGl2PFRTdHlsZXNQcm9wcz5gXG4gIGdyaWQtYXJlYTogY29udGVudDtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbmA7XG5cbmNvbnN0IFJhZGlvSW5wdXRXcmFwcGVyID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IGF1dG87XG4gIGdyaWQtdGVtcGxhdGUtcm93czogYXV0bztcbiAgZ3JpZC10ZW1wbGF0ZS1hcmVhczpcbiAgICAncmFkaW8gbGFiZWwnXG4gICAgJy4gY29udGVudCc7XG5gO1xuXG5jb25zdCBnZXRCb3JkZXJDb2xvciA9IChwcm9wczogVFN0eWxlc1Byb3BzKSA9PiB7XG4gIGlmIChwcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkRpc2FibGVkO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvclJhZGlvSW5wdXRXaGVuUmVhZG9ubHk7XG4gIH1cbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkVycm9yO1xuICB9XG4gIGlmIChwcm9wcy5oYXNXYXJuaW5nKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbldhcm5pbmc7XG4gIH1cbiAgaWYgKHByb3BzLmlzSG92ZXJlZCAmJiAhcHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIGlmIChwcm9wcy5pc0NoZWNrZWQpIHtcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkO1xuICAgIH1cbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9yUmFkaW9JbnB1dFdoZW5Gb2N1c2VkO1xuICB9XG4gIGlmIChwcm9wcy5pc0NoZWNrZWQpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9yUmFkaW9JbnB1dFdoZW5DaGVja2VkO1xuICB9XG4gIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JSYWRpb0lucHV0O1xufTtcblxuY29uc3QgZ2V0S25vYkNvbG9yID0gKHByb3BzOiBUU3R5bGVzUHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLmlzRGlzYWJsZWQpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9yUmFkaW9JbnB1dFdoZW5EaXNhYmxlZDtcbiAgfVxuICBpZiAocHJvcHMuaGFzRXJyb3IpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlbkVycm9yO1xuICB9XG4gIGlmIChwcm9wcy5oYXNXYXJuaW5nKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvck5ldXRyYWw2MDtcbiAgfVxuICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZDtcbn07XG5cbmNvbnN0IGdldExhYmVsQ29sb3IgPSAocHJvcHM6IFRTdHlsZXNQcm9wcykgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWQ7XG4gIH1cbiAgaWYgKHByb3BzLmlzUmVhZE9ubHkpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRXJyb3I7XG4gIH1cbiAgaWYgKHByb3BzLmhhc1dhcm5pbmcpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlbldhcm5pbmc7XG4gIH1cbiAgcmV0dXJuIGRlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dDtcbn07XG5jb25zdCBnZXRMYWJlbEN1cnNvciA9IChwcm9wczogVFN0eWxlc1Byb3BzKSA9PiB7XG4gIGlmIChwcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgcmV0dXJuICdub3QtYWxsb3dlZCc7XG4gIH1cbiAgaWYgKHByb3BzLmlzUmVhZE9ubHkpIHtcbiAgICByZXR1cm4gJ2RlZmF1bHQnO1xuICB9XG4gIHJldHVybiAncG9pbnRlcic7XG59O1xuXG5jb25zdCBSYWRpb09wdGlvbktub2IgPSBzdHlsZWQuZGl2PFRTdHlsZXNQcm9wcz5gXG4gIHdpZHRoOiAke2Rlc2lnblRva2Vucy5oZWlnaHRGb3JSYWRpb0lucHV0T3B0aW9uV2hlbkNoZWNrZWR9O1xuICBoZWlnaHQ6ICR7ZGVzaWduVG9rZW5zLmhlaWdodEZvclJhZGlvSW5wdXRPcHRpb25XaGVuQ2hlY2tlZH07XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IGdldEtub2JDb2xvcihwcm9wcyl9O1xuYDtcblxuY29uc3QgUmFkaW9PcHRpb25Cb3JkZXIgPSBzdHlsZWQuZGl2PFRTdHlsZXNQcm9wcz5gXG4gIHdpZHRoOiAke2Rlc2lnblRva2Vucy5oZWlnaHRGb3JSYWRpb0lucHV0T3B0aW9ufTtcbiAgaGVpZ2h0OiAke2Rlc2lnblRva2Vucy5oZWlnaHRGb3JSYWRpb0lucHV0T3B0aW9ufTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JJbnB1dH07XG4gIGJvcmRlci13aWR0aDogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyRm9yUmFkaW9JbnB1dE9wdGlvbn07XG4gIGJvcmRlci1zdHlsZTogc29saWQ7XG4gIGJvcmRlci1jb2xvcjogJHsocHJvcHMpID0+IGdldEJvcmRlckNvbG9yKHByb3BzKX07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuYDtcblxuY29uc3QgUmFkaW9PcHRpb25Db250YWluZXIgPSBzdHlsZWQuZGl2PFRTdHlsZXNQcm9wcz5gXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGdyaWQtYXJlYTogcmFkaW87XG4gIHdpZHRoOiAyNnB4O1xuICBoZWlnaHQ6IDI2cHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYm9yZGVyOiA0cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICR7UmFkaW9PcHRpb25Cb3JkZXJ9IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT5cbiAgICAgIHByb3BzLmlzRGlzYWJsZWRcbiAgICAgICAgPyBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWRcbiAgICAgICAgOiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXR9O1xuICB9XG5gO1xuXG5jb25zdCBnZXRIb3ZlclN0eWxlcyA9IChwcm9wczogVFN0eWxlc1Byb3BzKSA9PiB7XG4gIGNvbnN0IGhvdmVyU3R5bGVzID0gY3NzYFxuICAgICR7UmFkaW9PcHRpb25Db250YWluZXJ9IHtcbiAgICAgIGJvcmRlci1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsOTB9O1xuICAgIH1cbiAgYDtcblxuICByZXR1cm4gW1xuICAgICFwcm9wcy5pc0Rpc2FibGVkICYmXG4gICAgICAhcHJvcHMuaXNSZWFkT25seSAmJlxuICAgICAgLyogcHJldHRpZXItaWdub3JlICovXG4gICAgICBjc3NgXG4gICAgICAgICY6aG92ZXIgJHtob3ZlclN0eWxlc307XG4gICAgICBgLFxuICAgIHByb3BzLmlzSG92ZXJlZCAmJiBob3ZlclN0eWxlcyxcbiAgXTtcbn07XG5cbmNvbnN0IFJhZGlvT3B0aW9uTGFiZWwgPSBzdHlsZWQubGFiZWw8VFN0eWxlc1Byb3BzPmBcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgY29sb3I6ICR7KHByb3BzKSA9PiBnZXRMYWJlbENvbG9yKHByb3BzKX07XG4gIGN1cnNvcjogJHsocHJvcHMpID0+IGdldExhYmVsQ3Vyc29yKHByb3BzKX07XG4gIGRpc3BsYXk6IGZsZXg7XG5cbiAgJHsocHJvcHMpID0+XG4gICAgIXByb3BzLmlzUmVhZE9ubHlcbiAgICAgID8gYDpmb2N1cy13aXRoaW4gJHtMYWJlbFRleHRXcmFwcGVyfSB7XG4gICAgICBvdXRsaW5lOiBhdXRvIDJweCAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWR9O1xuICAgICAgb3V0bGluZS1vZmZzZXQ6IDJweDtcbiAgICAgIHdpZHRoOiBmaXQtY29udGVudDtcbiAgICB9YFxuICAgICAgOiAnJ31cblxuICAkeyhwcm9wcykgPT4gZ2V0SG92ZXJTdHlsZXMocHJvcHMpfVxuYDtcblxuZXhwb3J0IHtcbiAgTGFiZWxUZXh0V3JhcHBlcixcbiAgUmFkaW9JbnB1dFdyYXBwZXIsXG4gIEFkZGl0aW9uYWxUZXh0V3JhcHBlcixcbiAgUmFkaW9PcHRpb25Lbm9iLFxuICBSYWRpb09wdGlvbkJvcmRlcixcbiAgUmFkaW9PcHRpb25MYWJlbCxcbiAgUmFkaW9PcHRpb25Db250YWluZXIsXG59O1xuIl19 */"));
const AdditionalTextWrapper = /*#__PURE__*/_styled("div", process.env.NODE_ENV === "production" ? {
  target: "e1x57rfz5"
} : {
  target: "e1x57rfz5",
  label: "AdditionalTextWrapper"
})(process.env.NODE_ENV === "production" ? {
  name: "1v76jw6",
  styles: "grid-area:content;font-size:1rem;font-family:inherit"
} : {
  name: "1v76jw6",
  styles: "grid-area:content;font-size:1rem;font-family:inherit",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJhZGlvLW9wdGlvbi5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBY3NEIiwiZmlsZSI6InJhZGlvLW9wdGlvbi5zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcbmltcG9ydCB0eXBlIHsgVFN0eWxlc1Byb3BzIH0gZnJvbSAnLi9yYWRpby1vcHRpb24nO1xuXG5jb25zdCBMYWJlbFRleHRXcmFwcGVyID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICBncmlkLWFyZWE6IGxhYmVsO1xuICBtYXJnaW4tbGVmdDogJHtkZXNpZ25Ub2tlbnMubWFyZ2luTGVmdEZvclJhZGlvSW5wdXRMYWJlbH07XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5gO1xuXG5jb25zdCBBZGRpdGlvbmFsVGV4dFdyYXBwZXIgPSBzdHlsZWQuZGl2PFRTdHlsZXNQcm9wcz5gXG4gIGdyaWQtYXJlYTogY29udGVudDtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbmA7XG5cbmNvbnN0IFJhZGlvSW5wdXRXcmFwcGVyID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IGF1dG87XG4gIGdyaWQtdGVtcGxhdGUtcm93czogYXV0bztcbiAgZ3JpZC10ZW1wbGF0ZS1hcmVhczpcbiAgICAncmFkaW8gbGFiZWwnXG4gICAgJy4gY29udGVudCc7XG5gO1xuXG5jb25zdCBnZXRCb3JkZXJDb2xvciA9IChwcm9wczogVFN0eWxlc1Byb3BzKSA9PiB7XG4gIGlmIChwcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkRpc2FibGVkO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvclJhZGlvSW5wdXRXaGVuUmVhZG9ubHk7XG4gIH1cbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkVycm9yO1xuICB9XG4gIGlmIChwcm9wcy5oYXNXYXJuaW5nKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbldhcm5pbmc7XG4gIH1cbiAgaWYgKHByb3BzLmlzSG92ZXJlZCAmJiAhcHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIGlmIChwcm9wcy5pc0NoZWNrZWQpIHtcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkO1xuICAgIH1cbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9yUmFkaW9JbnB1dFdoZW5Gb2N1c2VkO1xuICB9XG4gIGlmIChwcm9wcy5pc0NoZWNrZWQpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9yUmFkaW9JbnB1dFdoZW5DaGVja2VkO1xuICB9XG4gIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JSYWRpb0lucHV0O1xufTtcblxuY29uc3QgZ2V0S25vYkNvbG9yID0gKHByb3BzOiBUU3R5bGVzUHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLmlzRGlzYWJsZWQpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9yUmFkaW9JbnB1dFdoZW5EaXNhYmxlZDtcbiAgfVxuICBpZiAocHJvcHMuaGFzRXJyb3IpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlbkVycm9yO1xuICB9XG4gIGlmIChwcm9wcy5oYXNXYXJuaW5nKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvck5ldXRyYWw2MDtcbiAgfVxuICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZDtcbn07XG5cbmNvbnN0IGdldExhYmVsQ29sb3IgPSAocHJvcHM6IFRTdHlsZXNQcm9wcykgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWQ7XG4gIH1cbiAgaWYgKHByb3BzLmlzUmVhZE9ubHkpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRXJyb3I7XG4gIH1cbiAgaWYgKHByb3BzLmhhc1dhcm5pbmcpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlbldhcm5pbmc7XG4gIH1cbiAgcmV0dXJuIGRlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dDtcbn07XG5jb25zdCBnZXRMYWJlbEN1cnNvciA9IChwcm9wczogVFN0eWxlc1Byb3BzKSA9PiB7XG4gIGlmIChwcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgcmV0dXJuICdub3QtYWxsb3dlZCc7XG4gIH1cbiAgaWYgKHByb3BzLmlzUmVhZE9ubHkpIHtcbiAgICByZXR1cm4gJ2RlZmF1bHQnO1xuICB9XG4gIHJldHVybiAncG9pbnRlcic7XG59O1xuXG5jb25zdCBSYWRpb09wdGlvbktub2IgPSBzdHlsZWQuZGl2PFRTdHlsZXNQcm9wcz5gXG4gIHdpZHRoOiAke2Rlc2lnblRva2Vucy5oZWlnaHRGb3JSYWRpb0lucHV0T3B0aW9uV2hlbkNoZWNrZWR9O1xuICBoZWlnaHQ6ICR7ZGVzaWduVG9rZW5zLmhlaWdodEZvclJhZGlvSW5wdXRPcHRpb25XaGVuQ2hlY2tlZH07XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IGdldEtub2JDb2xvcihwcm9wcyl9O1xuYDtcblxuY29uc3QgUmFkaW9PcHRpb25Cb3JkZXIgPSBzdHlsZWQuZGl2PFRTdHlsZXNQcm9wcz5gXG4gIHdpZHRoOiAke2Rlc2lnblRva2Vucy5oZWlnaHRGb3JSYWRpb0lucHV0T3B0aW9ufTtcbiAgaGVpZ2h0OiAke2Rlc2lnblRva2Vucy5oZWlnaHRGb3JSYWRpb0lucHV0T3B0aW9ufTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JJbnB1dH07XG4gIGJvcmRlci13aWR0aDogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyRm9yUmFkaW9JbnB1dE9wdGlvbn07XG4gIGJvcmRlci1zdHlsZTogc29saWQ7XG4gIGJvcmRlci1jb2xvcjogJHsocHJvcHMpID0+IGdldEJvcmRlckNvbG9yKHByb3BzKX07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuYDtcblxuY29uc3QgUmFkaW9PcHRpb25Db250YWluZXIgPSBzdHlsZWQuZGl2PFRTdHlsZXNQcm9wcz5gXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGdyaWQtYXJlYTogcmFkaW87XG4gIHdpZHRoOiAyNnB4O1xuICBoZWlnaHQ6IDI2cHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYm9yZGVyOiA0cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICR7UmFkaW9PcHRpb25Cb3JkZXJ9IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT5cbiAgICAgIHByb3BzLmlzRGlzYWJsZWRcbiAgICAgICAgPyBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWRcbiAgICAgICAgOiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXR9O1xuICB9XG5gO1xuXG5jb25zdCBnZXRIb3ZlclN0eWxlcyA9IChwcm9wczogVFN0eWxlc1Byb3BzKSA9PiB7XG4gIGNvbnN0IGhvdmVyU3R5bGVzID0gY3NzYFxuICAgICR7UmFkaW9PcHRpb25Db250YWluZXJ9IHtcbiAgICAgIGJvcmRlci1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsOTB9O1xuICAgIH1cbiAgYDtcblxuICByZXR1cm4gW1xuICAgICFwcm9wcy5pc0Rpc2FibGVkICYmXG4gICAgICAhcHJvcHMuaXNSZWFkT25seSAmJlxuICAgICAgLyogcHJldHRpZXItaWdub3JlICovXG4gICAgICBjc3NgXG4gICAgICAgICY6aG92ZXIgJHtob3ZlclN0eWxlc307XG4gICAgICBgLFxuICAgIHByb3BzLmlzSG92ZXJlZCAmJiBob3ZlclN0eWxlcyxcbiAgXTtcbn07XG5cbmNvbnN0IFJhZGlvT3B0aW9uTGFiZWwgPSBzdHlsZWQubGFiZWw8VFN0eWxlc1Byb3BzPmBcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgY29sb3I6ICR7KHByb3BzKSA9PiBnZXRMYWJlbENvbG9yKHByb3BzKX07XG4gIGN1cnNvcjogJHsocHJvcHMpID0+IGdldExhYmVsQ3Vyc29yKHByb3BzKX07XG4gIGRpc3BsYXk6IGZsZXg7XG5cbiAgJHsocHJvcHMpID0+XG4gICAgIXByb3BzLmlzUmVhZE9ubHlcbiAgICAgID8gYDpmb2N1cy13aXRoaW4gJHtMYWJlbFRleHRXcmFwcGVyfSB7XG4gICAgICBvdXRsaW5lOiBhdXRvIDJweCAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWR9O1xuICAgICAgb3V0bGluZS1vZmZzZXQ6IDJweDtcbiAgICAgIHdpZHRoOiBmaXQtY29udGVudDtcbiAgICB9YFxuICAgICAgOiAnJ31cblxuICAkeyhwcm9wcykgPT4gZ2V0SG92ZXJTdHlsZXMocHJvcHMpfVxuYDtcblxuZXhwb3J0IHtcbiAgTGFiZWxUZXh0V3JhcHBlcixcbiAgUmFkaW9JbnB1dFdyYXBwZXIsXG4gIEFkZGl0aW9uYWxUZXh0V3JhcHBlcixcbiAgUmFkaW9PcHRpb25Lbm9iLFxuICBSYWRpb09wdGlvbkJvcmRlcixcbiAgUmFkaW9PcHRpb25MYWJlbCxcbiAgUmFkaW9PcHRpb25Db250YWluZXIsXG59O1xuIl19 */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});
const RadioInputWrapper = /*#__PURE__*/_styled("div", process.env.NODE_ENV === "production" ? {
  target: "e1x57rfz4"
} : {
  target: "e1x57rfz4",
  label: "RadioInputWrapper"
})(process.env.NODE_ENV === "production" ? {
  name: "z022bx",
  styles: "display:grid;grid-template-columns:auto;grid-template-rows:auto;grid-template-areas:'radio label' '. content'"
} : {
  name: "z022bx",
  styles: "display:grid;grid-template-columns:auto;grid-template-rows:auto;grid-template-areas:'radio label' '. content'",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJhZGlvLW9wdGlvbi5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0JrRCIsImZpbGUiOiJyYWRpby1vcHRpb24uc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5pbXBvcnQgdHlwZSB7IFRTdHlsZXNQcm9wcyB9IGZyb20gJy4vcmFkaW8tb3B0aW9uJztcblxuY29uc3QgTGFiZWxUZXh0V3JhcHBlciA9IHN0eWxlZC5kaXY8VFN0eWxlc1Byb3BzPmBcbiAgZ3JpZC1hcmVhOiBsYWJlbDtcbiAgbWFyZ2luLWxlZnQ6ICR7ZGVzaWduVG9rZW5zLm1hcmdpbkxlZnRGb3JSYWRpb0lucHV0TGFiZWx9O1xuICBmb250LXNpemU6IDFyZW07XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuYDtcblxuY29uc3QgQWRkaXRpb25hbFRleHRXcmFwcGVyID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICBncmlkLWFyZWE6IGNvbnRlbnQ7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG5gO1xuXG5jb25zdCBSYWRpb0lucHV0V3JhcHBlciA9IHN0eWxlZC5kaXY8VFN0eWxlc1Byb3BzPmBcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG87XG4gIGdyaWQtdGVtcGxhdGUtYXJlYXM6XG4gICAgJ3JhZGlvIGxhYmVsJ1xuICAgICcuIGNvbnRlbnQnO1xuYDtcblxuY29uc3QgZ2V0Qm9yZGVyQ29sb3IgPSAocHJvcHM6IFRTdHlsZXNQcm9wcykgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5EaXNhYmxlZDtcbiAgfVxuICBpZiAocHJvcHMuaXNSZWFkT25seSkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JSYWRpb0lucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5FcnJvcjtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nO1xuICB9XG4gIGlmIChwcm9wcy5pc0hvdmVyZWQgJiYgIXByb3BzLmlzRGlzYWJsZWQpIHtcbiAgICBpZiAocHJvcHMuaXNDaGVja2VkKSB7XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZDtcbiAgICB9XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvclJhZGlvSW5wdXRXaGVuRm9jdXNlZDtcbiAgfVxuICBpZiAocHJvcHMuaXNDaGVja2VkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvclJhZGlvSW5wdXRXaGVuQ2hlY2tlZDtcbiAgfVxuICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9yUmFkaW9JbnB1dDtcbn07XG5cbmNvbnN0IGdldEtub2JDb2xvciA9IChwcm9wczogVFN0eWxlc1Byb3BzKSA9PiB7XG4gIGlmIChwcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvclJhZGlvSW5wdXRXaGVuRGlzYWJsZWQ7XG4gIH1cbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5FcnJvcjtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuV2FybmluZztcbiAgfVxuICBpZiAocHJvcHMuaXNSZWFkT25seSkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsNjA7XG4gIH1cbiAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWQ7XG59O1xuXG5jb25zdCBnZXRMYWJlbENvbG9yID0gKHByb3BzOiBUU3R5bGVzUHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLmlzRGlzYWJsZWQpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlbkRpc2FibGVkO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5SZWFkb25seTtcbiAgfVxuICBpZiAocHJvcHMuaGFzRXJyb3IpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlbkVycm9yO1xuICB9XG4gIGlmIChwcm9wcy5oYXNXYXJuaW5nKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nO1xuICB9XG4gIHJldHVybiBkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXQ7XG59O1xuY29uc3QgZ2V0TGFiZWxDdXJzb3IgPSAocHJvcHM6IFRTdHlsZXNQcm9wcykgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiAnbm90LWFsbG93ZWQnO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuICdkZWZhdWx0JztcbiAgfVxuICByZXR1cm4gJ3BvaW50ZXInO1xufTtcblxuY29uc3QgUmFkaW9PcHRpb25Lbm9iID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICB3aWR0aDogJHtkZXNpZ25Ub2tlbnMuaGVpZ2h0Rm9yUmFkaW9JbnB1dE9wdGlvbldoZW5DaGVja2VkfTtcbiAgaGVpZ2h0OiAke2Rlc2lnblRva2Vucy5oZWlnaHRGb3JSYWRpb0lucHV0T3B0aW9uV2hlbkNoZWNrZWR9O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBnZXRLbm9iQ29sb3IocHJvcHMpfTtcbmA7XG5cbmNvbnN0IFJhZGlvT3B0aW9uQm9yZGVyID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICB3aWR0aDogJHtkZXNpZ25Ub2tlbnMuaGVpZ2h0Rm9yUmFkaW9JbnB1dE9wdGlvbn07XG4gIGhlaWdodDogJHtkZXNpZ25Ub2tlbnMuaGVpZ2h0Rm9yUmFkaW9JbnB1dE9wdGlvbn07XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXR9O1xuICBib3JkZXItd2lkdGg6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckZvclJhZGlvSW5wdXRPcHRpb259O1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3JkZXItY29sb3I6ICR7KHByb3BzKSA9PiBnZXRCb3JkZXJDb2xvcihwcm9wcyl9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbmA7XG5cbmNvbnN0IFJhZGlvT3B0aW9uQ29udGFpbmVyID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBncmlkLWFyZWE6IHJhZGlvO1xuICB3aWR0aDogMjZweDtcbiAgaGVpZ2h0OiAyNnB4O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJvcmRlcjogNHB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAke1JhZGlvT3B0aW9uQm9yZGVyfSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+XG4gICAgICBwcm9wcy5pc0Rpc2FibGVkXG4gICAgICAgID8gZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0V2hlbkRpc2FibGVkXG4gICAgICAgIDogZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0fTtcbiAgfVxuYDtcblxuY29uc3QgZ2V0SG92ZXJTdHlsZXMgPSAocHJvcHM6IFRTdHlsZXNQcm9wcykgPT4ge1xuICBjb25zdCBob3ZlclN0eWxlcyA9IGNzc2BcbiAgICAke1JhZGlvT3B0aW9uQ29udGFpbmVyfSB7XG4gICAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDkwfTtcbiAgICB9XG4gIGA7XG5cbiAgcmV0dXJuIFtcbiAgICAhcHJvcHMuaXNEaXNhYmxlZCAmJlxuICAgICAgIXByb3BzLmlzUmVhZE9ubHkgJiZcbiAgICAgIC8qIHByZXR0aWVyLWlnbm9yZSAqL1xuICAgICAgY3NzYFxuICAgICAgICAmOmhvdmVyICR7aG92ZXJTdHlsZXN9O1xuICAgICAgYCxcbiAgICBwcm9wcy5pc0hvdmVyZWQgJiYgaG92ZXJTdHlsZXMsXG4gIF07XG59O1xuXG5jb25zdCBSYWRpb09wdGlvbkxhYmVsID0gc3R5bGVkLmxhYmVsPFRTdHlsZXNQcm9wcz5gXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGNvbG9yOiAkeyhwcm9wcykgPT4gZ2V0TGFiZWxDb2xvcihwcm9wcyl9O1xuICBjdXJzb3I6ICR7KHByb3BzKSA9PiBnZXRMYWJlbEN1cnNvcihwcm9wcyl9O1xuICBkaXNwbGF5OiBmbGV4O1xuXG4gICR7KHByb3BzKSA9PlxuICAgICFwcm9wcy5pc1JlYWRPbmx5XG4gICAgICA/IGA6Zm9jdXMtd2l0aGluICR7TGFiZWxUZXh0V3JhcHBlcn0ge1xuICAgICAgb3V0bGluZTogYXV0byAycHggJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkfTtcbiAgICAgIG91dGxpbmUtb2Zmc2V0OiAycHg7XG4gICAgICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gICAgfWBcbiAgICAgIDogJyd9XG5cbiAgJHsocHJvcHMpID0+IGdldEhvdmVyU3R5bGVzKHByb3BzKX1cbmA7XG5cbmV4cG9ydCB7XG4gIExhYmVsVGV4dFdyYXBwZXIsXG4gIFJhZGlvSW5wdXRXcmFwcGVyLFxuICBBZGRpdGlvbmFsVGV4dFdyYXBwZXIsXG4gIFJhZGlvT3B0aW9uS25vYixcbiAgUmFkaW9PcHRpb25Cb3JkZXIsXG4gIFJhZGlvT3B0aW9uTGFiZWwsXG4gIFJhZGlvT3B0aW9uQ29udGFpbmVyLFxufTtcbiJdfQ== */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});
const getBorderColor = props => {
  if (props.isDisabled) {
    return designTokens.borderColorForInputWhenDisabled;
  }
  if (props.isReadOnly) {
    return designTokens.borderColorForRadioInputWhenReadonly;
  }
  if (props.hasError) {
    return designTokens.borderColorForInputWhenError;
  }
  if (props.hasWarning) {
    return designTokens.borderColorForInputWhenWarning;
  }
  if (props.isHovered && !props.isDisabled) {
    if (props.isChecked) {
      return designTokens.borderColorForInputWhenFocused;
    }
    return designTokens.borderColorForRadioInputWhenFocused;
  }
  if (props.isChecked) {
    return designTokens.borderColorForRadioInputWhenChecked;
  }
  return designTokens.borderColorForRadioInput;
};
const getKnobColor = props => {
  if (props.isDisabled) {
    return designTokens.borderColorForRadioInputWhenDisabled;
  }
  if (props.hasError) {
    return designTokens.fontColorForInputWhenError;
  }
  if (props.hasWarning) {
    return designTokens.fontColorForInputWhenWarning;
  }
  if (props.isReadOnly) {
    return designTokens.colorNeutral60;
  }
  return designTokens.borderColorForInputWhenFocused;
};
const getLabelColor = props => {
  if (props.isDisabled) {
    return designTokens.fontColorForInputWhenDisabled;
  }
  if (props.isReadOnly) {
    return designTokens.fontColorForInputWhenReadonly;
  }
  if (props.hasError) {
    return designTokens.fontColorForInputWhenError;
  }
  if (props.hasWarning) {
    return designTokens.fontColorForInputWhenWarning;
  }
  return designTokens.fontColorForInput;
};
const getLabelCursor = props => {
  if (props.isDisabled) {
    return 'not-allowed';
  }
  if (props.isReadOnly) {
    return 'default';
  }
  return 'pointer';
};
const RadioOptionKnob = /*#__PURE__*/_styled("div", process.env.NODE_ENV === "production" ? {
  target: "e1x57rfz3"
} : {
  target: "e1x57rfz3",
  label: "RadioOptionKnob"
})("width:", designTokens.heightForRadioInputOptionWhenChecked, ";height:", designTokens.heightForRadioInputOptionWhenChecked, ";border-radius:50%;background-color:", props => getKnobColor(props), ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJhZGlvLW9wdGlvbi5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBK0ZnRCIsImZpbGUiOiJyYWRpby1vcHRpb24uc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5pbXBvcnQgdHlwZSB7IFRTdHlsZXNQcm9wcyB9IGZyb20gJy4vcmFkaW8tb3B0aW9uJztcblxuY29uc3QgTGFiZWxUZXh0V3JhcHBlciA9IHN0eWxlZC5kaXY8VFN0eWxlc1Byb3BzPmBcbiAgZ3JpZC1hcmVhOiBsYWJlbDtcbiAgbWFyZ2luLWxlZnQ6ICR7ZGVzaWduVG9rZW5zLm1hcmdpbkxlZnRGb3JSYWRpb0lucHV0TGFiZWx9O1xuICBmb250LXNpemU6IDFyZW07XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuYDtcblxuY29uc3QgQWRkaXRpb25hbFRleHRXcmFwcGVyID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICBncmlkLWFyZWE6IGNvbnRlbnQ7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG5gO1xuXG5jb25zdCBSYWRpb0lucHV0V3JhcHBlciA9IHN0eWxlZC5kaXY8VFN0eWxlc1Byb3BzPmBcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG87XG4gIGdyaWQtdGVtcGxhdGUtYXJlYXM6XG4gICAgJ3JhZGlvIGxhYmVsJ1xuICAgICcuIGNvbnRlbnQnO1xuYDtcblxuY29uc3QgZ2V0Qm9yZGVyQ29sb3IgPSAocHJvcHM6IFRTdHlsZXNQcm9wcykgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5EaXNhYmxlZDtcbiAgfVxuICBpZiAocHJvcHMuaXNSZWFkT25seSkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JSYWRpb0lucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5FcnJvcjtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nO1xuICB9XG4gIGlmIChwcm9wcy5pc0hvdmVyZWQgJiYgIXByb3BzLmlzRGlzYWJsZWQpIHtcbiAgICBpZiAocHJvcHMuaXNDaGVja2VkKSB7XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZDtcbiAgICB9XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvclJhZGlvSW5wdXRXaGVuRm9jdXNlZDtcbiAgfVxuICBpZiAocHJvcHMuaXNDaGVja2VkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvclJhZGlvSW5wdXRXaGVuQ2hlY2tlZDtcbiAgfVxuICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9yUmFkaW9JbnB1dDtcbn07XG5cbmNvbnN0IGdldEtub2JDb2xvciA9IChwcm9wczogVFN0eWxlc1Byb3BzKSA9PiB7XG4gIGlmIChwcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvclJhZGlvSW5wdXRXaGVuRGlzYWJsZWQ7XG4gIH1cbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5FcnJvcjtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuV2FybmluZztcbiAgfVxuICBpZiAocHJvcHMuaXNSZWFkT25seSkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsNjA7XG4gIH1cbiAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWQ7XG59O1xuXG5jb25zdCBnZXRMYWJlbENvbG9yID0gKHByb3BzOiBUU3R5bGVzUHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLmlzRGlzYWJsZWQpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlbkRpc2FibGVkO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5SZWFkb25seTtcbiAgfVxuICBpZiAocHJvcHMuaGFzRXJyb3IpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlbkVycm9yO1xuICB9XG4gIGlmIChwcm9wcy5oYXNXYXJuaW5nKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nO1xuICB9XG4gIHJldHVybiBkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXQ7XG59O1xuY29uc3QgZ2V0TGFiZWxDdXJzb3IgPSAocHJvcHM6IFRTdHlsZXNQcm9wcykgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiAnbm90LWFsbG93ZWQnO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuICdkZWZhdWx0JztcbiAgfVxuICByZXR1cm4gJ3BvaW50ZXInO1xufTtcblxuY29uc3QgUmFkaW9PcHRpb25Lbm9iID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICB3aWR0aDogJHtkZXNpZ25Ub2tlbnMuaGVpZ2h0Rm9yUmFkaW9JbnB1dE9wdGlvbldoZW5DaGVja2VkfTtcbiAgaGVpZ2h0OiAke2Rlc2lnblRva2Vucy5oZWlnaHRGb3JSYWRpb0lucHV0T3B0aW9uV2hlbkNoZWNrZWR9O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBnZXRLbm9iQ29sb3IocHJvcHMpfTtcbmA7XG5cbmNvbnN0IFJhZGlvT3B0aW9uQm9yZGVyID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICB3aWR0aDogJHtkZXNpZ25Ub2tlbnMuaGVpZ2h0Rm9yUmFkaW9JbnB1dE9wdGlvbn07XG4gIGhlaWdodDogJHtkZXNpZ25Ub2tlbnMuaGVpZ2h0Rm9yUmFkaW9JbnB1dE9wdGlvbn07XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXR9O1xuICBib3JkZXItd2lkdGg6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckZvclJhZGlvSW5wdXRPcHRpb259O1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3JkZXItY29sb3I6ICR7KHByb3BzKSA9PiBnZXRCb3JkZXJDb2xvcihwcm9wcyl9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbmA7XG5cbmNvbnN0IFJhZGlvT3B0aW9uQ29udGFpbmVyID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBncmlkLWFyZWE6IHJhZGlvO1xuICB3aWR0aDogMjZweDtcbiAgaGVpZ2h0OiAyNnB4O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJvcmRlcjogNHB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAke1JhZGlvT3B0aW9uQm9yZGVyfSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+XG4gICAgICBwcm9wcy5pc0Rpc2FibGVkXG4gICAgICAgID8gZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0V2hlbkRpc2FibGVkXG4gICAgICAgIDogZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0fTtcbiAgfVxuYDtcblxuY29uc3QgZ2V0SG92ZXJTdHlsZXMgPSAocHJvcHM6IFRTdHlsZXNQcm9wcykgPT4ge1xuICBjb25zdCBob3ZlclN0eWxlcyA9IGNzc2BcbiAgICAke1JhZGlvT3B0aW9uQ29udGFpbmVyfSB7XG4gICAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDkwfTtcbiAgICB9XG4gIGA7XG5cbiAgcmV0dXJuIFtcbiAgICAhcHJvcHMuaXNEaXNhYmxlZCAmJlxuICAgICAgIXByb3BzLmlzUmVhZE9ubHkgJiZcbiAgICAgIC8qIHByZXR0aWVyLWlnbm9yZSAqL1xuICAgICAgY3NzYFxuICAgICAgICAmOmhvdmVyICR7aG92ZXJTdHlsZXN9O1xuICAgICAgYCxcbiAgICBwcm9wcy5pc0hvdmVyZWQgJiYgaG92ZXJTdHlsZXMsXG4gIF07XG59O1xuXG5jb25zdCBSYWRpb09wdGlvbkxhYmVsID0gc3R5bGVkLmxhYmVsPFRTdHlsZXNQcm9wcz5gXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGNvbG9yOiAkeyhwcm9wcykgPT4gZ2V0TGFiZWxDb2xvcihwcm9wcyl9O1xuICBjdXJzb3I6ICR7KHByb3BzKSA9PiBnZXRMYWJlbEN1cnNvcihwcm9wcyl9O1xuICBkaXNwbGF5OiBmbGV4O1xuXG4gICR7KHByb3BzKSA9PlxuICAgICFwcm9wcy5pc1JlYWRPbmx5XG4gICAgICA/IGA6Zm9jdXMtd2l0aGluICR7TGFiZWxUZXh0V3JhcHBlcn0ge1xuICAgICAgb3V0bGluZTogYXV0byAycHggJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkfTtcbiAgICAgIG91dGxpbmUtb2Zmc2V0OiAycHg7XG4gICAgICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gICAgfWBcbiAgICAgIDogJyd9XG5cbiAgJHsocHJvcHMpID0+IGdldEhvdmVyU3R5bGVzKHByb3BzKX1cbmA7XG5cbmV4cG9ydCB7XG4gIExhYmVsVGV4dFdyYXBwZXIsXG4gIFJhZGlvSW5wdXRXcmFwcGVyLFxuICBBZGRpdGlvbmFsVGV4dFdyYXBwZXIsXG4gIFJhZGlvT3B0aW9uS25vYixcbiAgUmFkaW9PcHRpb25Cb3JkZXIsXG4gIFJhZGlvT3B0aW9uTGFiZWwsXG4gIFJhZGlvT3B0aW9uQ29udGFpbmVyLFxufTtcbiJdfQ== */"));
const RadioOptionBorder = /*#__PURE__*/_styled("div", process.env.NODE_ENV === "production" ? {
  target: "e1x57rfz2"
} : {
  target: "e1x57rfz2",
  label: "RadioOptionBorder"
})("width:", designTokens.heightForRadioInputOption, ";height:", designTokens.heightForRadioInputOption, ";border-radius:50%;background-color:", designTokens.backgroundColorForInput, ";border-width:", designTokens.borderForRadioInputOption, ";border-style:solid;border-color:", props => getBorderColor(props), ";display:flex;align-items:center;justify-content:center;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJhZGlvLW9wdGlvbi5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0drRCIsImZpbGUiOiJyYWRpby1vcHRpb24uc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5pbXBvcnQgdHlwZSB7IFRTdHlsZXNQcm9wcyB9IGZyb20gJy4vcmFkaW8tb3B0aW9uJztcblxuY29uc3QgTGFiZWxUZXh0V3JhcHBlciA9IHN0eWxlZC5kaXY8VFN0eWxlc1Byb3BzPmBcbiAgZ3JpZC1hcmVhOiBsYWJlbDtcbiAgbWFyZ2luLWxlZnQ6ICR7ZGVzaWduVG9rZW5zLm1hcmdpbkxlZnRGb3JSYWRpb0lucHV0TGFiZWx9O1xuICBmb250LXNpemU6IDFyZW07XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuYDtcblxuY29uc3QgQWRkaXRpb25hbFRleHRXcmFwcGVyID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICBncmlkLWFyZWE6IGNvbnRlbnQ7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG5gO1xuXG5jb25zdCBSYWRpb0lucHV0V3JhcHBlciA9IHN0eWxlZC5kaXY8VFN0eWxlc1Byb3BzPmBcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG87XG4gIGdyaWQtdGVtcGxhdGUtYXJlYXM6XG4gICAgJ3JhZGlvIGxhYmVsJ1xuICAgICcuIGNvbnRlbnQnO1xuYDtcblxuY29uc3QgZ2V0Qm9yZGVyQ29sb3IgPSAocHJvcHM6IFRTdHlsZXNQcm9wcykgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5EaXNhYmxlZDtcbiAgfVxuICBpZiAocHJvcHMuaXNSZWFkT25seSkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JSYWRpb0lucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5FcnJvcjtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nO1xuICB9XG4gIGlmIChwcm9wcy5pc0hvdmVyZWQgJiYgIXByb3BzLmlzRGlzYWJsZWQpIHtcbiAgICBpZiAocHJvcHMuaXNDaGVja2VkKSB7XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZDtcbiAgICB9XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvclJhZGlvSW5wdXRXaGVuRm9jdXNlZDtcbiAgfVxuICBpZiAocHJvcHMuaXNDaGVja2VkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvclJhZGlvSW5wdXRXaGVuQ2hlY2tlZDtcbiAgfVxuICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9yUmFkaW9JbnB1dDtcbn07XG5cbmNvbnN0IGdldEtub2JDb2xvciA9IChwcm9wczogVFN0eWxlc1Byb3BzKSA9PiB7XG4gIGlmIChwcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvclJhZGlvSW5wdXRXaGVuRGlzYWJsZWQ7XG4gIH1cbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5FcnJvcjtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuV2FybmluZztcbiAgfVxuICBpZiAocHJvcHMuaXNSZWFkT25seSkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsNjA7XG4gIH1cbiAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWQ7XG59O1xuXG5jb25zdCBnZXRMYWJlbENvbG9yID0gKHByb3BzOiBUU3R5bGVzUHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLmlzRGlzYWJsZWQpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlbkRpc2FibGVkO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5SZWFkb25seTtcbiAgfVxuICBpZiAocHJvcHMuaGFzRXJyb3IpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlbkVycm9yO1xuICB9XG4gIGlmIChwcm9wcy5oYXNXYXJuaW5nKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nO1xuICB9XG4gIHJldHVybiBkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXQ7XG59O1xuY29uc3QgZ2V0TGFiZWxDdXJzb3IgPSAocHJvcHM6IFRTdHlsZXNQcm9wcykgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiAnbm90LWFsbG93ZWQnO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuICdkZWZhdWx0JztcbiAgfVxuICByZXR1cm4gJ3BvaW50ZXInO1xufTtcblxuY29uc3QgUmFkaW9PcHRpb25Lbm9iID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICB3aWR0aDogJHtkZXNpZ25Ub2tlbnMuaGVpZ2h0Rm9yUmFkaW9JbnB1dE9wdGlvbldoZW5DaGVja2VkfTtcbiAgaGVpZ2h0OiAke2Rlc2lnblRva2Vucy5oZWlnaHRGb3JSYWRpb0lucHV0T3B0aW9uV2hlbkNoZWNrZWR9O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBnZXRLbm9iQ29sb3IocHJvcHMpfTtcbmA7XG5cbmNvbnN0IFJhZGlvT3B0aW9uQm9yZGVyID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICB3aWR0aDogJHtkZXNpZ25Ub2tlbnMuaGVpZ2h0Rm9yUmFkaW9JbnB1dE9wdGlvbn07XG4gIGhlaWdodDogJHtkZXNpZ25Ub2tlbnMuaGVpZ2h0Rm9yUmFkaW9JbnB1dE9wdGlvbn07XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXR9O1xuICBib3JkZXItd2lkdGg6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckZvclJhZGlvSW5wdXRPcHRpb259O1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3JkZXItY29sb3I6ICR7KHByb3BzKSA9PiBnZXRCb3JkZXJDb2xvcihwcm9wcyl9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbmA7XG5cbmNvbnN0IFJhZGlvT3B0aW9uQ29udGFpbmVyID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBncmlkLWFyZWE6IHJhZGlvO1xuICB3aWR0aDogMjZweDtcbiAgaGVpZ2h0OiAyNnB4O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJvcmRlcjogNHB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAke1JhZGlvT3B0aW9uQm9yZGVyfSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+XG4gICAgICBwcm9wcy5pc0Rpc2FibGVkXG4gICAgICAgID8gZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0V2hlbkRpc2FibGVkXG4gICAgICAgIDogZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0fTtcbiAgfVxuYDtcblxuY29uc3QgZ2V0SG92ZXJTdHlsZXMgPSAocHJvcHM6IFRTdHlsZXNQcm9wcykgPT4ge1xuICBjb25zdCBob3ZlclN0eWxlcyA9IGNzc2BcbiAgICAke1JhZGlvT3B0aW9uQ29udGFpbmVyfSB7XG4gICAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDkwfTtcbiAgICB9XG4gIGA7XG5cbiAgcmV0dXJuIFtcbiAgICAhcHJvcHMuaXNEaXNhYmxlZCAmJlxuICAgICAgIXByb3BzLmlzUmVhZE9ubHkgJiZcbiAgICAgIC8qIHByZXR0aWVyLWlnbm9yZSAqL1xuICAgICAgY3NzYFxuICAgICAgICAmOmhvdmVyICR7aG92ZXJTdHlsZXN9O1xuICAgICAgYCxcbiAgICBwcm9wcy5pc0hvdmVyZWQgJiYgaG92ZXJTdHlsZXMsXG4gIF07XG59O1xuXG5jb25zdCBSYWRpb09wdGlvbkxhYmVsID0gc3R5bGVkLmxhYmVsPFRTdHlsZXNQcm9wcz5gXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGNvbG9yOiAkeyhwcm9wcykgPT4gZ2V0TGFiZWxDb2xvcihwcm9wcyl9O1xuICBjdXJzb3I6ICR7KHByb3BzKSA9PiBnZXRMYWJlbEN1cnNvcihwcm9wcyl9O1xuICBkaXNwbGF5OiBmbGV4O1xuXG4gICR7KHByb3BzKSA9PlxuICAgICFwcm9wcy5pc1JlYWRPbmx5XG4gICAgICA/IGA6Zm9jdXMtd2l0aGluICR7TGFiZWxUZXh0V3JhcHBlcn0ge1xuICAgICAgb3V0bGluZTogYXV0byAycHggJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkfTtcbiAgICAgIG91dGxpbmUtb2Zmc2V0OiAycHg7XG4gICAgICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gICAgfWBcbiAgICAgIDogJyd9XG5cbiAgJHsocHJvcHMpID0+IGdldEhvdmVyU3R5bGVzKHByb3BzKX1cbmA7XG5cbmV4cG9ydCB7XG4gIExhYmVsVGV4dFdyYXBwZXIsXG4gIFJhZGlvSW5wdXRXcmFwcGVyLFxuICBBZGRpdGlvbmFsVGV4dFdyYXBwZXIsXG4gIFJhZGlvT3B0aW9uS25vYixcbiAgUmFkaW9PcHRpb25Cb3JkZXIsXG4gIFJhZGlvT3B0aW9uTGFiZWwsXG4gIFJhZGlvT3B0aW9uQ29udGFpbmVyLFxufTtcbiJdfQ== */"));
const RadioOptionContainer = /*#__PURE__*/_styled("div", process.env.NODE_ENV === "production" ? {
  target: "e1x57rfz1"
} : {
  target: "e1x57rfz1",
  label: "RadioOptionContainer"
})("display:flex;align-items:center;grid-area:radio;width:26px;height:26px;border-radius:50%;border:4px solid transparent;", RadioOptionBorder, "{background-color:", props => props.isDisabled ? designTokens.backgroundColorForInputWhenDisabled : designTokens.backgroundColorForInput, ";}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJhZGlvLW9wdGlvbi5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUhxRCIsImZpbGUiOiJyYWRpby1vcHRpb24uc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5pbXBvcnQgdHlwZSB7IFRTdHlsZXNQcm9wcyB9IGZyb20gJy4vcmFkaW8tb3B0aW9uJztcblxuY29uc3QgTGFiZWxUZXh0V3JhcHBlciA9IHN0eWxlZC5kaXY8VFN0eWxlc1Byb3BzPmBcbiAgZ3JpZC1hcmVhOiBsYWJlbDtcbiAgbWFyZ2luLWxlZnQ6ICR7ZGVzaWduVG9rZW5zLm1hcmdpbkxlZnRGb3JSYWRpb0lucHV0TGFiZWx9O1xuICBmb250LXNpemU6IDFyZW07XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuYDtcblxuY29uc3QgQWRkaXRpb25hbFRleHRXcmFwcGVyID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICBncmlkLWFyZWE6IGNvbnRlbnQ7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG5gO1xuXG5jb25zdCBSYWRpb0lucHV0V3JhcHBlciA9IHN0eWxlZC5kaXY8VFN0eWxlc1Byb3BzPmBcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG87XG4gIGdyaWQtdGVtcGxhdGUtYXJlYXM6XG4gICAgJ3JhZGlvIGxhYmVsJ1xuICAgICcuIGNvbnRlbnQnO1xuYDtcblxuY29uc3QgZ2V0Qm9yZGVyQ29sb3IgPSAocHJvcHM6IFRTdHlsZXNQcm9wcykgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5EaXNhYmxlZDtcbiAgfVxuICBpZiAocHJvcHMuaXNSZWFkT25seSkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JSYWRpb0lucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5FcnJvcjtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nO1xuICB9XG4gIGlmIChwcm9wcy5pc0hvdmVyZWQgJiYgIXByb3BzLmlzRGlzYWJsZWQpIHtcbiAgICBpZiAocHJvcHMuaXNDaGVja2VkKSB7XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZDtcbiAgICB9XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvclJhZGlvSW5wdXRXaGVuRm9jdXNlZDtcbiAgfVxuICBpZiAocHJvcHMuaXNDaGVja2VkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvclJhZGlvSW5wdXRXaGVuQ2hlY2tlZDtcbiAgfVxuICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9yUmFkaW9JbnB1dDtcbn07XG5cbmNvbnN0IGdldEtub2JDb2xvciA9IChwcm9wczogVFN0eWxlc1Byb3BzKSA9PiB7XG4gIGlmIChwcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvclJhZGlvSW5wdXRXaGVuRGlzYWJsZWQ7XG4gIH1cbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5FcnJvcjtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuV2FybmluZztcbiAgfVxuICBpZiAocHJvcHMuaXNSZWFkT25seSkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsNjA7XG4gIH1cbiAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWQ7XG59O1xuXG5jb25zdCBnZXRMYWJlbENvbG9yID0gKHByb3BzOiBUU3R5bGVzUHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLmlzRGlzYWJsZWQpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlbkRpc2FibGVkO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5SZWFkb25seTtcbiAgfVxuICBpZiAocHJvcHMuaGFzRXJyb3IpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlbkVycm9yO1xuICB9XG4gIGlmIChwcm9wcy5oYXNXYXJuaW5nKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nO1xuICB9XG4gIHJldHVybiBkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXQ7XG59O1xuY29uc3QgZ2V0TGFiZWxDdXJzb3IgPSAocHJvcHM6IFRTdHlsZXNQcm9wcykgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiAnbm90LWFsbG93ZWQnO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuICdkZWZhdWx0JztcbiAgfVxuICByZXR1cm4gJ3BvaW50ZXInO1xufTtcblxuY29uc3QgUmFkaW9PcHRpb25Lbm9iID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICB3aWR0aDogJHtkZXNpZ25Ub2tlbnMuaGVpZ2h0Rm9yUmFkaW9JbnB1dE9wdGlvbldoZW5DaGVja2VkfTtcbiAgaGVpZ2h0OiAke2Rlc2lnblRva2Vucy5oZWlnaHRGb3JSYWRpb0lucHV0T3B0aW9uV2hlbkNoZWNrZWR9O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBnZXRLbm9iQ29sb3IocHJvcHMpfTtcbmA7XG5cbmNvbnN0IFJhZGlvT3B0aW9uQm9yZGVyID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICB3aWR0aDogJHtkZXNpZ25Ub2tlbnMuaGVpZ2h0Rm9yUmFkaW9JbnB1dE9wdGlvbn07XG4gIGhlaWdodDogJHtkZXNpZ25Ub2tlbnMuaGVpZ2h0Rm9yUmFkaW9JbnB1dE9wdGlvbn07XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXR9O1xuICBib3JkZXItd2lkdGg6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckZvclJhZGlvSW5wdXRPcHRpb259O1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3JkZXItY29sb3I6ICR7KHByb3BzKSA9PiBnZXRCb3JkZXJDb2xvcihwcm9wcyl9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbmA7XG5cbmNvbnN0IFJhZGlvT3B0aW9uQ29udGFpbmVyID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBncmlkLWFyZWE6IHJhZGlvO1xuICB3aWR0aDogMjZweDtcbiAgaGVpZ2h0OiAyNnB4O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJvcmRlcjogNHB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAke1JhZGlvT3B0aW9uQm9yZGVyfSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+XG4gICAgICBwcm9wcy5pc0Rpc2FibGVkXG4gICAgICAgID8gZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0V2hlbkRpc2FibGVkXG4gICAgICAgIDogZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0fTtcbiAgfVxuYDtcblxuY29uc3QgZ2V0SG92ZXJTdHlsZXMgPSAocHJvcHM6IFRTdHlsZXNQcm9wcykgPT4ge1xuICBjb25zdCBob3ZlclN0eWxlcyA9IGNzc2BcbiAgICAke1JhZGlvT3B0aW9uQ29udGFpbmVyfSB7XG4gICAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDkwfTtcbiAgICB9XG4gIGA7XG5cbiAgcmV0dXJuIFtcbiAgICAhcHJvcHMuaXNEaXNhYmxlZCAmJlxuICAgICAgIXByb3BzLmlzUmVhZE9ubHkgJiZcbiAgICAgIC8qIHByZXR0aWVyLWlnbm9yZSAqL1xuICAgICAgY3NzYFxuICAgICAgICAmOmhvdmVyICR7aG92ZXJTdHlsZXN9O1xuICAgICAgYCxcbiAgICBwcm9wcy5pc0hvdmVyZWQgJiYgaG92ZXJTdHlsZXMsXG4gIF07XG59O1xuXG5jb25zdCBSYWRpb09wdGlvbkxhYmVsID0gc3R5bGVkLmxhYmVsPFRTdHlsZXNQcm9wcz5gXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGNvbG9yOiAkeyhwcm9wcykgPT4gZ2V0TGFiZWxDb2xvcihwcm9wcyl9O1xuICBjdXJzb3I6ICR7KHByb3BzKSA9PiBnZXRMYWJlbEN1cnNvcihwcm9wcyl9O1xuICBkaXNwbGF5OiBmbGV4O1xuXG4gICR7KHByb3BzKSA9PlxuICAgICFwcm9wcy5pc1JlYWRPbmx5XG4gICAgICA/IGA6Zm9jdXMtd2l0aGluICR7TGFiZWxUZXh0V3JhcHBlcn0ge1xuICAgICAgb3V0bGluZTogYXV0byAycHggJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkfTtcbiAgICAgIG91dGxpbmUtb2Zmc2V0OiAycHg7XG4gICAgICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gICAgfWBcbiAgICAgIDogJyd9XG5cbiAgJHsocHJvcHMpID0+IGdldEhvdmVyU3R5bGVzKHByb3BzKX1cbmA7XG5cbmV4cG9ydCB7XG4gIExhYmVsVGV4dFdyYXBwZXIsXG4gIFJhZGlvSW5wdXRXcmFwcGVyLFxuICBBZGRpdGlvbmFsVGV4dFdyYXBwZXIsXG4gIFJhZGlvT3B0aW9uS25vYixcbiAgUmFkaW9PcHRpb25Cb3JkZXIsXG4gIFJhZGlvT3B0aW9uTGFiZWwsXG4gIFJhZGlvT3B0aW9uQ29udGFpbmVyLFxufTtcbiJdfQ== */"));
const getHoverStyles = props => {
  const hoverStyles = /*#__PURE__*/css(RadioOptionContainer, "{border-color:", designTokens.colorNeutral90, ";}" + (process.env.NODE_ENV === "production" ? "" : ";label:hoverStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJhZGlvLW9wdGlvbi5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0l5QiIsImZpbGUiOiJyYWRpby1vcHRpb24uc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5pbXBvcnQgdHlwZSB7IFRTdHlsZXNQcm9wcyB9IGZyb20gJy4vcmFkaW8tb3B0aW9uJztcblxuY29uc3QgTGFiZWxUZXh0V3JhcHBlciA9IHN0eWxlZC5kaXY8VFN0eWxlc1Byb3BzPmBcbiAgZ3JpZC1hcmVhOiBsYWJlbDtcbiAgbWFyZ2luLWxlZnQ6ICR7ZGVzaWduVG9rZW5zLm1hcmdpbkxlZnRGb3JSYWRpb0lucHV0TGFiZWx9O1xuICBmb250LXNpemU6IDFyZW07XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuYDtcblxuY29uc3QgQWRkaXRpb25hbFRleHRXcmFwcGVyID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICBncmlkLWFyZWE6IGNvbnRlbnQ7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG5gO1xuXG5jb25zdCBSYWRpb0lucHV0V3JhcHBlciA9IHN0eWxlZC5kaXY8VFN0eWxlc1Byb3BzPmBcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG87XG4gIGdyaWQtdGVtcGxhdGUtYXJlYXM6XG4gICAgJ3JhZGlvIGxhYmVsJ1xuICAgICcuIGNvbnRlbnQnO1xuYDtcblxuY29uc3QgZ2V0Qm9yZGVyQ29sb3IgPSAocHJvcHM6IFRTdHlsZXNQcm9wcykgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5EaXNhYmxlZDtcbiAgfVxuICBpZiAocHJvcHMuaXNSZWFkT25seSkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JSYWRpb0lucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5FcnJvcjtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nO1xuICB9XG4gIGlmIChwcm9wcy5pc0hvdmVyZWQgJiYgIXByb3BzLmlzRGlzYWJsZWQpIHtcbiAgICBpZiAocHJvcHMuaXNDaGVja2VkKSB7XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZDtcbiAgICB9XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvclJhZGlvSW5wdXRXaGVuRm9jdXNlZDtcbiAgfVxuICBpZiAocHJvcHMuaXNDaGVja2VkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvclJhZGlvSW5wdXRXaGVuQ2hlY2tlZDtcbiAgfVxuICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9yUmFkaW9JbnB1dDtcbn07XG5cbmNvbnN0IGdldEtub2JDb2xvciA9IChwcm9wczogVFN0eWxlc1Byb3BzKSA9PiB7XG4gIGlmIChwcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvclJhZGlvSW5wdXRXaGVuRGlzYWJsZWQ7XG4gIH1cbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5FcnJvcjtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuV2FybmluZztcbiAgfVxuICBpZiAocHJvcHMuaXNSZWFkT25seSkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsNjA7XG4gIH1cbiAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWQ7XG59O1xuXG5jb25zdCBnZXRMYWJlbENvbG9yID0gKHByb3BzOiBUU3R5bGVzUHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLmlzRGlzYWJsZWQpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlbkRpc2FibGVkO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5SZWFkb25seTtcbiAgfVxuICBpZiAocHJvcHMuaGFzRXJyb3IpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlbkVycm9yO1xuICB9XG4gIGlmIChwcm9wcy5oYXNXYXJuaW5nKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nO1xuICB9XG4gIHJldHVybiBkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXQ7XG59O1xuY29uc3QgZ2V0TGFiZWxDdXJzb3IgPSAocHJvcHM6IFRTdHlsZXNQcm9wcykgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiAnbm90LWFsbG93ZWQnO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuICdkZWZhdWx0JztcbiAgfVxuICByZXR1cm4gJ3BvaW50ZXInO1xufTtcblxuY29uc3QgUmFkaW9PcHRpb25Lbm9iID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICB3aWR0aDogJHtkZXNpZ25Ub2tlbnMuaGVpZ2h0Rm9yUmFkaW9JbnB1dE9wdGlvbldoZW5DaGVja2VkfTtcbiAgaGVpZ2h0OiAke2Rlc2lnblRva2Vucy5oZWlnaHRGb3JSYWRpb0lucHV0T3B0aW9uV2hlbkNoZWNrZWR9O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBnZXRLbm9iQ29sb3IocHJvcHMpfTtcbmA7XG5cbmNvbnN0IFJhZGlvT3B0aW9uQm9yZGVyID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICB3aWR0aDogJHtkZXNpZ25Ub2tlbnMuaGVpZ2h0Rm9yUmFkaW9JbnB1dE9wdGlvbn07XG4gIGhlaWdodDogJHtkZXNpZ25Ub2tlbnMuaGVpZ2h0Rm9yUmFkaW9JbnB1dE9wdGlvbn07XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXR9O1xuICBib3JkZXItd2lkdGg6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckZvclJhZGlvSW5wdXRPcHRpb259O1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3JkZXItY29sb3I6ICR7KHByb3BzKSA9PiBnZXRCb3JkZXJDb2xvcihwcm9wcyl9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbmA7XG5cbmNvbnN0IFJhZGlvT3B0aW9uQ29udGFpbmVyID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBncmlkLWFyZWE6IHJhZGlvO1xuICB3aWR0aDogMjZweDtcbiAgaGVpZ2h0OiAyNnB4O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJvcmRlcjogNHB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAke1JhZGlvT3B0aW9uQm9yZGVyfSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+XG4gICAgICBwcm9wcy5pc0Rpc2FibGVkXG4gICAgICAgID8gZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0V2hlbkRpc2FibGVkXG4gICAgICAgIDogZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0fTtcbiAgfVxuYDtcblxuY29uc3QgZ2V0SG92ZXJTdHlsZXMgPSAocHJvcHM6IFRTdHlsZXNQcm9wcykgPT4ge1xuICBjb25zdCBob3ZlclN0eWxlcyA9IGNzc2BcbiAgICAke1JhZGlvT3B0aW9uQ29udGFpbmVyfSB7XG4gICAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDkwfTtcbiAgICB9XG4gIGA7XG5cbiAgcmV0dXJuIFtcbiAgICAhcHJvcHMuaXNEaXNhYmxlZCAmJlxuICAgICAgIXByb3BzLmlzUmVhZE9ubHkgJiZcbiAgICAgIC8qIHByZXR0aWVyLWlnbm9yZSAqL1xuICAgICAgY3NzYFxuICAgICAgICAmOmhvdmVyICR7aG92ZXJTdHlsZXN9O1xuICAgICAgYCxcbiAgICBwcm9wcy5pc0hvdmVyZWQgJiYgaG92ZXJTdHlsZXMsXG4gIF07XG59O1xuXG5jb25zdCBSYWRpb09wdGlvbkxhYmVsID0gc3R5bGVkLmxhYmVsPFRTdHlsZXNQcm9wcz5gXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGNvbG9yOiAkeyhwcm9wcykgPT4gZ2V0TGFiZWxDb2xvcihwcm9wcyl9O1xuICBjdXJzb3I6ICR7KHByb3BzKSA9PiBnZXRMYWJlbEN1cnNvcihwcm9wcyl9O1xuICBkaXNwbGF5OiBmbGV4O1xuXG4gICR7KHByb3BzKSA9PlxuICAgICFwcm9wcy5pc1JlYWRPbmx5XG4gICAgICA/IGA6Zm9jdXMtd2l0aGluICR7TGFiZWxUZXh0V3JhcHBlcn0ge1xuICAgICAgb3V0bGluZTogYXV0byAycHggJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkfTtcbiAgICAgIG91dGxpbmUtb2Zmc2V0OiAycHg7XG4gICAgICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gICAgfWBcbiAgICAgIDogJyd9XG5cbiAgJHsocHJvcHMpID0+IGdldEhvdmVyU3R5bGVzKHByb3BzKX1cbmA7XG5cbmV4cG9ydCB7XG4gIExhYmVsVGV4dFdyYXBwZXIsXG4gIFJhZGlvSW5wdXRXcmFwcGVyLFxuICBBZGRpdGlvbmFsVGV4dFdyYXBwZXIsXG4gIFJhZGlvT3B0aW9uS25vYixcbiAgUmFkaW9PcHRpb25Cb3JkZXIsXG4gIFJhZGlvT3B0aW9uTGFiZWwsXG4gIFJhZGlvT3B0aW9uQ29udGFpbmVyLFxufTtcbiJdfQ== */");
  return [!props.isDisabled && !props.isReadOnly &&
  /*#__PURE__*/
  /* prettier-ignore */
  css("&\f:hover ", hoverStyles, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:getHoverStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJhZGlvLW9wdGlvbi5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBOElTIiwiZmlsZSI6InJhZGlvLW9wdGlvbi5zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcbmltcG9ydCB0eXBlIHsgVFN0eWxlc1Byb3BzIH0gZnJvbSAnLi9yYWRpby1vcHRpb24nO1xuXG5jb25zdCBMYWJlbFRleHRXcmFwcGVyID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICBncmlkLWFyZWE6IGxhYmVsO1xuICBtYXJnaW4tbGVmdDogJHtkZXNpZ25Ub2tlbnMubWFyZ2luTGVmdEZvclJhZGlvSW5wdXRMYWJlbH07XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5gO1xuXG5jb25zdCBBZGRpdGlvbmFsVGV4dFdyYXBwZXIgPSBzdHlsZWQuZGl2PFRTdHlsZXNQcm9wcz5gXG4gIGdyaWQtYXJlYTogY29udGVudDtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbmA7XG5cbmNvbnN0IFJhZGlvSW5wdXRXcmFwcGVyID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IGF1dG87XG4gIGdyaWQtdGVtcGxhdGUtcm93czogYXV0bztcbiAgZ3JpZC10ZW1wbGF0ZS1hcmVhczpcbiAgICAncmFkaW8gbGFiZWwnXG4gICAgJy4gY29udGVudCc7XG5gO1xuXG5jb25zdCBnZXRCb3JkZXJDb2xvciA9IChwcm9wczogVFN0eWxlc1Byb3BzKSA9PiB7XG4gIGlmIChwcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkRpc2FibGVkO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvclJhZGlvSW5wdXRXaGVuUmVhZG9ubHk7XG4gIH1cbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkVycm9yO1xuICB9XG4gIGlmIChwcm9wcy5oYXNXYXJuaW5nKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbldhcm5pbmc7XG4gIH1cbiAgaWYgKHByb3BzLmlzSG92ZXJlZCAmJiAhcHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIGlmIChwcm9wcy5pc0NoZWNrZWQpIHtcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkO1xuICAgIH1cbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9yUmFkaW9JbnB1dFdoZW5Gb2N1c2VkO1xuICB9XG4gIGlmIChwcm9wcy5pc0NoZWNrZWQpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9yUmFkaW9JbnB1dFdoZW5DaGVja2VkO1xuICB9XG4gIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JSYWRpb0lucHV0O1xufTtcblxuY29uc3QgZ2V0S25vYkNvbG9yID0gKHByb3BzOiBUU3R5bGVzUHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLmlzRGlzYWJsZWQpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9yUmFkaW9JbnB1dFdoZW5EaXNhYmxlZDtcbiAgfVxuICBpZiAocHJvcHMuaGFzRXJyb3IpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlbkVycm9yO1xuICB9XG4gIGlmIChwcm9wcy5oYXNXYXJuaW5nKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvck5ldXRyYWw2MDtcbiAgfVxuICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZDtcbn07XG5cbmNvbnN0IGdldExhYmVsQ29sb3IgPSAocHJvcHM6IFRTdHlsZXNQcm9wcykgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWQ7XG4gIH1cbiAgaWYgKHByb3BzLmlzUmVhZE9ubHkpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRXJyb3I7XG4gIH1cbiAgaWYgKHByb3BzLmhhc1dhcm5pbmcpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlbldhcm5pbmc7XG4gIH1cbiAgcmV0dXJuIGRlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dDtcbn07XG5jb25zdCBnZXRMYWJlbEN1cnNvciA9IChwcm9wczogVFN0eWxlc1Byb3BzKSA9PiB7XG4gIGlmIChwcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgcmV0dXJuICdub3QtYWxsb3dlZCc7XG4gIH1cbiAgaWYgKHByb3BzLmlzUmVhZE9ubHkpIHtcbiAgICByZXR1cm4gJ2RlZmF1bHQnO1xuICB9XG4gIHJldHVybiAncG9pbnRlcic7XG59O1xuXG5jb25zdCBSYWRpb09wdGlvbktub2IgPSBzdHlsZWQuZGl2PFRTdHlsZXNQcm9wcz5gXG4gIHdpZHRoOiAke2Rlc2lnblRva2Vucy5oZWlnaHRGb3JSYWRpb0lucHV0T3B0aW9uV2hlbkNoZWNrZWR9O1xuICBoZWlnaHQ6ICR7ZGVzaWduVG9rZW5zLmhlaWdodEZvclJhZGlvSW5wdXRPcHRpb25XaGVuQ2hlY2tlZH07XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IGdldEtub2JDb2xvcihwcm9wcyl9O1xuYDtcblxuY29uc3QgUmFkaW9PcHRpb25Cb3JkZXIgPSBzdHlsZWQuZGl2PFRTdHlsZXNQcm9wcz5gXG4gIHdpZHRoOiAke2Rlc2lnblRva2Vucy5oZWlnaHRGb3JSYWRpb0lucHV0T3B0aW9ufTtcbiAgaGVpZ2h0OiAke2Rlc2lnblRva2Vucy5oZWlnaHRGb3JSYWRpb0lucHV0T3B0aW9ufTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JJbnB1dH07XG4gIGJvcmRlci13aWR0aDogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyRm9yUmFkaW9JbnB1dE9wdGlvbn07XG4gIGJvcmRlci1zdHlsZTogc29saWQ7XG4gIGJvcmRlci1jb2xvcjogJHsocHJvcHMpID0+IGdldEJvcmRlckNvbG9yKHByb3BzKX07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuYDtcblxuY29uc3QgUmFkaW9PcHRpb25Db250YWluZXIgPSBzdHlsZWQuZGl2PFRTdHlsZXNQcm9wcz5gXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGdyaWQtYXJlYTogcmFkaW87XG4gIHdpZHRoOiAyNnB4O1xuICBoZWlnaHQ6IDI2cHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYm9yZGVyOiA0cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICR7UmFkaW9PcHRpb25Cb3JkZXJ9IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT5cbiAgICAgIHByb3BzLmlzRGlzYWJsZWRcbiAgICAgICAgPyBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWRcbiAgICAgICAgOiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXR9O1xuICB9XG5gO1xuXG5jb25zdCBnZXRIb3ZlclN0eWxlcyA9IChwcm9wczogVFN0eWxlc1Byb3BzKSA9PiB7XG4gIGNvbnN0IGhvdmVyU3R5bGVzID0gY3NzYFxuICAgICR7UmFkaW9PcHRpb25Db250YWluZXJ9IHtcbiAgICAgIGJvcmRlci1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsOTB9O1xuICAgIH1cbiAgYDtcblxuICByZXR1cm4gW1xuICAgICFwcm9wcy5pc0Rpc2FibGVkICYmXG4gICAgICAhcHJvcHMuaXNSZWFkT25seSAmJlxuICAgICAgLyogcHJldHRpZXItaWdub3JlICovXG4gICAgICBjc3NgXG4gICAgICAgICY6aG92ZXIgJHtob3ZlclN0eWxlc307XG4gICAgICBgLFxuICAgIHByb3BzLmlzSG92ZXJlZCAmJiBob3ZlclN0eWxlcyxcbiAgXTtcbn07XG5cbmNvbnN0IFJhZGlvT3B0aW9uTGFiZWwgPSBzdHlsZWQubGFiZWw8VFN0eWxlc1Byb3BzPmBcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgY29sb3I6ICR7KHByb3BzKSA9PiBnZXRMYWJlbENvbG9yKHByb3BzKX07XG4gIGN1cnNvcjogJHsocHJvcHMpID0+IGdldExhYmVsQ3Vyc29yKHByb3BzKX07XG4gIGRpc3BsYXk6IGZsZXg7XG5cbiAgJHsocHJvcHMpID0+XG4gICAgIXByb3BzLmlzUmVhZE9ubHlcbiAgICAgID8gYDpmb2N1cy13aXRoaW4gJHtMYWJlbFRleHRXcmFwcGVyfSB7XG4gICAgICBvdXRsaW5lOiBhdXRvIDJweCAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWR9O1xuICAgICAgb3V0bGluZS1vZmZzZXQ6IDJweDtcbiAgICAgIHdpZHRoOiBmaXQtY29udGVudDtcbiAgICB9YFxuICAgICAgOiAnJ31cblxuICAkeyhwcm9wcykgPT4gZ2V0SG92ZXJTdHlsZXMocHJvcHMpfVxuYDtcblxuZXhwb3J0IHtcbiAgTGFiZWxUZXh0V3JhcHBlcixcbiAgUmFkaW9JbnB1dFdyYXBwZXIsXG4gIEFkZGl0aW9uYWxUZXh0V3JhcHBlcixcbiAgUmFkaW9PcHRpb25Lbm9iLFxuICBSYWRpb09wdGlvbkJvcmRlcixcbiAgUmFkaW9PcHRpb25MYWJlbCxcbiAgUmFkaW9PcHRpb25Db250YWluZXIsXG59O1xuIl19 */"), props.isHovered && hoverStyles];
};
const RadioOptionLabel = /*#__PURE__*/_styled("label", process.env.NODE_ENV === "production" ? {
  target: "e1x57rfz0"
} : {
  target: "e1x57rfz0",
  label: "RadioOptionLabel"
})("align-items:center;color:", props => getLabelColor(props), ";cursor:", props => getLabelCursor(props), ";display:flex;", props => {
  var _context;
  return !props.isReadOnly ? _concatInstanceProperty(_context = ":focus-within ".concat(LabelTextWrapper, " {\n      outline: auto 2px ")).call(_context, designTokens.borderColorForInputWhenFocused, ";\n      outline-offset: 2px;\n      width: fit-content;\n    }") : '';
}, " ", props => getHoverStyles(props), ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJhZGlvLW9wdGlvbi5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUptRCIsImZpbGUiOiJyYWRpby1vcHRpb24uc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5pbXBvcnQgdHlwZSB7IFRTdHlsZXNQcm9wcyB9IGZyb20gJy4vcmFkaW8tb3B0aW9uJztcblxuY29uc3QgTGFiZWxUZXh0V3JhcHBlciA9IHN0eWxlZC5kaXY8VFN0eWxlc1Byb3BzPmBcbiAgZ3JpZC1hcmVhOiBsYWJlbDtcbiAgbWFyZ2luLWxlZnQ6ICR7ZGVzaWduVG9rZW5zLm1hcmdpbkxlZnRGb3JSYWRpb0lucHV0TGFiZWx9O1xuICBmb250LXNpemU6IDFyZW07XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuYDtcblxuY29uc3QgQWRkaXRpb25hbFRleHRXcmFwcGVyID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICBncmlkLWFyZWE6IGNvbnRlbnQ7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG5gO1xuXG5jb25zdCBSYWRpb0lucHV0V3JhcHBlciA9IHN0eWxlZC5kaXY8VFN0eWxlc1Byb3BzPmBcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG87XG4gIGdyaWQtdGVtcGxhdGUtYXJlYXM6XG4gICAgJ3JhZGlvIGxhYmVsJ1xuICAgICcuIGNvbnRlbnQnO1xuYDtcblxuY29uc3QgZ2V0Qm9yZGVyQ29sb3IgPSAocHJvcHM6IFRTdHlsZXNQcm9wcykgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5EaXNhYmxlZDtcbiAgfVxuICBpZiAocHJvcHMuaXNSZWFkT25seSkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JSYWRpb0lucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5FcnJvcjtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nO1xuICB9XG4gIGlmIChwcm9wcy5pc0hvdmVyZWQgJiYgIXByb3BzLmlzRGlzYWJsZWQpIHtcbiAgICBpZiAocHJvcHMuaXNDaGVja2VkKSB7XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZDtcbiAgICB9XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvclJhZGlvSW5wdXRXaGVuRm9jdXNlZDtcbiAgfVxuICBpZiAocHJvcHMuaXNDaGVja2VkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvclJhZGlvSW5wdXRXaGVuQ2hlY2tlZDtcbiAgfVxuICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9yUmFkaW9JbnB1dDtcbn07XG5cbmNvbnN0IGdldEtub2JDb2xvciA9IChwcm9wczogVFN0eWxlc1Byb3BzKSA9PiB7XG4gIGlmIChwcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvclJhZGlvSW5wdXRXaGVuRGlzYWJsZWQ7XG4gIH1cbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5FcnJvcjtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuV2FybmluZztcbiAgfVxuICBpZiAocHJvcHMuaXNSZWFkT25seSkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsNjA7XG4gIH1cbiAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWQ7XG59O1xuXG5jb25zdCBnZXRMYWJlbENvbG9yID0gKHByb3BzOiBUU3R5bGVzUHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLmlzRGlzYWJsZWQpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlbkRpc2FibGVkO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5SZWFkb25seTtcbiAgfVxuICBpZiAocHJvcHMuaGFzRXJyb3IpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlbkVycm9yO1xuICB9XG4gIGlmIChwcm9wcy5oYXNXYXJuaW5nKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nO1xuICB9XG4gIHJldHVybiBkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXQ7XG59O1xuY29uc3QgZ2V0TGFiZWxDdXJzb3IgPSAocHJvcHM6IFRTdHlsZXNQcm9wcykgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiAnbm90LWFsbG93ZWQnO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuICdkZWZhdWx0JztcbiAgfVxuICByZXR1cm4gJ3BvaW50ZXInO1xufTtcblxuY29uc3QgUmFkaW9PcHRpb25Lbm9iID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICB3aWR0aDogJHtkZXNpZ25Ub2tlbnMuaGVpZ2h0Rm9yUmFkaW9JbnB1dE9wdGlvbldoZW5DaGVja2VkfTtcbiAgaGVpZ2h0OiAke2Rlc2lnblRva2Vucy5oZWlnaHRGb3JSYWRpb0lucHV0T3B0aW9uV2hlbkNoZWNrZWR9O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBnZXRLbm9iQ29sb3IocHJvcHMpfTtcbmA7XG5cbmNvbnN0IFJhZGlvT3B0aW9uQm9yZGVyID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICB3aWR0aDogJHtkZXNpZ25Ub2tlbnMuaGVpZ2h0Rm9yUmFkaW9JbnB1dE9wdGlvbn07XG4gIGhlaWdodDogJHtkZXNpZ25Ub2tlbnMuaGVpZ2h0Rm9yUmFkaW9JbnB1dE9wdGlvbn07XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXR9O1xuICBib3JkZXItd2lkdGg6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckZvclJhZGlvSW5wdXRPcHRpb259O1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3JkZXItY29sb3I6ICR7KHByb3BzKSA9PiBnZXRCb3JkZXJDb2xvcihwcm9wcyl9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbmA7XG5cbmNvbnN0IFJhZGlvT3B0aW9uQ29udGFpbmVyID0gc3R5bGVkLmRpdjxUU3R5bGVzUHJvcHM+YFxuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBncmlkLWFyZWE6IHJhZGlvO1xuICB3aWR0aDogMjZweDtcbiAgaGVpZ2h0OiAyNnB4O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJvcmRlcjogNHB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAke1JhZGlvT3B0aW9uQm9yZGVyfSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+XG4gICAgICBwcm9wcy5pc0Rpc2FibGVkXG4gICAgICAgID8gZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0V2hlbkRpc2FibGVkXG4gICAgICAgIDogZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0fTtcbiAgfVxuYDtcblxuY29uc3QgZ2V0SG92ZXJTdHlsZXMgPSAocHJvcHM6IFRTdHlsZXNQcm9wcykgPT4ge1xuICBjb25zdCBob3ZlclN0eWxlcyA9IGNzc2BcbiAgICAke1JhZGlvT3B0aW9uQ29udGFpbmVyfSB7XG4gICAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDkwfTtcbiAgICB9XG4gIGA7XG5cbiAgcmV0dXJuIFtcbiAgICAhcHJvcHMuaXNEaXNhYmxlZCAmJlxuICAgICAgIXByb3BzLmlzUmVhZE9ubHkgJiZcbiAgICAgIC8qIHByZXR0aWVyLWlnbm9yZSAqL1xuICAgICAgY3NzYFxuICAgICAgICAmOmhvdmVyICR7aG92ZXJTdHlsZXN9O1xuICAgICAgYCxcbiAgICBwcm9wcy5pc0hvdmVyZWQgJiYgaG92ZXJTdHlsZXMsXG4gIF07XG59O1xuXG5jb25zdCBSYWRpb09wdGlvbkxhYmVsID0gc3R5bGVkLmxhYmVsPFRTdHlsZXNQcm9wcz5gXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGNvbG9yOiAkeyhwcm9wcykgPT4gZ2V0TGFiZWxDb2xvcihwcm9wcyl9O1xuICBjdXJzb3I6ICR7KHByb3BzKSA9PiBnZXRMYWJlbEN1cnNvcihwcm9wcyl9O1xuICBkaXNwbGF5OiBmbGV4O1xuXG4gICR7KHByb3BzKSA9PlxuICAgICFwcm9wcy5pc1JlYWRPbmx5XG4gICAgICA/IGA6Zm9jdXMtd2l0aGluICR7TGFiZWxUZXh0V3JhcHBlcn0ge1xuICAgICAgb3V0bGluZTogYXV0byAycHggJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkfTtcbiAgICAgIG91dGxpbmUtb2Zmc2V0OiAycHg7XG4gICAgICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gICAgfWBcbiAgICAgIDogJyd9XG5cbiAgJHsocHJvcHMpID0+IGdldEhvdmVyU3R5bGVzKHByb3BzKX1cbmA7XG5cbmV4cG9ydCB7XG4gIExhYmVsVGV4dFdyYXBwZXIsXG4gIFJhZGlvSW5wdXRXcmFwcGVyLFxuICBBZGRpdGlvbmFsVGV4dFdyYXBwZXIsXG4gIFJhZGlvT3B0aW9uS25vYixcbiAgUmFkaW9PcHRpb25Cb3JkZXIsXG4gIFJhZGlvT3B0aW9uTGFiZWwsXG4gIFJhZGlvT3B0aW9uQ29udGFpbmVyLFxufTtcbiJdfQ== */"));

function ownKeys$1(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); enumerableOnly && (symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var _context, _context2; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty(_context = ownKeys$1(Object(source), !0)).call(_context, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)) : _forEachInstanceProperty(_context2 = ownKeys$1(Object(source))).call(_context2, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } return target; }
const Option = props => {
  var _props$components;
  const labelProps = props.id ? {
    htmlFor: props.id
  } : {};
  if (!props.isReadOnly) {
    process.env.NODE_ENV !== "production" ? warning(typeof props.onChange === 'function', 'RadioOption: `onChange` is required when input is not read only.') : void 0;
  }
  if ((_props$components = props.components) !== null && _props$components !== void 0 && _props$components.wrapper) {
    var _props$components2, _props$components3, _props$components4;
    process.env.NODE_ENV !== "production" ? warning(typeof ((_props$components2 = props.components) === null || _props$components2 === void 0 ? void 0 : _props$components2.wrapper) === 'function', "Invalid prop 'components.wrapper' supplied to 'RadioInput.Option': the prop is not a function") : void 0;
    process.env.NODE_ENV !== "production" ? warning(((_props$components3 = props.components) === null || _props$components3 === void 0 ? void 0 : _props$components3.wrapper.length) === 1, "Invalid prop 'components.wrapper' supplied to 'RadioInput.Option': the supplied function should expect one argument") : void 0;
    process.env.NODE_ENV !== "production" ? warning( /*#__PURE__*/isValidElement((_props$components4 = props.components) === null || _props$components4 === void 0 ? void 0 : _props$components4.wrapper(jsx(Fragment, {}))), "Invalid prop 'components.wrapper' supplied to 'RadioInput.Option': the function supplied should return a valid react element") : void 0;
  }
  const stylesProps = {
    isDisabled: props.isDisabled,
    hasError: props.hasError,
    hasWarning: props.hasWarning,
    isHovered: props.isHovered,
    isReadOnly: props.isReadOnly,
    isChecked: props.isChecked
  };
  return jsx(RadioOptionLabel, _objectSpread$1(_objectSpread$1(_objectSpread$1({
    role: "radio",
    "aria-checked": props.isChecked,
    onFocus: props.onFocus,
    onBlur: props.onBlur
  }, stylesProps), filterInvalidAttributes(labelProps)), {}, {
    children: jsxs(RadioInputWrapper, {
      children: [jsx("input", _objectSpread$1({
        css: accessibleHiddenInputStyles,
        id: props.id,
        name: props.name,
        value: typeof props.value === 'boolean' ? props.value.toString() : props.value,
        onChange: props.isReadOnly ? undefined : props.onChange,
        disabled: props.isDisabled,
        checked: props.isChecked,
        type: "radio",
        readOnly: props.isReadOnly
      }, filterDataAttributes(props))), jsx(RadioOptionContainer, _objectSpread$1(_objectSpread$1({}, stylesProps), {}, {
        children: jsx(RadioOptionBorder, _objectSpread$1(_objectSpread$1({}, stylesProps), {}, {
          children: props.isChecked ? jsx(RadioOptionKnob, _objectSpread$1({}, stylesProps)) : null
        }))
      })), jsx(LabelTextWrapper, {
        isDisabled: props.isDisabled,
        children: props.children
      }), props.additionalContent && jsx(AdditionalTextWrapper, {
        isDisabled: props.isDisabled,
        children: jsx(SpacingsInset, {
          scale: "xs",
          children: props.additionalContent
        })
      })]
    })
  }));
};
Option.propTypes = process.env.NODE_ENV !== "production" ? {
  value: _pt.oneOfType([_pt.string, _pt.bool]).isRequired,
  children: _pt.oneOfType([_pt.string, _pt.element, _pt.func]).isRequired,
  components: _pt.shape({
    wrapper: _pt.func
  }),
  additionalContent: _pt.node,
  id: _pt.string,
  name: _pt.string,
  isChecked: _pt.bool,
  isDisabled: _pt.bool,
  isReadOnly: _pt.bool,
  hasError: _pt.bool,
  hasWarning: _pt.bool,
  onChange: _pt.func,
  onFocus: _pt.func,
  onBlur: _pt.func,
  isHovered: _pt.bool
} : {};
Option.displayName = 'RadioOption';
Option.defaultProps = {
  components: {}
};
var Option$1 = Option;

function ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); enumerableOnly && (symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var _context2, _context3; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty(_context2 = ownKeys(Object(source), !0)).call(_context2, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)) : _forEachInstanceProperty(_context3 = ownKeys(Object(source))).call(_context3, function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } return target; }
const defaultProps = {
  horizontalConstraint: 'scale',
  direction: 'stack',
  directionProps: {
    scale: 'm'
  }
};
const Group = props => {
  useEffect(() => {
    // NOTE: We allow mixed children rendered as (e.g. spacers)
    // as a result we need to filter out children of the correct type.
    const childrenAsArray = Children.toArray(props.children);
    const optionChildrenAsArray = _filterInstanceProperty(childrenAsArray).call(childrenAsArray, child => child.type.displayName === Option$1.displayName);
    process.env.NODE_ENV !== "production" ? warning(optionChildrenAsArray.length > 0, 'Radio.Group must contain at least one Radio.Option') : void 0;
  }, [props.children]);
  const optionElements = _mapInstanceProperty(Children).call(Children, props.children, (child, index) => {
    // NOTE: Allowing to intersperse other elements than `Option`.
    if (child && /*#__PURE__*/isValidElement(child) && child.type.displayName === Option$1.displayName) {
      var _context;
      const clonedChild = /*#__PURE__*/cloneElement(child, {
        id: props.id && _concatInstanceProperty(_context = "".concat(props.id, "-")).call(_context, index),
        name: props.name,
        isChecked: props.value === child.props.value,
        isDisabled: child.props.isDisabled || props.isDisabled,
        isReadOnly: props.isReadOnly,
        hasError: props.hasError,
        hasWarning: props.hasWarning,
        onChange: props.onChange,
        onFocus: props.onFocus,
        onBlur: props.onBlur
      });
      const wrapper = child.props.components.wrapper;
      return wrapper ? wrapper(clonedChild) : clonedChild;
    }
    return child;
  });
  if (props.direction === 'inline') {
    return jsx("div", {
      "aria-labelledby": props.id,
      "aria-invalid": props['aria-invalid'],
      "aria-errormessage": props['aria-errormessage'],
      children: jsx(Inline, _objectSpread(_objectSpread(_objectSpread({}, props.directionProps), filterDataAttributes(props)), {}, {
        children: optionElements
      }))
    });
  }
  return jsx("div", {
    "aria-labelledby": props.id,
    "aria-invalid": props['aria-invalid'],
    "aria-errormessage": props['aria-errormessage'],
    children: jsx(Constraints.Horizontal, {
      max: props.horizontalConstraint,
      children: jsx(Stack, _objectSpread(_objectSpread(_objectSpread({}, props.directionProps), filterDataAttributes(props)), {}, {
        children: optionElements
      }))
    })
  });
};
Group.propTypes = process.env.NODE_ENV !== "production" ? {
  id: _pt.string,
  name: _pt.string,
  value: _pt.oneOfType([_pt.string, _pt.bool]).isRequired,
  onChange: _pt.func,
  onBlur: _pt.func,
  onFocus: _pt.func,
  isDisabled: _pt.bool,
  isReadOnly: _pt.bool,
  hasError: _pt.bool,
  hasWarning: _pt.bool,
  horizontalConstraint: _pt.oneOf([7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 'scale', 'auto']).isRequired,
  direction: _pt.oneOf(['stack', 'inline']).isRequired,
  directionProps: _pt.shape({}).isRequired,
  children: _pt.node.isRequired,
  'aria-invalid': _pt.bool,
  'aria-errormessage': _pt.string
} : {};
Group.displayName = 'RadioGroup';
Group.defaultProps = defaultProps;
var Group$1 = Group;

// NOTE: This string will be replaced on build time with the package version.
var version = "16.11.0";

const RadioInput = {
  Group: Group$1,
  Option: Option$1
};

export { RadioInput as default, version };
