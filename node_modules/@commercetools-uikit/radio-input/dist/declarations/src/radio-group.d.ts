import { type ChangeEventHandler, type FocusEventHandler, type ReactNode } from 'react';
import { type TInlineProps } from '@commercetools-uikit/spacings-inline';
export type TGroupProps = {
    id?: string;
    name?: string;
    value: string | boolean;
    onChange?: ChangeEventHandler<HTMLInputElement>;
    onBlur?: FocusEventHandler<HTMLLabelElement>;
    onFocus?: FocusEventHandler<HTMLLabelElement>;
    isDisabled?: boolean;
    isReadOnly?: boolean;
    hasError?: boolean;
    hasWarning?: boolean;
    horizontalConstraint: 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 'scale' | 'auto';
    direction: 'stack' | 'inline';
    directionProps: {
        scale?: TInlineProps['scale'];
        alignItems?: TInlineProps['alignItems'];
        justifyContent?: TInlineProps['justifyContent'];
    };
    children: ReactNode;
    'aria-invalid'?: boolean;
    'aria-errormessage'?: string;
};
declare const Group: {
    (props: TGroupProps): import("@emotion/react/jsx-runtime").JSX.Element;
    displayName: string;
    defaultProps: Pick<TGroupProps, "direction" | "horizontalConstraint" | "directionProps">;
};
export default Group;
