import { ReactNode, CSSProperties, LegacyRef } from 'react';
export type TContainerStyles = {
    height?: string | number;
    overflow?: string;
    visibility?: string;
    name?: string;
    animation?: string;
} & CSSProperties;
export type TRenderFunctionOptions = {
    isOpen: boolean;
    containerStyles: TContainerStyles;
    toggle: () => void;
    registerContentNode: TNodeRefObject;
};
export type TCollapsibleMotionProps = {
    children: (options: TRenderFunctionOptions) => ReactNode;
    isClosed?: boolean;
    onToggle?: () => void;
    minHeight?: number;
    isDefaultClosed?: boolean;
};
type TNodeRefObject = {
    clientHeight: number;
} & LegacyRef<HTMLDivElement>;
declare const CollapsibleMotion: {
    (props: TCollapsibleMotionProps): import("@emotion/react/jsx-runtime").JSX.Element;
    displayName: string;
    defaultProps: Pick<TCollapsibleMotionProps, "minHeight">;
};
export default CollapsibleMotion;
