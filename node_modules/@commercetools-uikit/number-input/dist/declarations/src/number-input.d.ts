import type { ChangeEventHandler, FocusEventHandler } from 'react';
export type TNumberInputProps = {
    id?: string;
    name?: string;
    'aria-invalid'?: boolean;
    'aria-errormessage'?: string;
    autoComplete?: string;
    placeholder?: string;
    value: string | number;
    min?: number;
    max?: number;
    step?: number | 'any';
    onChange?: ChangeEventHandler<HTMLInputElement>;
    onBlur?: FocusEventHandler<HTMLInputElement>;
    onFocus?: FocusEventHandler<HTMLInputElement>;
    isAutofocussed?: boolean;
    isDisabled?: boolean;
    isReadOnly?: boolean;
    hasError?: boolean;
    hasWarning?: boolean;
    horizontalConstraint?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 'scale' | 'auto';
};
declare const NumberInput: {
    (props: TNumberInputProps): import("@emotion/react/jsx-runtime").JSX.Element;
    displayName: string;
    defaultProps: Pick<TNumberInputProps, "horizontalConstraint">;
    toFormValue(numberOrString: number | string): string | number;
    isEmpty(value: number | string): boolean;
    hasFractionDigits(number: number | string): boolean;
};
export default NumberInput;
