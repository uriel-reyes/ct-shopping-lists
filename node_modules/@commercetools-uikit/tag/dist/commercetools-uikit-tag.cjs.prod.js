'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _Object$keys = require('@babel/runtime-corejs3/core-js-stable/object/keys');
var _Object$getOwnPropertySymbols = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols');
var _filterInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/filter');
var _Object$getOwnPropertyDescriptor = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor');
var _forEachInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/for-each');
var _Object$getOwnPropertyDescriptors = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors');
var _Object$defineProperties = require('@babel/runtime-corejs3/core-js-stable/object/define-properties');
var _Object$defineProperty = require('@babel/runtime-corejs3/core-js-stable/object/define-property');
var _defineProperty = require('@babel/runtime-corejs3/helpers/defineProperty');
require('prop-types');
var react$1 = require('react');
var react = require('@emotion/react');
var reactRouterDom = require('react-router-dom');
var designSystem = require('@commercetools-uikit/design-system');
var Constraints = require('@commercetools-uikit/constraints');
var AccessibleButton = require('@commercetools-uikit/accessible-button');
var icons = require('@commercetools-uikit/icons');
var _styled = require('@emotion/styled/base');
var Text = require('@commercetools-uikit/text');
var Spacings = require('@commercetools-uikit/spacings');
var jsxRuntime = require('@emotion/react/jsx-runtime');
var _mapInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/map');
var utils = require('@commercetools-uikit/utils');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

var _Object$keys__default = /*#__PURE__*/_interopDefault(_Object$keys);
var _Object$getOwnPropertySymbols__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertySymbols);
var _filterInstanceProperty__default = /*#__PURE__*/_interopDefault(_filterInstanceProperty);
var _Object$getOwnPropertyDescriptor__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertyDescriptor);
var _forEachInstanceProperty__default = /*#__PURE__*/_interopDefault(_forEachInstanceProperty);
var _Object$getOwnPropertyDescriptors__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertyDescriptors);
var _Object$defineProperties__default = /*#__PURE__*/_interopDefault(_Object$defineProperties);
var _Object$defineProperty__default = /*#__PURE__*/_interopDefault(_Object$defineProperty);
var Constraints__default = /*#__PURE__*/_interopDefault(Constraints);
var AccessibleButton__default = /*#__PURE__*/_interopDefault(AccessibleButton);
var _styled__default = /*#__PURE__*/_interopDefault(_styled);
var Text__default = /*#__PURE__*/_interopDefault(Text);
var Spacings__default = /*#__PURE__*/_interopDefault(Spacings);
var _mapInstanceProperty__default = /*#__PURE__*/_interopDefault(_mapInstanceProperty);

const defaultProps$1 = {
  type: 'normal',
  isDisabled: false,
  isDraggable: false
};
const Body = /*#__PURE__*/_styled__default["default"]("div", {
  target: "e1imv23z0"
} )("" );
const getClickableContentWrapperStyles = type => {
  return type === 'warning' ? [] : [/*#__PURE__*/react.css("&:hover{border-color:", designSystem.designTokens.borderColorForTagWhenFocused, ";}" + ("" ), "" )];
};
const getTextDetailColor = isDisabled => {
  if (isDisabled) return designSystem.designTokens.fontColorForTagWhenDisabled;
  return designSystem.designTokens.colorSolid;
};
const getContentWrapperStyles = props => {
  return /*#__PURE__*/react.css("position:relative;display:flex;box-sizing:border-box;align-items:center;border-radius:", designSystem.designTokens.borderRadius2, ";padding:", designSystem.designTokens.paddingForTag, ";white-space:normal;text-align:left;min-width:0;overflow-wrap:break-word;hyphens:auto;border-style:solid;border-width:1px;border-color:", props.type === 'warning' ? designSystem.designTokens.colorWarning : designSystem.designTokens.borderColorForTag, ";color:", designSystem.designTokens.fontColorForTag, ";fill:", designSystem.designTokens.fontColorForTagDragIcon, ";width:100%;small{color:", getTextDetailColor(props.isDisabled), ";}", props.isDisabled && "\n      * {\n        color: ".concat(designSystem.designTokens.colorNeutral60, " !important;\n      }\n    "), ";" + ("" ), "" );
};
const TagBody = props => {
  var _props$styles;
  const textTone = props.isDisabled ? 'secondary' : 'inherit';
  return jsxRuntime.jsx(Body, {
    to: props.to,
    as: props.as,
    css: [getContentWrapperStyles(props), Boolean(props.onRemove) && /*#__PURE__*/react.css("border-right:", !props.isDisabled && '0', ";border-top-right-radius:0;border-bottom-right-radius:0;" + ("" ), "" ), !props.isDisabled && Boolean(props.onClick) && getClickableContentWrapperStyles(props.type), !props.isDisabled && Boolean(props.onClick) && /*#__PURE__*/react.css("&:hover{box-shadow:", designSystem.designTokens.shadowForTagWhenHovered, ";}" + ("" ), "" ), (_props$styles = props.styles) === null || _props$styles === void 0 ? void 0 : _props$styles.body, "" , "" ],
    onClick: props.isDisabled ? undefined : props.onClick,
    children: jsxRuntime.jsxs(Spacings__default["default"].Inline, {
      scale: "s",
      alignItems: "center",
      children: [props.isDraggable && !props.isDisabled ? jsxRuntime.jsx(icons.DragIcon, {
        "data-testid": "drag-icon",
        size: "medium"
      }) : null, jsxRuntime.jsx(Text__default["default"].Body, {
        tone: textTone,
        as: "span",
        children: props.children
      })]
    })
  });
};
TagBody.propTypes = {};
TagBody.defaultProps = defaultProps$1;
TagBody.displayName = 'TagBody';
var TagBody$1 = TagBody;

function ownKeys$1(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var _context, _context2; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context = ownKeys$1(Object(source), !0)).call(_context, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context2 = ownKeys$1(Object(source))).call(_context2, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const defaultProps = {
  type: 'normal',
  isDisabled: false,
  isDraggable: false,
  horizontalConstraint: 'scale'
};
const Tag = props => {
  const linkProps = props.to && !props.isDisabled ? {
    as: reactRouterDom.Link,
    to: props.to
  } : {};
  return jsxRuntime.jsx(Constraints__default["default"].Horizontal, {
    max: props.horizontalConstraint,
    children: jsxRuntime.jsxs("div", {
      css: /*#__PURE__*/react.css("a{cursor:pointer;text-decoration:none;}cursor:default;min-width:0;display:flex;background-color:", props.type === 'warning' ? designSystem.designTokens.backgroundColorForTagWarning : designSystem.designTokens.backgroundColorForTag, ";", props.onClick && "&:hover {\n            background-color: ".concat(props.type === 'warning' ? designSystem.designTokens.backgroundColorForTagWarning : designSystem.designTokens.backgroundColorForTagWhenHovered, ";\n          }"), ";" + ("" ), "" ),
      children: [jsxRuntime.jsx(TagBody$1, _objectSpread$1(_objectSpread$1({}, linkProps), {}, {
        styles: props.styles,
        type: props.type,
        onClick: props.onClick,
        onRemove: props.onRemove,
        isDisabled: props.isDisabled,
        isDraggable: props.isDraggable,
        children: props.children
      })), Boolean(props.onRemove) && !props.isDisabled && jsxRuntime.jsx(AccessibleButton__default["default"], {
        label: "Remove",
        isDisabled: props.isDisabled,
        onClick: props.onRemove,
        css: [/*#__PURE__*/react.css("border-color:", props.type === 'warning' ? designSystem.designTokens.colorWarning : designSystem.designTokens.borderColorForTag, ";padding:", designSystem.designTokens.paddingForTagRemoveIcon, ";border-radius:0 ", designSystem.designTokens.borderRadiusForTag, " ", designSystem.designTokens.borderRadiusForTag, " 0;display:flex;align-items:center;background:inherit;border-style:solid;border-width:", designSystem.designTokens.borderWidthForTag, ";:not(:disabled)&:hover,:not(:disabled)&:focus{border-color:", props.type === 'warning' ? designSystem.designTokens.colorWarning : designSystem.designTokens.borderColorForTagWhenHovered, ";fill:", designSystem.designTokens.fontColorForTagRemoveIconWhenHovered, ";}fill:", designSystem.designTokens.fontColorForTagRemoveIcon, ";&:disabled{fill:", designSystem.designTokens.fontColorForTagWhenDisabled, ";}" + ("" ), "" ), "" , "" ],
        children: jsxRuntime.jsx(icons.CloseBoldIcon, {
          size: "medium"
        })
      })]
    })
  });
};
Tag.propTypes = {};
Tag.defaultProps = defaultProps;
Tag.displayName = 'Tag';
var Tag$1 = Tag;

function ownKeys(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var _context, _context2; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context = ownKeys(Object(source), !0)).call(_context, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context2 = ownKeys(Object(source))).call(_context2, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const TagListContainer = /*#__PURE__*/_styled__default["default"]("div", {
  target: "e1t0l8771"
} )({
  name: "798ujy",
  styles: "width:100%;display:flex;flex-wrap:wrap"
} );
const TagListItem = /*#__PURE__*/_styled__default["default"]("div", {
  target: "e1t0l8770"
} )("margin:", designSystem.designTokens.marginForTagList, ";" + ("" ));
const TagList = props => {
  return jsxRuntime.jsx(TagListContainer, _objectSpread(_objectSpread({
    className: props.className
  }, utils.filterDataAttributes(props)), {}, {
    children: _mapInstanceProperty__default["default"](react$1.Children).call(react$1.Children, props.children, tag => jsxRuntime.jsx(TagListItem, {
      children: tag
    }))
  }));
};
TagList.propTypes = {};
TagList.displayName = 'TagList';
var TagList$1 = TagList;

// NOTE: This string will be replaced on build time with the package version.
var version = "16.11.0";

exports.Tag = Tag$1;
exports.TagList = TagList$1;
exports["default"] = Tag$1;
exports.version = version;
