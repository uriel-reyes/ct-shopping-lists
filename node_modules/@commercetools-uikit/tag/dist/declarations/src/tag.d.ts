import type { LocationDescriptor } from 'history';
import { ReactNode, MouseEvent, KeyboardEvent } from 'react';
import { type SerializedStyles } from '@emotion/react';
export type TTagProps = {
    type?: 'normal' | 'warning';
    styles?: Record<string, SerializedStyles>;
    to?: string | LocationDescriptor;
    isDisabled?: boolean;
    isDraggable?: boolean;
    onRemove?: (event: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>) => void;
    onClick?: (event: MouseEvent<HTMLElement>) => void;
    horizontalConstraint?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 'scale' | 'auto';
    children: ReactNode;
};
declare const Tag: {
    (props: TTagProps): import("@emotion/react/jsx-runtime").JSX.Element;
    defaultProps: Pick<TTagProps, "type" | "isDisabled" | "horizontalConstraint" | "isDraggable">;
    displayName: string;
};
export default Tag;
