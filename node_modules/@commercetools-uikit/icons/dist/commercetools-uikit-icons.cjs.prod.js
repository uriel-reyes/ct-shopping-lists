'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _Object$keys = require('@babel/runtime-corejs3/core-js-stable/object/keys');
var _Object$getOwnPropertySymbols = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols');
var _filterInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/filter');
var _Object$getOwnPropertyDescriptor = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor');
var _forEachInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/for-each');
var _Object$getOwnPropertyDescriptors = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors');
var _Object$defineProperties = require('@babel/runtime-corejs3/core-js-stable/object/define-properties');
var _Object$defineProperty = require('@babel/runtime-corejs3/core-js-stable/object/define-property');
var _defineProperty = require('@babel/runtime-corejs3/helpers/defineProperty');
var _concatInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/concat');
require('@commercetools-uikit/utils');
var react = require('@emotion/react');
var designSystem = require('@commercetools-uikit/design-system');
var jsxRuntime = require('@emotion/react/jsx-runtime');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

var _Object$keys__default = /*#__PURE__*/_interopDefault(_Object$keys);
var _Object$getOwnPropertySymbols__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertySymbols);
var _filterInstanceProperty__default = /*#__PURE__*/_interopDefault(_filterInstanceProperty);
var _Object$getOwnPropertyDescriptor__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertyDescriptor);
var _forEachInstanceProperty__default = /*#__PURE__*/_interopDefault(_forEachInstanceProperty);
var _Object$getOwnPropertyDescriptors__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertyDescriptors);
var _Object$defineProperties__default = /*#__PURE__*/_interopDefault(_Object$defineProperties);
var _Object$defineProperty__default = /*#__PURE__*/_interopDefault(_Object$defineProperty);
var _concatInstanceProperty__default = /*#__PURE__*/_interopDefault(_concatInstanceProperty);

function ownKeys$1Z(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1Z(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1Z(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1Z(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1Z = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1Z = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1Z[size], "px"),
        height: "".concat(iconSizes$1Z[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1Z.big, "px"),
        height: "".concat(iconSizes$1Z.big, "px")
      };
  }
};
const getSizeStyle$1Z = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1Z(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1Z = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1Z = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1Z(props.color), ";}&,image{", getSizeStyle$1Z(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgAngleDown = props => jsxRuntime.jsx("svg", _objectSpread$1Z(_objectSpread$1Z({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m20.644 9.311-7.98 8.003a.829.829 0 0 1-.308.201c-.11.04-.23.06-.356.06-.127 0-.245-.02-.356-.06a.829.829 0 0 1-.309-.201L3.332 9.31A1.128 1.128 0 0 1 3 8.48c0-.332.119-.617.356-.855a1.14 1.14 0 0 1 .831-.356c.317 0 .594.119.831.356L12 14.607l6.982-6.982c.221-.222.494-.332.818-.332.325 0 .606.118.844.356.237.237.356.514.356.831 0 .317-.119.594-.356.831Z"
  })
}));
SvgAngleDown.displayName = 'SvgAngleDown';
const AngleDownIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgAngleDown, _objectSpread$1Z(_objectSpread$1Z({}, props), {}, {
      className: createClass(getIconStyles$1Z(props))
    }));
  }
});
AngleDownIcon.displayName = 'AngleDownIcon';
var AngleDownIcon$1 = AngleDownIcon;

function ownKeys$1Y(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1Y(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1Y(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1Y(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1Y = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1Y = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1Y[size], "px"),
        height: "".concat(iconSizes$1Y[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1Y.big, "px"),
        height: "".concat(iconSizes$1Y.big, "px")
      };
  }
};
const getSizeStyle$1Y = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1Y(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1Y = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1Y = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1Y(props.color), ";}&,image{", getSizeStyle$1Y(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgAngleLeft = props => jsxRuntime.jsx("svg", _objectSpread$1Y(_objectSpread$1Y({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m15.264 20.644-8.003-7.98a.828.828 0 0 1-.201-.308c-.04-.11-.06-.23-.06-.356 0-.127.02-.245.06-.356a.828.828 0 0 1 .201-.309l8.003-8.003c.222-.221.498-.332.831-.332.332 0 .617.119.855.356.237.238.356.515.356.831 0 .317-.119.594-.356.831L9.968 12l6.982 6.982c.222.221.332.494.332.818 0 .325-.118.606-.356.844a1.139 1.139 0 0 1-.831.356c-.317 0-.594-.119-.831-.356Z"
  })
}));
SvgAngleLeft.displayName = 'SvgAngleLeft';
const AngleLeftIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgAngleLeft, _objectSpread$1Y(_objectSpread$1Y({}, props), {}, {
      className: createClass(getIconStyles$1Y(props))
    }));
  }
});
AngleLeftIcon.displayName = 'AngleLeftIcon';
var AngleLeftIcon$1 = AngleLeftIcon;

function ownKeys$1X(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1X(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1X(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1X(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1X = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1X = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1X[size], "px"),
        height: "".concat(iconSizes$1X[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1X.big, "px"),
        height: "".concat(iconSizes$1X.big, "px")
      };
  }
};
const getSizeStyle$1X = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1X(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1X = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1X = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1X(props.color), ";}&,image{", getSizeStyle$1X(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgAngleRight = props => jsxRuntime.jsx("svg", _objectSpread$1X(_objectSpread$1X({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M7.356 20.644A1.152 1.152 0 0 1 7 19.802c0-.324.119-.604.356-.841l6.948-6.95L7.332 5.04A1.126 1.126 0 0 1 7 4.21c0-.333.119-.617.356-.854S7.874 3 8.198 3c.324 0 .604.119.842.356l7.968 7.992a.839.839 0 0 1 .202.308c.04.11.059.23.059.356 0 .126-.02.245-.059.356a.838.838 0 0 1-.202.308l-7.992 7.992a1.111 1.111 0 0 1-.818.332c-.324 0-.605-.119-.842-.356Z"
  })
}));
SvgAngleRight.displayName = 'SvgAngleRight';
const AngleRightIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgAngleRight, _objectSpread$1X(_objectSpread$1X({}, props), {}, {
      className: createClass(getIconStyles$1X(props))
    }));
  }
});
AngleRightIcon.displayName = 'AngleRightIcon';
var AngleRightIcon$1 = AngleRightIcon;

function ownKeys$1W(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1W(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1W(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1W(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1W = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1W = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1W[size], "px"),
        height: "".concat(iconSizes$1W[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1W.big, "px"),
        height: "".concat(iconSizes$1W.big, "px")
      };
  }
};
const getSizeStyle$1W = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1W(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1W = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1W = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1W(props.color), ";}&,image{", getSizeStyle$1W(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgAngleThinLeft = props => jsxRuntime.jsx("svg", _objectSpread$1W(_objectSpread$1W({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fillRule: "evenodd",
    d: "M16.336 20.888c-.117 0-.195-.038-.273-.15l-8.634-8.25a.353.353 0 0 1 0-.525l8.633-8.288c.157-.15.391-.15.547 0a.353.353 0 0 1 0 .525L8.25 12.225l8.36 7.988a.353.353 0 0 1 0 .525.342.342 0 0 1-.274.15Z"
  })
}));
SvgAngleThinLeft.displayName = 'SvgAngleThinLeft';
const AngleThinLeftIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgAngleThinLeft, _objectSpread$1W(_objectSpread$1W({}, props), {}, {
      className: createClass(getIconStyles$1W(props))
    }));
  }
});
AngleThinLeftIcon.displayName = 'AngleThinLeftIcon';
var AngleThinLeftIcon$1 = AngleThinLeftIcon;

function ownKeys$1V(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1V(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1V(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1V(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1V = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1V = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1V[size], "px"),
        height: "".concat(iconSizes$1V[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1V.big, "px"),
        height: "".concat(iconSizes$1V.big, "px")
      };
  }
};
const getSizeStyle$1V = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1V(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1V = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1V = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1V(props.color), ";}&,image{", getSizeStyle$1V(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgAngleThinRight = props => jsxRuntime.jsx("svg", _objectSpread$1V(_objectSpread$1V({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fillRule: "evenodd",
    d: "M7.39 3c.118 0 .196.038.274.15l8.633 8.25a.353.353 0 0 1 0 .525l-8.633 8.288a.389.389 0 0 1-.547 0 .353.353 0 0 1 0-.525l8.36-8.025-8.36-7.988a.353.353 0 0 1 0-.525.342.342 0 0 1 .274-.15Z"
  })
}));
SvgAngleThinRight.displayName = 'SvgAngleThinRight';
const AngleThinRightIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgAngleThinRight, _objectSpread$1V(_objectSpread$1V({}, props), {}, {
      className: createClass(getIconStyles$1V(props))
    }));
  }
});
AngleThinRightIcon.displayName = 'AngleThinRightIcon';
var AngleThinRightIcon$1 = AngleThinRightIcon;

function ownKeys$1U(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1U(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1U(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1U(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1U = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1U = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1U[size], "px"),
        height: "".concat(iconSizes$1U[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1U.big, "px"),
        height: "".concat(iconSizes$1U.big, "px")
      };
  }
};
const getSizeStyle$1U = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1U(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1U = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1U = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1U(props.color), ";}&,image{", getSizeStyle$1U(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgAngleUpDown = props => jsxRuntime.jsx("svg", _objectSpread$1U(_objectSpread$1U({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M8.234 7.942A.778.778 0 0 1 8 7.37c0-.225.078-.416.234-.572l3.564-3.564a.793.793 0 0 1 .26-.182.764.764 0 0 1 .56 0 .755.755 0 0 1 .272.182l3.564 3.564a.779.779 0 0 1 .234.572.779.779 0 0 1-.234.572.779.779 0 0 1-.572.234.779.779 0 0 1-.573-.234l-2.965-2.965-2.965 2.965a.778.778 0 0 1-.573.234.778.778 0 0 1-.572-.234ZM12.344 21a.754.754 0 0 1-.546-.234l-3.564-3.564A.778.778 0 0 1 8 16.63c0-.225.078-.416.234-.572a.778.778 0 0 1 .572-.234c.226 0 .417.078.573.234l2.965 2.965 2.965-2.965a.779.779 0 0 1 .573-.234c.225 0 .416.078.572.234a.779.779 0 0 1 .234.572.779.779 0 0 1-.234.572l-3.564 3.564a.793.793 0 0 1-.26.182.764.764 0 0 1-.286.052Z"
  })
}));
SvgAngleUpDown.displayName = 'SvgAngleUpDown';
const AngleUpDownIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgAngleUpDown, _objectSpread$1U(_objectSpread$1U({}, props), {}, {
      className: createClass(getIconStyles$1U(props))
    }));
  }
});
AngleUpDownIcon.displayName = 'AngleUpDownIcon';
var AngleUpDownIcon$1 = AngleUpDownIcon;

function ownKeys$1T(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1T(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1T(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1T(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1T = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1T = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1T[size], "px"),
        height: "".concat(iconSizes$1T[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1T.big, "px"),
        height: "".concat(iconSizes$1T.big, "px")
      };
  }
};
const getSizeStyle$1T = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1T(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1T = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1T = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1T(props.color), ";}&,image{", getSizeStyle$1T(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgAngleUp = props => jsxRuntime.jsx("svg", _objectSpread$1T(_objectSpread$1T({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M20.644 16.87a1.152 1.152 0 0 1-.842.355 1.15 1.15 0 0 1-.841-.356l-6.95-6.948-6.971 6.972a1.126 1.126 0 0 1-.83.332c-.333 0-.617-.119-.854-.356A1.152 1.152 0 0 1 3 16.027c0-.324.119-.604.356-.841l7.992-7.969a.838.838 0 0 1 .308-.202c.11-.04.23-.059.356-.059.126 0 .245.02.356.06.11.039.213.106.308.201l7.992 7.992c.221.222.332.494.332.818 0 .324-.119.605-.356.842Z"
  })
}));
SvgAngleUp.displayName = 'SvgAngleUp';
const AngleUpIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgAngleUp, _objectSpread$1T(_objectSpread$1T({}, props), {}, {
      className: createClass(getIconStyles$1T(props))
    }));
  }
});
AngleUpIcon.displayName = 'AngleUpIcon';
var AngleUpIcon$1 = AngleUpIcon;

function ownKeys$1S(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1S(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1S(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1S(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1S = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1S = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1S[size], "px"),
        height: "".concat(iconSizes$1S[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1S.big, "px"),
        height: "".concat(iconSizes$1S.big, "px")
      };
  }
};
const getSizeStyle$1S = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1S(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1S = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1S = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1S(props.color), ";}&,image{", getSizeStyle$1S(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgArrowDown = props => jsxRuntime.jsx("svg", _objectSpread$1S(_objectSpread$1S({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12.046 21c-.123 0-.238-.02-.345-.058a.802.802 0 0 1-.299-.195l-5.15-5.15A.858.858 0 0 1 6 14.966c0-.252.084-.47.253-.655a.895.895 0 0 1 .655-.276c.253 0 .471.092.655.276l3.563 3.564V3.92c0-.261.089-.48.265-.656A.889.889 0 0 1 12.046 3c.26 0 .48.088.656.264a.892.892 0 0 1 .264.656v13.954l3.586-3.564a.9.9 0 0 1 .631-.264.858.858 0 0 1 .656.264.872.872 0 0 1 .253.644c0 .26-.084.475-.253.644l-5.15 5.15a.801.801 0 0 1-.298.194 1.01 1.01 0 0 1-.345.058Z"
  })
}));
SvgArrowDown.displayName = 'SvgArrowDown';
const ArrowDownIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgArrowDown, _objectSpread$1S(_objectSpread$1S({}, props), {}, {
      className: createClass(getIconStyles$1S(props))
    }));
  }
});
ArrowDownIcon.displayName = 'ArrowDownIcon';
var ArrowDownIcon$1 = ArrowDownIcon;

function ownKeys$1R(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1R(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1R(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1R(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1R = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1R = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1R[size], "px"),
        height: "".concat(iconSizes$1R[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1R.big, "px"),
        height: "".concat(iconSizes$1R.big, "px")
      };
  }
};
const getSizeStyle$1R = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1R(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1R = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1R = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1R(props.color), ";}&,image{", getSizeStyle$1R(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgArrowLeft = props => jsxRuntime.jsx("svg", _objectSpread$1R(_objectSpread$1R({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fillRule: "evenodd",
    d: "M9.44 18.475V13.771h10.129c.79 0 1.431-.66 1.431-1.473 0-.814-.64-1.474-1.431-1.474H9.439V6L3 12.298l6.44 6.177Z"
  })
}));
SvgArrowLeft.displayName = 'SvgArrowLeft';
const ArrowLeftIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgArrowLeft, _objectSpread$1R(_objectSpread$1R({}, props), {}, {
      className: createClass(getIconStyles$1R(props))
    }));
  }
});
ArrowLeftIcon.displayName = 'ArrowLeftIcon';
var ArrowLeftIcon$1 = ArrowLeftIcon;

function ownKeys$1Q(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1Q(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1Q(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1Q(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1Q = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1Q = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1Q[size], "px"),
        height: "".concat(iconSizes$1Q[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1Q.big, "px"),
        height: "".concat(iconSizes$1Q.big, "px")
      };
  }
};
const getSizeStyle$1Q = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1Q(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1Q = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1Q = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1Q(props.color), ";}&,image{", getSizeStyle$1Q(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgArrowLongDown = props => jsxRuntime.jsx("svg", _objectSpread$1Q(_objectSpread$1Q({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M11.084 17.7V3.97c0-.275.093-.505.279-.69a.935.935 0 0 1 .69-.279c.274 0 .504.093.69.279a.937.937 0 0 1 .278.69V17.7l1.356-1.356a.863.863 0 0 1 .667-.254.985.985 0 0 1 .69.302.919.919 0 0 1 .266.679c0 .274-.089.5-.266.678l-3.003 2.979c-.097.096-.202.17-.315.217a.689.689 0 0 1-.364.049c-.129 0-.25-.02-.363-.06a.855.855 0 0 1-.315-.207l-3.003-3.003a.9.9 0 0 1-.278-.69.945.945 0 0 1 .278-.666.944.944 0 0 1 .691-.29c.266 0 .488.088.666.266l1.356 1.356Z"
  })
}));
SvgArrowLongDown.displayName = 'SvgArrowLongDown';
const ArrowLongDownIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgArrowLongDown, _objectSpread$1Q(_objectSpread$1Q({}, props), {}, {
      className: createClass(getIconStyles$1Q(props))
    }));
  }
});
ArrowLongDownIcon.displayName = 'ArrowLongDownIcon';
var ArrowLongDownIcon$1 = ArrowLongDownIcon;

function ownKeys$1P(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1P(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1P(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1P(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1P = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1P = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1P[size], "px"),
        height: "".concat(iconSizes$1P[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1P.big, "px"),
        height: "".concat(iconSizes$1P.big, "px")
      };
  }
};
const getSizeStyle$1P = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1P(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1P = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1P = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1P(props.color), ";}&,image{", getSizeStyle$1P(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgArrowRight = props => jsxRuntime.jsx("svg", _objectSpread$1P(_objectSpread$1P({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M14.31 17.84a.872.872 0 0 1-.253-.645c0-.26.085-.475.253-.643l3.587-3.586H3.92a.888.888 0 0 1-.655-.265.887.887 0 0 1-.265-.655c0-.26.088-.48.265-.656a.89.89 0 0 1 .655-.264h13.977L14.31 7.54a.872.872 0 0 1-.253-.643c0-.261.085-.476.253-.644A.872.872 0 0 1 14.954 6c.26 0 .475.084.644.253l5.15 5.15a.812.812 0 0 1 .195.298c.038.107.057.222.057.345 0 .123-.019.238-.057.345a.812.812 0 0 1-.196.299l-5.15 5.15a.872.872 0 0 1-.643.252.872.872 0 0 1-.644-.253Z"
  })
}));
SvgArrowRight.displayName = 'SvgArrowRight';
const ArrowRightIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgArrowRight, _objectSpread$1P(_objectSpread$1P({}, props), {}, {
      className: createClass(getIconStyles$1P(props))
    }));
  }
});
ArrowRightIcon.displayName = 'ArrowRightIcon';
var ArrowRightIcon$1 = ArrowRightIcon;

function ownKeys$1O(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1O(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1O(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1O(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1O = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1O = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1O[size], "px"),
        height: "".concat(iconSizes$1O[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1O.big, "px"),
        height: "".concat(iconSizes$1O.big, "px")
      };
  }
};
const getSizeStyle$1O = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1O(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1O = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1O = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1O(props.color), ";}&,image{", getSizeStyle$1O(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgArrowTriangleDown = props => jsxRuntime.jsx("svg", _objectSpread$1O(_objectSpread$1O({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fillRule: "evenodd",
    d: "M12 20 3 5h18"
  })
}));
SvgArrowTriangleDown.displayName = 'SvgArrowTriangleDown';
const ArrowTriangleDownIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgArrowTriangleDown, _objectSpread$1O(_objectSpread$1O({}, props), {}, {
      className: createClass(getIconStyles$1O(props))
    }));
  }
});
ArrowTriangleDownIcon.displayName = 'ArrowTriangleDownIcon';
var ArrowTriangleDownIcon$1 = ArrowTriangleDownIcon;

function ownKeys$1N(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1N(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1N(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1N(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1N = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1N = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1N[size], "px"),
        height: "".concat(iconSizes$1N[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1N.big, "px"),
        height: "".concat(iconSizes$1N.big, "px")
      };
  }
};
const getSizeStyle$1N = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1N(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1N = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1N = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1N(props.color), ";}&,image{", getSizeStyle$1N(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgArrowTriangleUp = props => jsxRuntime.jsx("svg", _objectSpread$1N(_objectSpread$1N({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fillRule: "evenodd",
    d: "m12 4 9 15H3"
  })
}));
SvgArrowTriangleUp.displayName = 'SvgArrowTriangleUp';
const ArrowTriangleUpIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgArrowTriangleUp, _objectSpread$1N(_objectSpread$1N({}, props), {}, {
      className: createClass(getIconStyles$1N(props))
    }));
  }
});
ArrowTriangleUpIcon.displayName = 'ArrowTriangleUpIcon';
var ArrowTriangleUpIcon$1 = ArrowTriangleUpIcon;

function ownKeys$1M(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1M(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1M(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1M(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1M = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1M = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1M[size], "px"),
        height: "".concat(iconSizes$1M[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1M.big, "px"),
        height: "".concat(iconSizes$1M.big, "px")
      };
  }
};
const getSizeStyle$1M = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1M(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1M = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1M = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1M(props.color), ";}&,image{", getSizeStyle$1M(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgArrowUp = props => jsxRuntime.jsx("svg", _objectSpread$1M(_objectSpread$1M({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12.046 21a.887.887 0 0 1-.655-.265.887.887 0 0 1-.265-.654V6.126L7.54 9.69a.9.9 0 0 1-.632.264.857.857 0 0 1-.655-.264A.872.872 0 0 1 6 9.046c0-.26.084-.475.253-.644l5.15-5.15a.813.813 0 0 1 .298-.195c.107-.038.222-.057.345-.057.123 0 .238.019.345.057a.812.812 0 0 1 .299.196l5.15 5.15c.168.168.252.378.252.631a.937.937 0 0 1-.253.656.896.896 0 0 1-.656.276.895.895 0 0 1-.654-.276l-3.563-3.564v13.955a.89.89 0 0 1-.264.654.89.89 0 0 1-.656.265Z"
  })
}));
SvgArrowUp.displayName = 'SvgArrowUp';
const ArrowUpIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgArrowUp, _objectSpread$1M(_objectSpread$1M({}, props), {}, {
      className: createClass(getIconStyles$1M(props))
    }));
  }
});
ArrowUpIcon.displayName = 'ArrowUpIcon';
var ArrowUpIcon$1 = ArrowUpIcon;

function ownKeys$1L(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1L(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1L(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1L(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1L = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1L = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1L[size], "px"),
        height: "".concat(iconSizes$1L[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1L.big, "px"),
        height: "".concat(iconSizes$1L.big, "px")
      };
  }
};
const getSizeStyle$1L = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1L(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1L = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1L = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1L(props.color), ";}&,image{", getSizeStyle$1L(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgArrows = props => jsxRuntime.jsx("svg", _objectSpread$1L(_objectSpread$1L({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12 10.12a.907.907 0 0 1-.67-.27.907.907 0 0 1-.27-.67V6.22l-1.034 1.033a.914.914 0 0 1-.67.282.915.915 0 0 1-.67-.282.915.915 0 0 1-.281-.67c0-.258.094-.481.282-.67l2.655-2.655a.83.83 0 0 1 .306-.2C11.758 3.02 11.875 3 12 3c.125 0 .243.02.352.058a.83.83 0 0 1 .306.2l2.679 2.68a.876.876 0 0 1 .27.669.96.96 0 0 1-.294.67.928.928 0 0 1-.681.282.928.928 0 0 1-.682-.282l-1.01-1.058V9.18c0 .266-.09.49-.27.67a.91.91 0 0 1-.67.27ZM12 21c-.125 0-.243-.02-.352-.06a.82.82 0 0 1-.306-.199l-2.679-2.678a.874.874 0 0 1-.27-.67.956.956 0 0 1 .294-.67.987.987 0 0 1 .693-.294.805.805 0 0 1 .67.294l1.01 1.058V14.82c0-.267.09-.49.27-.67.18-.18.404-.27.67-.27s.49.09.67.27c.18.18.27.403.27.67v2.96l1.034-1.057a.853.853 0 0 1 .658-.282c.266 0 .493.094.681.282a.929.929 0 0 1 .282.682.929.929 0 0 1-.282.681l-2.655 2.655a.82.82 0 0 1-.306.2c-.11.04-.227.059-.352.059Zm4.723-5.687a.987.987 0 0 1-.294-.693.805.805 0 0 1 .294-.67l1.058-1.01H14.82a.907.907 0 0 1-.67-.27.907.907 0 0 1-.27-.67c0-.266.09-.49.27-.67.18-.18.403-.27.67-.27h2.96l-1.057-1.034a.853.853 0 0 1-.282-.658c0-.266.094-.493.282-.681a.929.929 0 0 1 .682-.282c.266 0 .493.094.681.282l2.655 2.655a.83.83 0 0 1 .2.306c.04.11.059.227.059.352 0 .125-.02.243-.058.352a.83.83 0 0 1-.2.306l-2.68 2.679a.873.873 0 0 1-.669.27.957.957 0 0 1-.67-.294Zm-10.81 0-2.655-2.655a.82.82 0 0 1-.199-.306C3.02 12.242 3 12.125 3 12c0-.125.02-.243.06-.352a.82.82 0 0 1 .198-.306l2.68-2.679a.877.877 0 0 1 .646-.258c.258 0 .481.094.67.282a.89.89 0 0 1 .27.681.973.973 0 0 1-.294.682l-1.01 1.01h2.96c.266 0 .49.09.67.27.18.18.27.404.27.67s-.09.49-.27.67a.91.91 0 0 1-.67.27H6.22l1.057 1.034a.853.853 0 0 1 .282.658.928.928 0 0 1-.282.681.928.928 0 0 1-.682.282.928.928 0 0 1-.681-.282Z"
  })
}));
SvgArrows.displayName = 'SvgArrows';
const ArrowsIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgArrows, _objectSpread$1L(_objectSpread$1L({}, props), {}, {
      className: createClass(getIconStyles$1L(props))
    }));
  }
});
ArrowsIcon.displayName = 'ArrowsIcon';
var ArrowsIcon$1 = ArrowsIcon;

function ownKeys$1K(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1K(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1K(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1K(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1K = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1K = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1K[size], "px"),
        height: "".concat(iconSizes$1K[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1K.big, "px"),
        height: "".concat(iconSizes$1K.big, "px")
      };
  }
};
const getSizeStyle$1K = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1K(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1K = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1K = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1K(props.color), ";}&,image{", getSizeStyle$1K(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgBack = props => jsxRuntime.jsx("svg", _objectSpread$1K(_objectSpread$1K({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m8.402 17.84-5.15-5.15a.802.802 0 0 1-.194-.3A1.01 1.01 0 0 1 3 12.047c0-.123.02-.238.058-.345a.802.802 0 0 1 .195-.299l5.15-5.15A.858.858 0 0 1 9.034 6c.253 0 .47.084.655.253a.895.895 0 0 1 .276.655.896.896 0 0 1-.276.655l-3.564 3.563h13.955a.89.89 0 0 1 .654.264.89.89 0 0 1 .265.656c0 .26-.088.479-.265.655a.888.888 0 0 1-.654.264H6.126l3.564 3.587a.9.9 0 0 1 .264.631.858.858 0 0 1-.264.656.872.872 0 0 1-.644.253.872.872 0 0 1-.644-.253Z"
  })
}));
SvgBack.displayName = 'SvgBack';
const BackIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgBack, _objectSpread$1K(_objectSpread$1K({}, props), {}, {
      className: createClass(getIconStyles$1K(props))
    }));
  }
});
BackIcon.displayName = 'BackIcon';
var BackIcon$1 = BackIcon;

function ownKeys$1J(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1J(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1J(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1J(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1J = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1J = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1J[size], "px"),
        height: "".concat(iconSizes$1J[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1J.big, "px"),
        height: "".concat(iconSizes$1J.big, "px")
      };
  }
};
const getSizeStyle$1J = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1J(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1J = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1J = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1J(props.color), ";}&,image{", getSizeStyle$1J(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgBidirectionalArrow = props => jsxRuntime.jsx("svg", _objectSpread$1J(_objectSpread$1J({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m14.97 13.01-3.24-3.24a.784.784 0 0 1-.19-.293.989.989 0 0 1-.057-.337c0-.12.018-.232.056-.338a.784.784 0 0 1 .191-.292l3.24-3.24c.18-.18.39-.27.63-.27s.45.09.63.27c.18.18.27.394.27.64 0 .249-.09.462-.27.643L14.542 8.24H20.1a.87.87 0 0 1 .64.258c.174.173.26.387.26.642a.869.869 0 0 1-.26.64.869.869 0 0 1-.64.26h-5.558l1.688 1.688c.18.18.27.39.27.63s-.09.45-.27.63a.941.941 0 0 1-.618.292c-.233.015-.447-.075-.642-.27Zm-7.2 5.377c.18.18.39.274.63.281.24.008.45-.078.63-.258l3.24-3.24a.795.795 0 0 0 .192-.293c.037-.104.056-.217.056-.337 0-.12-.02-.232-.056-.337a.795.795 0 0 0-.192-.293l-3.24-3.24a.863.863 0 0 0-.63-.27c-.24 0-.45.09-.63.27a.876.876 0 0 0-.27.64c0 .249.09.463.27.643l1.688 1.687H3.9a.87.87 0 0 0-.64.258.872.872 0 0 0-.26.642c0 .255.086.469.26.64.171.174.385.26.64.26h5.557L7.77 17.128c-.18.18-.27.39-.27.63s.09.45.27.63Z"
  })
}));
SvgBidirectionalArrow.displayName = 'SvgBidirectionalArrow';
const BidirectionalArrowIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgBidirectionalArrow, _objectSpread$1J(_objectSpread$1J({}, props), {}, {
      className: createClass(getIconStyles$1J(props))
    }));
  }
});
BidirectionalArrowIcon.displayName = 'BidirectionalArrowIcon';
var BidirectionalArrowIcon$1 = BidirectionalArrowIcon;

function ownKeys$1I(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1I(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1I(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1I(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1I = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1I = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1I[size], "px"),
        height: "".concat(iconSizes$1I[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1I.big, "px"),
        height: "".concat(iconSizes$1I.big, "px")
      };
  }
};
const getSizeStyle$1I = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1I(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1I = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1I = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1I(props.color), ";}&,image{", getSizeStyle$1I(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgBinFilled = props => jsxRuntime.jsx("svg", _objectSpread$1I(_objectSpread$1I({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M7 21c-.55 0-1.02-.196-1.412-.587A1.927 1.927 0 0 1 5 19V6a.97.97 0 0 1-.713-.287A.97.97 0 0 1 4 5a.97.97 0 0 1 .287-.713A.97.97 0 0 1 5 4h4c0-.283.096-.521.288-.713A.967.967 0 0 1 10 3h4a.97.97 0 0 1 .713.287A.97.97 0 0 1 15 4h4c.283 0 .52.096.712.287.192.192.288.43.288.713a.968.968 0 0 1-.288.713A.967.967 0 0 1 19 6v13c0 .55-.196 1.021-.587 1.413A1.928 1.928 0 0 1 17 21H7Zm2-5c0 .283.096.52.288.712A.965.965 0 0 0 10 17a.968.968 0 0 0 .713-.288A.967.967 0 0 0 11 16V9a.97.97 0 0 0-.287-.713A.97.97 0 0 0 10 8a.967.967 0 0 0-.712.287A.968.968 0 0 0 9 9v7Zm4 0c0 .283.096.52.288.712A.965.965 0 0 0 14 17a.968.968 0 0 0 .713-.288A.967.967 0 0 0 15 16V9a.97.97 0 0 0-.287-.713A.97.97 0 0 0 14 8a.967.967 0 0 0-.712.287A.968.968 0 0 0 13 9v7Z"
  })
}));
SvgBinFilled.displayName = 'SvgBinFilled';
const BinFilledIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgBinFilled, _objectSpread$1I(_objectSpread$1I({}, props), {}, {
      className: createClass(getIconStyles$1I(props))
    }));
  }
});
BinFilledIcon.displayName = 'BinFilledIcon';
var BinFilledIcon$1 = BinFilledIcon;

function ownKeys$1H(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1H(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1H(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1H(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1H = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1H = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1H[size], "px"),
        height: "".concat(iconSizes$1H[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1H.big, "px"),
        height: "".concat(iconSizes$1H.big, "px")
      };
  }
};
const getSizeStyle$1H = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1H(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1H = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1H = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1H(props.color), ";}&,image{", getSizeStyle$1H(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgBinLinear = props => jsxRuntime.jsx("svg", _objectSpread$1H(_objectSpread$1H({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M7 21c-.55 0-1.02-.196-1.412-.587A1.927 1.927 0 0 1 5 19V6a.97.97 0 0 1-.713-.287A.97.97 0 0 1 4 5a.97.97 0 0 1 .287-.713A.97.97 0 0 1 5 4h4c0-.283.096-.521.288-.713A.967.967 0 0 1 10 3h4a.97.97 0 0 1 .713.287A.97.97 0 0 1 15 4h4c.283 0 .52.096.712.287.192.192.288.43.288.713a.968.968 0 0 1-.288.713A.967.967 0 0 1 19 6v13c0 .55-.196 1.021-.587 1.413A1.928 1.928 0 0 1 17 21H7ZM7 6v13h10V6H7Zm2 10c0 .283.096.52.288.712A.965.965 0 0 0 10 17a.968.968 0 0 0 .713-.288A.967.967 0 0 0 11 16V9a.97.97 0 0 0-.287-.713A.97.97 0 0 0 10 8a.967.967 0 0 0-.712.287A.968.968 0 0 0 9 9v7Zm4 0c0 .283.096.52.288.712A.965.965 0 0 0 14 17a.968.968 0 0 0 .713-.288A.967.967 0 0 0 15 16V9a.97.97 0 0 0-.287-.713A.97.97 0 0 0 14 8a.967.967 0 0 0-.712.287A.968.968 0 0 0 13 9v7ZM7 6v13V6Z"
  })
}));
SvgBinLinear.displayName = 'SvgBinLinear';
const BinLinearIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgBinLinear, _objectSpread$1H(_objectSpread$1H({}, props), {}, {
      className: createClass(getIconStyles$1H(props))
    }));
  }
});
BinLinearIcon.displayName = 'BinLinearIcon';
var BinLinearIcon$1 = BinLinearIcon;

function ownKeys$1G(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1G(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1G(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1G(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1G = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1G = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1G[size], "px"),
        height: "".concat(iconSizes$1G[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1G.big, "px"),
        height: "".concat(iconSizes$1G.big, "px")
      };
  }
};
const getSizeStyle$1G = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1G(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1G = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1G = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1G(props.color), ";}&,image{", getSizeStyle$1G(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgBox = props => jsxRuntime.jsx("svg", _objectSpread$1G(_objectSpread$1G({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M11.037 20.774 4.82 17.129a1.543 1.543 0 0 1-.608-.622A1.768 1.768 0 0 1 4 15.66V8.397c0-.301.07-.584.212-.848.141-.263.344-.47.608-.621l6.245-3.702c.264-.15.556-.226.876-.226.32 0 .612.075.876.226l6.246 3.702c.264.15.466.358.607.621.142.264.212.547.212.848v7.262c0 .302-.075.584-.226.848-.15.264-.358.471-.621.622l-6.303 3.645c-.263.15-.546.226-.847.226-.302 0-.584-.075-.848-.226Zm.056-1.95v-6.33l-5.37-3.08v6.189l5.37 3.221Zm1.696 0 5.398-3.221V9.414l-5.398 3.08v6.33Zm-.848-7.855 5.37-3.109-5.37-3.08-5.37 3.08 5.37 3.109Z"
  })
}));
SvgBox.displayName = 'SvgBox';
const BoxIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgBox, _objectSpread$1G(_objectSpread$1G({}, props), {}, {
      className: createClass(getIconStyles$1G(props))
    }));
  }
});
BoxIcon.displayName = 'BoxIcon';
var BoxIcon$1 = BoxIcon;

function ownKeys$1F(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1F(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1F(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1F(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1F = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1F = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1F[size], "px"),
        height: "".concat(iconSizes$1F[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1F.big, "px"),
        height: "".concat(iconSizes$1F.big, "px")
      };
  }
};
const getSizeStyle$1F = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1F(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1F = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1F = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1F(props.color), ";}&,image{", getSizeStyle$1F(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgBrain = props => jsxRuntime.jsx("svg", _objectSpread$1F(_objectSpread$1F({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fillRule: "evenodd",
    d: "M14.298 3 12.15 4.074 10.003 3 5.1 5.675v2.322L3 9.332v5.786L5.1 16.263v2.099l4.904 2.675 2.147-1.075 2.148 1.075 4.904-2.675v-2.323l2.099-1.335V8.918l-2.1-1.144v-2.1L14.299 3Zm-1.202 15.823V5.213l1.172-.586L17.76 6.53V8.63l2.099 1.145v4.137l-2.099 1.336v2.257l-3.492 1.905-1.172-.587ZM9.315 8.013l-.546.545v7.274l.3.3c.12-.088.26-.151.422-.151a.721.721 0 1 1 0 1.442c-.333 0-.6-.23-.684-.534l-.759-.759v-3.394H6.495a.71.71 0 0 1-.61.36.72.72 0 1 1 0-1.442.71.71 0 0 1 .61.36h1.553V8.26l.757-.756c-.015-.058-.036-.114-.036-.176a.72.72 0 1 1 .722.721c-.063 0-.119-.02-.176-.035ZM6.54 17.505v-2.098l-2.1-1.145v-4.138l2.1-1.335V6.531l3.491-1.904 1.174.587v13.61l-1.174.586-3.49-1.905Zm10.993-6.212a.71.71 0 0 1 .61-.36.721.721 0 1 1 0 1.442.71.71 0 0 1-.61-.36H15.98v3.754l-.757.757c.015.058.036.114.036.176a.721.721 0 1 1-.721-.721c.062 0 .117.02.175.035l.546-.545V8.197l-.3-.3a.707.707 0 0 1-.421.151.72.72 0 1 1 0-1.442c.331 0 .599.228.683.533l.759.76v3.394h1.553Z"
  })
}));
SvgBrain.displayName = 'SvgBrain';
const BrainIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgBrain, _objectSpread$1F(_objectSpread$1F({}, props), {}, {
      className: createClass(getIconStyles$1F(props))
    }));
  }
});
BrainIcon.displayName = 'BrainIcon';
var BrainIcon$1 = BrainIcon;

function ownKeys$1E(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1E(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1E(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1E(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1E = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1E = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1E[size], "px"),
        height: "".concat(iconSizes$1E[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1E.big, "px"),
        height: "".concat(iconSizes$1E.big, "px")
      };
  }
};
const getSizeStyle$1E = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1E(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1E = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1E = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1E(props.color), ";}&,image{", getSizeStyle$1E(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCalendar = props => jsxRuntime.jsx("svg", _objectSpread$1E(_objectSpread$1E({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12.1 13.8a.869.869 0 0 1-.64-.26.869.869 0 0 1-.26-.64c0-.255.086-.469.26-.642A.87.87 0 0 1 12.1 12c.255 0 .469.086.642.258A.873.873 0 0 1 13 12.9a.87.87 0 0 1-.258.64.872.872 0 0 1-.642.26Zm-3.6 0a.872.872 0 0 1-.642-.26.87.87 0 0 1-.258-.64c0-.255.086-.469.258-.642A.873.873 0 0 1 8.5 12c.255 0 .469.086.642.258a.873.873 0 0 1 .258.642.87.87 0 0 1-.258.64.872.872 0 0 1-.642.26Zm7.2 0a.869.869 0 0 1-.64-.26.869.869 0 0 1-.26-.64c0-.255.086-.469.26-.642A.87.87 0 0 1 15.7 12a.87.87 0 0 1 .64.258c.174.173.26.387.26.642a.869.869 0 0 1-.26.64.869.869 0 0 1-.64.26Zm-3.6 3.6a.869.869 0 0 1-.64-.26.869.869 0 0 1-.26-.64c0-.255.086-.469.26-.64a.869.869 0 0 1 .64-.26c.255 0 .469.086.642.26a.87.87 0 0 1 .258.64.87.87 0 0 1-.258.64.872.872 0 0 1-.642.26Zm-3.6 0a.872.872 0 0 1-.642-.26.87.87 0 0 1-.258-.64.87.87 0 0 1 .258-.64.872.872 0 0 1 .642-.26c.255 0 .469.086.642.26a.87.87 0 0 1 .258.64.87.87 0 0 1-.258.64.872.872 0 0 1-.642.26Zm7.2 0a.869.869 0 0 1-.64-.26.869.869 0 0 1-.26-.64c0-.255.086-.469.26-.64a.869.869 0 0 1 .64-.26c.255 0 .469.086.64.26.174.171.26.385.26.64a.869.869 0 0 1-.26.64.869.869 0 0 1-.64.26ZM5.8 21c-.495 0-.919-.176-1.272-.528A1.736 1.736 0 0 1 4 19.2V6.6c0-.495.176-.919.528-1.27.353-.354.777-.53 1.272-.53h.9v-.9c0-.255.086-.469.258-.642A.873.873 0 0 1 7.6 3c.255 0 .469.086.642.258A.873.873 0 0 1 8.5 3.9v.9h7.2v-.9c0-.255.086-.469.26-.642A.87.87 0 0 1 16.6 3a.87.87 0 0 1 .64.258c.174.173.26.387.26.642v.9h.9c.495 0 .919.176 1.272.53.352.351.528.775.528 1.27v12.6c0 .495-.176.919-.528 1.272A1.736 1.736 0 0 1 18.4 21H5.8Zm0-1.8h12.6v-9H5.8v9Zm0-10.8h12.6V6.6H5.8v1.8Zm0 0V6.6v1.8Z"
  })
}));
SvgCalendar.displayName = 'SvgCalendar';
const CalendarIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCalendar, _objectSpread$1E(_objectSpread$1E({}, props), {}, {
      className: createClass(getIconStyles$1E(props))
    }));
  }
});
CalendarIcon.displayName = 'CalendarIcon';
var CalendarIcon$1 = CalendarIcon;

function ownKeys$1D(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1D(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1D(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1D(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1D = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1D = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1D[size], "px"),
        height: "".concat(iconSizes$1D[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1D.big, "px"),
        height: "".concat(iconSizes$1D.big, "px")
      };
  }
};
const getSizeStyle$1D = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1D(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1D = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1D = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1D(props.color), ";}&,image{", getSizeStyle$1D(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCamera = props => jsxRuntime.jsx("svg", _objectSpread$1D(_objectSpread$1D({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12 16.915c1.08 0 1.988-.367 2.723-1.102.734-.736 1.102-1.65 1.102-2.745 0-1.08-.367-1.984-1.102-2.712C13.986 9.63 13.08 9.265 12 9.265c-1.095 0-2.006.364-2.734 1.091-.727.728-1.091 1.632-1.091 2.712 0 1.095.364 2.01 1.091 2.745.728.734 1.639 1.102 2.734 1.102ZM4.35 20.2c-.36 0-.675-.135-.945-.405A1.295 1.295 0 0 1 3 18.85V7.307c0-.345.135-.656.405-.933.27-.278.585-.417.945-.417h3.308l1.237-1.484c.12-.165.27-.285.45-.36.18-.076.375-.113.585-.113h4.14c.21 0 .405.037.585.112.18.075.33.196.45.36l1.238 1.485h3.307c.345 0 .656.14.934.417.277.277.416.589.416.934V18.85c0 .36-.139.675-.416.945-.278.27-.589.405-.934.405H4.35Zm15.3-1.35V7.307H4.35V18.85h15.3Z"
  })
}));
SvgCamera.displayName = 'SvgCamera';
const CameraIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCamera, _objectSpread$1D(_objectSpread$1D({}, props), {}, {
      className: createClass(getIconStyles$1D(props))
    }));
  }
});
CameraIcon.displayName = 'CameraIcon';
var CameraIcon$1 = CameraIcon;

function ownKeys$1C(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1C(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1C(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1C(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1C = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1C = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1C[size], "px"),
        height: "".concat(iconSizes$1C[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1C.big, "px"),
        height: "".concat(iconSizes$1C.big, "px")
      };
  }
};
const getSizeStyle$1C = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1C(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1C = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1C = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1C(props.color), ";}&,image{", getSizeStyle$1C(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCaretDown = props => jsxRuntime.jsx("svg", _objectSpread$1C(_objectSpread$1C({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fillRule: "evenodd",
    d: "M20.666 7.405a1.052 1.052 0 0 0-.791-.353H4.125c-.305 0-.568.117-.791.353A1.18 1.18 0 0 0 3 8.243c0 .323.111.602.334.838l7.875 8.34c.223.236.486.354.791.354.305 0 .568-.118.791-.354l7.875-8.34A1.18 1.18 0 0 0 21 8.243c0-.322-.112-.602-.334-.838Z"
  })
}));
SvgCaretDown.displayName = 'SvgCaretDown';
const CaretDownIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCaretDown, _objectSpread$1C(_objectSpread$1C({}, props), {}, {
      className: createClass(getIconStyles$1C(props))
    }));
  }
});
CaretDownIcon.displayName = 'CaretDownIcon';
var CaretDownIcon$1 = CaretDownIcon;

function ownKeys$1B(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1B(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1B(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1B(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1B = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1B = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1B[size], "px"),
        height: "".concat(iconSizes$1B[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1B.big, "px"),
        height: "".concat(iconSizes$1B.big, "px")
      };
  }
};
const getSizeStyle$1B = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1B(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1B = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1B = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1B(props.color), ";}&,image{", getSizeStyle$1B(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCaretUp = props => jsxRuntime.jsx("svg", _objectSpread$1B(_objectSpread$1B({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fillRule: "evenodd",
    d: "M3.334 17.37c.223.235.486.353.791.353h15.75c.305 0 .568-.118.791-.354a1.18 1.18 0 0 0 .334-.838 1.18 1.18 0 0 0-.334-.837l-7.875-8.34A1.053 1.053 0 0 0 12 7c-.305 0-.568.118-.791.354l-7.875 8.34A1.18 1.18 0 0 0 3 16.53c0 .323.112.602.334.838Z"
  })
}));
SvgCaretUp.displayName = 'SvgCaretUp';
const CaretUpIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCaretUp, _objectSpread$1B(_objectSpread$1B({}, props), {}, {
      className: createClass(getIconStyles$1B(props))
    }));
  }
});
CaretUpIcon.displayName = 'CaretUpIcon';
var CaretUpIcon$1 = CaretUpIcon;

function ownKeys$1A(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1A(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1A(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1A(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1A = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1A = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1A[size], "px"),
        height: "".concat(iconSizes$1A[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1A.big, "px"),
        height: "".concat(iconSizes$1A.big, "px")
      };
  }
};
const getSizeStyle$1A = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1A(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1A = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1A = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1A(props.color), ";}&,image{", getSizeStyle$1A(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCart = props => jsxRuntime.jsx("svg", _objectSpread$1A(_objectSpread$1A({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M8.436 21c-.49 0-.91-.174-1.259-.523a1.717 1.717 0 0 1-.524-1.26c0-.49.175-.909.524-1.257.35-.35.769-.524 1.259-.524.49 0 .91.174 1.258.524.35.348.524.768.524 1.258s-.175.91-.524 1.259A1.715 1.715 0 0 1 8.436 21Zm8.91 0c-.49 0-.909-.174-1.258-.523a1.717 1.717 0 0 1-.524-1.26c0-.49.175-.909.524-1.257.349-.35.768-.524 1.258-.524s.91.174 1.26.524c.348.348.523.768.523 1.258s-.175.91-.523 1.259c-.35.349-.77.523-1.26.523ZM7.812 6.743l2.005 4.21h6.238l2.294-4.21H7.812Zm.624 9.802c-.713 0-1.248-.309-1.604-.925-.357-.616-.364-1.229-.023-1.838l1.181-2.138L4.827 4.96h-.87a.922.922 0 0 1-.678-.279.95.95 0 0 1-.279-.7A.952.952 0 0 1 3.98 3h1.426c.178 0 .353.052.524.156.17.104.3.252.39.445l.556 1.181H19.82c.505 0 .84.171 1.003.513.163.341.148.712-.045 1.113l-3.052 5.503a1.798 1.798 0 0 1-.668.723 1.812 1.812 0 0 1-.958.257H9.505l-.936 1.693h9.69c.268 0 .495.093.68.28a.95.95 0 0 1 .279.7.954.954 0 0 1-.278.703.953.953 0 0 1-.702.278H8.436Zm1.38-5.592h6.239-6.238Z"
  })
}));
SvgCart.displayName = 'SvgCart';
const CartIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCart, _objectSpread$1A(_objectSpread$1A({}, props), {}, {
      className: createClass(getIconStyles$1A(props))
    }));
  }
});
CartIcon.displayName = 'CartIcon';
var CartIcon$1 = CartIcon;

function ownKeys$1z(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1z(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1z(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1z(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1z = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1z = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1z[size], "px"),
        height: "".concat(iconSizes$1z[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1z.big, "px"),
        height: "".concat(iconSizes$1z.big, "px")
      };
  }
};
const getSizeStyle$1z = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1z(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1z = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1z = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1z(props.color), ";}&,image{", getSizeStyle$1z(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgChainBroken = props => jsxRuntime.jsx("svg", _objectSpread$1z(_objectSpread$1z({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m15.49 11.721-1.784-1.784h1.785c.252 0 .465.085.636.256.17.171.256.383.256.636a.863.863 0 0 1-.256.635.864.864 0 0 1-.636.257Zm3.057 3.078-1.339-1.383c.58-.163 1.06-.48 1.44-.948a2.528 2.528 0 0 0 .568-1.639c0-.744-.26-1.375-.781-1.896a2.581 2.581 0 0 0-1.896-.78h-2.677a.861.861 0 0 1-.635-.258.861.861 0 0 1-.257-.635c0-.253.086-.465.257-.636a.863.863 0 0 1 .636-.256h2.676c1.234 0 2.286.428 3.157 1.283.87.855 1.304 1.914 1.304 3.178 0 .848-.223 1.632-.67 2.353a4.203 4.203 0 0 1-1.783 1.617Zm-.134 4.863L3.245 4.494A.846.846 0 0 1 3 3.87c0-.253.082-.461.245-.625A.846.846 0 0 1 3.87 3c.253 0 .46.082.624.245l15.168 15.168a.846.846 0 0 1 .245.624c0 .253-.082.461-.245.625a.846.846 0 0 1-.625.245.846.846 0 0 1-.624-.245Zm-8.12-4.372H7.618c-1.234 0-2.286-.435-3.156-1.305-.87-.87-1.305-1.922-1.305-3.156 0-1.04.316-1.96.948-2.755a4.423 4.423 0 0 1 2.398-1.572l1.65 1.65h-.535c-.743 0-1.375.26-1.896.781-.52.52-.78 1.152-.78 1.896 0 .743.26 1.375.78 1.896.52.52 1.153.78 1.896.78h2.677c.252 0 .464.086.636.257.17.17.256.383.256.636a.863.863 0 0 1-.256.635.864.864 0 0 1-.636.257Zm1.428-3.569H8.665a.861.861 0 0 1-.635-.257.86.86 0 0 1-.257-.635c0-.253.086-.465.257-.636a.863.863 0 0 1 .635-.256H9.96l1.762 1.784Z"
  })
}));
SvgChainBroken.displayName = 'SvgChainBroken';
const ChainBrokenIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgChainBroken, _objectSpread$1z(_objectSpread$1z({}, props), {}, {
      className: createClass(getIconStyles$1z(props))
    }));
  }
});
ChainBrokenIcon.displayName = 'ChainBrokenIcon';
var ChainBrokenIcon$1 = ChainBrokenIcon;

function ownKeys$1y(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1y(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1y(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1y(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1y = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1y = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1y[size], "px"),
        height: "".concat(iconSizes$1y[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1y.big, "px"),
        height: "".concat(iconSizes$1y.big, "px")
      };
  }
};
const getSizeStyle$1y = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1y(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1y = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1y = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1y(props.color), ";}&,image{", getSizeStyle$1y(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgChain = props => jsxRuntime.jsx("svg", _objectSpread$1y(_objectSpread$1y({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M7.5 17c-1.245 0-2.306-.439-3.183-1.317C3.439 14.806 3 13.745 3 12.5c0-1.245.439-2.306 1.317-3.184C5.194 8.439 6.255 8 7.5 8h2.7c.255 0 .469.086.642.258a.873.873 0 0 1 .258.642.87.87 0 0 1-.258.64.872.872 0 0 1-.642.26H7.5c-.75 0-1.388.262-1.912.787A2.604 2.604 0 0 0 4.8 12.5c0 .75.263 1.387.788 1.912A2.604 2.604 0 0 0 7.5 15.2h2.7c.255 0 .469.086.642.258a.873.873 0 0 1 .258.642.87.87 0 0 1-.258.64.872.872 0 0 1-.642.26H7.5Zm1.8-3.6a.869.869 0 0 1-.64-.26.869.869 0 0 1-.26-.64c0-.255.086-.469.26-.642a.87.87 0 0 1 .64-.258h5.4c.255 0 .469.086.642.258a.873.873 0 0 1 .258.642.87.87 0 0 1-.258.64.872.872 0 0 1-.642.26H9.3Zm4.5 3.6a.869.869 0 0 1-.64-.26.869.869 0 0 1-.26-.64c0-.255.086-.469.26-.642a.87.87 0 0 1 .64-.258h2.7c.75 0 1.387-.262 1.913-.787A2.604 2.604 0 0 0 19.2 12.5c0-.75-.262-1.387-.787-1.912A2.604 2.604 0 0 0 16.5 9.8h-2.7a.869.869 0 0 1-.64-.26.869.869 0 0 1-.26-.64c0-.255.086-.469.26-.642A.87.87 0 0 1 13.8 8h2.7c1.245 0 2.306.439 3.184 1.316.877.878 1.316 1.939 1.316 3.184s-.439 2.306-1.316 3.183C18.806 16.561 17.745 17 16.5 17h-2.7Z"
  })
}));
SvgChain.displayName = 'SvgChain';
const ChainIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgChain, _objectSpread$1y(_objectSpread$1y({}, props), {}, {
      className: createClass(getIconStyles$1y(props))
    }));
  }
});
ChainIcon.displayName = 'ChainIcon';
var ChainIcon$1 = ChainIcon;

function ownKeys$1x(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1x(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1x(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1x(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1x = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1x = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1x[size], "px"),
        height: "".concat(iconSizes$1x[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1x.big, "px"),
        height: "".concat(iconSizes$1x.big, "px")
      };
  }
};
const getSizeStyle$1x = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1x(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1x = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1x = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1x(props.color), ";}&,image{", getSizeStyle$1x(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCheckActive = props => jsxRuntime.jsx("svg", _objectSpread$1x(_objectSpread$1x({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m10.74 13.62-1.957-1.957a.826.826 0 0 0-.608-.248c-.24 0-.45.09-.63.27a.853.853 0 0 0-.247.63c0 .255.082.465.247.63l2.565 2.565a.853.853 0 0 0 .63.248.853.853 0 0 0 .63-.248l5.107-5.107a.826.826 0 0 0 .248-.608c0-.24-.09-.45-.27-.63a.853.853 0 0 0-.63-.247.853.853 0 0 0-.63.247L10.74 13.62ZM12 21a8.759 8.759 0 0 1-3.51-.71 9.082 9.082 0 0 1-2.857-1.922 9.082 9.082 0 0 1-1.924-2.858A8.759 8.759 0 0 1 3 12c0-1.245.236-2.415.71-3.51a9.082 9.082 0 0 1 1.923-2.857A9.095 9.095 0 0 1 8.49 3.708 8.769 8.769 0 0 1 12 3c1.245 0 2.415.236 3.51.708a9.095 9.095 0 0 1 2.857 1.925 9.082 9.082 0 0 1 1.924 2.857A8.759 8.759 0 0 1 21 12a8.759 8.759 0 0 1-.71 3.51 9.082 9.082 0 0 1-1.922 2.857 9.082 9.082 0 0 1-2.858 1.924A8.759 8.759 0 0 1 12 21Z"
  })
}));
SvgCheckActive.displayName = 'SvgCheckActive';
const CheckActiveIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCheckActive, _objectSpread$1x(_objectSpread$1x({}, props), {}, {
      className: createClass(getIconStyles$1x(props))
    }));
  }
});
CheckActiveIcon.displayName = 'CheckActiveIcon';
var CheckActiveIcon$1 = CheckActiveIcon;

function ownKeys$1w(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1w(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1w(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1w(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1w = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1w = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1w[size], "px"),
        height: "".concat(iconSizes$1w[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1w.big, "px"),
        height: "".concat(iconSizes$1w.big, "px")
      };
  }
};
const getSizeStyle$1w = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1w(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1w = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1w = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1w(props.color), ";}&,image{", getSizeStyle$1w(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCheckBold = props => jsxRuntime.jsx("svg", _objectSpread$1w(_objectSpread$1w({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M9.167 18.155c-.148 0-.288-.028-.418-.084a1.16 1.16 0 0 1-.363-.251l-5.051-5.051a1.102 1.102 0 0 1-.335-.81c0-.316.112-.586.335-.809.223-.223.488-.335.795-.335.307 0 .572.112.796.335l4.241 4.242 9.935-9.907a.998.998 0 0 1 .768-.335c.307 0 .572.112.795.335.223.223.335.493.335.81 0 .315-.112.576-.335.78L9.95 17.82a1.16 1.16 0 0 1-.363.251c-.13.056-.27.084-.419.084Z"
  })
}));
SvgCheckBold.displayName = 'SvgCheckBold';
const CheckBoldIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCheckBold, _objectSpread$1w(_objectSpread$1w({}, props), {}, {
      className: createClass(getIconStyles$1w(props))
    }));
  }
});
CheckBoldIcon.displayName = 'CheckBoldIcon';
var CheckBoldIcon$1 = CheckBoldIcon;

function ownKeys$1v(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1v(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1v(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1v(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1v = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1v = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1v[size], "px"),
        height: "".concat(iconSizes$1v[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1v.big, "px"),
        height: "".concat(iconSizes$1v.big, "px")
      };
  }
};
const getSizeStyle$1v = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1v(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1v = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1v = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1v(props.color), ";}&,image{", getSizeStyle$1v(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCheckInactive = props => jsxRuntime.jsx("svg", _objectSpread$1v(_objectSpread$1v({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M8.4 12.9h7.223a.833.833 0 0 0 .63-.26.89.89 0 0 0 .247-.64.872.872 0 0 0-.26-.642.87.87 0 0 0-.64-.258H8.377a.835.835 0 0 0-.63.258A.893.893 0 0 0 7.5 12a.87.87 0 0 0 .258.64c.173.174.387.26.642.26ZM12 21a8.759 8.759 0 0 1-3.51-.71 9.082 9.082 0 0 1-2.857-1.922 9.082 9.082 0 0 1-1.924-2.858A8.759 8.759 0 0 1 3 12c0-1.245.236-2.415.71-3.51a9.082 9.082 0 0 1 1.923-2.857A9.095 9.095 0 0 1 8.49 3.708 8.769 8.769 0 0 1 12 3c1.245 0 2.415.236 3.51.708a9.095 9.095 0 0 1 2.857 1.925 9.082 9.082 0 0 1 1.924 2.857A8.759 8.759 0 0 1 21 12a8.759 8.759 0 0 1-.71 3.51 9.082 9.082 0 0 1-1.922 2.857 9.082 9.082 0 0 1-2.858 1.924A8.759 8.759 0 0 1 12 21Z"
  })
}));
SvgCheckInactive.displayName = 'SvgCheckInactive';
const CheckInactiveIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCheckInactive, _objectSpread$1v(_objectSpread$1v({}, props), {}, {
      className: createClass(getIconStyles$1v(props))
    }));
  }
});
CheckInactiveIcon.displayName = 'CheckInactiveIcon';
var CheckInactiveIcon$1 = CheckInactiveIcon;

function ownKeys$1u(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1u(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1u(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1u(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1u = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1u = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1u[size], "px"),
        height: "".concat(iconSizes$1u[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1u.big, "px"),
        height: "".concat(iconSizes$1u.big, "px")
      };
  }
};
const getSizeStyle$1u = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1u(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1u = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1u = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1u(props.color), ";}&,image{", getSizeStyle$1u(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCheckThin = props => jsxRuntime.jsx("svg", _objectSpread$1u(_objectSpread$1u({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M9.167 18.155c-.148 0-.288-.028-.418-.084a1.16 1.16 0 0 1-.363-.251l-5.051-5.051a1.102 1.102 0 0 1-.335-.81c0-.316.112-.586.335-.809.223-.223.488-.335.795-.335.307 0 .572.112.796.335l4.241 4.242 9.935-9.907a.998.998 0 0 1 .768-.335c.307 0 .572.112.795.335.223.223.335.493.335.81 0 .315-.112.576-.335.78L9.95 17.82a1.16 1.16 0 0 1-.363.251c-.13.056-.27.084-.419.084Z"
  })
}));
SvgCheckThin.displayName = 'SvgCheckThin';
const CheckThinIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCheckThin, _objectSpread$1u(_objectSpread$1u({}, props), {}, {
      className: createClass(getIconStyles$1u(props))
    }));
  }
});
CheckThinIcon.displayName = 'CheckThinIcon';
var CheckThinIcon$1 = CheckThinIcon;

function ownKeys$1t(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1t(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1t(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1t(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1t = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1t = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1t[size], "px"),
        height: "".concat(iconSizes$1t[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1t.big, "px"),
        height: "".concat(iconSizes$1t.big, "px")
      };
  }
};
const getSizeStyle$1t = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1t(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1t = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1t = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1t(props.color), ";}&,image{", getSizeStyle$1t(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCircle = props => jsxRuntime.jsx("svg", _objectSpread$1t(_objectSpread$1t({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12 21a8.759 8.759 0 0 1-3.51-.71 9.082 9.082 0 0 1-2.857-1.922 9.082 9.082 0 0 1-1.924-2.858A8.759 8.759 0 0 1 3 12c0-1.245.236-2.415.71-3.51a9.082 9.082 0 0 1 1.923-2.857A9.095 9.095 0 0 1 8.49 3.708 8.769 8.769 0 0 1 12 3c1.245 0 2.415.236 3.51.708a9.095 9.095 0 0 1 2.857 1.925 9.082 9.082 0 0 1 1.924 2.857A8.759 8.759 0 0 1 21 12a8.759 8.759 0 0 1-.71 3.51 9.082 9.082 0 0 1-1.922 2.857 9.082 9.082 0 0 1-2.858 1.924A8.759 8.759 0 0 1 12 21Zm0-1.8c2.01 0 3.713-.697 5.108-2.092C18.503 15.712 19.2 14.01 19.2 12s-.697-3.713-2.092-5.107C15.712 5.497 14.01 4.8 12 4.8s-3.713.697-5.107 2.093C5.497 8.287 4.8 9.99 4.8 12c0 2.01.697 3.713 2.093 5.108C8.287 18.503 9.99 19.2 12 19.2Z"
  })
}));
SvgCircle.displayName = 'SvgCircle';
const CircleIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCircle, _objectSpread$1t(_objectSpread$1t({}, props), {}, {
      className: createClass(getIconStyles$1t(props))
    }));
  }
});
CircleIcon.displayName = 'CircleIcon';
var CircleIcon$1 = CircleIcon;

function ownKeys$1s(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1s(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1s(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1s(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1s = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1s = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1s[size], "px"),
        height: "".concat(iconSizes$1s[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1s.big, "px"),
        height: "".concat(iconSizes$1s.big, "px")
      };
  }
};
const getSizeStyle$1s = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1s(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1s = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1s = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1s(props.color), ";}&,image{", getSizeStyle$1s(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgClipboard = props => jsxRuntime.jsx("svg", _objectSpread$1s(_objectSpread$1s({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M9.4 17.4c-.495 0-.919-.176-1.27-.528A1.734 1.734 0 0 1 7.6 15.6V4.8c0-.495.176-.919.53-1.272A1.733 1.733 0 0 1 9.4 3h8.1c.495 0 .919.176 1.272.528.352.353.528.777.528 1.272v10.8c0 .495-.176.919-.528 1.272a1.736 1.736 0 0 1-1.272.528H9.4Zm0-1.8h8.1V4.8H9.4v10.8ZM5.8 21c-.495 0-.919-.176-1.272-.528A1.736 1.736 0 0 1 4 19.2V7.5c0-.255.086-.469.26-.642A.87.87 0 0 1 4.9 6.6c.255 0 .469.086.642.258A.873.873 0 0 1 5.8 7.5v11.7h9c.255 0 .469.086.642.26a.87.87 0 0 1 .258.64.87.87 0 0 1-.258.64.872.872 0 0 1-.642.26h-9ZM9.4 4.8v10.8V4.8Z"
  })
}));
SvgClipboard.displayName = 'SvgClipboard';
const ClipboardIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgClipboard, _objectSpread$1s(_objectSpread$1s({}, props), {}, {
      className: createClass(getIconStyles$1s(props))
    }));
  }
});
ClipboardIcon.displayName = 'ClipboardIcon';
var ClipboardIcon$1 = ClipboardIcon;

function ownKeys$1r(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1r(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1r(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1r(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1r = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1r = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1r[size], "px"),
        height: "".concat(iconSizes$1r[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1r.big, "px"),
        height: "".concat(iconSizes$1r.big, "px")
      };
  }
};
const getSizeStyle$1r = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1r(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1r = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1r = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1r(props.color), ";}&,image{", getSizeStyle$1r(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgClockWithArrow = props => jsxRuntime.jsx("svg", _objectSpread$1r(_objectSpread$1r({
  xmlns: "http://www.w3.org/2000/svg",
  width: 33,
  height: 32,
  viewBox: "0 0 33 32",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fill: "#FFF",
    fillRule: "evenodd",
    d: "m21.198 23.465 1.175 2.403a11.676 11.676 0 0 1-4.209 1.11l-.4.022-.102-2.667a8.962 8.962 0 0 0 3.536-.868Zm-8.517-.398c.907.54 1.9.916 2.952 1.114l.245.043.245.036-.362 2.644a11.738 11.738 0 0 1-4.081-1.326l-.399-.227 1.4-2.284Zm-3.06-3.04a8.885 8.885 0 0 0 1.552 1.91l.264.235-1.777 2.012a11.567 11.567 0 0 1-2.146-2.444l-.217-.346 2.323-1.367Zm8.45-11.84c4.136.285 7.203 3.824 6.914 7.904-.289 4.08-3.877 7.156-8.014 6.87-4.136-.284-7.255-3.823-6.966-7.903.018-.247.024-.418.065-.648.01-.058.02-.07.028-.1a.482.482 0 0 1 .034-.09c.014-.028.03-.05.051-.086.112-.182.51-.702 1.194-1.56l-.726-.05c1.257-2.743 4.198-4.56 7.42-4.337Zm-1.077 2.188a.771.771 0 0 0-.763.67l-.007.104v5.857c0 .392.29.716.665.768l.105.007h4.968c.425 0 .77-.347.77-.775a.773.773 0 0 0-.665-.767l-.105-.007h-4.199v-5.083a.773.773 0 0 0-.665-.767l-.104-.007Zm4.253-2.812-.115-.055.101.049-.227-.105a9.037 9.037 0 0 0-.247-.105l-.251-.099a8.542 8.542 0 0 0-1.492-.423l-.002.005-.019-.004a9.095 9.095 0 0 0-3.22-.028l-.078.015-.354.072c-.37.084-.721.19-1.076.319l-.357.135c-.132.052-.262.106-.391.162a8.948 8.948 0 0 0-2.631 1.847l.016-.017a8.823 8.823 0 0 0-1.301 1.703l-.074.125-.166.303c-.162.31-.305.628-.429.954l-.117.33 1.862-.001-3.396 5.397-3.303-5.395h2.021a11.316 11.316 0 0 1 1.17-2.889 11.348 11.348 0 0 1 1.777-2.372 11.455 11.455 0 0 1 .987-.9l.341-.267a12.11 12.11 0 0 1 2.603-1.456c.615-.252 1.25-.45 1.914-.591a11.759 11.759 0 0 1 3.633-.219c.357.028.71.08 1.057.146l.019.006.024.003c.663.13 1.311.317 1.94.559a11.446 11.446 0 0 1 3.712 2.24l.292.273c.477.466.913.967 1.303 1.503a11.306 11.306 0 0 1 1.846 3.888l.092.385-.009.002a11.476 11.476 0 0 1 .27 2.071l.008.318-.001.317a11.93 11.93 0 0 1-.21 1.898c-.064.331-.143.66-.237.985l-.033.116-.055.178a10.8 10.8 0 0 1-.246.698c-.243.616-.538 1.21-.884 1.776a11.361 11.361 0 0 1-2.893 3.209l-.323.236-1.574-2.171a8.898 8.898 0 0 0 1.717-1.581 8.97 8.97 0 0 0 1.454-2.488l.063-.17.018-.056.085-.248a8.857 8.857 0 0 0 .411-2.654l-.002-.181v-.061l-.003-.025-.02-.346a8.842 8.842 0 0 0-.516-2.362l-.065-.17-.068-.168c-.042-.109-.075-.215-.124-.32a8.712 8.712 0 0 0-.158-.327l-.01.004a8.744 8.744 0 0 0-1.983-2.58l-.278-.238a8.454 8.454 0 0 0-1.413-.958l-.283-.146a2.904 2.904 0 0 0-.1-.05l.05.025-.059-.029.007.003Z"
  })
}));
SvgClockWithArrow.displayName = 'SvgClockWithArrow';
const ClockWithArrowIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgClockWithArrow, _objectSpread$1r(_objectSpread$1r({}, props), {}, {
      className: createClass(getIconStyles$1r(props))
    }));
  }
});
ClockWithArrowIcon.displayName = 'ClockWithArrowIcon';
var ClockWithArrowIcon$1 = ClockWithArrowIcon;

function ownKeys$1q(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1q(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1q(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1q(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1q = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1q = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1q[size], "px"),
        height: "".concat(iconSizes$1q[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1q.big, "px"),
        height: "".concat(iconSizes$1q.big, "px")
      };
  }
};
const getSizeStyle$1q = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1q(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1q = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1q = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1q(props.color), ";}&,image{", getSizeStyle$1q(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgClock = props => jsxRuntime.jsx("svg", _objectSpread$1q(_objectSpread$1q({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M14.363 15.623a.826.826 0 0 0 .607.247c.24 0 .45-.09.63-.27a.853.853 0 0 0 .248-.63.853.853 0 0 0-.248-.63l-2.7-2.7V8.377a.835.835 0 0 0-.258-.63A.893.893 0 0 0 12 7.5a.87.87 0 0 0-.64.258.872.872 0 0 0-.26.642v3.577a.927.927 0 0 0 .27.653l2.993 2.992ZM12 21a8.759 8.759 0 0 1-3.51-.71 9.082 9.082 0 0 1-2.857-1.922 9.082 9.082 0 0 1-1.924-2.858A8.759 8.759 0 0 1 3 12c0-1.245.236-2.415.71-3.51a9.082 9.082 0 0 1 1.923-2.857A9.095 9.095 0 0 1 8.49 3.708 8.769 8.769 0 0 1 12 3c1.245 0 2.415.236 3.51.708a9.095 9.095 0 0 1 2.857 1.925 9.082 9.082 0 0 1 1.924 2.857A8.759 8.759 0 0 1 21 12a8.759 8.759 0 0 1-.71 3.51 9.082 9.082 0 0 1-1.922 2.857 9.082 9.082 0 0 1-2.858 1.924A8.759 8.759 0 0 1 12 21Zm0-1.8c1.995 0 3.694-.701 5.097-2.103C18.499 15.694 19.2 13.995 19.2 12c0-1.995-.701-3.694-2.103-5.097C15.694 5.501 13.995 4.8 12 4.8c-1.995 0-3.694.701-5.096 2.103C5.501 8.306 4.8 10.005 4.8 12c0 1.995.701 3.694 2.104 5.097C8.306 18.499 10.005 19.2 12 19.2Z"
  })
}));
SvgClock.displayName = 'SvgClock';
const ClockIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgClock, _objectSpread$1q(_objectSpread$1q({}, props), {}, {
      className: createClass(getIconStyles$1q(props))
    }));
  }
});
ClockIcon.displayName = 'ClockIcon';
var ClockIcon$1 = ClockIcon;

function ownKeys$1p(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1p(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1p(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1p(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1p = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1p = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1p[size], "px"),
        height: "".concat(iconSizes$1p[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1p.big, "px"),
        height: "".concat(iconSizes$1p.big, "px")
      };
  }
};
const getSizeStyle$1p = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1p(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1p = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1p = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1p(props.color), ";}&,image{", getSizeStyle$1p(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCloseBold = props => jsxRuntime.jsx("svg", _objectSpread$1p(_objectSpread$1p({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m12 13.703-5.962 5.962c-.223.224-.507.335-.852.335-.344 0-.628-.111-.851-.335-.223-.223-.335-.507-.335-.851 0-.345.112-.629.335-.852L10.297 12 4.335 6.038C4.112 5.815 4 5.531 4 5.186c0-.344.112-.628.335-.851.223-.223.507-.335.851-.335.345 0 .629.112.852.335L12 10.297l5.962-5.962c.223-.223.507-.335.852-.335.344 0 .628.112.851.335.224.223.335.507.335.851 0 .345-.111.629-.335.852L13.703 12l5.962 5.962c.224.223.335.507.335.852 0 .344-.111.628-.335.851-.223.224-.507.335-.851.335-.345 0-.629-.111-.852-.335L12 13.703Z"
  })
}));
SvgCloseBold.displayName = 'SvgCloseBold';
const CloseBoldIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCloseBold, _objectSpread$1p(_objectSpread$1p({}, props), {}, {
      className: createClass(getIconStyles$1p(props))
    }));
  }
});
CloseBoldIcon.displayName = 'CloseBoldIcon';
var CloseBoldIcon$1 = CloseBoldIcon;

function ownKeys$1o(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1o(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1o(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1o(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1o = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1o = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1o[size], "px"),
        height: "".concat(iconSizes$1o[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1o.big, "px"),
        height: "".concat(iconSizes$1o.big, "px")
      };
  }
};
const getSizeStyle$1o = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1o(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1o = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1o = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1o(props.color), ";}&,image{", getSizeStyle$1o(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgClose = props => jsxRuntime.jsx("svg", _objectSpread$1o(_objectSpread$1o({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m12 13.703-5.962 5.962c-.223.224-.507.335-.852.335-.344 0-.628-.111-.851-.335-.223-.223-.335-.507-.335-.851 0-.345.112-.629.335-.852L10.297 12 4.335 6.038C4.112 5.815 4 5.531 4 5.186c0-.344.112-.628.335-.851.223-.223.507-.335.851-.335.345 0 .629.112.852.335L12 10.297l5.962-5.962c.223-.223.507-.335.852-.335.344 0 .628.112.851.335.224.223.335.507.335.851 0 .345-.111.629-.335.852L13.703 12l5.962 5.962c.224.223.335.507.335.852 0 .344-.111.628-.335.851-.223.224-.507.335-.851.335-.345 0-.629-.111-.852-.335L12 13.703Z"
  })
}));
SvgClose.displayName = 'SvgClose';
const CloseIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgClose, _objectSpread$1o(_objectSpread$1o({}, props), {}, {
      className: createClass(getIconStyles$1o(props))
    }));
  }
});
CloseIcon.displayName = 'CloseIcon';
var CloseIcon$1 = CloseIcon;

function ownKeys$1n(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1n(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1n(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1n(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1n = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1n = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1n[size], "px"),
        height: "".concat(iconSizes$1n[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1n.big, "px"),
        height: "".concat(iconSizes$1n.big, "px")
      };
  }
};
const getSizeStyle$1n = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1n(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1n = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1n = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1n(props.color), ";}&,image{", getSizeStyle$1n(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCodeView = props => jsxRuntime.jsx("svg", _objectSpread$1n(_objectSpread$1n({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M16.406 17.208a.874.874 0 0 1-.644.258.913.913 0 0 1-.668-.282.913.913 0 0 1-.281-.668c0-.257.093-.48.28-.667l3.634-3.633-3.657-3.657a.838.838 0 0 1-.246-.644.918.918 0 0 1 .27-.645.89.89 0 0 1 .656-.257.89.89 0 0 1 .656.257l4.313 4.313a.9.9 0 0 1 .281.656.9.9 0 0 1-.281.656l-4.313 4.313Zm-8.812 0L3.28 12.895A.9.9 0 0 1 3 12.24a.9.9 0 0 1 .281-.656L7.594 7.27A.932.932 0 0 1 8.25 7a.888.888 0 0 1 .68.27c.187.188.28.41.28.668 0 .258-.093.48-.28.668l-3.657 3.657 3.657 3.656a.837.837 0 0 1 .246.644.918.918 0 0 1-.27.645.889.889 0 0 1-.656.258.889.889 0 0 1-.656-.258Z"
  })
}));
SvgCodeView.displayName = 'SvgCodeView';
const CodeViewIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCodeView, _objectSpread$1n(_objectSpread$1n({}, props), {}, {
      className: createClass(getIconStyles$1n(props))
    }));
  }
});
CodeViewIcon.displayName = 'CodeViewIcon';
var CodeViewIcon$1 = CodeViewIcon;

function ownKeys$1m(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1m(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1m(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1m(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1m = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1m = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1m[size], "px"),
        height: "".concat(iconSizes$1m[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1m.big, "px"),
        height: "".concat(iconSizes$1m.big, "px")
      };
  }
};
const getSizeStyle$1m = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1m(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1m = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1m = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1m(props.color), ";}&,image{", getSizeStyle$1m(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCoins = props => jsxRuntime.jsx("svg", _objectSpread$1m(_objectSpread$1m({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M13.636 12.364c.682 0 1.262-.239 1.739-.716a2.367 2.367 0 0 0 .716-1.739c0-.682-.239-1.261-.716-1.739a2.367 2.367 0 0 0-1.739-.715c-.681 0-1.261.238-1.738.715a2.367 2.367 0 0 0-.716 1.74c0 .68.239 1.26.716 1.738a2.367 2.367 0 0 0 1.738.716ZM7.91 14.818c-.45 0-.835-.16-1.155-.48a1.574 1.574 0 0 1-.481-1.156V6.636c0-.45.16-.835.48-1.155C7.075 5.161 7.46 5 7.91 5h11.455c.45 0 .835.16 1.156.481.32.32.48.705.48 1.155v6.546c0 .45-.16.835-.48 1.155-.321.32-.706.481-1.156.481H7.909Zm-3.273 3.273c-.45 0-.835-.16-1.155-.48A1.576 1.576 0 0 1 3 16.454V8.274c0-.232.079-.427.236-.584a.791.791 0 0 1 .582-.234c.232 0 .426.078.584.234a.794.794 0 0 1 .234.584v8.181h13.091a.79.79 0 0 1 .583.236.79.79 0 0 1 .236.583.79.79 0 0 1-.236.582.79.79 0 0 1-.583.236H4.637ZM7.91 8.273c.45 0 .835-.16 1.155-.481.321-.32.481-.706.481-1.156H7.91v1.637Zm11.455 0V6.636h-1.637c0 .45.16.835.48 1.156.321.32.707.48 1.157.48ZM7.909 13.182h1.636c0-.45-.16-.835-.48-1.156-.32-.32-.706-.48-1.156-.48v1.636Zm9.818 0h1.637v-1.636c-.45 0-.836.16-1.157.48-.32.32-.48.706-.48 1.156Z"
  })
}));
SvgCoins.displayName = 'SvgCoins';
const CoinsIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCoins, _objectSpread$1m(_objectSpread$1m({}, props), {}, {
      className: createClass(getIconStyles$1m(props))
    }));
  }
});
CoinsIcon.displayName = 'CoinsIcon';
var CoinsIcon$1 = CoinsIcon;

function ownKeys$1l(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1l(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1l(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1l(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1l = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1l = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1l[size], "px"),
        height: "".concat(iconSizes$1l[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1l.big, "px"),
        height: "".concat(iconSizes$1l.big, "px")
      };
  }
};
const getSizeStyle$1l = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1l(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1l = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1l = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1l(props.color), ";}&,image{", getSizeStyle$1l(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgColumns = props => jsxRuntime.jsx("svg", _objectSpread$1l(_objectSpread$1l({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M3 17.017V7.003c0-.551.196-1.022.588-1.414A1.93 1.93 0 0 1 5.003 5h13.994c.551 0 1.023.196 1.415.589.392.392.588.863.588 1.414v10.014c0 .55-.196 1.022-.588 1.415a1.931 1.931 0 0 1-1.415.588H5.003c-.551 0-1.023-.197-1.415-.588A1.931 1.931 0 0 1 3 17.017Zm2.003 0h3.33V7.003h-3.33v10.014Zm5.332 0h3.33V7.003h-3.33v10.014Zm5.333 0h3.33V7.003h-3.33v10.014Z"
  })
}));
SvgColumns.displayName = 'SvgColumns';
const ColumnsIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgColumns, _objectSpread$1l(_objectSpread$1l({}, props), {}, {
      className: createClass(getIconStyles$1l(props))
    }));
  }
});
ColumnsIcon.displayName = 'ColumnsIcon';
var ColumnsIcon$1 = ColumnsIcon;

function ownKeys$1k(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1k(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1k(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1k(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1k = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1k = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1k[size], "px"),
        height: "".concat(iconSizes$1k[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1k.big, "px"),
        height: "".concat(iconSizes$1k.big, "px")
      };
  }
};
const getSizeStyle$1k = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1k(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1k = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1k = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1k(props.color), ";}&,image{", getSizeStyle$1k(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgConnectedSquare = props => jsxRuntime.jsx("svg", _objectSpread$1k(_objectSpread$1k({
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M7.8 4.6h6.5c.1 0 .2.2.2.4v1c0 .2-.1.4-.2.4H7.7c-.4.9-1.2 1.5-2.2 1.5C4.1 7.9 3 6.8 3 5.5S4.1 3 5.5 3c1 0 1.9.7 2.3 1.6zM4.6 16.3V9.8c0-.1.2-.2.4-.2h1c.2 0 .4.1.4.2v6.5c.9.4 1.4 1.2 1.4 2.2 0 1.4-1.1 2.5-2.5 2.5S3 19.9 3 18.6c0-1.1.7-2 1.6-2.3zm11.6 3H9.8c-.1 0-.2-.2-.2-.4v-1c0-.2.1-.4.2-.4h6.5c.4-.9 1.2-1.4 2.2-1.4 1.4 0 2.5 1.1 2.5 2.5S19.9 21 18.5 21c-1 0-1.9-.7-2.3-1.7zm3.2-11.5v6.5c0 .1-.2.2-.4.2h-1c-.2 0-.4-.1-.4-.2V7.7c-.9-.4-1.4-1.2-1.4-2.2 0-1.4 1.1-2.5 2.5-2.5S21 4.1 21 5.5c0 1-.7 1.9-1.6 2.3z"
  })
}));
SvgConnectedSquare.displayName = 'SvgConnectedSquare';
const ConnectedSquareIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgConnectedSquare, _objectSpread$1k(_objectSpread$1k({}, props), {}, {
      className: createClass(getIconStyles$1k(props))
    }));
  }
});
ConnectedSquareIcon.displayName = 'ConnectedSquareIcon';
var ConnectedSquareIcon$1 = ConnectedSquareIcon;

function ownKeys$1j(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1j(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1j(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1j(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1j = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1j = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1j[size], "px"),
        height: "".concat(iconSizes$1j[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1j.big, "px"),
        height: "".concat(iconSizes$1j.big, "px")
      };
  }
};
const getSizeStyle$1j = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1j(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1j = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1j = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1j(props.color), ";}&,image{", getSizeStyle$1j(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgConnectedTriangle = props => jsxRuntime.jsx("svg", _objectSpread$1j(_objectSpread$1j({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fillRule: "nonzero",
    d: "M15.023 18.375H8.977A3 3 0 1 1 6.49 15.04l3.511-6.803a3 3 0 1 1 4.053-.051l3.74 6.82a3 3 0 1 1-2.771 3.368Zm.195-1.5a3.01 3.01 0 0 1 1.133-1.381l-3.612-6.586a3.006 3.006 0 0 1-1.405.018l-3.47 6.723c.403.32.722.742.918 1.226h6.436Z"
  })
}));
SvgConnectedTriangle.displayName = 'SvgConnectedTriangle';
const ConnectedTriangleIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgConnectedTriangle, _objectSpread$1j(_objectSpread$1j({}, props), {}, {
      className: createClass(getIconStyles$1j(props))
    }));
  }
});
ConnectedTriangleIcon.displayName = 'ConnectedTriangleIcon';
var ConnectedTriangleIcon$1 = ConnectedTriangleIcon;

function ownKeys$1i(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1i(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1i(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1i(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1i = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1i = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1i[size], "px"),
        height: "".concat(iconSizes$1i[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1i.big, "px"),
        height: "".concat(iconSizes$1i.big, "px")
      };
  }
};
const getSizeStyle$1i = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1i(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1i = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1i = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1i(props.color), ";}&,image{", getSizeStyle$1i(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCopy = props => jsxRuntime.jsx("svg", _objectSpread$1i(_objectSpread$1i({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M17.91 17.727h-9c-.45 0-.836-.16-1.156-.48a1.576 1.576 0 0 1-.481-1.156V4.636c0-.45.16-.835.48-1.156C8.075 3.16 8.46 3 8.91 3h5.727l4.91 4.91v8.18c0 .45-.16.836-.48 1.157-.322.32-.707.48-1.157.48Zm-4.092-9v-4.09H8.91V16.09h9V8.727h-4.09ZM5.636 21c-.45 0-.835-.16-1.155-.48A1.576 1.576 0 0 1 4 19.364V7.909h1.636v11.455h9V21h-9ZM8.91 4.636v4.091-4.09V16.09 4.636Z"
  })
}));
SvgCopy.displayName = 'SvgCopy';
const CopyIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCopy, _objectSpread$1i(_objectSpread$1i({}, props), {}, {
      className: createClass(getIconStyles$1i(props))
    }));
  }
});
CopyIcon.displayName = 'CopyIcon';
var CopyIcon$1 = CopyIcon;

function ownKeys$1h(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1h(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1h(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1h(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1h = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1h = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1h[size], "px"),
        height: "".concat(iconSizes$1h[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1h.big, "px"),
        height: "".concat(iconSizes$1h.big, "px")
      };
  }
};
const getSizeStyle$1h = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1h(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1h = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1h = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1h(props.color), ";}&,image{", getSizeStyle$1h(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCube = props => jsxRuntime.jsx("svg", _objectSpread$1h(_objectSpread$1h({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fillRule: "evenodd",
    d: "m8.174 9.646-.026.016-3.445-2.127L11.998 3l2.937 1.825.031-.02 4.327 2.73-7.295 4.535-3.824-2.424Zm3.599 2.845v8.369L4.5 16.325v-8.37l3.513 2.198 3.76 2.338Zm.45 0 7.273-4.535v8.369l-7.273 4.535v-8.37Z"
  })
}));
SvgCube.displayName = 'SvgCube';
const CubeIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCube, _objectSpread$1h(_objectSpread$1h({}, props), {}, {
      className: createClass(getIconStyles$1h(props))
    }));
  }
});
CubeIcon.displayName = 'CubeIcon';
var CubeIcon$1 = CubeIcon;

function ownKeys$1g(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1g(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1g(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1g(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1g = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1g = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1g[size], "px"),
        height: "".concat(iconSizes$1g[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1g.big, "px"),
        height: "".concat(iconSizes$1g.big, "px")
      };
  }
};
const getSizeStyle$1g = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1g(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1g = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1g = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1g(props.color), ";}&,image{", getSizeStyle$1g(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgCubes = props => jsxRuntime.jsx("svg", _objectSpread$1g(_objectSpread$1g({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fillRule: "evenodd",
    d: "m20.837 12.696-4.265-1.558V6.393a.215.215 0 0 0-.145-.203L12.06 4.594a.218.218 0 0 0-.14 0L7.56 6.146a.201.201 0 0 0-.1.074.215.215 0 0 0-.05.136v4.78l-4.26 1.516a.203.203 0 0 0-.1.074.215.215 0 0 0-.05.137v4.823c0 .09.058.172.144.202l4.362 1.5a.22.22 0 0 0 .141 0l4.344-1.493 4.335 1.493a.22.22 0 0 0 .142 0l4.362-1.502a.214.214 0 0 0 .152-.205V12.9a.214.214 0 0 0-.145-.203Zm-5.025-1.885-3.352 1.133V8.356l3.352-1.227v3.682ZM11.99 5.373l3.117 1.162-3.114 1.15-3.29-1.132 3.287-1.18Zm-4.407 8.82-3.29-1.134 3.287-1.18 3.117 1.162-3.114 1.151Zm3.819 3.125L8.05 18.45v-3.588l3.352-1.226v3.682Zm5.001-3.126-3.29-1.133 3.287-1.18 3.118 1.162-3.115 1.151Zm3.819 3.126L16.87 18.45v-3.588l3.352-1.226v3.682Z"
  })
}));
SvgCubes.displayName = 'SvgCubes';
const CubesIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgCubes, _objectSpread$1g(_objectSpread$1g({}, props), {}, {
      className: createClass(getIconStyles$1g(props))
    }));
  }
});
CubesIcon.displayName = 'CubesIcon';
var CubesIcon$1 = CubesIcon;

function ownKeys$1f(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1f(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1f(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1f(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1f = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1f = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1f[size], "px"),
        height: "".concat(iconSizes$1f[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1f.big, "px"),
        height: "".concat(iconSizes$1f.big, "px")
      };
  }
};
const getSizeStyle$1f = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1f(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1f = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1f = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1f(props.color), ";}&,image{", getSizeStyle$1f(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgDomain = props => jsxRuntime.jsx("svg", _objectSpread$1f(_objectSpread$1f({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M4.8 20.2c-.495 0-.919-.176-1.27-.528A1.734 1.734 0 0 1 3 18.4V5.8c0-.495.176-.919.53-1.272A1.733 1.733 0 0 1 4.8 4h5.4c.495 0 .919.176 1.272.528.352.353.528.777.528 1.272v1.8h7.2c.495 0 .919.176 1.272.528.352.353.528.777.528 1.272v9c0 .495-.176.919-.528 1.272a1.736 1.736 0 0 1-1.272.528H4.8Zm0-1.8h1.8v-1.8H4.8v1.8Zm0-3.6h1.8V13H4.8v1.8Zm0-3.6h1.8V9.4H4.8v1.8Zm0-3.6h1.8V5.8H4.8v1.8Zm3.6 10.8h1.8v-1.8H8.4v1.8Zm0-3.6h1.8V13H8.4v1.8Zm0-3.6h1.8V9.4H8.4v1.8Zm0-3.6h1.8V5.8H8.4v1.8ZM12 18.4h7.2v-9H12v1.8h1.8V13H12v1.8h1.8v1.8H12v1.8Zm3.6-5.4v-1.8h1.8V13h-1.8Zm0 3.6v-1.8h1.8v1.8h-1.8Z"
  })
}));
SvgDomain.displayName = 'SvgDomain';
const DomainIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgDomain, _objectSpread$1f(_objectSpread$1f({}, props), {}, {
      className: createClass(getIconStyles$1f(props))
    }));
  }
});
DomainIcon.displayName = 'DomainIcon';
var DomainIcon$1 = DomainIcon;

function ownKeys$1e(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1e(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1e(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1e(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1e = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1e = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1e[size], "px"),
        height: "".concat(iconSizes$1e[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1e.big, "px"),
        height: "".concat(iconSizes$1e.big, "px")
      };
  }
};
const getSizeStyle$1e = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1e(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1e = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1e = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1e(props.color), ";}&,image{", getSizeStyle$1e(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgDot = props => jsxRuntime.jsx("svg", _objectSpread$1e(_objectSpread$1e({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12 21c-2.507 0-4.634-.873-6.38-2.62C3.873 16.634 3 14.507 3 12c0-2.507.873-4.634 2.62-6.381C7.366 3.873 9.493 3 12 3c2.507 0 4.634.873 6.38 2.619C20.127 7.366 21 9.493 21 12s-.873 4.634-2.62 6.38C16.634 20.127 14.507 21 12 21Z"
  })
}));
SvgDot.displayName = 'SvgDot';
const DotIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgDot, _objectSpread$1e(_objectSpread$1e({}, props), {}, {
      className: createClass(getIconStyles$1e(props))
    }));
  }
});
DotIcon.displayName = 'DotIcon';
var DotIcon$1 = DotIcon;

function ownKeys$1d(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1d(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1d(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1d(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1d = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1d = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1d[size], "px"),
        height: "".concat(iconSizes$1d[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1d.big, "px"),
        height: "".concat(iconSizes$1d.big, "px")
      };
  }
};
const getSizeStyle$1d = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1d(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1d = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1d = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1d(props.color), ";}&,image{", getSizeStyle$1d(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgDownload = props => jsxRuntime.jsx("svg", _objectSpread$1d(_objectSpread$1d({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12 16.022c-.15 0-.29-.024-.422-.071a.98.98 0 0 1-.365-.239l-4.05-4.05a1.067 1.067 0 0 1-.31-.787c0-.319.103-.581.31-.787.206-.207.473-.315.8-.324.329-.01.596.09.803.295l2.109 2.11V4.125c0-.319.108-.586.324-.802.215-.215.482-.323.801-.323.319 0 .586.108.802.323.215.216.323.483.323.802v8.044l2.11-2.11c.206-.206.473-.304.802-.295.327.01.594.117.8.324.207.206.31.468.31.787s-.103.581-.31.787l-4.05 4.05a.98.98 0 0 1-.365.239c-.131.047-.272.07-.422.07ZM5.25 21c-.619 0-1.148-.22-1.588-.66A2.167 2.167 0 0 1 3 18.75V16.5c0-.319.108-.586.323-.802.216-.215.483-.323.802-.323.319 0 .586.108.802.323.215.216.323.483.323.802v2.25h13.5V16.5c0-.319.108-.586.324-.802.215-.215.482-.323.801-.323.319 0 .586.108.801.323.216.216.324.483.324.802v2.25a2.17 2.17 0 0 1-.66 1.59c-.441.44-.971.66-1.59.66H5.25Z"
  })
}));
SvgDownload.displayName = 'SvgDownload';
const DownloadIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgDownload, _objectSpread$1d(_objectSpread$1d({}, props), {}, {
      className: createClass(getIconStyles$1d(props))
    }));
  }
});
DownloadIcon.displayName = 'DownloadIcon';
var DownloadIcon$1 = DownloadIcon;

function ownKeys$1c(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1c(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1c(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1c(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1c = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1c = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1c[size], "px"),
        height: "".concat(iconSizes$1c[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1c.big, "px"),
        height: "".concat(iconSizes$1c.big, "px")
      };
  }
};
const getSizeStyle$1c = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1c(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1c = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1c = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1c(props.color), ";}&,image{", getSizeStyle$1c(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgDragDrop = props => jsxRuntime.jsx("svg", _objectSpread$1c(_objectSpread$1c({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12.178 21c-.14 0-.27-.022-.393-.066a.915.915 0 0 1-.341-.223l-2.755-2.755a.963.963 0 0 1-.289-.708c0-.28.105-.525.315-.735a.995.995 0 0 1 .735-.289c.297 0 .542.097.734.29l.945.944V6.542l-.971.971a.963.963 0 0 1-.708.289c-.28 0-.525-.105-.735-.315a.995.995 0 0 1-.289-.735c0-.297.096-.542.289-.735l2.729-2.728a.926.926 0 0 1 .34-.224A1.17 1.17 0 0 1 12.179 3c.14 0 .272.022.394.065a.926.926 0 0 1 .341.224l2.755 2.755a.963.963 0 0 1 .289.708c0 .28-.105.525-.315.735a.995.995 0 0 1-.735.289.995.995 0 0 1-.734-.29l-.945-.944v10.916l.97-.971a.963.963 0 0 1 .71-.289c.28 0 .524.105.734.315a.995.995 0 0 1 .289.735.995.995 0 0 1-.289.735l-2.729 2.728a.915.915 0 0 1-.341.223 1.152 1.152 0 0 1-.393.066Z"
  })
}));
SvgDragDrop.displayName = 'SvgDragDrop';
const DragDropIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgDragDrop, _objectSpread$1c(_objectSpread$1c({}, props), {}, {
      className: createClass(getIconStyles$1c(props))
    }));
  }
});
DragDropIcon.displayName = 'DragDropIcon';
var DragDropIcon$1 = DragDropIcon;

function ownKeys$1b(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1b(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1b(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1b(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1b = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1b = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1b[size], "px"),
        height: "".concat(iconSizes$1b[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1b.big, "px"),
        height: "".concat(iconSizes$1b.big, "px")
      };
  }
};
const getSizeStyle$1b = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1b(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1b = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1b = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1b(props.color), ";}&,image{", getSizeStyle$1b(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgDrag = props => jsxRuntime.jsx("svg", _objectSpread$1b(_objectSpread$1b({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M8.25 21c-.619 0-1.148-.22-1.588-.66A2.167 2.167 0 0 1 6 18.75c0-.619.22-1.149.662-1.59.44-.44.97-.66 1.588-.66.619 0 1.149.22 1.59.66.44.441.66.971.66 1.59a2.17 2.17 0 0 1-.66 1.59c-.441.44-.971.66-1.59.66ZM15 21c-.619 0-1.148-.22-1.588-.66a2.167 2.167 0 0 1-.662-1.59c0-.619.22-1.149.662-1.59.44-.44.97-.66 1.588-.66.619 0 1.149.22 1.59.66.44.441.66.971.66 1.59a2.17 2.17 0 0 1-.66 1.59c-.441.44-.971.66-1.59.66Zm-6.75-6.75c-.619 0-1.148-.22-1.588-.662A2.164 2.164 0 0 1 6 12c0-.619.22-1.149.662-1.59.44-.44.97-.66 1.588-.66.619 0 1.149.22 1.59.66.44.441.66.971.66 1.59 0 .619-.22 1.148-.66 1.588-.441.442-.971.662-1.59.662Zm6.75 0c-.619 0-1.148-.22-1.588-.662A2.164 2.164 0 0 1 12.75 12c0-.619.22-1.149.662-1.59.44-.44.97-.66 1.588-.66.619 0 1.149.22 1.59.66.44.441.66.971.66 1.59 0 .619-.22 1.148-.66 1.588-.441.442-.971.662-1.59.662ZM8.25 7.5c-.619 0-1.148-.22-1.588-.662A2.164 2.164 0 0 1 6 5.25c0-.619.22-1.148.662-1.588C7.102 3.22 7.631 3 8.25 3c.619 0 1.149.22 1.59.662.44.44.66.97.66 1.588 0 .619-.22 1.148-.66 1.588-.441.441-.971.662-1.59.662Zm6.75 0c-.619 0-1.148-.22-1.588-.662a2.164 2.164 0 0 1-.662-1.588c0-.619.22-1.148.662-1.588C13.851 3.22 14.382 3 15 3c.619 0 1.149.22 1.59.662.44.44.66.97.66 1.588 0 .619-.22 1.148-.66 1.588-.441.441-.971.662-1.59.662Z"
  })
}));
SvgDrag.displayName = 'SvgDrag';
const DragIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgDrag, _objectSpread$1b(_objectSpread$1b({}, props), {}, {
      className: createClass(getIconStyles$1b(props))
    }));
  }
});
DragIcon.displayName = 'DragIcon';
var DragIcon$1 = DragIcon;

function ownKeys$1a(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1a(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1a(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1a(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1a = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1a = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1a[size], "px"),
        height: "".concat(iconSizes$1a[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1a.big, "px"),
        height: "".concat(iconSizes$1a.big, "px")
      };
  }
};
const getSizeStyle$1a = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1a(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1a = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1a = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1a(props.color), ";}&,image{", getSizeStyle$1a(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgEdit = props => jsxRuntime.jsx("svg", _objectSpread$1a(_objectSpread$1a({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M3 17.541 6.58 21H3v-3.459ZM14.322 6.635l3.58 3.46-10.068 9.728-3.58-3.46 10.068-9.728Zm4.976-3.161 1.212 1.17a1.58 1.58 0 0 1 0 2.289l-1.39 1.342-3.58-3.459 1.39-1.342a1.716 1.716 0 0 1 2.368 0Z"
  })
}));
SvgEdit.displayName = 'SvgEdit';
const EditIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgEdit, _objectSpread$1a(_objectSpread$1a({}, props), {}, {
      className: createClass(getIconStyles$1a(props))
    }));
  }
});
EditIcon.displayName = 'EditIcon';
var EditIcon$1 = EditIcon;

function ownKeys$19(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$19(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$19(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$19(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$19 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$19 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$19[size], "px"),
        height: "".concat(iconSizes$19[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$19.big, "px"),
        height: "".concat(iconSizes$19.big, "px")
      };
  }
};
const getSizeStyle$19 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$19(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$19 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$19 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$19(props.color), ";}&,image{", getSizeStyle$19(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgError = props => jsxRuntime.jsx("svg", _objectSpread$19(_objectSpread$19({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12 21a8.769 8.769 0 0 1-3.511-.709 8.988 8.988 0 0 1-2.857-1.933 9.208 9.208 0 0 1-1.923-2.868A8.768 8.768 0 0 1 3 11.979c0-1.246.236-2.413.709-3.502a9.118 9.118 0 0 1 1.923-2.846 9.08 9.08 0 0 1 2.857-1.922A8.768 8.768 0 0 1 12 3c1.246 0 2.416.236 3.511.709A9.09 9.09 0 0 1 18.37 5.63a9.127 9.127 0 0 1 1.922 2.846A8.696 8.696 0 0 1 21 11.98a8.769 8.769 0 0 1-.709 3.511 9.217 9.217 0 0 1-1.922 2.868 8.998 8.998 0 0 1-2.857 1.933A8.769 8.769 0 0 1 12 21Zm0-2.277c1.876 0 3.465-.655 4.768-1.965 1.304-1.31 1.955-2.904 1.955-4.78 0-.701-.104-1.381-.31-2.04a6.424 6.424 0 0 0-.936-1.847l-9.365 9.365c.544.43 1.153.748 1.826.955.673.208 1.36.312 2.062.312Zm-5.477-2.857 9.343-9.386a6.542 6.542 0 0 0-1.836-.902c-.652-.2-1.328-.301-2.03-.301-1.876 0-3.465.648-4.769 1.943-1.303 1.297-1.954 2.883-1.954 4.759 0 .701.104 1.381.31 2.04.209.659.52 1.275.936 1.847Z"
  })
}));
SvgError.displayName = 'SvgError';
const ErrorIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgError, _objectSpread$19(_objectSpread$19({}, props), {}, {
      className: createClass(getIconStyles$19(props))
    }));
  }
});
ErrorIcon.displayName = 'ErrorIcon';
var ErrorIcon$1 = ErrorIcon;

function ownKeys$18(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$18(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$18(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$18(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$18 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$18 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$18[size], "px"),
        height: "".concat(iconSizes$18[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$18.big, "px"),
        height: "".concat(iconSizes$18.big, "px")
      };
  }
};
const getSizeStyle$18 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$18(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$18 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$18 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$18(props.color), ";}&,image{", getSizeStyle$18(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgExpand = props => jsxRuntime.jsx("svg", _objectSpread$18(_objectSpread$18({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M4 21a.965.965 0 0 1-.712-.288A.965.965 0 0 1 3 20v-6c0-.283.096-.521.288-.713A.967.967 0 0 1 4 13a.97.97 0 0 1 .713.287A.97.97 0 0 1 5 14v3.6L17.6 5H14a.965.965 0 0 1-.712-.288A.965.965 0 0 1 13 4c0-.283.096-.521.288-.713A.967.967 0 0 1 14 3h6c.283 0 .52.096.712.287.192.192.288.43.288.713v6c0 .283-.096.52-.288.712A.965.965 0 0 1 20 11a.965.965 0 0 1-.712-.288A.965.965 0 0 1 19 10V6.4L6.4 19H10c.283 0 .521.096.713.288A.967.967 0 0 1 11 20c0 .283-.096.52-.287.712A.968.968 0 0 1 10 21H4Z"
  })
}));
SvgExpand.displayName = 'SvgExpand';
const ExpandIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgExpand, _objectSpread$18(_objectSpread$18({}, props), {}, {
      className: createClass(getIconStyles$18(props))
    }));
  }
});
ExpandIcon.displayName = 'ExpandIcon';
var ExpandIcon$1 = ExpandIcon;

function ownKeys$17(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$17(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$17(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$17(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$17 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$17 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$17[size], "px"),
        height: "".concat(iconSizes$17[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$17.big, "px"),
        height: "".concat(iconSizes$17.big, "px")
      };
  }
};
const getSizeStyle$17 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$17(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$17 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$17 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$17(props.color), ";}&,image{", getSizeStyle$17(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgExport = props => jsxRuntime.jsx("svg", _objectSpread$17(_objectSpread$17({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M9.8 16.275a.947.947 0 0 1-.288-.725c.009-.283.113-.525.313-.725L11.65 13H4a.965.965 0 0 1-.712-.288A.965.965 0 0 1 3 12c0-.283.096-.521.288-.713A.967.967 0 0 1 4 11h7.65L9.8 9.15c-.2-.2-.3-.437-.3-.712 0-.275.1-.513.3-.713.2-.2.438-.3.713-.3.275 0 .512.1.712.3L14.8 11.3c.1.1.171.208.213.325.041.117.062.242.062.375s-.02.258-.062.375a.883.883 0 0 1-.213.325l-3.6 3.6a.932.932 0 0 1-.687.275.974.974 0 0 1-.713-.3ZM5 21c-.55 0-1.021-.196-1.413-.587A1.928 1.928 0 0 1 3 19v-3c0-.283.096-.521.288-.713A.967.967 0 0 1 4 15a.97.97 0 0 1 .713.287A.97.97 0 0 1 5 16v3h14V5H5v3c0 .283-.096.52-.287.712A.968.968 0 0 1 4 9a.965.965 0 0 1-.712-.288A.965.965 0 0 1 3 8V5c0-.55.196-1.021.587-1.413A1.928 1.928 0 0 1 5 3h14c.55 0 1.021.196 1.413.587.391.392.587.863.587 1.413v14c0 .55-.196 1.021-.587 1.413A1.928 1.928 0 0 1 19 21H5Z"
  })
}));
SvgExport.displayName = 'SvgExport';
const ExportIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgExport, _objectSpread$17(_objectSpread$17({}, props), {}, {
      className: createClass(getIconStyles$17(props))
    }));
  }
});
ExportIcon.displayName = 'ExportIcon';
var ExportIcon$1 = ExportIcon;

function ownKeys$16(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$16(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$16(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$16(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$16 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$16 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$16[size], "px"),
        height: "".concat(iconSizes$16[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$16.big, "px"),
        height: "".concat(iconSizes$16.big, "px")
      };
  }
};
const getSizeStyle$16 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$16(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$16 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$16 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$16(props.color), ";}&,image{", getSizeStyle$16(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgExternalLink = props => jsxRuntime.jsx("svg", _objectSpread$16(_objectSpread$16({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M5 21c-.55 0-1.021-.196-1.413-.587A1.928 1.928 0 0 1 3 19V5c0-.55.196-1.021.587-1.413A1.928 1.928 0 0 1 5 3h7v2H5v14h14v-7h2v7c0 .55-.196 1.021-.587 1.413A1.928 1.928 0 0 1 19 21H5Zm4.7-5.3-1.4-1.4L17.6 5H14V3h7v7h-2V6.4l-9.3 9.3Z"
  })
}));
SvgExternalLink.displayName = 'SvgExternalLink';
const ExternalLinkIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgExternalLink, _objectSpread$16(_objectSpread$16({}, props), {}, {
      className: createClass(getIconStyles$16(props))
    }));
  }
});
ExternalLinkIcon.displayName = 'ExternalLinkIcon';
var ExternalLinkIcon$1 = ExternalLinkIcon;

function ownKeys$15(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$15(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$15(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$15(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$15 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$15 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$15[size], "px"),
        height: "".concat(iconSizes$15[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$15.big, "px"),
        height: "".concat(iconSizes$15.big, "px")
      };
  }
};
const getSizeStyle$15 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$15(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$15 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$15 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$15(props.color), ";}&,image{", getSizeStyle$15(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgEyeCrossed = props => jsxRuntime.jsx("svg", _objectSpread$15(_objectSpread$15({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m15.354 12.39-1.186-1.186c.123-.64-.061-1.24-.552-1.8-.491-.559-1.125-.777-1.902-.654l-1.187-1.186c.232-.11.467-.191.706-.246.239-.054.494-.082.767-.082 1.023 0 1.892.358 2.608 1.074.716.716 1.074 1.585 1.074 2.608 0 .273-.027.529-.082.768a3.47 3.47 0 0 1-.245.705Zm2.619 2.578-1.187-1.145a8.968 8.968 0 0 0 1.381-1.3 7.281 7.281 0 0 0 1.033-1.605 8.045 8.045 0 0 0-2.936-3.283C14.99 6.824 13.568 6.418 12 6.418c-.396 0-.784.027-1.166.082a7.877 7.877 0 0 0-1.125.245L8.441 5.477A9.087 9.087 0 0 1 12 4.782c2.06 0 3.893.569 5.502 1.707A9.74 9.74 0 0 1 21 10.92a9.585 9.585 0 0 1-1.237 2.24 9.022 9.022 0 0 1-1.79 1.81ZM18.382 20l-3.437-3.395c-.477.15-.957.262-1.441.337a9.855 9.855 0 0 1-1.504.113c-2.06 0-3.893-.57-5.502-1.708A9.74 9.74 0 0 1 3 10.918a9.708 9.708 0 0 1 1.084-2.015 9.427 9.427 0 0 1 1.493-1.667l-2.25-2.29L4.473 3.8l15.054 15.055L18.382 20ZM6.722 8.382A8.785 8.785 0 0 0 5.64 9.548c-.328.422-.607.88-.839 1.37a8.04 8.04 0 0 0 2.935 3.283c1.275.811 2.697 1.217 4.265 1.217.273 0 .539-.017.798-.05.259-.035.525-.072.797-.114l-.736-.777c-.15.041-.293.072-.43.092A2.86 2.86 0 0 1 12 14.6c-1.023 0-1.892-.358-2.608-1.073-.716-.717-1.074-1.586-1.074-2.609 0-.15.01-.293.03-.43.021-.136.052-.279.093-.429L6.723 8.382Z"
  })
}));
SvgEyeCrossed.displayName = 'SvgEyeCrossed';
const EyeCrossedIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgEyeCrossed, _objectSpread$15(_objectSpread$15({}, props), {}, {
      className: createClass(getIconStyles$15(props))
    }));
  }
});
EyeCrossedIcon.displayName = 'EyeCrossedIcon';
var EyeCrossedIcon$1 = EyeCrossedIcon;

function ownKeys$14(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$14(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$14(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$14(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$14 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$14 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$14[size], "px"),
        height: "".concat(iconSizes$14[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$14.big, "px"),
        height: "".concat(iconSizes$14.big, "px")
      };
  }
};
const getSizeStyle$14 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$14(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$14 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$14 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$14(props.color), ";}&,image{", getSizeStyle$14(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgEye = props => jsxRuntime.jsx("svg", _objectSpread$14(_objectSpread$14({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12 15.818c1.023 0 1.892-.358 2.608-1.073.716-.716 1.074-1.586 1.074-2.609 0-1.022-.358-1.892-1.074-2.608-.716-.716-1.585-1.073-2.608-1.073-1.023 0-1.892.357-2.608 1.073-.716.716-1.074 1.586-1.074 2.608 0 1.023.358 1.893 1.074 2.609.716.715 1.585 1.073 2.608 1.073Zm0-1.473a2.129 2.129 0 0 1-1.564-.644c-.43-.43-.645-.951-.645-1.565 0-.613.215-1.135.645-1.565.429-.43.95-.644 1.564-.644.614 0 1.135.215 1.565.644.43.43.644.952.644 1.565a2.13 2.13 0 0 1-.644 1.565c-.43.43-.951.644-1.565.644Zm0 3.928a9.471 9.471 0 0 1-5.44-1.668c-1.637-1.11-2.824-2.6-3.56-4.469.736-1.868 1.923-3.358 3.56-4.47A9.474 9.474 0 0 1 12 6c1.99 0 3.805.556 5.44 1.667 1.637 1.111 2.824 2.601 3.56 4.47-.736 1.867-1.923 3.357-3.56 4.468A9.471 9.471 0 0 1 12 18.273Zm0-1.637a7.81 7.81 0 0 0 4.245-1.217 7.994 7.994 0 0 0 2.955-3.283 8 8 0 0 0-2.955-3.283A7.813 7.813 0 0 0 12 7.636c-1.54 0-2.956.406-4.245 1.217A8 8 0 0 0 4.8 12.136a7.995 7.995 0 0 0 2.955 3.283A7.81 7.81 0 0 0 12 16.636Z"
  })
}));
SvgEye.displayName = 'SvgEye';
const EyeIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgEye, _objectSpread$14(_objectSpread$14({}, props), {}, {
      className: createClass(getIconStyles$14(props))
    }));
  }
});
EyeIcon.displayName = 'EyeIcon';
var EyeIcon$1 = EyeIcon;

function ownKeys$13(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$13(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$13(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$13(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$13 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$13 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$13[size], "px"),
        height: "".concat(iconSizes$13[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$13.big, "px"),
        height: "".concat(iconSizes$13.big, "px")
      };
  }
};
const getSizeStyle$13 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$13(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$13 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$13 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$13(props.color), ";}&,image{", getSizeStyle$13(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgFilterAndList = props => jsxRuntime.jsx("svg", _objectSpread$13(_objectSpread$13({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M8 18H4a.965.965 0 0 1-.712-.288A.965.965 0 0 1 3 17c0-.283.096-.52.288-.712A.965.965 0 0 1 4 16h4c.283 0 .521.096.713.288A.967.967 0 0 1 9 17c0 .283-.096.52-.287.712A.968.968 0 0 1 8 18ZM20 8H4a.967.967 0 0 1-.712-.287A.968.968 0 0 1 3 7c0-.283.096-.521.288-.713A.967.967 0 0 1 4 6h16c.283 0 .52.096.712.287.192.192.288.43.288.713a.968.968 0 0 1-.288.713A.967.967 0 0 1 20 8Zm-6 5H4a.965.965 0 0 1-.712-.288A.965.965 0 0 1 3 12c0-.283.096-.521.288-.713A.967.967 0 0 1 4 11h10a.97.97 0 0 1 .713.287A.97.97 0 0 1 15 12c0 .283-.096.52-.287.712A.968.968 0 0 1 14 13Z"
  })
}));
SvgFilterAndList.displayName = 'SvgFilterAndList';
const FilterAndListIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgFilterAndList, _objectSpread$13(_objectSpread$13({}, props), {}, {
      className: createClass(getIconStyles$13(props))
    }));
  }
});
FilterAndListIcon.displayName = 'FilterAndListIcon';
var FilterAndListIcon$1 = FilterAndListIcon;

function ownKeys$12(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$12(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$12(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$12(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$12 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$12 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$12[size], "px"),
        height: "".concat(iconSizes$12[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$12.big, "px"),
        height: "".concat(iconSizes$12.big, "px")
      };
  }
};
const getSizeStyle$12 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$12(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$12 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$12 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$12(props.color), ";}&,image{", getSizeStyle$12(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgFilter = props => jsxRuntime.jsx("svg", _objectSpread$12(_objectSpread$12({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M11 20a.965.965 0 0 1-.712-.288A.965.965 0 0 1 10 19v-6L4.2 5.6c-.25-.333-.287-.683-.112-1.05S4.567 4 5 4h14c.433 0 .738.183.913.55.175.367.137.717-.113 1.05L14 13v6c0 .283-.096.52-.287.712A.968.968 0 0 1 13 20h-2Z"
  })
}));
SvgFilter.displayName = 'SvgFilter';
const FilterIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgFilter, _objectSpread$12(_objectSpread$12({}, props), {}, {
      className: createClass(getIconStyles$12(props))
    }));
  }
});
FilterIcon.displayName = 'FilterIcon';
var FilterIcon$1 = FilterIcon;

function ownKeys$11(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$11(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$11(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$11(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$11 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$11 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$11[size], "px"),
        height: "".concat(iconSizes$11[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$11.big, "px"),
        height: "".concat(iconSizes$11.big, "px")
      };
  }
};
const getSizeStyle$11 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$11(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$11 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$11 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$11(props.color), ";}&,image{", getSizeStyle$11(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgFlagFilled = props => jsxRuntime.jsx("svg", _objectSpread$11(_objectSpread$11({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M5.059 21c-.3 0-.552-.102-.755-.305A1.024 1.024 0 0 1 4 19.941V4.06c0-.3.101-.552.304-.755C4.507 3.1 4.759 3 5.059 3h7.597c.247 0 .467.08.662.238.194.16.317.362.37.61l.265 1.27h4.87c.3 0 .552.1.754.304.204.203.305.454.305.754v8.471c0 .3-.101.551-.305.754a1.022 1.022 0 0 1-.754.305h-5.479c-.247 0-.467-.08-.662-.238a1.048 1.048 0 0 1-.37-.61l-.265-1.27h-5.93v6.353c0 .3-.1.552-.303.754a1.025 1.025 0 0 1-.755.305Z"
  })
}));
SvgFlagFilled.displayName = 'SvgFlagFilled';
const FlagFilledIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgFlagFilled, _objectSpread$11(_objectSpread$11({}, props), {}, {
      className: createClass(getIconStyles$11(props))
    }));
  }
});
FlagFilledIcon.displayName = 'FlagFilledIcon';
var FlagFilledIcon$1 = FlagFilledIcon;

function ownKeys$10(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$10(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$10(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$10(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$10 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$10 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$10[size], "px"),
        height: "".concat(iconSizes$10[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$10.big, "px"),
        height: "".concat(iconSizes$10.big, "px")
      };
  }
};
const getSizeStyle$10 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$10(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$10 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$10 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$10(props.color), ";}&,image{", getSizeStyle$10(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgFlagLinear = props => jsxRuntime.jsx("svg", _objectSpread$10(_objectSpread$10({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M5.059 21c-.3 0-.552-.102-.755-.305A1.024 1.024 0 0 1 4 19.941V4.06c0-.3.101-.552.304-.755C4.507 3.1 4.759 3 5.059 3h7.597c.247 0 .467.08.662.238.194.16.317.362.37.61l.265 1.27h4.87c.3 0 .552.1.754.304.204.203.305.454.305.754v8.471c0 .3-.101.551-.305.754a1.022 1.022 0 0 1-.754.305h-5.479c-.247 0-.467-.08-.662-.238a1.048 1.048 0 0 1-.37-.61l-.265-1.27h-5.93v6.353c0 .3-.1.552-.303.754a1.025 1.025 0 0 1-.755.305Zm9.159-7.412h3.547V7.235h-5.56l-.423-2.117H6.118v6.353h7.676l.424 2.117Z"
  })
}));
SvgFlagLinear.displayName = 'SvgFlagLinear';
const FlagLinearIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgFlagLinear, _objectSpread$10(_objectSpread$10({}, props), {}, {
      className: createClass(getIconStyles$10(props))
    }));
  }
});
FlagLinearIcon.displayName = 'FlagLinearIcon';
var FlagLinearIcon$1 = FlagLinearIcon;

function ownKeys$$(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$$(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$$(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$$(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$$ = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$$ = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$$[size], "px"),
        height: "".concat(iconSizes$$[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$$.big, "px"),
        height: "".concat(iconSizes$$.big, "px")
      };
  }
};
const getSizeStyle$$ = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$$(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$$ = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$$ = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$$(props.color), ";}&,image{", getSizeStyle$$(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgFlame = props => jsxRuntime.jsx("svg", _objectSpread$$(_objectSpread$$({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M4 13.613c0 1.613.416 3.07 1.248 4.368a8.009 8.009 0 0 0 3.286 2.943 4.91 4.91 0 0 1-.904-1.478 4.649 4.649 0 0 1-.319-1.707c0-.645.12-1.252.357-1.82a4.59 4.59 0 0 1 1.07-1.542l3.413-3.363 3.44 3.363c.458.458.806.972 1.044 1.541.237.569.356 1.176.356 1.821a4.65 4.65 0 0 1-.318 1.707 4.911 4.911 0 0 1-.904 1.478 8.009 8.009 0 0 0 3.286-2.943c.832-1.299 1.248-2.755 1.248-4.368a8.168 8.168 0 0 0-.956-3.872 8.102 8.102 0 0 0-2.636-2.955.52.52 0 0 0-.484-.064c-.17.06-.323.166-.458.319a2.029 2.029 0 0 1-.7.573 1.934 1.934 0 0 1-.854.19 2.015 2.015 0 0 1-1.465-.585 1.95 1.95 0 0 1-.599-1.452V3.933c0-.357-.148-.624-.445-.802-.298-.179-.59-.174-.88.012-2.122 1.308-3.79 2.887-5.005 4.738C4.607 9.732 4 11.643 4 13.613Zm8.151-.459-2.343 2.293a3.013 3.013 0 0 0-.726 1.044c-.161.39-.242.807-.242 1.248 0 .9.323 1.669.968 2.306S11.234 21 12.15 21s1.699-.318 2.344-.955a3.121 3.121 0 0 0 .968-2.306c0-.441-.085-.857-.255-1.248a3.36 3.36 0 0 0-.713-1.044l-2.344-2.293Z"
  })
}));
SvgFlame.displayName = 'SvgFlame';
const FlameIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgFlame, _objectSpread$$(_objectSpread$$({}, props), {}, {
      className: createClass(getIconStyles$$(props))
    }));
  }
});
FlameIcon.displayName = 'FlameIcon';
var FlameIcon$1 = FlameIcon;

function ownKeys$_(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$_(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$_(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$_(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$_ = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$_ = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$_[size], "px"),
        height: "".concat(iconSizes$_[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$_.big, "px"),
        height: "".concat(iconSizes$_.big, "px")
      };
  }
};
const getSizeStyle$_ = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$_(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$_ = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$_ = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$_(props.color), ";}&,image{", getSizeStyle$_(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgFractionDigits = props => jsxRuntime.jsx("svg", _objectSpread$_(_objectSpread$_({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsxs("g", {
    fillRule: "evenodd",
    children: [jsxRuntime.jsx("path", {
      fill: "#1A1A1A",
      fillRule: "nonzero",
      d: "M4.686 11.162c0-.328.087-.576.263-.744.176-.168.432-.252.768-.252.324 0 .575.086.753.258.177.172.266.418.266.738 0 .309-.09.552-.27.73-.179.177-.429.266-.75.266-.327 0-.581-.087-.76-.26-.18-.174-.27-.42-.27-.736Zm9.158-3.445c0 1.496-.245 2.603-.736 3.322-.49.719-1.245 1.078-2.264 1.078-.989 0-1.734-.37-2.236-1.113-.502-.742-.753-1.838-.753-3.287 0-1.512.245-2.626.733-3.343.488-.717 1.24-1.075 2.256-1.075.988 0 1.735.375 2.241 1.125s.759 1.847.759 3.293Zm-4.19 0c0 1.05.091 1.804.273 2.259.181.455.487.682.917.682.422 0 .726-.23.914-.691.187-.461.281-1.211.281-2.25 0-1.051-.095-1.806-.284-2.265-.19-.459-.493-.688-.911-.688-.426 0-.73.23-.914.688-.184.46-.276 1.214-.276 2.265Zm11.04 0c0 1.496-.246 2.603-.736 3.322-.49.719-1.245 1.078-2.265 1.078-.988 0-1.733-.37-2.235-1.113-.502-.742-.753-1.838-.753-3.287 0-1.512.244-2.626.732-3.343.489-.717 1.24-1.075 2.256-1.075.989 0 1.736.375 2.242 1.125.505.75.758 1.847.758 3.293Zm-4.19 0c0 1.05.09 1.804.272 2.259.182.455.488.682.917.682.422 0 .727-.23.914-.691.188-.461.282-1.211.282-2.25 0-1.051-.095-1.806-.285-2.265-.189-.459-.493-.688-.91-.688-.426 0-.731.23-.915.688-.183.46-.275 1.214-.275 2.265Z"
    }), jsxRuntime.jsxs("g", {
      fill: "#1A1A1A",
      fillRule: "nonzero",
      children: [jsxRuntime.jsx("path", {
        d: "m7.002 18.017-.004-2 10.5-.019.004 2z"
      }), jsxRuntime.jsx("path", {
        d: "M16.945 13.581v6.869l4.145-3.466z"
      })]
    })]
  })
}));
SvgFractionDigits.displayName = 'SvgFractionDigits';
const FractionDigitsIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgFractionDigits, _objectSpread$_(_objectSpread$_({}, props), {}, {
      className: createClass(getIconStyles$_(props))
    }));
  }
});
FractionDigitsIcon.displayName = 'FractionDigitsIcon';
var FractionDigitsIcon$1 = FractionDigitsIcon;

function ownKeys$Z(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$Z(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$Z(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$Z(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$Z = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$Z = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$Z[size], "px"),
        height: "".concat(iconSizes$Z[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$Z.big, "px"),
        height: "".concat(iconSizes$Z.big, "px")
      };
  }
};
const getSizeStyle$Z = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$Z(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$Z = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$Z = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$Z(props.color), ";}&,image{", getSizeStyle$Z(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgGear = props => jsxRuntime.jsx("svg", _objectSpread$Z(_objectSpread$Z({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M13.732 21.47h-3.464a.863.863 0 0 1-.6-.23.92.92 0 0 1-.3-.578l-.277-2.147c-.2-.077-.389-.17-.565-.277a7.58 7.58 0 0 1-.52-.346l-2.009.83a1.033 1.033 0 0 1-.646.024.858.858 0 0 1-.508-.393l-1.709-2.978a.868.868 0 0 1-.115-.646.887.887 0 0 1 .346-.555l1.732-1.316a2.206 2.206 0 0 1-.023-.312v-.623c0-.1.007-.204.023-.311l-1.732-1.316a.886.886 0 0 1-.346-.554.868.868 0 0 1 .115-.647l1.709-2.978a.727.727 0 0 1 .496-.405c.223-.053.443-.042.658.035l2.009.832c.17-.124.346-.239.53-.347.186-.107.37-.2.555-.277l.277-2.147a.92.92 0 0 1 .3-.577c.17-.154.37-.231.6-.231h3.464c.23 0 .43.077.6.23a.92.92 0 0 1 .3.578l.277 2.147c.2.077.389.17.566.277.177.108.35.223.52.347l2.008-.832c.215-.077.43-.084.646-.023a.858.858 0 0 1 .508.393l1.709 2.978c.123.2.161.416.115.647a.886.886 0 0 1-.346.554l-1.732 1.316a2.2 2.2 0 0 1 .023.31v.624c0 .1-.015.205-.046.312l1.732 1.316c.184.139.3.324.346.555a.868.868 0 0 1-.115.646l-1.709 2.955a.91.91 0 0 1-.519.405 1.017 1.017 0 0 1-.658-.012l-1.963-.831c-.17.123-.346.238-.53.346-.186.108-.37.2-.555.277l-.277 2.147a.92.92 0 0 1-.3.577.863.863 0 0 1-.6.231Zm-1.686-6.003c.893 0 1.655-.315 2.286-.946a3.115 3.115 0 0 0 .946-2.286c0-.893-.315-1.654-.946-2.286a3.115 3.115 0 0 0-2.286-.946c-.908 0-1.674.315-2.298.946a3.135 3.135 0 0 0-.934 2.286c0 .893.311 1.655.934 2.286.624.63 1.39.946 2.298.946Zm0-1.847c-.385 0-.711-.134-.98-.404a1.333 1.333 0 0 1-.405-.98c0-.386.135-.713.404-.982.27-.27.596-.404.981-.404s.712.135.982.404c.269.27.403.596.403.981s-.134.712-.403.98c-.27.27-.597.405-.982.405Zm-.97 6.003H12.9l.324-2.447c.477-.123.92-.304 1.328-.543a5.51 5.51 0 0 0 1.119-.865l2.286.946.9-1.57-1.985-1.5c.076-.216.13-.443.161-.682a5.665 5.665 0 0 0 0-1.455 3.258 3.258 0 0 0-.162-.68l1.986-1.501-.9-1.57-2.286.97a5.146 5.146 0 0 0-1.12-.89 5.194 5.194 0 0 0-1.327-.542l-.3-2.447H11.1l-.324 2.447c-.477.123-.92.304-1.327.542a5.526 5.526 0 0 0-1.12.867l-2.286-.947-.9 1.57 1.986 1.478c-.077.23-.131.461-.162.692a5.596 5.596 0 0 0 0 1.455c.03.23.085.461.162.692l-1.986 1.501.9 1.57 2.286-.97a5.111 5.111 0 0 0 2.447 1.432l.3 2.447Z"
  })
}));
SvgGear.displayName = 'SvgGear';
const GearIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgGear, _objectSpread$Z(_objectSpread$Z({}, props), {}, {
      className: createClass(getIconStyles$Z(props))
    }));
  }
});
GearIcon.displayName = 'GearIcon';
var GearIcon$1 = GearIcon;

function ownKeys$Y(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$Y(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$Y(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$Y(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$Y = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$Y = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$Y[size], "px"),
        height: "".concat(iconSizes$Y[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$Y.big, "px"),
        height: "".concat(iconSizes$Y.big, "px")
      };
  }
};
const getSizeStyle$Y = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$Y(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$Y = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$Y = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$Y(props.color), ";}&,image{", getSizeStyle$Y(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgGraduationCap = props => jsxRuntime.jsx("svg", _objectSpread$Y(_objectSpread$Y({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M11.538 19.01a1.657 1.657 0 0 1-.818-.214l-4.3-2.323a1.724 1.724 0 0 1-.667-.634 1.715 1.715 0 0 1-.237-.893v-4.129l-2.064-1.14a.837.837 0 0 1-.344-.322.87.87 0 0 1-.108-.43.87.87 0 0 1 .108-.43.837.837 0 0 1 .344-.323l7.268-3.957a1.66 1.66 0 0 1 1.634 0l8.194 4.473a.782.782 0 0 1 .334.312.87.87 0 0 1 .118.44v5.506a.83.83 0 0 1-.248.613.83.83 0 0 1-.612.248.83.83 0 0 1-.613-.248.83.83 0 0 1-.247-.613V9.871l-1.72.946v4.13c0 .329-.08.627-.237.892-.158.265-.38.476-.667.634l-4.301 2.323a1.656 1.656 0 0 1-.817.215Zm0-6.903 5.892-3.182-5.892-3.183-5.893 3.183 5.893 3.182Zm0 5.183 4.3-2.322V11.72l-3.462 1.914a1.755 1.755 0 0 1-1.269.16 1.664 1.664 0 0 1-.408-.16L7.237 11.72v3.248l4.3 2.322Z"
  })
}));
SvgGraduationCap.displayName = 'SvgGraduationCap';
const GraduationCapIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgGraduationCap, _objectSpread$Y(_objectSpread$Y({}, props), {}, {
      className: createClass(getIconStyles$Y(props))
    }));
  }
});
GraduationCapIcon.displayName = 'GraduationCapIcon';
var GraduationCapIcon$1 = GraduationCapIcon;

function ownKeys$X(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$X(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$X(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$X(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$X = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$X = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$X[size], "px"),
        height: "".concat(iconSizes$X[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$X.big, "px"),
        height: "".concat(iconSizes$X.big, "px")
      };
  }
};
const getSizeStyle$X = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$X(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$X = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$X = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$X(props.color), ";}&,image{", getSizeStyle$X(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgGraph = props => jsxRuntime.jsx("svg", _objectSpread$X(_objectSpread$X({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M5.25 21c-.619 0-1.148-.22-1.588-.66A2.167 2.167 0 0 1 3 18.75v-7.875c0-.619.22-1.149.662-1.59.44-.44.97-.66 1.588-.66.619 0 1.148.22 1.588.66.441.441.662.971.662 1.59v7.875c0 .619-.22 1.149-.662 1.59-.44.44-.97.66-1.588.66ZM12 21c-.619 0-1.148-.22-1.588-.66a2.167 2.167 0 0 1-.662-1.59V5.25c0-.619.22-1.148.662-1.588C10.851 3.22 11.382 3 12 3c.619 0 1.149.22 1.59.662.44.44.66.97.66 1.588v13.5a2.17 2.17 0 0 1-.66 1.59c-.441.44-.971.66-1.59.66Zm6.75 0a2.17 2.17 0 0 1-1.59-.66 2.17 2.17 0 0 1-.66-1.59v-3.375c0-.619.22-1.149.66-1.59.441-.44.971-.66 1.59-.66.619 0 1.149.22 1.59.66.44.441.66.971.66 1.59v3.375a2.17 2.17 0 0 1-.66 1.59c-.441.44-.971.66-1.59.66Z"
  })
}));
SvgGraph.displayName = 'SvgGraph';
const GraphIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgGraph, _objectSpread$X(_objectSpread$X({}, props), {}, {
      className: createClass(getIconStyles$X(props))
    }));
  }
});
GraphIcon.displayName = 'GraphIcon';
var GraphIcon$1 = GraphIcon;

function ownKeys$W(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$W(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$W(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$W(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$W = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$W = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$W[size], "px"),
        height: "".concat(iconSizes$W[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$W.big, "px"),
        height: "".concat(iconSizes$W.big, "px")
      };
  }
};
const getSizeStyle$W = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$W(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$W = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$W = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$W(props.color), ";}&,image{", getSizeStyle$W(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgGrid = props => jsxRuntime.jsx("svg", _objectSpread$W(_objectSpread$W({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M4.8 21c-.495 0-.919-.176-1.27-.528A1.734 1.734 0 0 1 3 19.2V4.8c0-.495.176-.919.53-1.272A1.733 1.733 0 0 1 4.8 3h14.4c.495 0 .919.176 1.272.528.352.353.528.777.528 1.272v14.4c0 .495-.176.919-.528 1.272A1.736 1.736 0 0 1 19.2 21H4.8Zm0-5.4v3.6h3.6v-3.6H4.8Zm5.4 0v3.6h3.6v-3.6h-3.6Zm5.4 3.6h3.6v-3.6h-3.6v3.6ZM4.8 13.8h3.6v-3.6H4.8v3.6Zm5.4 0h3.6v-3.6h-3.6v3.6Zm5.4 0h3.6v-3.6h-3.6v3.6Zm-7.2-9H4.8v3.6h3.6V4.8Zm1.8 3.6h3.6V4.8h-3.6v3.6Zm5.4 0h3.6V4.8h-3.6v3.6Z"
  })
}));
SvgGrid.displayName = 'SvgGrid';
const GridIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgGrid, _objectSpread$W(_objectSpread$W({}, props), {}, {
      className: createClass(getIconStyles$W(props))
    }));
  }
});
GridIcon.displayName = 'GridIcon';
var GridIcon$1 = GridIcon;

function ownKeys$V(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$V(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$V(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$V(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$V = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$V = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$V[size], "px"),
        height: "".concat(iconSizes$V[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$V.big, "px"),
        height: "".concat(iconSizes$V.big, "px")
      };
  }
};
const getSizeStyle$V = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$V(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$V = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$V = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$V(props.color), ";}&,image{", getSizeStyle$V(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgHeart = props => jsxRuntime.jsx("svg", _objectSpread$V(_objectSpread$V({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m9.785 18.085-1.553-1.418a61.404 61.404 0 0 1-4.308-4.331C2.641 10.904 2 9.325 2 7.6c0-1.41.473-2.588 1.417-3.533C4.364 3.122 5.54 2.65 6.95 2.65c.795 0 1.545.169 2.25.506.705.338 1.305.799 1.8 1.384a5.366 5.366 0 0 1 1.8-1.384 5.149 5.149 0 0 1 2.25-.506c1.41 0 2.587.472 3.532 1.417C19.527 5.012 20 6.19 20 7.6c0 1.725-.637 3.308-1.913 4.748a53.867 53.867 0 0 1-4.342 4.342l-1.53 1.395A1.7 1.7 0 0 1 11 18.58a1.7 1.7 0 0 1-1.215-.495Zm.36-11.745c-.435-.615-.9-1.084-1.395-1.407-.495-.322-1.095-.483-1.8-.483-.9 0-1.65.3-2.25.9-.6.6-.9 1.35-.9 2.25 0 .78.277 1.609.833 2.486.554.878 1.218 1.729 1.991 2.554a34.443 34.443 0 0 0 2.385 2.317c.817.72 1.481 1.313 1.991 1.778.51-.465 1.174-1.057 1.992-1.777a34.713 34.713 0 0 0 2.385-2.318 17.186 17.186 0 0 0 1.99-2.554c.555-.877.833-1.706.833-2.486 0-.9-.3-1.65-.9-2.25-.6-.6-1.35-.9-2.25-.9-.705 0-1.305.161-1.8.483-.495.323-.96.792-1.395 1.407a1.024 1.024 0 0 1-.855.45 1.024 1.024 0 0 1-.855-.45Z"
  })
}));
SvgHeart.displayName = 'SvgHeart';
const HeartIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgHeart, _objectSpread$V(_objectSpread$V({}, props), {}, {
      className: createClass(getIconStyles$V(props))
    }));
  }
});
HeartIcon.displayName = 'HeartIcon';
var HeartIcon$1 = HeartIcon;

function ownKeys$U(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$U(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$U(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$U(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$U = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$U = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$U[size], "px"),
        height: "".concat(iconSizes$U[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$U.big, "px"),
        height: "".concat(iconSizes$U.big, "px")
      };
  }
};
const getSizeStyle$U = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$U(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$U = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$U = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$U(props.color), ";}&,image{", getSizeStyle$U(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgHome = props => jsxRuntime.jsx("svg", _objectSpread$U(_objectSpread$U({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M6.057 18.943h3.086V12.77h6.171v6.172H18.4V9.686l-6.171-4.629-6.172 4.629v9.257Zm0 2.057a1.98 1.98 0 0 1-1.452-.604A1.982 1.982 0 0 1 4 18.943V9.686c0-.326.073-.635.22-.926.144-.291.346-.531.603-.72l6.171-4.629c.189-.137.386-.24.592-.308A2.02 2.02 0 0 1 12.229 3c.222 0 .437.034.642.103.206.068.403.171.592.308l6.171 4.629a2.046 2.046 0 0 1 .823 1.646v9.257c0 .566-.201 1.05-.604 1.453A1.984 1.984 0 0 1 18.4 21h-5.143v-6.171H11.2V21H6.057Z"
  })
}));
SvgHome.displayName = 'SvgHome';
const HomeIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgHome, _objectSpread$U(_objectSpread$U({}, props), {}, {
      className: createClass(getIconStyles$U(props))
    }));
  }
});
HomeIcon.displayName = 'HomeIcon';
var HomeIcon$1 = HomeIcon;

function ownKeys$T(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$T(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$T(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$T(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$T = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$T = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$T[size], "px"),
        height: "".concat(iconSizes$T[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$T.big, "px"),
        height: "".concat(iconSizes$T.big, "px")
      };
  }
};
const getSizeStyle$T = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$T(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$T = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$T = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$T(props.color), ";}&,image{", getSizeStyle$T(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgImport = props => jsxRuntime.jsx("svg", _objectSpread$T(_objectSpread$T({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12 16.022c-.319 0-.586-.108-.801-.324a1.086 1.086 0 0 1-.324-.801V6.853l-2.11 2.11a1.08 1.08 0 0 1-.787.337c-.3 0-.572-.122-.816-.366a1.046 1.046 0 0 1-.322-.802c.009-.309.116-.566.322-.773l4.05-4.05a.994.994 0 0 1 .366-.24C11.71 3.024 11.85 3 12 3c.15 0 .29.023.422.07a.994.994 0 0 1 .365.24l4.05 4.05c.226.224.333.491.323.8-.009.31-.116.568-.323.774a1.144 1.144 0 0 1-.8.351c-.31.01-.578-.098-.803-.322l-2.109-2.11v8.044c0 .319-.108.586-.323.8a1.09 1.09 0 0 1-.802.325Zm-6.75 4.5c-.619 0-1.148-.22-1.588-.66A2.168 2.168 0 0 1 3 18.271v-2.25c0-.319.108-.586.323-.802.216-.216.483-.323.802-.323.319 0 .586.107.802.323.215.216.323.483.323.802v2.25h13.5v-2.25c0-.319.108-.586.324-.802.215-.216.482-.323.801-.323.319 0 .586.107.801.323.216.216.324.483.324.802v2.25a2.17 2.17 0 0 1-.66 1.59c-.441.44-.971.66-1.59.66H5.25Z"
  })
}));
SvgImport.displayName = 'SvgImport';
const ImportIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgImport, _objectSpread$T(_objectSpread$T({}, props), {}, {
      className: createClass(getIconStyles$T(props))
    }));
  }
});
ImportIcon.displayName = 'ImportIcon';
var ImportIcon$1 = ImportIcon;

function ownKeys$S(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$S(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$S(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$S(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$S = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$S = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$S[size], "px"),
        height: "".concat(iconSizes$S[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$S.big, "px"),
        height: "".concat(iconSizes$S.big, "px")
      };
  }
};
const getSizeStyle$S = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$S(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$S = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$S = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$S(props.color), ";}&,image{", getSizeStyle$S(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgInfo = props => jsxRuntime.jsx("svg", _objectSpread$S(_objectSpread$S({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12 16.5a.872.872 0 0 0 .642-.26.87.87 0 0 0 .258-.64v-3.623a.835.835 0 0 0-.258-.63A.893.893 0 0 0 12 11.1a.87.87 0 0 0-.64.258.872.872 0 0 0-.26.642v3.623c0 .255.086.464.26.63a.89.89 0 0 0 .64.247Zm0-7.2a.872.872 0 0 0 .642-.26.87.87 0 0 0 .258-.64.873.873 0 0 0-.258-.642A.873.873 0 0 0 12 7.5a.87.87 0 0 0-.64.258.872.872 0 0 0-.26.642c0 .255.086.469.26.64.171.174.385.26.64.26ZM12 21a8.759 8.759 0 0 1-3.51-.71 9.082 9.082 0 0 1-2.857-1.922 9.082 9.082 0 0 1-1.924-2.858A8.759 8.759 0 0 1 3 12c0-1.245.236-2.415.71-3.51a9.082 9.082 0 0 1 1.923-2.857A9.095 9.095 0 0 1 8.49 3.708 8.769 8.769 0 0 1 12 3c1.245 0 2.415.236 3.51.708a9.095 9.095 0 0 1 2.857 1.925 9.082 9.082 0 0 1 1.924 2.857A8.759 8.759 0 0 1 21 12a8.759 8.759 0 0 1-.71 3.51 9.082 9.082 0 0 1-1.922 2.857 9.082 9.082 0 0 1-2.858 1.924A8.759 8.759 0 0 1 12 21Z"
  })
}));
SvgInfo.displayName = 'SvgInfo';
const InfoIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgInfo, _objectSpread$S(_objectSpread$S({}, props), {}, {
      className: createClass(getIconStyles$S(props))
    }));
  }
});
InfoIcon.displayName = 'InfoIcon';
var InfoIcon$1 = InfoIcon;

function ownKeys$R(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$R(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$R(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$R(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$R = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$R = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$R[size], "px"),
        height: "".concat(iconSizes$R[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$R.big, "px"),
        height: "".concat(iconSizes$R.big, "px")
      };
  }
};
const getSizeStyle$R = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$R(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$R = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$R = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$R(props.color), ";}&,image{", getSizeStyle$R(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgInformation = props => jsxRuntime.jsx("svg", _objectSpread$R(_objectSpread$R({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fillRule: "evenodd",
    d: "M11.856 4.773a1.932 1.932 0 1 1 0 3.863 1.932 1.932 0 0 1 0-3.863Zm3.112 14.81H9.173a.966.966 0 1 1 0-1.932h.966v-5.795h-.966a.966.966 0 1 1 0-1.932h3.864c.533 0 .966.433.966.966v6.761h.965a.966.966 0 0 1 0 1.932Z"
  })
}));
SvgInformation.displayName = 'SvgInformation';
const InformationIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgInformation, _objectSpread$R(_objectSpread$R({}, props), {}, {
      className: createClass(getIconStyles$R(props))
    }));
  }
});
InformationIcon.displayName = 'InformationIcon';
var InformationIcon$1 = InformationIcon;

function ownKeys$Q(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$Q(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$Q(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$Q(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$Q = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$Q = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$Q[size], "px"),
        height: "".concat(iconSizes$Q[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$Q.big, "px"),
        height: "".concat(iconSizes$Q.big, "px")
      };
  }
};
const getSizeStyle$Q = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$Q(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$Q = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$Q = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$Q(props.color), ";}&,image{", getSizeStyle$Q(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgLayers = props => jsxRuntime.jsx("svg", _objectSpread$Q(_objectSpread$Q({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  fill: "none",
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fill: "#000",
    d: "M11.996 21a1.46 1.46 0 0 1-.507-.091 1.844 1.844 0 0 1-.466-.253l-7.706-6.009a.707.707 0 0 1-.304-.621.778.778 0 0 1 .332-.623.798.798 0 0 1 .478-.159c.173 0 .33.053.47.159L12 19.412l7.707-6.01a.802.802 0 0 1 .956 0c.212.158.32.365.327.622a.72.72 0 0 1-.307.623l-7.707 6.009a1.87 1.87 0 0 1-.47.253 1.48 1.48 0 0 1-.51.091Zm0-4.023a1.46 1.46 0 0 1-.507-.092 1.844 1.844 0 0 1-.466-.253L3.29 10.623a.754.754 0 0 1-.224-.296.9.9 0 0 1 0-.677.754.754 0 0 1 .224-.297l7.734-6.009c.146-.108.303-.192.47-.253a1.48 1.48 0 0 1 1.017 0c.165.06.32.145.466.253l7.733 6.009c.105.088.18.187.224.297a.9.9 0 0 1 0 .677.754.754 0 0 1-.224.296l-7.734 6.01a1.87 1.87 0 0 1-.47.252 1.48 1.48 0 0 1-.51.091ZM12 15.388l6.915-5.4L12 4.588l-6.915 5.4 6.915 5.4Z"
  })
}));
SvgLayers.displayName = 'SvgLayers';
const LayersIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgLayers, _objectSpread$Q(_objectSpread$Q({}, props), {}, {
      className: createClass(getIconStyles$Q(props))
    }));
  }
});
LayersIcon.displayName = 'LayersIcon';
var LayersIcon$1 = LayersIcon;

function ownKeys$P(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$P(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$P(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$P(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$P = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$P = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$P[size], "px"),
        height: "".concat(iconSizes$P[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$P.big, "px"),
        height: "".concat(iconSizes$P.big, "px")
      };
  }
};
const getSizeStyle$P = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$P(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$P = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$P = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$P(props.color), ";}&,image{", getSizeStyle$P(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgListWithSearch = props => jsxRuntime.jsx("svg", _objectSpread$P(_objectSpread$P({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M3.92 8.759a.887.887 0 0 1-.655-.265A.887.887 0 0 1 3 7.839c0-.26.088-.479.265-.656a.889.889 0 0 1 .655-.263h2.758c.26 0 .48.088.656.263a.892.892 0 0 1 .264.656c0 .26-.088.479-.264.655a.89.89 0 0 1-.656.265H3.92Zm0 4.597a.888.888 0 0 1-.655-.264.887.887 0 0 1-.265-.655c0-.26.088-.48.265-.656a.89.89 0 0 1 .655-.264h2.758c.26 0 .48.088.656.264a.892.892 0 0 1 .264.656c0 .26-.088.479-.264.655a.89.89 0 0 1-.656.264H3.92Zm15.54 3.954-2.897-2.896c-.368.26-.77.456-1.206.585-.437.131-.878.196-1.322.196-1.273 0-2.357-.448-3.253-1.345-.897-.896-1.345-1.98-1.345-3.252 0-1.272.448-2.357 1.345-3.254C11.678 6.448 12.762 6 14.034 6c1.272 0 2.357.448 3.254 1.344.896.897 1.344 1.982 1.344 3.254 0 .444-.065.885-.195 1.322a4.11 4.11 0 0 1-.586 1.206l2.896 2.897a.872.872 0 0 1 .253.644c0 .26-.084.475-.253.643a.872.872 0 0 1-.644.253.872.872 0 0 1-.643-.253Zm-5.426-3.954a2.66 2.66 0 0 0 1.954-.804 2.66 2.66 0 0 0 .805-1.954 2.66 2.66 0 0 0-.804-1.954 2.66 2.66 0 0 0-1.955-.805 2.66 2.66 0 0 0-1.954.805 2.66 2.66 0 0 0-.804 1.954c0 .766.268 1.417.805 1.954a2.66 2.66 0 0 0 1.954.804ZM3.92 17.954a.888.888 0 0 1-.655-.265.887.887 0 0 1-.265-.654c0-.261.088-.48.265-.655a.887.887 0 0 1 .655-.265h7.356a.89.89 0 0 1 .655.265.889.889 0 0 1 .264.655.89.89 0 0 1-.264.654.89.89 0 0 1-.655.265H3.92Z"
  })
}));
SvgListWithSearch.displayName = 'SvgListWithSearch';
const ListWithSearchIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgListWithSearch, _objectSpread$P(_objectSpread$P({}, props), {}, {
      className: createClass(getIconStyles$P(props))
    }));
  }
});
ListWithSearchIcon.displayName = 'ListWithSearchIcon';
var ListWithSearchIcon$1 = ListWithSearchIcon;

function ownKeys$O(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$O(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$O(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$O(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$O = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$O = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$O[size], "px"),
        height: "".concat(iconSizes$O[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$O.big, "px"),
        height: "".concat(iconSizes$O.big, "px")
      };
  }
};
const getSizeStyle$O = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$O(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$O = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$O = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$O(props.color), ";}&,image{", getSizeStyle$O(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgList = props => jsxRuntime.jsx("svg", _objectSpread$O(_objectSpread$O({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M8 9a.968.968 0 0 1-.713-.288A.967.967 0 0 1 7 8a.97.97 0 0 1 .287-.713A.97.97 0 0 1 8 7h12c.283 0 .52.096.712.287.192.192.288.43.288.713s-.096.52-.288.712A.965.965 0 0 1 20 9H8Zm0 4a.968.968 0 0 1-.713-.288A.967.967 0 0 1 7 12a.97.97 0 0 1 .287-.713A.97.97 0 0 1 8 11h12c.283 0 .52.096.712.287.192.192.288.43.288.713s-.096.52-.288.712A.965.965 0 0 1 20 13H8Zm0 4a.968.968 0 0 1-.713-.288A.967.967 0 0 1 7 16a.97.97 0 0 1 .287-.713A.97.97 0 0 1 8 15h12c.283 0 .52.096.712.287.192.192.288.43.288.713s-.096.52-.288.712A.965.965 0 0 1 20 17H8ZM4 9a.965.965 0 0 1-.712-.288A.965.965 0 0 1 3 8c0-.283.096-.521.288-.713A.967.967 0 0 1 4 7a.97.97 0 0 1 .713.287A.97.97 0 0 1 5 8c0 .283-.096.52-.287.712A.968.968 0 0 1 4 9Zm0 4a.965.965 0 0 1-.712-.288A.965.965 0 0 1 3 12c0-.283.096-.521.288-.713A.967.967 0 0 1 4 11a.97.97 0 0 1 .713.287A.97.97 0 0 1 5 12c0 .283-.096.52-.287.712A.968.968 0 0 1 4 13Zm0 4a.965.965 0 0 1-.712-.288A.965.965 0 0 1 3 16c0-.283.096-.521.288-.713A.967.967 0 0 1 4 15a.97.97 0 0 1 .713.287A.97.97 0 0 1 5 16c0 .283-.096.52-.287.712A.968.968 0 0 1 4 17Z"
  })
}));
SvgList.displayName = 'SvgList';
const ListIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgList, _objectSpread$O(_objectSpread$O({}, props), {}, {
      className: createClass(getIconStyles$O(props))
    }));
  }
});
ListIcon.displayName = 'ListIcon';
var ListIcon$1 = ListIcon;

function ownKeys$N(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$N(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$N(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$N(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$N = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$N = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$N[size], "px"),
        height: "".concat(iconSizes$N[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$N.big, "px"),
        height: "".concat(iconSizes$N.big, "px")
      };
  }
};
const getSizeStyle$N = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$N(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$N = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$N = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$N(props.color), ";}&,image{", getSizeStyle$N(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgLock = props => jsxRuntime.jsx("svg", _objectSpread$N(_objectSpread$N({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M6.714 21a1.65 1.65 0 0 1-1.21-.503A1.652 1.652 0 0 1 5 19.286v-8.572c0-.471.168-.875.504-1.21A1.65 1.65 0 0 1 6.714 9h.857V7.286c0-1.186.418-2.197 1.254-3.033C9.661 3.418 10.671 3 11.857 3s2.197.418 3.033 1.253c.835.836 1.253 1.847 1.253 3.033V9H17c.471 0 .875.168 1.211.503.336.336.503.74.503 1.211v8.572c0 .471-.167.875-.503 1.21-.336.336-.74.504-1.211.504H6.714Zm0-1.714H17v-8.572H6.714v8.572Zm5.143-2.572c.472 0 .875-.167 1.211-.503.336-.336.503-.74.503-1.211 0-.471-.167-.875-.503-1.211a1.653 1.653 0 0 0-1.21-.503 1.65 1.65 0 0 0-1.211.503c-.336.336-.504.74-.504 1.211 0 .471.168.875.504 1.211a1.65 1.65 0 0 0 1.21.503ZM9.286 9h5.143V7.286a2.48 2.48 0 0 0-.75-1.822 2.48 2.48 0 0 0-1.822-.75 2.48 2.48 0 0 0-1.821.75c-.5.5-.75 1.107-.75 1.822V9ZM6.714 19.286v-8.572 8.572Z"
  })
}));
SvgLock.displayName = 'SvgLock';
const LockIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgLock, _objectSpread$N(_objectSpread$N({}, props), {}, {
      className: createClass(getIconStyles$N(props))
    }));
  }
});
LockIcon.displayName = 'LockIcon';
var LockIcon$1 = LockIcon;

function ownKeys$M(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$M(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$M(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$M(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$M = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$M = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$M[size], "px"),
        height: "".concat(iconSizes$M[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$M.big, "px"),
        height: "".concat(iconSizes$M.big, "px")
      };
  }
};
const getSizeStyle$M = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$M(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$M = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$M = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$M(props.color), ";}&,image{", getSizeStyle$M(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgLogout = props => jsxRuntime.jsx("svg", _objectSpread$M(_objectSpread$M({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M15.325 16.275a1.112 1.112 0 0 1-.275-.738c0-.275.092-.504.275-.687l1.85-1.85H10a.965.965 0 0 1-.712-.288A.965.965 0 0 1 9 12c0-.283.096-.521.288-.713A.967.967 0 0 1 10 11h7.175l-1.85-1.85c-.2-.2-.3-.437-.3-.712 0-.275.1-.513.3-.713.183-.2.413-.3.688-.3.275 0 .504.092.687.275l3.6 3.6c.1.1.171.208.213.325.041.117.062.242.062.375s-.02.258-.062.375a.883.883 0 0 1-.213.325l-3.6 3.6c-.217.217-.454.312-.712.287a1.052 1.052 0 0 1-.663-.312ZM5 21c-.55 0-1.021-.196-1.413-.587A1.928 1.928 0 0 1 3 19V5c0-.55.196-1.021.587-1.413A1.928 1.928 0 0 1 5 3h6a.97.97 0 0 1 .713.287A.97.97 0 0 1 12 4c0 .283-.096.52-.287.712A.968.968 0 0 1 11 5H5v14h6c.283 0 .521.096.713.288A.967.967 0 0 1 12 20c0 .283-.096.52-.287.712A.968.968 0 0 1 11 21H5Z"
  })
}));
SvgLogout.displayName = 'SvgLogout';
const LogoutIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgLogout, _objectSpread$M(_objectSpread$M({}, props), {}, {
      className: createClass(getIconStyles$M(props))
    }));
  }
});
LogoutIcon.displayName = 'LogoutIcon';
var LogoutIcon$1 = LogoutIcon;

function ownKeys$L(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$L(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$L(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$L(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$L = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$L = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$L[size], "px"),
        height: "".concat(iconSizes$L[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$L.big, "px"),
        height: "".concat(iconSizes$L.big, "px")
      };
  }
};
const getSizeStyle$L = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$L(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$L = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$L = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$L(props.color), ";}&,image{", getSizeStyle$L(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgMail = props => jsxRuntime.jsx("svg", _objectSpread$L(_objectSpread$L({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M4.8 19.4c-.495 0-.919-.176-1.27-.528A1.734 1.734 0 0 1 3 17.6V6.8c0-.495.176-.919.53-1.27C3.88 5.175 4.304 5 4.8 5h14.4c.495 0 .919.176 1.272.53.352.351.528.775.528 1.27v10.8c0 .495-.176.919-.528 1.272a1.736 1.736 0 0 1-1.272.528H4.8ZM19.2 8.6l-6.727 4.207a.922.922 0 0 1-.237.101.882.882 0 0 1-.236.035.882.882 0 0 1-.236-.035.922.922 0 0 1-.236-.1L4.8 8.6v9h14.4v-9ZM12 11.3l7.2-4.5H4.8l7.2 4.5ZM4.8 8.6v.225-1.327.022-.72.72-.012 1.317V8.6v9-9Z"
  })
}));
SvgMail.displayName = 'SvgMail';
const MailIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgMail, _objectSpread$L(_objectSpread$L({}, props), {}, {
      className: createClass(getIconStyles$L(props))
    }));
  }
});
MailIcon.displayName = 'MailIcon';
var MailIcon$1 = MailIcon;

function ownKeys$K(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$K(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$K(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$K(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$K = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$K = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$K[size], "px"),
        height: "".concat(iconSizes$K[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$K.big, "px"),
        height: "".concat(iconSizes$K.big, "px")
      };
  }
};
const getSizeStyle$K = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$K(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$K = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$K = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$K(props.color), ";}&,image{", getSizeStyle$K(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgMinimize = props => jsxRuntime.jsx("svg", _objectSpread$K(_objectSpread$K({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M4.463 13c-.426 0-.776-.144-1.05-.432A1.484 1.484 0 0 1 3 11.5c0-.425.143-.781.43-1.068A1.453 1.453 0 0 1 4.5 10h15.038c.424 0 .774.144 1.05.432.274.287.412.643.412 1.068 0 .425-.144.781-.432 1.068A1.448 1.448 0 0 1 19.5 13H4.463Z"
  })
}));
SvgMinimize.displayName = 'SvgMinimize';
const MinimizeIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgMinimize, _objectSpread$K(_objectSpread$K({}, props), {}, {
      className: createClass(getIconStyles$K(props))
    }));
  }
});
MinimizeIcon.displayName = 'MinimizeIcon';
var MinimizeIcon$1 = MinimizeIcon;

function ownKeys$J(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$J(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$J(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$J(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$J = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$J = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$J[size], "px"),
        height: "".concat(iconSizes$J[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$J.big, "px"),
        height: "".concat(iconSizes$J.big, "px")
      };
  }
};
const getSizeStyle$J = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$J(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$J = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$J = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$J(props.color), ";}&,image{", getSizeStyle$J(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgNestedView = props => jsxRuntime.jsx("svg", _objectSpread$J(_objectSpread$J({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fillRule: "evenodd",
    d: "M16.235 7.176H3.53A.53.53 0 0 1 3 6.647V4.53A.53.53 0 0 1 3.53 4h12.705a.53.53 0 0 1 .53.53v2.117a.53.53 0 0 1-.53.53ZM20.538 14H9.462C9.207 14 9 13.776 9 13.5v-2c0-.276.207-.5.462-.5h11.076c.255 0 .462.224.462.5v2c0 .276-.207.5-.462.5Zm0 6H9.462C9.207 20 9 19.776 9 19.5v-2c0-.276.207-.5.462-.5h11.076c.255 0 .462.224.462.5v2c0 .276-.207.5-.462.5ZM7.01 19c.317 0 .573.224.573.5s-.256.5-.573.5H3.573C3.257 20 3 19.776 3 19.5v-10c0-.276.257-.5.573-.5.316 0 .573.224.573.5V13H7.01c.317 0 .573.224.573.5s-.256.5-.573.5H4.146v5H7.01Z"
  })
}));
SvgNestedView.displayName = 'SvgNestedView';
const NestedViewIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgNestedView, _objectSpread$J(_objectSpread$J({}, props), {}, {
      className: createClass(getIconStyles$J(props))
    }));
  }
});
NestedViewIcon.displayName = 'NestedViewIcon';
var NestedViewIcon$1 = NestedViewIcon;

function ownKeys$I(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$I(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$I(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$I(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$I = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$I = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$I[size], "px"),
        height: "".concat(iconSizes$I[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$I.big, "px"),
        height: "".concat(iconSizes$I.big, "px")
      };
  }
};
const getSizeStyle$I = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$I(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$I = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$I = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$I(props.color), ";}&,image{", getSizeStyle$I(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgOperations = props => jsxRuntime.jsx("svg", _objectSpread$I(_objectSpread$I({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsxs("g", {
    fillRule: "nonzero",
    children: [jsxRuntime.jsx("path", {
      d: "M8 11c-.542 0-1 .458-1 1 0 .56.458 1 1 1 .56 0 1-.458 1-1s-.44-1-1-1ZM16 11c-.56 0-1 .458-1 1 0 .56.458 1 1 1s1-.44 1-1c0-.542-.458-1-1-1ZM12 11c-.56 0-1 .458-1 1 0 .56.458 1 1 1 .56 0 1-.458 1-1s-.44-1-1-1Z"
    }), jsxRuntime.jsx("path", {
      d: "M21 14.5h-1.79l.027-.13a7.13 7.13 0 0 0 .13-1.009l.007-.098c.009-.122.017-.243.017-.367 0-3.635-2.59-5.532-6.195-5.89v2.225L9.555 6.11 13.195 3l.001 2.241c4.592.364 7.958 3.04 7.958 7.655 0 .083-.006.164-.011.245a5.12 5.12 0 0 0-.009.142 9.046 9.046 0 0 1-.118 1.127L21 14.5ZM10.881 21v-2.235c-4.649-.316-7.826-2.994-7.826-7.66 0-.11.008-.218.015-.326l.01-.146c.018-.36.056-.711.114-1.043l.015-.09H5l-.028.131c-.07.336-.115.7-.135 1.111l-.008.121c-.006.08-.011.16-.011.241 0 3.685 2.402 5.585 6.062 5.896v-2.255l3.642 3.145-3.64 3.11Z"
    })]
  })
}));
SvgOperations.displayName = 'SvgOperations';
const OperationsIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgOperations, _objectSpread$I(_objectSpread$I({}, props), {}, {
      className: createClass(getIconStyles$I(props))
    }));
  }
});
OperationsIcon.displayName = 'OperationsIcon';
var OperationsIcon$1 = OperationsIcon;

function ownKeys$H(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$H(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$H(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$H(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$H = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$H = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$H[size], "px"),
        height: "".concat(iconSizes$H[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$H.big, "px"),
        height: "".concat(iconSizes$H.big, "px")
      };
  }
};
const getSizeStyle$H = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$H(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$H = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$H = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$H(props.color), ";}&,image{", getSizeStyle$H(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgPageGear = props => jsxRuntime.jsxs("svg", _objectSpread$H(_objectSpread$H({
  xmlns: "http://www.w3.org/2000/svg",
  xmlnsXlink: "http://www.w3.org/1999/xlink",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: [jsxRuntime.jsx("defs", {
    children: jsxRuntime.jsx("path", {
      id: "page-gear_react_svg__a",
      d: "m12.553 4-.062-.059h-.045l.062.059h.045Zm3.824 6.086H11V4.941H5V19.06h4.779a.97.97 0 1 1 0 1.941h-5.53C3.567 21 3 20.467 3 19.794V4.206C3 3.533 3.566 3 4.25 3h9.032L18 7.441c.24.226.377.537.377.863v2.403a1 1 0 0 1-2 0v-.62Zm-.914-2.328L13.06 5.494v2.264h2.404Zm4.488 9.183.976.742a.223.223 0 0 1 .055.288l-.925 1.558c-.055.099-.176.139-.282.099l-1.152-.45c-.24.175-.5.328-.782.44l-.176 1.193a.224.224 0 0 1-.226.189h-1.85a.224.224 0 0 1-.228-.189l-.175-1.192a3.404 3.404 0 0 1-.782-.442l-1.152.45a.236.236 0 0 1-.282-.098l-.926-1.558a.223.223 0 0 1 .056-.288l.976-.742v-.882l-.976-.743a.218.218 0 0 1-.056-.288l.926-1.556c.055-.1.176-.14.282-.1l1.152.45c.24-.175.5-.328.782-.44l.175-1.193a.224.224 0 0 1 .227-.189h1.85c.116 0 .213.081.227.189l.176 1.193c.282.112.541.26.782.44l1.152-.45a.236.236 0 0 1 .282.1l.925 1.556a.223.223 0 0 1-.055.288l-.976.743v.882Zm-3.438 1.134c.893 0 1.62-.706 1.62-1.575 0-.868-.727-1.575-1.62-1.575-.892 0-1.619.707-1.619 1.575 0 .869.727 1.575 1.62 1.575Z"
    })
  }), jsxRuntime.jsx("use", {
    xlinkHref: "#page-gear_react_svg__a",
    fill: "#1A1A1A",
    fillRule: "evenodd"
  })]
}));
SvgPageGear.displayName = 'SvgPageGear';
const PageGearIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgPageGear, _objectSpread$H(_objectSpread$H({}, props), {}, {
      className: createClass(getIconStyles$H(props))
    }));
  }
});
PageGearIcon.displayName = 'PageGearIcon';
var PageGearIcon$1 = PageGearIcon;

function ownKeys$G(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$G(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$G(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$G(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$G = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$G = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$G[size], "px"),
        height: "".concat(iconSizes$G[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$G.big, "px"),
        height: "".concat(iconSizes$G.big, "px")
      };
  }
};
const getSizeStyle$G = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$G(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$G = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$G = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$G(props.color), ";}&,image{", getSizeStyle$G(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgPages = props => jsxRuntime.jsx("svg", _objectSpread$G(_objectSpread$G({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M4.73 18.838c-.476 0-.883-.17-1.221-.508A1.666 1.666 0 0 1 3 17.108V6.73c0-.476.17-.883.509-1.221A1.663 1.663 0 0 1 4.729 5h4.476a1.71 1.71 0 0 1 1.211.497L11.65 6.73h6.918c.476 0 .883.17 1.222.508.339.339.508.746.508 1.221h-9.362l-1.73-1.73H4.73v10.379l1.708-5.687c.115-.374.328-.673.638-.897.31-.223.652-.335 1.027-.335h11.156c.591 0 1.056.234 1.395.702.339.47.429.977.27 1.525l-1.557 5.19a1.69 1.69 0 0 1-.637.897 1.72 1.72 0 0 1-1.027.335H4.73Zm1.816-1.73h11.157l1.556-5.19H8.103l-1.557 5.19Z"
  })
}));
SvgPages.displayName = 'SvgPages';
const PagesIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgPages, _objectSpread$G(_objectSpread$G({}, props), {}, {
      className: createClass(getIconStyles$G(props))
    }));
  }
});
PagesIcon.displayName = 'PagesIcon';
var PagesIcon$1 = PagesIcon;

function ownKeys$F(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$F(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$F(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$F(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$F = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$F = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$F[size], "px"),
        height: "".concat(iconSizes$F[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$F.big, "px"),
        height: "".concat(iconSizes$F.big, "px")
      };
  }
};
const getSizeStyle$F = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$F(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$F = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$F = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$F(props.color), ";}&,image{", getSizeStyle$F(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgPaperBillInverted = props => jsxRuntime.jsx("svg", _objectSpread$F(_objectSpread$F({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M5.848 21.8a2.747 2.747 0 0 1-2.017-.83A2.747 2.747 0 0 1 3 18.951v-1.9c0-.268.091-.494.273-.675a.916.916 0 0 1 .676-.274h1.9V3.498c0-.142.063-.229.19-.26.126-.032.253.015.38.142l.854.854 1.092-1.092a.455.455 0 0 1 .664 0l1.092 1.092 1.092-1.092a.456.456 0 0 1 .665 0l1.092 1.092 1.092-1.092a.455.455 0 0 1 .664 0l1.092 1.092 1.092-1.092a.455.455 0 0 1 .665 0l1.092 1.092.854-.854c.127-.127.253-.178.38-.155.127.024.19.115.19.273v15.453c0 .792-.277 1.464-.83 2.018a2.747 2.747 0 0 1-2.019.831H5.848Zm11.394-1.899a.917.917 0 0 0 .677-.273.917.917 0 0 0 .273-.677V5.66H7.747v10.444h7.596c.27 0 .495.091.677.273a.916.916 0 0 1 .273.676v1.9c0 .268.091.494.273.676a.916.916 0 0 0 .676.273ZM9.622 9.457a.88.88 0 0 1-.664-.274.94.94 0 0 1-.261-.676.92.92 0 0 1 .273-.677.918.918 0 0 1 .676-.272h3.798c.27 0 .495.09.677.272a.921.921 0 0 1 .273.677c0 .27-.09.494-.273.676a.92.92 0 0 1-.677.274H9.623Zm0 2.848a.88.88 0 0 1-.664-.273.94.94 0 0 1-.261-.676.92.92 0 0 1 .273-.677.918.918 0 0 1 .676-.273h3.798c.27 0 .495.09.677.273a.92.92 0 0 1 .273.677c0 .269-.09.494-.273.676a.92.92 0 0 1-.677.273H9.623Zm6.67-2.848a.916.916 0 0 1-.675-.274.916.916 0 0 1-.274-.676.92.92 0 0 1 .274-.677.918.918 0 0 1 .676-.272c.269 0 .494.09.676.272a.92.92 0 0 1 .273.677.916.916 0 0 1-.273.676.916.916 0 0 1-.676.274Zm0 2.848a.916.916 0 0 1-.675-.273.916.916 0 0 1-.274-.676.92.92 0 0 1 .274-.677.918.918 0 0 1 .676-.273c.269 0 .494.09.676.273a.92.92 0 0 1 .273.677.916.916 0 0 1-.273.676.916.916 0 0 1-.676.273ZM5.849 19.901h8.546v-1.899H4.899v.95c0 .268.09.494.272.676a.92.92 0 0 0 .677.273Zm-.949 0v-1.899 1.899Z"
  })
}));
SvgPaperBillInverted.displayName = 'SvgPaperBillInverted';
const PaperBillInvertedIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgPaperBillInverted, _objectSpread$F(_objectSpread$F({}, props), {}, {
      className: createClass(getIconStyles$F(props))
    }));
  }
});
PaperBillInvertedIcon.displayName = 'PaperBillInvertedIcon';
var PaperBillInvertedIcon$1 = PaperBillInvertedIcon;

function ownKeys$E(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$E(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$E(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$E(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$E = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$E = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$E[size], "px"),
        height: "".concat(iconSizes$E[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$E.big, "px"),
        height: "".concat(iconSizes$E.big, "px")
      };
  }
};
const getSizeStyle$E = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$E(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$E = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$E = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$E(props.color), ";}&,image{", getSizeStyle$E(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgPaperclip = props => jsxRuntime.jsx("svg", _objectSpread$E(_objectSpread$E({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M11.95 21c-1.38 0-2.55-.48-3.51-1.44S7 17.43 7 16.05V6.6c0-.99.353-1.837 1.057-2.542C8.762 3.353 9.61 3 10.6 3c.99 0 1.838.353 2.543 1.058.704.705 1.057 1.552 1.057 2.542v8.55c0 .63-.217 1.162-.652 1.597a2.173 2.173 0 0 1-1.598.653c-.63 0-1.162-.217-1.598-.652A2.173 2.173 0 0 1 9.7 15.15V7.275a.653.653 0 0 1 .675-.675.656.656 0 0 1 .675.675v7.875c0 .255.086.469.26.64.171.174.385.26.64.26a.872.872 0 0 0 .642-.26.87.87 0 0 0 .258-.64V6.6c0-.63-.217-1.162-.652-1.597A2.173 2.173 0 0 0 10.6 4.35c-.63 0-1.162.218-1.598.653A2.173 2.173 0 0 0 8.35 6.6v9.45c0 .99.353 1.837 1.058 2.543.705.704 1.552 1.057 2.542 1.057.99 0 1.838-.352 2.543-1.057.704-.706 1.057-1.553 1.057-2.543V7.275a.653.653 0 0 1 .675-.675.656.656 0 0 1 .675.675v8.775c0 1.38-.48 2.55-1.44 3.51S13.33 21 11.95 21Z"
  })
}));
SvgPaperclip.displayName = 'SvgPaperclip';
const PaperclipIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgPaperclip, _objectSpread$E(_objectSpread$E({}, props), {}, {
      className: createClass(getIconStyles$E(props))
    }));
  }
});
PaperclipIcon.displayName = 'PaperclipIcon';
var PaperclipIcon$1 = PaperclipIcon;

function ownKeys$D(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$D(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$D(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$D(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$D = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$D = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$D[size], "px"),
        height: "".concat(iconSizes$D[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$D.big, "px"),
        height: "".concat(iconSizes$D.big, "px")
      };
  }
};
const getSizeStyle$D = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$D(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$D = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$D = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$D(props.color), ";}&,image{", getSizeStyle$D(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgPinFilled = props => jsxRuntime.jsx("svg", _objectSpread$D(_objectSpread$D({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m16 11.1 1.8 1.8v1.8h-4.5v5.4l-.9.9-.9-.9v-5.4H7v-1.8l1.8-1.8V4.8h-.9V3h9v1.8H16v6.3Z"
  })
}));
SvgPinFilled.displayName = 'SvgPinFilled';
const PinFilledIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgPinFilled, _objectSpread$D(_objectSpread$D({}, props), {}, {
      className: createClass(getIconStyles$D(props))
    }));
  }
});
PinFilledIcon.displayName = 'PinFilledIcon';
var PinFilledIcon$1 = PinFilledIcon;

function ownKeys$C(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$C(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$C(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$C(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$C = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$C = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$C[size], "px"),
        height: "".concat(iconSizes$C[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$C.big, "px"),
        height: "".concat(iconSizes$C.big, "px")
      };
  }
};
const getSizeStyle$C = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$C(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$C = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$C = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$C(props.color), ";}&,image{", getSizeStyle$C(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgPinGear = props => jsxRuntime.jsxs("svg", _objectSpread$C(_objectSpread$C({
  xmlns: "http://www.w3.org/2000/svg",
  xmlnsXlink: "http://www.w3.org/1999/xlink",
  width: 18,
  height: 18,
  viewBox: "0 0 18 18",
  role: "img"
}, props), {}, {
  children: [jsxRuntime.jsx("defs", {
    children: jsxRuntime.jsx("path", {
      id: "pin-gear_react_svg__a",
      d: "m19.938 16.541.976.742a.223.223 0 0 1 .056.288l-.925 1.557c-.056.1-.176.14-.282.1l-1.152-.45c-.241.175-.5.328-.782.44l-.176 1.193a.224.224 0 0 1-.227.189h-1.85a.224.224 0 0 1-.227-.189l-.176-1.193a3.404 3.404 0 0 1-.782-.44l-1.151.45a.236.236 0 0 1-.283-.1l-.925-1.557a.223.223 0 0 1 .056-.288l.976-.742v-.882l-.976-.743a.218.218 0 0 1-.056-.288l.925-1.557c.056-.099.176-.139.283-.099l1.151.45c.241-.175.5-.328.782-.44l.176-1.193a.224.224 0 0 1 .227-.189h1.85c.116 0 .213.081.227.189l.176 1.192c.282.113.541.261.782.441l1.152-.45a.236.236 0 0 1 .282.1l.925 1.556a.223.223 0 0 1-.056.288l-.976.743v.882Zm-3.437 1.134c.893 0 1.62-.707 1.62-1.575 0-.869-.727-1.575-1.62-1.575-.893 0-1.62.706-1.62 1.575 0 .868.727 1.575 1.62 1.575Z"
    })
  }), jsxRuntime.jsxs("g", {
    fillRule: "evenodd",
    children: [jsxRuntime.jsx("use", {
      xlinkHref: "#pin-gear_react_svg__a",
      fill: "#1A1A1A",
      transform: "translate(-3 -3)"
    }), jsxRuntime.jsx("path", {
      fill: "#1A1A1A",
      d: "m5.664 11.893-3.74 5.342-1.407-.985 3.74-5.342-3.4-2.382c.867-.762 1.619-.92 2.256-.475.001.002 1.329-1.894 3.982-5.686C6.21 1.63 6.063.844 6.653 0c0-.003 2.803 1.96 8.412 5.89-.758.839-1.539.977-2.343.414.002.001-.565.81-1.7 2.428l-1.394-.976 1.7-2.428-2.826-1.98L4.52 9.038l2.11 1.477 1.712 1.2-.965 1.378-1.713-1.2Z"
    })]
  })]
}));
SvgPinGear.displayName = 'SvgPinGear';
const PinGearIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgPinGear, _objectSpread$C(_objectSpread$C({}, props), {}, {
      className: createClass(getIconStyles$C(props))
    }));
  }
});
PinGearIcon.displayName = 'PinGearIcon';
var PinGearIcon$1 = PinGearIcon;

function ownKeys$B(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$B(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$B(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$B(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$B = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$B = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$B[size], "px"),
        height: "".concat(iconSizes$B[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$B.big, "px"),
        height: "".concat(iconSizes$B.big, "px")
      };
  }
};
const getSizeStyle$B = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$B(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$B = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$B = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$B(props.color), ";}&,image{", getSizeStyle$B(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgPinLinear = props => jsxRuntime.jsx("svg", _objectSpread$B(_objectSpread$B({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m16 11.1 1.8 1.8v1.8h-4.5v5.4l-.9.9-.9-.9v-5.4H7v-1.8l1.8-1.8V4.8h-.9V3h9v1.8H16v6.3Zm-6.435 1.8h5.67L14.2 11.865V4.8h-3.6v7.065L9.565 12.9Z"
  })
}));
SvgPinLinear.displayName = 'SvgPinLinear';
const PinLinearIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgPinLinear, _objectSpread$B(_objectSpread$B({}, props), {}, {
      className: createClass(getIconStyles$B(props))
    }));
  }
});
PinLinearIcon.displayName = 'PinLinearIcon';
var PinLinearIcon$1 = PinLinearIcon;

function ownKeys$A(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$A(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$A(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$A(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$A = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$A = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$A[size], "px"),
        height: "".concat(iconSizes$A[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$A.big, "px"),
        height: "".concat(iconSizes$A.big, "px")
      };
  }
};
const getSizeStyle$A = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$A(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$A = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$A = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$A(props.color), ";}&,image{", getSizeStyle$A(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgPlugin = props => jsxRuntime.jsx("svg", _objectSpread$A(_objectSpread$A({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M8.354 20.5H4.846a1.78 1.78 0 0 1-1.304-.542A1.78 1.78 0 0 1 3 18.654v-3.508c.738 0 1.385-.234 1.938-.703.554-.47.831-1.066.831-1.79 0-.722-.277-1.319-.83-1.788A2.908 2.908 0 0 0 3 10.16V6.655c0-.508.18-.942.542-1.304a1.778 1.778 0 0 1 1.304-.542h3.692c0-.646.224-1.193.67-1.639.446-.446.992-.669 1.638-.669.646 0 1.193.223 1.639.67.446.445.669.992.669 1.638h3.692c.508 0 .943.18 1.305.542.36.362.541.796.541 1.304v3.692c.646 0 1.193.223 1.639.67.446.445.669.992.669 1.638 0 .646-.223 1.192-.67 1.638-.445.447-.991.67-1.638.67v3.692c0 .508-.18.942-.541 1.304a1.78 1.78 0 0 1-1.305.542h-3.508c0-.77-.242-1.423-.726-1.962-.485-.538-1.073-.807-1.766-.807-.692 0-1.28.269-1.765.807-.485.539-.727 1.193-.727 1.962Zm-3.508-1.846h1.962c.369-1.015.961-1.73 1.777-2.146.815-.416 1.569-.623 2.261-.623.693 0 1.446.207 2.262.623.815.415 1.407 1.13 1.777 2.146h1.961v-5.539h1.846c.123 0 .231-.046.323-.138a.443.443 0 0 0 0-.646.443.443 0 0 0-.323-.139h-1.846V6.654h-5.538V4.808a.443.443 0 0 0-.139-.323.443.443 0 0 0-.646 0 .443.443 0 0 0-.138.323v1.846H4.846v2.03c.83.308 1.5.824 2.008 1.547s.761 1.53.761 2.423c0 .877-.253 1.677-.761 2.4a4.307 4.307 0 0 1-2.008 1.57v2.03Z"
  })
}));
SvgPlugin.displayName = 'SvgPlugin';
const PluginIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgPlugin, _objectSpread$A(_objectSpread$A({}, props), {}, {
      className: createClass(getIconStyles$A(props))
    }));
  }
});
PluginIcon.displayName = 'PluginIcon';
var PluginIcon$1 = PluginIcon;

function ownKeys$z(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$z(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$z(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$z(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$z = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$z = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$z[size], "px"),
        height: "".concat(iconSizes$z[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$z.big, "px"),
        height: "".concat(iconSizes$z.big, "px")
      };
  }
};
const getSizeStyle$z = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$z(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$z = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$z = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$z(props.color), ";}&,image{", getSizeStyle$z(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgPlusBold = props => jsxRuntime.jsx("svg", _objectSpread$z(_objectSpread$z({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12 20c-.324 0-.595-.11-.814-.33-.22-.218-.329-.489-.329-.813v-5.714H5.143c-.324 0-.596-.11-.815-.33A1.105 1.105 0 0 1 4 12c0-.324.11-.595.328-.815.22-.219.491-.328.815-.328h5.714V5.143c0-.324.11-.596.33-.815.218-.219.49-.328.813-.328.324 0 .595.11.815.328.219.22.328.491.328.815v5.714h5.714c.324 0 .595.11.814.328.22.22.329.491.329.815 0 .324-.11.595-.33.814-.218.22-.489.329-.813.329h-5.714v5.714c0 .324-.11.595-.328.814-.22.22-.491.329-.815.329Z"
  })
}));
SvgPlusBold.displayName = 'SvgPlusBold';
const PlusBoldIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgPlusBold, _objectSpread$z(_objectSpread$z({}, props), {}, {
      className: createClass(getIconStyles$z(props))
    }));
  }
});
PlusBoldIcon.displayName = 'PlusBoldIcon';
var PlusBoldIcon$1 = PlusBoldIcon;

function ownKeys$y(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$y(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$y(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$y(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$y = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$y = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$y[size], "px"),
        height: "".concat(iconSizes$y[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$y.big, "px"),
        height: "".concat(iconSizes$y.big, "px")
      };
  }
};
const getSizeStyle$y = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$y(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$y = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$y = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$y(props.color), ";}&,image{", getSizeStyle$y(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgPlusThin = props => jsxRuntime.jsx("svg", _objectSpread$y(_objectSpread$y({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12 20c-.324 0-.595-.11-.814-.33-.22-.218-.329-.489-.329-.813v-5.714H5.143c-.324 0-.596-.11-.815-.33A1.105 1.105 0 0 1 4 12c0-.324.11-.595.328-.815.22-.219.491-.328.815-.328h5.714V5.143c0-.324.11-.596.33-.815.218-.219.49-.328.813-.328.324 0 .595.11.815.328.219.22.328.491.328.815v5.714h5.714c.324 0 .595.11.814.328.22.22.329.491.329.815 0 .324-.11.595-.33.814-.218.22-.489.329-.813.329h-5.714v5.714c0 .324-.11.595-.328.814-.22.22-.491.329-.815.329Z"
  })
}));
SvgPlusThin.displayName = 'SvgPlusThin';
const PlusThinIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgPlusThin, _objectSpread$y(_objectSpread$y({}, props), {}, {
      className: createClass(getIconStyles$y(props))
    }));
  }
});
PlusThinIcon.displayName = 'PlusThinIcon';
var PlusThinIcon$1 = PlusThinIcon;

function ownKeys$x(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$x(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$x(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$x(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$x = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$x = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$x[size], "px"),
        height: "".concat(iconSizes$x[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$x.big, "px"),
        height: "".concat(iconSizes$x.big, "px")
      };
  }
};
const getSizeStyle$x = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$x(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$x = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$x = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$x(props.color), ";}&,image{", getSizeStyle$x(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgRefresh = props => jsxRuntime.jsx("svg", _objectSpread$x(_objectSpread$x({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12 21c-2.512 0-4.64-.872-6.384-2.616C3.872 16.641 3 14.512 3 12c0-2.512.872-4.64 2.616-6.384C7.359 3.872 9.488 3 12 3c1.294 0 2.531.267 3.713.802a8.57 8.57 0 0 1 3.037 2.292V4.125c0-.319.108-.586.324-.802.215-.215.482-.323.801-.323.319 0 .586.108.801.323.216.216.324.483.324.802V9.75c0 .319-.108.586-.324.801a1.086 1.086 0 0 1-.801.324H14.25c-.319 0-.586-.108-.801-.324a1.086 1.086 0 0 1-.324-.801c0-.319.108-.586.324-.802.215-.215.482-.323.801-.323h3.6a6.567 6.567 0 0 0-2.46-2.475c-1.041-.6-2.171-.9-3.39-.9-1.875 0-3.469.656-4.781 1.969C5.906 8.53 5.25 10.125 5.25 12c0 1.875.656 3.469 1.969 4.781C8.53 18.094 10.125 18.75 12 18.75c1.294 0 2.49-.342 3.586-1.027a6.43 6.43 0 0 0 2.46-2.742c.095-.206.25-.38.466-.52.215-.14.435-.211.66-.211.431 0 .755.15.97.45.216.3.24.638.07 1.013a8.77 8.77 0 0 1-3.29 3.838C15.44 20.517 13.8 21 12 21Z"
  })
}));
SvgRefresh.displayName = 'SvgRefresh';
const RefreshIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgRefresh, _objectSpread$x(_objectSpread$x({}, props), {}, {
      className: createClass(getIconStyles$x(props))
    }));
  }
});
RefreshIcon.displayName = 'RefreshIcon';
var RefreshIcon$1 = RefreshIcon;

function ownKeys$w(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$w(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$w(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$w(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$w = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$w = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$w[size], "px"),
        height: "".concat(iconSizes$w[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$w.big, "px"),
        height: "".concat(iconSizes$w.big, "px")
      };
  }
};
const getSizeStyle$w = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$w(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$w = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$w = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$w(props.color), ";}&,image{", getSizeStyle$w(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgRestore = props => jsxRuntime.jsx("svg", _objectSpread$w(_objectSpread$w({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m13 11.6 2.5 2.5a.948.948 0 0 1 .275.7.948.948 0 0 1-.275.7.948.948 0 0 1-.7.275.948.948 0 0 1-.7-.275l-2.8-2.8a1.03 1.03 0 0 1-.3-.725V8c0-.283.096-.521.288-.713A.967.967 0 0 1 12 7a.97.97 0 0 1 .713.287A.97.97 0 0 1 13 8v3.6ZM12 21c-2.017 0-3.825-.596-5.425-1.788-1.6-1.191-2.675-2.745-3.225-4.662-.083-.3-.054-.583.088-.85a.947.947 0 0 1 .662-.5.828.828 0 0 1 .763.187c.225.192.379.43.462.713a6.571 6.571 0 0 0 2.513 3.55A6.922 6.922 0 0 0 12 19c1.95 0 3.604-.68 4.962-2.038C18.321 15.604 19 13.95 19 12c0-1.95-.68-3.604-2.038-4.963C15.604 5.679 13.95 5 12 5a6.75 6.75 0 0 0-3.225.8A7.431 7.431 0 0 0 6.25 8H8a.97.97 0 0 1 .713.287A.97.97 0 0 1 9 9c0 .283-.096.52-.287.712A.968.968 0 0 1 8 10H4a.965.965 0 0 1-.712-.288A.965.965 0 0 1 3 9V5c0-.283.096-.521.288-.713A.967.967 0 0 1 4 4a.97.97 0 0 1 .713.287A.97.97 0 0 1 5 5v1.35a8.73 8.73 0 0 1 3.113-2.475A8.928 8.928 0 0 1 12 3c1.25 0 2.421.237 3.513.712a9.168 9.168 0 0 1 2.85 1.925 9.167 9.167 0 0 1 1.925 2.85A8.715 8.715 0 0 1 21 12c0 1.25-.237 2.42-.712 3.512a9.151 9.151 0 0 1-1.925 2.85 9.158 9.158 0 0 1-2.85 1.926A8.715 8.715 0 0 1 12 21Z"
  })
}));
SvgRestore.displayName = 'SvgRestore';
const RestoreIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgRestore, _objectSpread$w(_objectSpread$w({}, props), {}, {
      className: createClass(getIconStyles$w(props))
    }));
  }
});
RestoreIcon.displayName = 'RestoreIcon';
var RestoreIcon$1 = RestoreIcon;

function ownKeys$v(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$v(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$v(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$v(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$v = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$v = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$v[size], "px"),
        height: "".concat(iconSizes$v[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$v.big, "px"),
        height: "".concat(iconSizes$v.big, "px")
      };
  }
};
const getSizeStyle$v = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$v(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$v = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$v = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$v(props.color), ";}&,image{", getSizeStyle$v(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgRevert = props => jsxRuntime.jsx("svg", _objectSpread$v(_objectSpread$v({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M7.132 20.27a1.12 1.12 0 0 1-.824-.334 1.117 1.117 0 0 1-.332-.822c0-.328.11-.602.332-.823a1.12 1.12 0 0 1 .824-.333h7.05c1.213 0 2.267-.385 3.162-1.156.897-.77 1.345-1.733 1.345-2.889 0-1.156-.448-2.119-1.345-2.89-.895-.77-1.95-1.155-3.163-1.155h-7.28l2.195 2.196c.212.212.318.481.318.809 0 .327-.106.597-.318.809a1.096 1.096 0 0 1-.809.318c-.327 0-.597-.106-.809-.318l-4.16-4.16a1.02 1.02 0 0 1-.246-.376A1.288 1.288 0 0 1 3 8.712c0-.154.024-.298.072-.433.048-.135.13-.26.246-.376l4.16-4.16c.212-.212.482-.318.81-.318.327 0 .596.106.808.318.212.212.318.481.318.809 0 .327-.106.597-.318.809L6.9 7.557h7.281c1.869 0 3.473.606 4.812 1.82C20.33 10.59 21 12.102 21 13.913c0 1.81-.67 3.323-2.007 4.536-1.34 1.214-2.943 1.82-4.812 1.82h-7.05Z"
  })
}));
SvgRevert.displayName = 'SvgRevert';
const RevertIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgRevert, _objectSpread$v(_objectSpread$v({}, props), {}, {
      className: createClass(getIconStyles$v(props))
    }));
  }
});
RevertIcon.displayName = 'RevertIcon';
var RevertIcon$1 = RevertIcon;

function ownKeys$u(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$u(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$u(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$u(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$u = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$u = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$u[size], "px"),
        height: "".concat(iconSizes$u[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$u.big, "px"),
        height: "".concat(iconSizes$u.big, "px")
      };
  }
};
const getSizeStyle$u = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$u(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$u = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$u = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$u(props.color), ";}&,image{", getSizeStyle$u(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgReview = props => jsxRuntime.jsx("svg", _objectSpread$u(_objectSpread$u({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m11.232 14.813-1.26-1.26a.934.934 0 0 0-.292-.203.82.82 0 0 0-.326-.067.9.9 0 0 0-.641.27.877.877 0 0 0-.27.641c0 .247.09.461.27.641l1.912 1.935c.09.09.188.154.293.19a.989.989 0 0 0 .337.057c.12 0 .232-.018.337-.056a.784.784 0 0 0 .293-.191l3.803-3.803c.18-.18.27-.397.27-.652a.889.889 0 0 0-.27-.652.889.889 0 0 0-.653-.27.889.889 0 0 0-.652.27l-3.15 3.15ZM6.8 21c-.495 0-.919-.176-1.27-.528A1.734 1.734 0 0 1 5 19.2V4.8c0-.495.176-.919.53-1.272A1.733 1.733 0 0 1 6.8 3h6.458a1.78 1.78 0 0 1 1.26.518l4.364 4.365a1.78 1.78 0 0 1 .517 1.26V19.2c.001.495-.175.919-.527 1.272A1.736 1.736 0 0 1 17.6 21H6.8Zm6.3-12.6V4.8H6.8v14.4h10.8V9.3H14a.869.869 0 0 1-.64-.26.869.869 0 0 1-.26-.64ZM6.8 4.8v4.5-4.5 14.4V4.8Z"
  })
}));
SvgReview.displayName = 'SvgReview';
const ReviewIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgReview, _objectSpread$u(_objectSpread$u({}, props), {}, {
      className: createClass(getIconStyles$u(props))
    }));
  }
});
ReviewIcon.displayName = 'ReviewIcon';
var ReviewIcon$1 = ReviewIcon;

function ownKeys$t(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$t(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$t(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$t(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$t = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$t = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$t[size], "px"),
        height: "".concat(iconSizes$t[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$t.big, "px"),
        height: "".concat(iconSizes$t.big, "px")
      };
  }
};
const getSizeStyle$t = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$t(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$t = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$t = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$t(props.color), ";}&,image{", getSizeStyle$t(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgRightTriangleFilled = props => jsxRuntime.jsx("svg", _objectSpread$t(_objectSpread$t({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M3.715 21c-.317 0-.534-.146-.653-.44-.119-.292-.067-.55.154-.77L19.79 3.215c.222-.221.479-.273.772-.154.293.119.439.336.439.653v16.573a.692.692 0 0 1-.712.712H3.715Z"
  })
}));
SvgRightTriangleFilled.displayName = 'SvgRightTriangleFilled';
const RightTriangleFilledIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgRightTriangleFilled, _objectSpread$t(_objectSpread$t({}, props), {}, {
      className: createClass(getIconStyles$t(props))
    }));
  }
});
RightTriangleFilledIcon.displayName = 'RightTriangleFilledIcon';
var RightTriangleFilledIcon$1 = RightTriangleFilledIcon;

function ownKeys$s(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$s(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$s(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$s(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$s = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$s = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$s[size], "px"),
        height: "".concat(iconSizes$s[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$s.big, "px"),
        height: "".concat(iconSizes$s.big, "px")
      };
  }
};
const getSizeStyle$s = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$s(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$s = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$s = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$s(props.color), ";}&,image{", getSizeStyle$s(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgRightTriangleLinear = props => jsxRuntime.jsx("svg", _objectSpread$s(_objectSpread$s({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M5.425 19.575h14.15V5.425l-14.15 14.15ZM3.715 21c-.317 0-.534-.146-.653-.44-.119-.292-.067-.55.154-.77L19.79 3.215c.222-.221.479-.273.772-.154.293.119.439.336.439.653v16.573a.692.692 0 0 1-.712.712H3.715Z"
  })
}));
SvgRightTriangleLinear.displayName = 'SvgRightTriangleLinear';
const RightTriangleLinearIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgRightTriangleLinear, _objectSpread$s(_objectSpread$s({}, props), {}, {
      className: createClass(getIconStyles$s(props))
    }));
  }
});
RightTriangleLinearIcon.displayName = 'RightTriangleLinearIcon';
var RightTriangleLinearIcon$1 = RightTriangleLinearIcon;

function ownKeys$r(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$r(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$r(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$r(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$r = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$r = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$r[size], "px"),
        height: "".concat(iconSizes$r[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$r.big, "px"),
        height: "".concat(iconSizes$r.big, "px")
      };
  }
};
const getSizeStyle$r = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$r(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$r = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$r = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$r(props.color), ";}&,image{", getSizeStyle$r(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgRocket = props => jsxRuntime.jsx("svg", _objectSpread$r(_objectSpread$r({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M7.648 11.105c.215-.43.437-.844.668-1.242.23-.4.483-.798.759-1.197l-1.289-.253-1.933 1.933 1.795.76ZM18.74 4.777c-1.074.03-2.22.345-3.44.944a12.414 12.414 0 0 0-3.326 2.393 14.71 14.71 0 0 0-1.726 2.07c-.506.737-.882 1.428-1.127 2.072l2.623 2.6c.645-.245 1.335-.621 2.071-1.127a14.714 14.714 0 0 0 2.071-1.726 12.484 12.484 0 0 0 2.393-3.314c.599-1.212.913-2.355.944-3.429a.527.527 0 0 0-.034-.184.453.453 0 0 0-.265-.265.527.527 0 0 0-.184-.034ZM13.677 10.3a1.768 1.768 0 0 1-.53-1.3c0-.514.177-.948.53-1.3.353-.353.79-.53 1.312-.53.521 0 .959.177 1.311.53.353.352.53.786.53 1.3 0 .513-.177.947-.53 1.3-.352.353-.79.53-1.311.53-.522 0-.959-.177-1.312-.53Zm-.782 6.029.76 1.818 1.932-1.933-.253-1.289c-.399.276-.798.525-1.197.747a30.81 30.81 0 0 1-1.242.657ZM20.972 4.04a10.576 10.576 0 0 1-.829 4.935c-.675 1.604-1.74 3.134-3.198 4.591l.46 2.278c.061.307.046.606-.046.898a1.843 1.843 0 0 1-.46.76l-2.9 2.899a.9.9 0 0 1-.828.264.823.823 0 0 1-.667-.54L11.1 16.835 7.165 12.9l-3.29-1.404a.85.85 0 0 1-.553-.667.876.876 0 0 1 .253-.828l2.9-2.9c.214-.214.472-.368.771-.46.299-.092.602-.107.908-.046l2.279.46c1.457-1.457 2.987-2.523 4.59-3.198a10.575 10.575 0 0 1 4.936-.829c.123.016.246.05.368.103a1.047 1.047 0 0 1 .54.542c.055.122.09.245.105.368ZM4.726 15.362c.537-.537 1.192-.81 1.967-.817.775-.007 1.43.257 1.968.794.537.537.801 1.193.793 1.967-.007.775-.28 1.431-.816 1.968-.384.384-1.024.713-1.921.99-.898.276-2.137.521-3.717.736.215-1.58.46-2.819.736-3.717.276-.897.606-1.537.99-1.92Zm1.311 1.289c-.153.153-.306.433-.46.84a5.94 5.94 0 0 0-.322 1.23 6.473 6.473 0 0 0 1.232-.31c.406-.145.686-.295.84-.449a.996.996 0 0 0 .298-.667.835.835 0 0 0-.253-.667.872.872 0 0 0-.667-.265.953.953 0 0 0-.668.288Z"
  })
}));
SvgRocket.displayName = 'SvgRocket';
const RocketIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgRocket, _objectSpread$r(_objectSpread$r({}, props), {}, {
      className: createClass(getIconStyles$r(props))
    }));
  }
});
RocketIcon.displayName = 'RocketIcon';
var RocketIcon$1 = RocketIcon;

function ownKeys$q(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$q(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$q(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$q(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$q = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$q = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$q[size], "px"),
        height: "".concat(iconSizes$q[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$q.big, "px"),
        height: "".concat(iconSizes$q.big, "px")
      };
  }
};
const getSizeStyle$q = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$q(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$q = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$q = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$q(props.color), ";}&,image{", getSizeStyle$q(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgScreenGear = props => jsxRuntime.jsx("svg", _objectSpread$q(_objectSpread$q({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M5 21c-.55 0-1.021-.196-1.413-.587A1.928 1.928 0 0 1 3 19V5c0-.55.196-1.021.587-1.413A1.928 1.928 0 0 1 5 3h14c.55 0 1.021.196 1.413.587.391.392.587.863.587 1.413v14c0 .55-.196 1.021-.587 1.413A1.928 1.928 0 0 1 19 21H5Zm0-2h14V5H5v14Zm6.4-2h1.2a.432.432 0 0 0 .3-.113.595.595 0 0 0 .175-.287l.225-1.1c.2-.083.388-.17.563-.262a4.42 4.42 0 0 0 .537-.338l1.075.325c.117.033.225.03.325-.012a.559.559 0 0 0 .25-.213l.6-1a.375.375 0 0 0 .05-.325.681.681 0 0 0-.175-.3l-.825-.725c.033-.233.05-.45.05-.65s-.017-.417-.05-.65l.825-.725a.681.681 0 0 0 .175-.3.375.375 0 0 0-.05-.325l-.6-1a.559.559 0 0 0-.25-.213.482.482 0 0 0-.325-.012L14.4 9.1a4.415 4.415 0 0 0-.537-.338A7.272 7.272 0 0 0 13.3 8.5l-.225-1.1a.601.601 0 0 0-.175-.288.434.434 0 0 0-.3-.112h-1.2a.434.434 0 0 0-.3.112.601.601 0 0 0-.175.288L10.7 8.5c-.2.083-.388.17-.563.262A4.42 4.42 0 0 0 9.6 9.1l-1.075-.325a.482.482 0 0 0-.325.012.559.559 0 0 0-.25.213l-.6 1a.375.375 0 0 0-.05.325.681.681 0 0 0 .175.3l.825.725c-.033.233-.05.45-.05.65s.017.417.05.65l-.825.725a.681.681 0 0 0-.175.3.375.375 0 0 0 .05.325l.6 1c.067.1.15.171.25.213.1.041.208.045.325.012L9.6 14.9c.183.133.362.246.537.338.175.091.363.179.563.262l.225 1.1a.595.595 0 0 0 .175.287.432.432 0 0 0 .3.113Zm.6-3c-.55 0-1.02-.196-1.412-.588A1.923 1.923 0 0 1 10 12c0-.55.196-1.021.588-1.413A1.925 1.925 0 0 1 12 10c.55 0 1.021.196 1.413.587.391.392.587.863.587 1.413s-.196 1.02-.587 1.412A1.927 1.927 0 0 1 12 14Zm-7 5V5v14Z"
  })
}));
SvgScreenGear.displayName = 'SvgScreenGear';
const ScreenGearIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgScreenGear, _objectSpread$q(_objectSpread$q({}, props), {}, {
      className: createClass(getIconStyles$q(props))
    }));
  }
});
ScreenGearIcon.displayName = 'ScreenGearIcon';
var ScreenGearIcon$1 = ScreenGearIcon;

function ownKeys$p(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$p(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$p(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$p(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$p = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$p = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$p[size], "px"),
        height: "".concat(iconSizes$p[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$p.big, "px"),
        height: "".concat(iconSizes$p.big, "px")
      };
  }
};
const getSizeStyle$p = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$p(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$p = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$p = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$p(props.color), ";}&,image{", getSizeStyle$p(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgScreenUser = props => jsxRuntime.jsx("svg", _objectSpread$p(_objectSpread$p({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M5 17.85c.9-.883 1.946-1.58 3.138-2.088C9.329 15.254 10.617 15 12 15s2.671.254 3.863.762A10.09 10.09 0 0 1 19 17.85V5H5v12.85ZM12 13c.967 0 1.792-.342 2.475-1.025A3.372 3.372 0 0 0 15.5 9.5c0-.967-.342-1.792-1.025-2.475A3.372 3.372 0 0 0 12 6c-.967 0-1.792.342-2.475 1.025A3.372 3.372 0 0 0 8.5 9.5c0 .967.342 1.792 1.025 2.475A3.372 3.372 0 0 0 12 13Zm-7 8c-.55 0-1.021-.196-1.413-.587A1.928 1.928 0 0 1 3 19V5c0-.55.196-1.021.587-1.413A1.928 1.928 0 0 1 5 3h14c.55 0 1.021.196 1.413.587.391.392.587.863.587 1.413v14c0 .55-.196 1.021-.587 1.413A1.928 1.928 0 0 1 19 21H5Zm2-2h10v-.25a7.304 7.304 0 0 0-2.325-1.312A8.176 8.176 0 0 0 12 17c-.933 0-1.825.146-2.675.438A7.304 7.304 0 0 0 7 18.75V19Zm5-8c-.417 0-.77-.146-1.062-.438A1.444 1.444 0 0 1 10.5 9.5c0-.417.146-.77.438-1.062A1.444 1.444 0 0 1 12 8c.417 0 .77.146 1.062.438.292.291.438.645.438 1.062 0 .417-.146.77-.438 1.062A1.444 1.444 0 0 1 12 11Z"
  })
}));
SvgScreenUser.displayName = 'SvgScreenUser';
const ScreenUserIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgScreenUser, _objectSpread$p(_objectSpread$p({}, props), {}, {
      className: createClass(getIconStyles$p(props))
    }));
  }
});
ScreenUserIcon.displayName = 'ScreenUserIcon';
var ScreenUserIcon$1 = ScreenUserIcon;

function ownKeys$o(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$o(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$o(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$o(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$o = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$o = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$o[size], "px"),
        height: "".concat(iconSizes$o[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$o.big, "px"),
        height: "".concat(iconSizes$o.big, "px")
      };
  }
};
const getSizeStyle$o = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$o(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$o = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$o = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$o(props.color), ";}&,image{", getSizeStyle$o(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgSearch = props => jsxRuntime.jsx("svg", _objectSpread$o(_objectSpread$o({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m19.285 20.718-5.736-5.735a6.242 6.242 0 0 1-3.892 1.331c-1.86 0-3.435-.644-4.723-1.932C3.644 13.092 3 11.518 3 9.657c0-1.86.645-3.435 1.934-4.724C6.222 3.644 7.797 3 9.657 3c1.86 0 3.436.644 4.725 1.933 1.288 1.289 1.932 2.864 1.932 4.724a6.242 6.242 0 0 1-1.331 3.892l5.761 5.761a.94.94 0 0 1 .282.691.982.982 0 0 1-.308.717.97.97 0 0 1-.717.282.971.971 0 0 1-.716-.282Zm-9.628-6.452c1.28 0 2.369-.448 3.265-1.344.896-.896 1.344-1.985 1.344-3.265s-.448-2.368-1.344-3.265c-.896-.896-1.985-1.344-3.265-1.344s-2.368.448-3.265 1.344c-.896.897-1.344 1.985-1.344 3.265s.448 2.369 1.344 3.265c.897.896 1.985 1.344 3.265 1.344Z"
  })
}));
SvgSearch.displayName = 'SvgSearch';
const SearchIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgSearch, _objectSpread$o(_objectSpread$o({}, props), {}, {
      className: createClass(getIconStyles$o(props))
    }));
  }
});
SearchIcon.displayName = 'SearchIcon';
var SearchIcon$1 = SearchIcon;

function ownKeys$n(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$n(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$n(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$n(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$n = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$n = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$n[size], "px"),
        height: "".concat(iconSizes$n[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$n.big, "px"),
        height: "".concat(iconSizes$n.big, "px")
      };
  }
};
const getSizeStyle$n = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$n(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$n = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$n = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$n(props.color), ";}&,image{", getSizeStyle$n(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgSidebarCollapse = props => jsxRuntime.jsxs("svg", _objectSpread$n(_objectSpread$n({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  fill: "none",
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: [jsxRuntime.jsx("path", {
    fill: "#1A1A1A",
    d: "M4.5 21c-.412 0-.766-.147-1.06-.44A1.445 1.445 0 0 1 3 19.5v-15c0-.412.147-.766.44-1.06.294-.293.648-.44 1.06-.44h15c.413 0 .766.147 1.06.44.293.294.44.648.44 1.06v15c0 .413-.147.766-.44 1.06-.294.293-.647.44-1.06.44h-15Zm0-1.5h15v-15h-15v15Z"
  }), jsxRuntime.jsx("path", {
    fill: "#1A1A1A",
    fillRule: "evenodd",
    d: "M12.642 12.005c0-.103.013-.2.041-.291a.7.7 0 0 1 .14-.253l3.058-3.596a.544.544 0 0 1 .455-.203.6.6 0 0 1 .454.223.81.81 0 0 1 .182.544.81.81 0 0 1-.182.544l-2.578 3.032 2.595 3.052c.12.143.179.32.174.535a.832.832 0 0 1-.19.534.58.58 0 0 1-.464.214.58.58 0 0 1-.463-.214l-3.04-3.576a.7.7 0 0 1-.14-.253.99.99 0 0 1-.042-.292Z",
    clipRule: "evenodd"
  }), jsxRuntime.jsx("path", {
    fill: "#1A1A1A",
    d: "M3.963 4.768c0-.798.648-1.446 1.446-1.446h4.34c.798 0 1.446.648 1.446 1.446v14.465c0 .799-.648 1.446-1.446 1.446h-4.34a1.446 1.446 0 0 1-1.446-1.446V4.768Z"
  })]
}));
SvgSidebarCollapse.displayName = 'SvgSidebarCollapse';
const SidebarCollapseIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgSidebarCollapse, _objectSpread$n(_objectSpread$n({}, props), {}, {
      className: createClass(getIconStyles$n(props))
    }));
  }
});
SidebarCollapseIcon.displayName = 'SidebarCollapseIcon';
var SidebarCollapseIcon$1 = SidebarCollapseIcon;

function ownKeys$m(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$m(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$m(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$m(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$m = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$m = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$m[size], "px"),
        height: "".concat(iconSizes$m[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$m.big, "px"),
        height: "".concat(iconSizes$m.big, "px")
      };
  }
};
const getSizeStyle$m = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$m(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$m = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$m = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$m(props.color), ";}&,image{", getSizeStyle$m(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgSidebarExpand = props => jsxRuntime.jsxs("svg", _objectSpread$m(_objectSpread$m({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  fill: "none",
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: [jsxRuntime.jsx("path", {
    fill: "#1A1A1A",
    d: "M4.5 21c-.412 0-.766-.147-1.06-.44A1.445 1.445 0 0 1 3 19.5v-15c0-.412.147-.766.44-1.06.294-.293.648-.44 1.06-.44h15c.413 0 .766.147 1.06.44.293.294.44.648.44 1.06v15c0 .413-.147.766-.44 1.06-.294.293-.647.44-1.06.44h-15Zm0-1.5h15v-15h-15v15Z"
  }), jsxRuntime.jsx("path", {
    fill: "#1A1A1A",
    fillRule: "evenodd",
    d: "M16.98 12.005a.99.99 0 0 0-.04-.291.7.7 0 0 0-.141-.253l-3.058-3.596a.544.544 0 0 0-.454-.203.6.6 0 0 0-.455.223.81.81 0 0 0-.182.544c0 .22.061.402.182.544l2.579 3.032-2.595 3.052a.766.766 0 0 0-.174.535c.006.214.07.392.19.534a.58.58 0 0 0 .463.214.58.58 0 0 0 .463-.214l3.041-3.576a.699.699 0 0 0 .14-.253.99.99 0 0 0 .042-.292Z",
    clipRule: "evenodd"
  }), jsxRuntime.jsx("path", {
    fill: "#1A1A1A",
    d: "M3.963 4.768c0-.798.648-1.446 1.446-1.446h4.34c.798 0 1.446.648 1.446 1.446v14.465c0 .799-.648 1.446-1.446 1.446h-4.34a1.446 1.446 0 0 1-1.446-1.446V4.768Z"
  })]
}));
SvgSidebarExpand.displayName = 'SvgSidebarExpand';
const SidebarExpandIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgSidebarExpand, _objectSpread$m(_objectSpread$m({}, props), {}, {
      className: createClass(getIconStyles$m(props))
    }));
  }
});
SidebarExpandIcon.displayName = 'SidebarExpandIcon';
var SidebarExpandIcon$1 = SidebarExpandIcon;

function ownKeys$l(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$l(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$l(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$l(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$l = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$l = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$l[size], "px"),
        height: "".concat(iconSizes$l[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$l.big, "px"),
        height: "".concat(iconSizes$l.big, "px")
      };
  }
};
const getSizeStyle$l = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$l(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$l = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$l = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$l(props.color), ";}&,image{", getSizeStyle$l(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgSorting = props => jsxRuntime.jsx("svg", _objectSpread$l(_objectSpread$l({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M14 17.804V12c0-.266.09-.49.27-.67.18-.18.404-.27.67-.27s.49.09.67.27c.18.18.27.404.27.67v5.804l1.762-1.762a.92.92 0 0 1 .646-.27.877.877 0 0 1 .67.27.88.88 0 0 1 .294.645.877.877 0 0 1-.27.67l-3.384 3.384a.82.82 0 0 1-.306.2c-.11.04-.227.059-.352.059-.125 0-.243-.02-.352-.06a.82.82 0 0 1-.306-.199l-3.384-3.383a.876.876 0 0 1-.258-.646c0-.259.094-.482.282-.67a.993.993 0 0 1 .658-.27c.25-.008.47.082.658.27L14 17.804ZM8.36 6.196 6.598 7.958c-.204.204-.43.298-.682.282a.951.951 0 0 1-.634-.282.915.915 0 0 1-.282-.67c0-.258.086-.473.258-.646l3.384-3.384a.83.83 0 0 1 .306-.2C9.058 3.02 9.175 3 9.3 3c.126 0 .243.02.353.058a.83.83 0 0 1 .305.2l3.384 3.384a.891.891 0 0 1 .258.658.891.891 0 0 1-.258.658.914.914 0 0 1-.67.282.916.916 0 0 1-.67-.282L10.24 6.196V12c0 .266-.09.49-.27.67a.91.91 0 0 1-.67.27.907.907 0 0 1-.669-.27.907.907 0 0 1-.27-.67V6.196Z"
  })
}));
SvgSorting.displayName = 'SvgSorting';
const SortingIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgSorting, _objectSpread$l(_objectSpread$l({}, props), {}, {
      className: createClass(getIconStyles$l(props))
    }));
  }
});
SortingIcon.displayName = 'SortingIcon';
var SortingIcon$1 = SortingIcon;

function ownKeys$k(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$k(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$k(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$k(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$k = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$k = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$k[size], "px"),
        height: "".concat(iconSizes$k[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$k.big, "px"),
        height: "".concat(iconSizes$k.big, "px")
      };
  }
};
const getSizeStyle$k = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$k(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$k = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$k = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$k(props.color), ";}&,image{", getSizeStyle$k(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgSpeechBubble = props => jsxRuntime.jsx("svg", _objectSpread$k(_objectSpread$k({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M7.5 14.8h5.422a.833.833 0 0 0 .63-.26.89.89 0 0 0 .248-.64.873.873 0 0 0-.258-.642A.873.873 0 0 0 12.9 13H7.477a.835.835 0 0 0-.63.258.893.893 0 0 0-.247.642.87.87 0 0 0 .258.64c.173.174.387.26.642.26Zm0-2.7h9.023a.833.833 0 0 0 .63-.26.89.89 0 0 0 .247-.64.872.872 0 0 0-.26-.642.87.87 0 0 0-.64-.258H7.477a.835.835 0 0 0-.63.258.893.893 0 0 0-.247.642.87.87 0 0 0 .258.64c.173.174.387.26.642.26Zm0-2.7h9.023a.835.835 0 0 0 .63-.258.893.893 0 0 0 .247-.642.872.872 0 0 0-.26-.642.87.87 0 0 0-.64-.258H7.477a.835.835 0 0 0-.63.258.893.893 0 0 0-.247.642c0 .255.086.469.258.642A.873.873 0 0 0 7.5 9.4ZM3 19.817V5.8c0-.495.176-.919.53-1.272A1.733 1.733 0 0 1 4.8 4h14.4c.495 0 .919.176 1.272.528.352.353.528.777.528 1.272v10.8c0 .495-.176.919-.528 1.272a1.736 1.736 0 0 1-1.272.528H6.6l-2.07 2.07c-.285.285-.611.349-.98.19-.366-.156-.55-.438-.55-.843Zm1.8-2.16L5.858 16.6H19.2V5.8H4.8v11.857ZM4.8 5.8v11.857V5.8Z"
  })
}));
SvgSpeechBubble.displayName = 'SvgSpeechBubble';
const SpeechBubbleIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgSpeechBubble, _objectSpread$k(_objectSpread$k({}, props), {}, {
      className: createClass(getIconStyles$k(props))
    }));
  }
});
SpeechBubbleIcon.displayName = 'SpeechBubbleIcon';
var SpeechBubbleIcon$1 = SpeechBubbleIcon;

function ownKeys$j(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$j(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$j(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$j(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$j = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$j = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$j[size], "px"),
        height: "".concat(iconSizes$j[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$j.big, "px"),
        height: "".concat(iconSizes$j.big, "px")
      };
  }
};
const getSizeStyle$j = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$j(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$j = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$j = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$j(props.color), ";}&,image{", getSizeStyle$j(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgSpeedometer = props => jsxRuntime.jsx("svg", _objectSpread$j(_objectSpread$j({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M10.605 14.35c.36.36.825.536 1.395.528.57-.007.99-.213 1.26-.618l3.803-5.692c.135-.21.116-.402-.057-.574-.172-.173-.364-.191-.573-.056L10.74 11.74c-.405.27-.619.682-.64 1.237-.024.556.145 1.013.505 1.373ZM5.79 18.4c-.315 0-.615-.075-.9-.225-.285-.15-.51-.36-.675-.63A8.936 8.936 0 0 1 3 13c0-1.245.236-2.411.71-3.5a9.161 9.161 0 0 1 1.934-2.857 9.133 9.133 0 0 1 2.868-1.935A8.713 8.713 0 0 1 12 4c.675 0 1.328.071 1.957.213.63.143 1.238.357 1.823.642.315.165.499.39.55.675.054.285-.025.555-.235.81a.785.785 0 0 1-.495.248.995.995 0 0 1-.563-.068A6.788 6.788 0 0 0 12 5.8c-1.995 0-3.694.701-5.096 2.103C5.501 9.306 4.8 11.005 4.8 13c0 .63.086 1.252.258 1.867A7.39 7.39 0 0 0 5.79 16.6h12.42c.345-.57.596-1.163.754-1.778a7.692 7.692 0 0 0 .236-1.912 6.25 6.25 0 0 0-.19-1.54 6.817 6.817 0 0 0-.553-1.452.863.863 0 0 1-.09-.608.891.891 0 0 1 .316-.518c.24-.21.502-.27.787-.18.285.09.495.286.63.585.27.57.48 1.16.63 1.767.15.607.24 1.241.27 1.901 0 .855-.101 1.672-.303 2.453a9 9 0 0 1-.912 2.227c-.165.27-.39.48-.675.63-.285.15-.585.225-.9.225H5.79Z"
  })
}));
SvgSpeedometer.displayName = 'SvgSpeedometer';
const SpeedometerIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgSpeedometer, _objectSpread$j(_objectSpread$j({}, props), {}, {
      className: createClass(getIconStyles$j(props))
    }));
  }
});
SpeedometerIcon.displayName = 'SpeedometerIcon';
var SpeedometerIcon$1 = SpeedometerIcon;

function ownKeys$i(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$i(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$i(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$i(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$i = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$i = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$i[size], "px"),
        height: "".concat(iconSizes$i[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$i.big, "px"),
        height: "".concat(iconSizes$i.big, "px")
      };
  }
};
const getSizeStyle$i = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$i(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$i = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$i = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$i(props.color), ";}&,image{", getSizeStyle$i(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgSplit = props => jsxRuntime.jsx("svg", _objectSpread$i(_objectSpread$i({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M3 11.885c0-.26.088-.479.265-.655a.888.888 0 0 1 .655-.264h3.678c.858 0 1.494-.13 1.908-.391.414-.26.82-.606 1.218-1.035l1.31 1.31c-.168.184-.348.36-.54.53-.191.168-.394.336-.609.505.291.215.548.433.77.656.223.222.44.447.655.677a10.474 10.474 0 0 0 1.862 1.587c.705.475 1.94.728 3.702.758l-.805-.804a.857.857 0 0 1-.253-.632c0-.253.084-.472.253-.656a.896.896 0 0 1 .656-.276c.252 0 .47.092.654.276l2.368 2.368a.811.811 0 0 1 .196.299c.038.107.057.222.057.345 0 .122-.019.237-.057.345a.81.81 0 0 1-.196.298l-2.39 2.391a.9.9 0 0 1-.632.265.858.858 0 0 1-.656-.265.872.872 0 0 1-.253-.643c0-.261.084-.476.253-.644l.805-.828c-2.192-.03-3.751-.367-4.678-1.011-.928-.644-1.683-1.288-2.265-1.931a8.67 8.67 0 0 0-1.298-1.196c-.422-.306-1.1-.46-2.035-.46H3.92a.89.89 0 0 1-.655-.263.89.89 0 0 1-.265-.656Zm12.713-5.333a7.637 7.637 0 0 1 1.011-.127 49.78 49.78 0 0 1 1.15-.057l-.828-.828a.858.858 0 0 1-.253-.632c0-.253.092-.471.276-.655A.872.872 0 0 1 17.713 4c.26 0 .475.084.643.253l2.391 2.39a.811.811 0 0 1 .196.3c.038.107.057.222.057.344 0 .123-.019.238-.057.345a.811.811 0 0 1-.196.299l-2.39 2.39a.844.844 0 0 1-.644.266.927.927 0 0 1-.897-.932c0-.245.084-.46.253-.644l.782-.804c-.322 0-.625.015-.909.046-.283.03-.547.061-.793.092l-.436-1.793Zm-4.046 1.977a8.088 8.088 0 0 1 1.126-.885c.43-.284.958-.533 1.586-.747l.437 1.77a4.859 4.859 0 0 0-1.839 1.172l-1.31-1.31Z"
  })
}));
SvgSplit.displayName = 'SvgSplit';
const SplitIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgSplit, _objectSpread$i(_objectSpread$i({}, props), {}, {
      className: createClass(getIconStyles$i(props))
    }));
  }
});
SplitIcon.displayName = 'SplitIcon';
var SplitIcon$1 = SplitIcon;

function ownKeys$h(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$h(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$h(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$h(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$h = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$h = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$h[size], "px"),
        height: "".concat(iconSizes$h[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$h.big, "px"),
        height: "".concat(iconSizes$h.big, "px")
      };
  }
};
const getSizeStyle$h = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$h(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$h = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$h = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$h(props.color), ";}&,image{", getSizeStyle$h(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgStack = props => jsxRuntime.jsx("svg", _objectSpread$h(_objectSpread$h({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M4 15a.965.965 0 0 1-.712-.288A.965.965 0 0 1 3 14c0-.283.096-.521.288-.713A.967.967 0 0 1 4 13h16c.283 0 .52.096.712.287.192.192.288.43.288.713s-.096.52-.288.712A.965.965 0 0 1 20 15H4Zm0 4a.965.965 0 0 1-.712-.288A.965.965 0 0 1 3 18c0-.283.096-.52.288-.712A.965.965 0 0 1 4 17h16c.283 0 .52.096.712.288A.965.965 0 0 1 21 18c0 .283-.096.52-.288.712A.965.965 0 0 1 20 19H4Zm0-8a.965.965 0 0 1-.712-.288A.965.965 0 0 1 3 10c0-.283.096-.521.288-.713A.967.967 0 0 1 4 9h16c.283 0 .52.096.712.287.192.192.288.43.288.713s-.096.52-.288.712A.965.965 0 0 1 20 11H4Zm0-4a.967.967 0 0 1-.712-.287A.968.968 0 0 1 3 6c0-.283.096-.521.288-.713A.967.967 0 0 1 4 5h16c.283 0 .52.096.712.287.192.192.288.43.288.713a.968.968 0 0 1-.288.713A.967.967 0 0 1 20 7H4Z"
  })
}));
SvgStack.displayName = 'SvgStack';
const StackIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgStack, _objectSpread$h(_objectSpread$h({}, props), {}, {
      className: createClass(getIconStyles$h(props))
    }));
  }
});
StackIcon.displayName = 'StackIcon';
var StackIcon$1 = StackIcon;

function ownKeys$g(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$g(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$g(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$g(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$g = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$g = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$g[size], "px"),
        height: "".concat(iconSizes$g[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$g.big, "px"),
        height: "".concat(iconSizes$g.big, "px")
      };
  }
};
const getSizeStyle$g = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$g(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$g = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$g = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$g(props.color), ";}&,image{", getSizeStyle$g(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgStar = props => jsxRuntime.jsx("svg", _objectSpread$g(_objectSpread$g({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M8.688 16.929 12 14.93l3.311 2.024-.867-3.784 2.917-2.523-3.837-.342L12 6.732l-1.524 3.548-3.837.341 2.917 2.55-.868 3.758Zm3.312.473L7.637 20.03a.954.954 0 0 1-.604.157 1.016 1.016 0 0 1-.552-.21 1.262 1.262 0 0 1-.368-.46.92.92 0 0 1-.053-.617l1.157-4.967-3.863-3.338a1.004 1.004 0 0 1-.328-.54 1.042 1.042 0 0 1 .038-.59c.07-.193.176-.35.316-.473s.333-.202.578-.237l5.098-.446 1.971-4.678a.943.943 0 0 1 .408-.473C11.62 3.053 11.807 3 12 3c.193 0 .381.053.565.158.184.105.32.262.407.473l1.971 4.678 5.099.446c.245.035.438.114.578.237.14.123.245.28.315.473a1.01 1.01 0 0 1-.29 1.13l-3.862 3.338 1.156 4.967a.92.92 0 0 1-.052.618c-.088.183-.21.336-.368.46a1.016 1.016 0 0 1-.552.21.955.955 0 0 1-.605-.158L12 17.402Z"
  })
}));
SvgStar.displayName = 'SvgStar';
const StarIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgStar, _objectSpread$g(_objectSpread$g({}, props), {}, {
      className: createClass(getIconStyles$g(props))
    }));
  }
});
StarIcon.displayName = 'StarIcon';
var StarIcon$1 = StarIcon;

function ownKeys$f(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$f(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$f(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$f(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$f = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$f = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$f[size], "px"),
        height: "".concat(iconSizes$f[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$f.big, "px"),
        height: "".concat(iconSizes$f.big, "px")
      };
  }
};
const getSizeStyle$f = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$f(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$f = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$f = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$f(props.color), ";}&,image{", getSizeStyle$f(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgSubdirectoryArrow = props => jsxRuntime.jsx("svg", _objectSpread$f(_objectSpread$f({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M13.014 20.674c-.2-.217-.304-.47-.313-.76a.997.997 0 0 1 .313-.76l3.122-3.122H5.086c-.308 0-.566-.105-.774-.313A1.05 1.05 0 0 1 4 14.946V4.086c0-.308.104-.566.312-.774.208-.208.466-.312.774-.312s.566.104.774.312c.208.208.312.466.312.774v9.774h9.964l-3.15-3.15a1.06 1.06 0 0 1-.311-.747c-.01-.298.094-.556.311-.773.218-.217.476-.321.775-.313.298.01.556.114.773.313l4.995 4.995a.959.959 0 0 1 .232.354c.045.126.067.262.067.407 0 .145-.022.28-.067.407a.959.959 0 0 1-.232.353L14.534 20.7c-.2.2-.448.299-.746.299-.3 0-.557-.109-.774-.326Z"
  })
}));
SvgSubdirectoryArrow.displayName = 'SvgSubdirectoryArrow';
const SubdirectoryArrowIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgSubdirectoryArrow, _objectSpread$f(_objectSpread$f({}, props), {}, {
      className: createClass(getIconStyles$f(props))
    }));
  }
});
SubdirectoryArrowIcon.displayName = 'SubdirectoryArrowIcon';
var SubdirectoryArrowIcon$1 = SubdirectoryArrowIcon;

function ownKeys$e(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$e(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$e(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$e(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$e = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$e = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$e[size], "px"),
        height: "".concat(iconSizes$e[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$e.big, "px"),
        height: "".concat(iconSizes$e.big, "px")
      };
  }
};
const getSizeStyle$e = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$e(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$e = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$e = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$e(props.color), ";}&,image{", getSizeStyle$e(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgSupport = props => jsxRuntime.jsx("svg", _objectSpread$e(_objectSpread$e({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M11.955 17.4c.315 0 .581-.109.8-.327.216-.217.325-.483.325-.798 0-.315-.109-.581-.326-.798a1.087 1.087 0 0 0-.799-.327c-.315 0-.581.109-.8.327a1.086 1.086 0 0 0-.325.798c0 .315.109.581.326.798.218.218.484.327.799.327Zm.135-9.27c.42 0 .758.116 1.012.348.255.233.383.537.383.912 0 .255-.086.514-.258.776a4.405 4.405 0 0 1-.732.822c-.45.39-.78.764-.99 1.125-.21.36-.315.72-.315 1.08 0 .21.079.386.237.528a.813.813 0 0 0 1.113-.01c.165-.151.27-.338.315-.563.045-.255.146-.492.304-.709.157-.218.416-.499.776-.844.465-.435.791-.833.98-1.193.186-.36.28-.757.28-1.192 0-.765-.289-1.391-.866-1.88-.578-.486-1.324-.73-2.239-.73-.63 0-1.189.12-1.676.36a2.56 2.56 0 0 0-1.136 1.103.892.892 0 0 0-.113.573c.03.188.135.341.315.462.195.12.409.157.642.112a.9.9 0 0 0 .573-.383c.165-.225.364-.397.597-.517.232-.12.498-.18.798-.18ZM12 21a8.704 8.704 0 0 1-3.488-.71 9.214 9.214 0 0 1-2.868-1.922A8.985 8.985 0 0 1 3.71 15.51 8.759 8.759 0 0 1 3 12c0-1.245.236-2.415.71-3.51a8.985 8.985 0 0 1 1.934-2.857 9.227 9.227 0 0 1 2.868-1.925A8.713 8.713 0 0 1 12 3c1.26 0 2.438.236 3.533.708a9.095 9.095 0 0 1 2.857 1.925 8.934 8.934 0 0 1 1.912 2.857A8.886 8.886 0 0 1 21 12a8.886 8.886 0 0 1-.698 3.51 8.934 8.934 0 0 1-1.912 2.857 9.082 9.082 0 0 1-2.857 1.924A8.815 8.815 0 0 1 12 21Zm0-1.8c2.01 0 3.713-.701 5.108-2.103C18.503 15.694 19.2 13.995 19.2 12c0-1.995-.697-3.694-2.092-5.097C15.712 5.501 14.01 4.8 12 4.8c-1.965 0-3.656.701-5.074 2.103C5.509 8.306 4.8 10.005 4.8 12c0 1.995.709 3.694 2.126 5.097C8.344 18.499 10.035 19.2 12 19.2Z"
  })
}));
SvgSupport.displayName = 'SvgSupport';
const SupportIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgSupport, _objectSpread$e(_objectSpread$e({}, props), {}, {
      className: createClass(getIconStyles$e(props))
    }));
  }
});
SupportIcon.displayName = 'SupportIcon';
var SupportIcon$1 = SupportIcon;

function ownKeys$d(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$d(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$d(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$d(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$d = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$d = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$d[size], "px"),
        height: "".concat(iconSizes$d[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$d.big, "px"),
        height: "".concat(iconSizes$d.big, "px")
      };
  }
};
const getSizeStyle$d = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$d(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$d = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$d = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$d(props.color), ";}&,image{", getSizeStyle$d(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgSwitcher = props => jsxRuntime.jsx("svg", _objectSpread$d(_objectSpread$d({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M16.76 16.7v-2.82c0-.266.09-.49.27-.67.18-.18.403-.27.67-.27a.93.93 0 0 1 .669.258.87.87 0 0 1 .27.658v3.784c0 .266-.09.49-.27.669a.907.907 0 0 1-.67.27H7.22l.776.776a.973.973 0 0 1 .294.682.89.89 0 0 1-.27.681.914.914 0 0 1-.67.282.877.877 0 0 1-.647-.259l-2.444-2.443A.891.891 0 0 1 4 17.64c0-.267.086-.486.258-.658l2.42-2.42a.915.915 0 0 1 .671-.283c.258 0 .481.094.67.282a.915.915 0 0 1 .281.67.914.914 0 0 1-.282.67l-.799.799h9.54Zm-9.4-9.4v2.82c0 .266-.09.49-.27.67a.91.91 0 0 1-.67.27.933.933 0 0 1-.67-.258.872.872 0 0 1-.27-.658V6.36c0-.266.09-.49.27-.67.18-.18.404-.27.67-.27H16.9l-.775-.775a.97.97 0 0 1-.293-.682.887.887 0 0 1 .27-.681.915.915 0 0 1 .67-.282c.258 0 .473.086.646.258l2.444 2.444a.891.891 0 0 1 .258.658.891.891 0 0 1-.258.658l-2.42 2.42a.914.914 0 0 1-.67.283.916.916 0 0 1-.67-.282.915.915 0 0 1-.282-.67c0-.259.094-.482.282-.67L16.9 7.3H7.36Z"
  })
}));
SvgSwitcher.displayName = 'SvgSwitcher';
const SwitcherIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgSwitcher, _objectSpread$d(_objectSpread$d({}, props), {}, {
      className: createClass(getIconStyles$d(props))
    }));
  }
});
SwitcherIcon.displayName = 'SwitcherIcon';
var SwitcherIcon$1 = SwitcherIcon;

function ownKeys$c(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$c(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$c(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$c(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$c = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$c = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$c[size], "px"),
        height: "".concat(iconSizes$c[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$c.big, "px"),
        height: "".concat(iconSizes$c.big, "px")
      };
  }
};
const getSizeStyle$c = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$c(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$c = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$c = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$c(props.color), ";}&,image{", getSizeStyle$c(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgTable = props => jsxRuntime.jsx("svg", _objectSpread$c(_objectSpread$c({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M4.8 17.6h3.6V6.8H4.8v10.8Zm5.4 0h3.6V6.8h-3.6v10.8Zm5.4 0h3.6V6.8h-3.6v10.8ZM4.8 19.4c-.495 0-.919-.176-1.27-.528A1.734 1.734 0 0 1 3 17.6V6.8c0-.495.176-.919.53-1.27C3.88 5.175 4.304 5 4.8 5h14.4c.495 0 .919.176 1.272.53.352.351.528.775.528 1.27v10.8c0 .495-.176.919-.528 1.272a1.736 1.736 0 0 1-1.272.528H4.8Z"
  })
}));
SvgTable.displayName = 'SvgTable';
const TableIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgTable, _objectSpread$c(_objectSpread$c({}, props), {}, {
      className: createClass(getIconStyles$c(props))
    }));
  }
});
TableIcon.displayName = 'TableIcon';
var TableIcon$1 = TableIcon;

function ownKeys$b(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$b(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$b(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$b(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$b = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$b = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$b[size], "px"),
        height: "".concat(iconSizes$b[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$b.big, "px"),
        height: "".concat(iconSizes$b.big, "px")
      };
  }
};
const getSizeStyle$b = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$b(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$b = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$b = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$b(props.color), ";}&,image{", getSizeStyle$b(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgTagMulti = props => jsxRuntime.jsx("svg", _objectSpread$b(_objectSpread$b({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "m4.796 18.121-.763-.314a1.582 1.582 0 0 1-.932-1.01 1.89 1.89 0 0 1 .079-1.416l1.616-3.503v6.243Zm3.594 1.976c-.495 0-.918-.175-1.27-.527a1.732 1.732 0 0 1-.527-1.27v-5.389l2.38 6.602c.045.105.09.206.135.304.045.097.105.19.18.28H8.39Zm4.626-.09c-.48.18-.944.158-1.393-.067a1.872 1.872 0 0 1-.943-1.055L6.683 7.925a1.76 1.76 0 0 1 .045-1.403c.21-.457.554-.767 1.033-.932l6.782-2.47c.479-.18.943-.157 1.392.067.45.225.764.577.943 1.056l3.998 10.959c.18.479.164.947-.045 1.404-.21.456-.554.766-1.033.931l-6.782 2.47Zm-1.932-10.69a.87.87 0 0 0 .64-.258.868.868 0 0 0 .259-.64.871.871 0 0 0-.258-.64.871.871 0 0 0-.64-.258.869.869 0 0 0-.64.258.87.87 0 0 0-.259.64c0 .255.086.468.259.64a.867.867 0 0 0 .64.259Zm1.303 8.984 6.782-2.47L15.17 4.826 8.39 7.297 12.387 18.3ZM8.39 7.297l6.781-2.47-6.781 2.47Z"
  })
}));
SvgTagMulti.displayName = 'SvgTagMulti';
const TagMultiIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgTagMulti, _objectSpread$b(_objectSpread$b({}, props), {}, {
      className: createClass(getIconStyles$b(props))
    }));
  }
});
TagMultiIcon.displayName = 'TagMultiIcon';
var TagMultiIcon$1 = TagMultiIcon;

function ownKeys$a(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$a(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$a(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$a(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$a = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$a = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$a[size], "px"),
        height: "".concat(iconSizes$a[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$a.big, "px"),
        height: "".concat(iconSizes$a.big, "px")
      };
  }
};
const getSizeStyle$a = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$a(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$a = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$a = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$a(props.color), ";}&,image{", getSizeStyle$a(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgTagStacked = props => jsxRuntime.jsx("svg", _objectSpread$a(_objectSpread$a({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fillRule: "evenodd",
    d: "M17.524 14.792a.07.07 0 0 1 .003.004c.59.644.644 1.36.073 1.915-2.197 2.331-3.448 3.638-3.782 3.95-.488.453-1.072.453-1.644-.007L7 15.633v-5.155l.9.887v1.84l4.847 4.705c.21.168.323.168.48.022.311-.29 1.567-1.601 3.753-3.92.178-.173.186-.31-.14-.63l-.678-.766.596-.668c.15.148.739.787.769.848.59.644.644 1.36.073 1.915l-.076.08Zm-.62.656c-1.767 1.872-2.79 2.936-3.086 3.212-.488.454-1.072.454-1.644-.006l-4.273-4.147v.698l4.846 4.705c.21.168.323.168.48.022.311-.29 1.567-1.601 3.753-3.92.165-.161.184-.29-.075-.564ZM11.49 3.001l5.852 6.442a.744.744 0 0 1 0 1.07l-4.022 4.145a.79.79 0 0 1-1.099 0L6 8.357V4.01C6 3.452 6.464 3 7.036 3h4.454ZM7.028 6.07a.79.79 0 0 0 1.098 0 .744.744 0 0 0 0-1.071.79.79 0 0 0-1.098 0 .744.744 0 0 0 0 1.07Z"
  })
}));
SvgTagStacked.displayName = 'SvgTagStacked';
const TagStackedIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgTagStacked, _objectSpread$a(_objectSpread$a({}, props), {}, {
      className: createClass(getIconStyles$a(props))
    }));
  }
});
TagStackedIcon.displayName = 'TagStackedIcon';
var TagStackedIcon$1 = TagStackedIcon;

function ownKeys$9(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$9(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$9(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$9(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$9 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$9 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$9[size], "px"),
        height: "".concat(iconSizes$9[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$9.big, "px"),
        height: "".concat(iconSizes$9.big, "px")
      };
  }
};
const getSizeStyle$9 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$9(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$9 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$9 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$9(props.color), ";}&,image{", getSizeStyle$9(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgTag = props => jsxRuntime.jsx("svg", _objectSpread$9(_objectSpread$9({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M14.039 20.482a1.744 1.744 0 0 1-1.284.518c-.51 0-.939-.173-1.284-.518l-7.93-7.93A1.864 1.864 0 0 1 3 11.245V4.802c0-.495.177-.92.53-1.273A1.735 1.735 0 0 1 4.802 3h6.443c.256 0 .496.049.721.146.226.098.42.23.586.395l7.93 7.952c.345.345.518.77.518 1.272 0 .504-.173.928-.518 1.274l-6.443 6.443Zm-1.284-1.262 6.443-6.443-7.953-7.975H4.802v6.443l7.953 7.975Zm-5.7-10.813c.376 0 .695-.132.957-.395.263-.262.395-.581.395-.957 0-.375-.132-.694-.395-.957a1.301 1.301 0 0 0-.957-.395c-.375 0-.694.132-.957.395a1.301 1.301 0 0 0-.395.957c0 .376.132.695.395.957.263.263.582.395.957.395Z"
  })
}));
SvgTag.displayName = 'SvgTag';
const TagIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgTag, _objectSpread$9(_objectSpread$9({}, props), {}, {
      className: createClass(getIconStyles$9(props))
    }));
  }
});
TagIcon.displayName = 'TagIcon';
var TagIcon$1 = TagIcon;

function ownKeys$8(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$8(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$8(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$8(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$8 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$8 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$8[size], "px"),
        height: "".concat(iconSizes$8[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$8.big, "px"),
        height: "".concat(iconSizes$8.big, "px")
      };
  }
};
const getSizeStyle$8 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$8(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$8 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$8 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$8(props.color), ";}&,image{", getSizeStyle$8(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgTerminal = props => jsxRuntime.jsx("svg", _objectSpread$8(_objectSpread$8({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12.9 16.7a.869.869 0 0 1-.64-.26.869.869 0 0 1-.26-.64c0-.255.086-.469.26-.642a.87.87 0 0 1 .64-.258h3.6a.87.87 0 0 1 .64.258c.174.173.26.387.26.642a.869.869 0 0 1-.26.64.869.869 0 0 1-.64.26h-3.6Zm-5.58-.63a.853.853 0 0 1-.248-.63c0-.255.083-.465.248-.63l1.688-1.71-1.71-1.71a.823.823 0 0 1-.259-.63c.007-.24.101-.45.281-.63a.951.951 0 0 1 .63-.26c.24-.006.45.08.63.26l2.34 2.34c.09.09.154.188.192.292.037.105.056.218.056.338 0 .12-.02.232-.056.338a.795.795 0 0 1-.192.292l-2.34 2.34a.877.877 0 0 1-.618.258.837.837 0 0 1-.642-.258ZM4.8 19.4c-.495 0-.919-.176-1.27-.528A1.734 1.734 0 0 1 3 17.6V6.8c0-.495.176-.919.53-1.27C3.88 5.175 4.304 5 4.8 5h14.4c.495 0 .919.176 1.272.53.352.351.528.775.528 1.27v10.8c0 .495-.176.919-.528 1.272a1.736 1.736 0 0 1-1.272.528H4.8Zm0-1.8h14.4v-9H4.8v9Z"
  })
}));
SvgTerminal.displayName = 'SvgTerminal';
const TerminalIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgTerminal, _objectSpread$8(_objectSpread$8({}, props), {}, {
      className: createClass(getIconStyles$8(props))
    }));
  }
});
TerminalIcon.displayName = 'TerminalIcon';
var TerminalIcon$1 = TerminalIcon;

function ownKeys$7(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$7(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$7(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$7(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$7 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$7 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$7[size], "px"),
        height: "".concat(iconSizes$7[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$7.big, "px"),
        height: "".concat(iconSizes$7.big, "px")
      };
  }
};
const getSizeStyle$7 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$7(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$7 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$7 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$7(props.color), ";}&,image{", getSizeStyle$7(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgTreeStructure = props => jsxRuntime.jsx("svg", _objectSpread$7(_objectSpread$7({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M16.5 20.2c-.495 0-.919-.176-1.27-.528a1.734 1.734 0 0 1-.53-1.272v-.9h-1.8c-.495 0-.919-.176-1.27-.528a1.734 1.734 0 0 1-.53-1.272V8.5H9.3v.9c0 .495-.176.919-.53 1.27-.351.354-.775.53-1.27.53H4.8c-.495 0-.919-.176-1.27-.53A1.731 1.731 0 0 1 3 9.4V5.8c0-.495.176-.919.53-1.272A1.733 1.733 0 0 1 4.8 4h2.7c.495 0 .919.176 1.27.528.354.353.53.777.53 1.272v.9h5.4v-.9c0-.495.176-.919.53-1.272A1.733 1.733 0 0 1 16.5 4h2.7c.495 0 .919.176 1.272.528.352.353.528.777.528 1.272v3.6c0 .495-.176.919-.528 1.27-.353.354-.777.53-1.272.53h-2.7c-.495 0-.919-.176-1.27-.53a1.731 1.731 0 0 1-.53-1.27v-.9h-1.8v7.2h1.8v-.9c0-.495.176-.919.53-1.272A1.733 1.733 0 0 1 16.5 13h2.7c.495 0 .919.176 1.272.528.352.353.528.777.528 1.272v3.6c0 .495-.176.919-.528 1.272a1.736 1.736 0 0 1-1.272.528h-2.7ZM4.8 5.8v3.6-3.6Zm11.7 9v3.6-3.6Zm0-9v3.6-3.6Zm0 3.6h2.7V5.8h-2.7v3.6Zm0 9h2.7v-3.6h-2.7v3.6Zm-11.7-9h2.7V5.8H4.8v3.6Z"
  })
}));
SvgTreeStructure.displayName = 'SvgTreeStructure';
const TreeStructureIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgTreeStructure, _objectSpread$7(_objectSpread$7({}, props), {}, {
      className: createClass(getIconStyles$7(props))
    }));
  }
});
TreeStructureIcon.displayName = 'TreeStructureIcon';
var TreeStructureIcon$1 = TreeStructureIcon;

function ownKeys$6(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$6(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$6(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$6(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$6 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$6 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$6[size], "px"),
        height: "".concat(iconSizes$6[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$6.big, "px"),
        height: "".concat(iconSizes$6.big, "px")
      };
  }
};
const getSizeStyle$6 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$6(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$6 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$6 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$6(props.color), ";}&,image{", getSizeStyle$6(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgTruck = props => jsxRuntime.jsx("svg", _objectSpread$6(_objectSpread$6({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M7.09 18.09a2.367 2.367 0 0 1-1.738-.715 2.367 2.367 0 0 1-.716-1.739c-.45 0-.835-.16-1.155-.48A1.576 1.576 0 0 1 3 14V6.636c0-.45.16-.835.481-1.155.32-.32.705-.481 1.155-.481h9.819c.45 0 .835.16 1.156.481.32.32.48.705.48 1.155v1.637h2.045c.137 0 .26.027.369.082.109.054.204.136.286.245l2.045 2.72a.724.724 0 0 1 .123.226c.027.081.041.17.041.265v3.007a.79.79 0 0 1-.236.583.79.79 0 0 1-.582.235h-.818c0 .682-.239 1.262-.716 1.739a2.367 2.367 0 0 1-1.739.716 2.367 2.367 0 0 1-1.738-.716 2.367 2.367 0 0 1-.716-1.739h-4.91c0 .682-.238 1.262-.715 1.739a2.367 2.367 0 0 1-1.74.716Zm0-1.636a.792.792 0 0 0 .584-.235.79.79 0 0 0 .235-.583.791.791 0 0 0-.235-.582.792.792 0 0 0-.583-.236.792.792 0 0 0-.583.236.791.791 0 0 0-.235.582.79.79 0 0 0 .235.583.792.792 0 0 0 .583.235ZM4.637 6.636V14h.655a2.83 2.83 0 0 1 .798-.593c.3-.15.634-.225 1.002-.225s.702.075 1.002.225c.3.15.566.348.798.593h5.563V6.636H4.636Zm12.273 9.819a.79.79 0 0 0 .583-.236.79.79 0 0 0 .235-.583.79.79 0 0 0-.235-.582.79.79 0 0 0-.583-.236.79.79 0 0 0-.582.236.79.79 0 0 0-.236.582.79.79 0 0 0 .235.583.79.79 0 0 0 .583.235Zm-.818-4.091h3.477l-1.84-2.455H16.09v2.455Z"
  })
}));
SvgTruck.displayName = 'SvgTruck';
const TruckIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgTruck, _objectSpread$6(_objectSpread$6({}, props), {}, {
      className: createClass(getIconStyles$6(props))
    }));
  }
});
TruckIcon.displayName = 'TruckIcon';
var TruckIcon$1 = TruckIcon;

function ownKeys$5(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$5(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$5(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$5(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$5 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$5 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$5[size], "px"),
        height: "".concat(iconSizes$5[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$5.big, "px"),
        height: "".concat(iconSizes$5.big, "px")
      };
  }
};
const getSizeStyle$5 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$5(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$5 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$5 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$5(props.color), ";}&,image{", getSizeStyle$5(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgUserFilled = props => jsxRuntime.jsx("svg", _objectSpread$5(_objectSpread$5({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M13 13c-1.238 0-2.297-.44-3.178-1.322C8.94 10.797 8.5 9.738 8.5 8.5c0-1.237.44-2.297 1.322-3.178C10.703 4.44 11.762 4 13 4s2.297.44 3.178 1.322c.881.881 1.322 1.94 1.322 3.178s-.44 2.297-1.322 3.178C15.297 12.56 14.238 13 13 13Zm-6.75 9c-.619 0-1.148-.22-1.588-.66A2.167 2.167 0 0 1 4 19.75v-.9c0-.638.164-1.224.493-1.758A3.277 3.277 0 0 1 5.8 15.869a16.722 16.722 0 0 1 3.544-1.309c1.2-.29 2.418-.435 3.656-.435s2.456.145 3.656.435c1.2.291 2.382.727 3.544 1.309.544.281.98.689 1.307 1.223.329.534.493 1.12.493 1.758v.9a2.17 2.17 0 0 1-.66 1.59c-.441.44-.971.66-1.59.66H6.25Z"
  })
}));
SvgUserFilled.displayName = 'SvgUserFilled';
const UserFilledIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgUserFilled, _objectSpread$5(_objectSpread$5({}, props), {}, {
      className: createClass(getIconStyles$5(props))
    }));
  }
});
UserFilledIcon.displayName = 'UserFilledIcon';
var UserFilledIcon$1 = UserFilledIcon;

function ownKeys$4(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$4(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$4(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$4(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$4 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$4 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$4[size], "px"),
        height: "".concat(iconSizes$4[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$4.big, "px"),
        height: "".concat(iconSizes$4.big, "px")
      };
  }
};
const getSizeStyle$4 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$4(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$4 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$4 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$4(props.color), ";}&,image{", getSizeStyle$4(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgUserLinear = props => jsxRuntime.jsx("svg", _objectSpread$4(_objectSpread$4({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12 12c-1.238 0-2.297-.44-3.178-1.322C7.94 9.797 7.5 8.738 7.5 7.5c0-1.237.44-2.297 1.322-3.178C9.703 3.44 10.762 3 12 3s2.297.44 3.178 1.322c.881.881 1.322 1.94 1.322 3.178s-.44 2.297-1.322 3.178C14.297 11.56 13.238 12 12 12Zm6.75 9H5.25c-.619 0-1.148-.22-1.588-.66A2.167 2.167 0 0 1 3 18.75v-.9c0-.638.164-1.224.493-1.758A3.277 3.277 0 0 1 4.8 14.869a16.722 16.722 0 0 1 3.544-1.309c1.2-.29 2.418-.435 3.656-.435s2.456.145 3.656.435c1.2.291 2.382.727 3.544 1.309.544.281.98.689 1.307 1.223.329.534.493 1.12.493 1.758v.9a2.17 2.17 0 0 1-.66 1.59c-.441.44-.971.66-1.59.66Zm-13.5-2.25h13.5v-.9c0-.206-.051-.394-.154-.563-.104-.168-.24-.3-.409-.393a14.687 14.687 0 0 0-3.065-1.14 13.072 13.072 0 0 0-6.244 0 14.686 14.686 0 0 0-3.066 1.14 1.09 1.09 0 0 0-.562.956v.9Zm6.75-9c.619 0 1.149-.22 1.59-.662.44-.44.66-.97.66-1.588 0-.619-.22-1.148-.66-1.588A2.167 2.167 0 0 0 12 5.25c-.619 0-1.148.22-1.588.662-.442.44-.662.97-.662 1.588 0 .619.22 1.148.662 1.588.44.442.97.662 1.588.662Z"
  })
}));
SvgUserLinear.displayName = 'SvgUserLinear';
const UserLinearIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgUserLinear, _objectSpread$4(_objectSpread$4({}, props), {}, {
      className: createClass(getIconStyles$4(props))
    }));
  }
});
UserLinearIcon.displayName = 'UserLinearIcon';
var UserLinearIcon$1 = UserLinearIcon;

function ownKeys$3(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$3(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$3(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$3(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$3 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$3 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$3[size], "px"),
        height: "".concat(iconSizes$3[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$3.big, "px"),
        height: "".concat(iconSizes$3.big, "px")
      };
  }
};
const getSizeStyle$3 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$3(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$3 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$3 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$3(props.color), ";}&,image{", getSizeStyle$3(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgVerified = props => jsxRuntime.jsx("svg", _objectSpread$3(_objectSpread$3({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M7.734 18.429 5.312 17.9a.83.83 0 0 1-.529-.342.816.816 0 0 1-.154-.605l.242-2.488-1.65-1.894A.823.823 0 0 1 3 12c0-.22.073-.411.22-.572l1.651-1.894-.242-2.488a.816.816 0 0 1 .154-.605.83.83 0 0 1 .529-.342l2.422-.528L9.01 3.413a.818.818 0 0 1 .484-.374.985.985 0 0 1 .616.022l2.29.969 2.29-.969a.986.986 0 0 1 .616-.022.818.818 0 0 1 .485.374l1.277 2.158 2.422.528a.83.83 0 0 1 .528.342.815.815 0 0 1 .154.605l-.242 2.488 1.651 1.894c.147.161.22.352.22.572 0 .22-.073.411-.22.572l-1.651 1.894.242 2.488a.815.815 0 0 1-.154.605.83.83 0 0 1-.528.341l-2.422.529-1.277 2.158a.819.819 0 0 1-.485.374.986.986 0 0 1-.616-.022l-2.29-.969-2.29.969a.985.985 0 0 1-.616.022.819.819 0 0 1-.484-.374l-1.277-2.158Zm3.126-3.92a.835.835 0 0 0 .617.243c.249 0 .454-.08.616-.242l3.743-3.743a.858.858 0 0 0 .264-.628.856.856 0 0 0-.264-.627.857.857 0 0 0-.627-.264.858.858 0 0 0-.628.264l-3.104 3.104-1.277-1.255a.857.857 0 0 0-.628-.231.863.863 0 0 0-.605.253.835.835 0 0 0-.243.617c0 .25.081.455.243.617l1.893 1.893Z"
  })
}));
SvgVerified.displayName = 'SvgVerified';
const VerifiedIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgVerified, _objectSpread$3(_objectSpread$3({}, props), {}, {
      className: createClass(getIconStyles$3(props))
    }));
  }
});
VerifiedIcon.displayName = 'VerifiedIcon';
var VerifiedIcon$1 = VerifiedIcon;

function ownKeys$2(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$2(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$2(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$2 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$2 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$2[size], "px"),
        height: "".concat(iconSizes$2[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$2.big, "px"),
        height: "".concat(iconSizes$2.big, "px")
      };
  }
};
const getSizeStyle$2 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$2(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$2 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$2 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$2(props.color), ";}&,image{", getSizeStyle$2(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgViewGridPlus = props => jsxRuntime.jsx("svg", _objectSpread$2(_objectSpread$2({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M5 11c-.55 0-1.021-.196-1.413-.588A1.925 1.925 0 0 1 3 9V5c0-.55.196-1.021.587-1.413A1.928 1.928 0 0 1 5 3h4c.55 0 1.021.196 1.413.587.391.392.587.863.587 1.413v4c0 .55-.196 1.02-.587 1.412A1.927 1.927 0 0 1 9 11H5Zm0 10c-.55 0-1.021-.196-1.413-.587A1.928 1.928 0 0 1 3 19v-4c0-.55.196-1.021.587-1.413A1.928 1.928 0 0 1 5 13h4c.55 0 1.021.196 1.413.587.391.392.587.863.587 1.413v4c0 .55-.196 1.021-.587 1.413A1.928 1.928 0 0 1 9 21H5Zm10-10c-.55 0-1.02-.196-1.412-.588A1.923 1.923 0 0 1 13 9V5c0-.55.196-1.021.588-1.413A1.925 1.925 0 0 1 15 3h4c.55 0 1.021.196 1.413.587.391.392.587.863.587 1.413v4c0 .55-.196 1.02-.587 1.412A1.927 1.927 0 0 1 19 11h-4Zm0 10c-.55 0-1.02-.196-1.412-.587A1.927 1.927 0 0 1 13 19v-4c0-.55.196-1.021.588-1.413A1.925 1.925 0 0 1 15 13h4c.55 0 1.021.196 1.413.587.391.392.587.863.587 1.413v4c0 .55-.196 1.021-.587 1.413A1.928 1.928 0 0 1 19 21h-4ZM5 9h4V5H5v4Zm10 0h4V5h-4v4Zm0 10h4v-4h-4v4ZM5 19h4v-4H5v4Z"
  })
}));
SvgViewGridPlus.displayName = 'SvgViewGridPlus';
const ViewGridPlusIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgViewGridPlus, _objectSpread$2(_objectSpread$2({}, props), {}, {
      className: createClass(getIconStyles$2(props))
    }));
  }
});
ViewGridPlusIcon.displayName = 'ViewGridPlusIcon';
var ViewGridPlusIcon$1 = ViewGridPlusIcon;

function ownKeys$1(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$1(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$1(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1[size], "px"),
        height: "".concat(iconSizes$1[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1.big, "px"),
        height: "".concat(iconSizes$1.big, "px")
      };
  }
};
const getSizeStyle$1 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1 = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor$1(props.color), ";}&,image{", getSizeStyle$1(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgWarning = props => jsxRuntime.jsx("svg", _objectSpread$1(_objectSpread$1({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M3.866 19.786a.795.795 0 0 1-.745-.439.857.857 0 0 1 0-.877l8.112-14.032c.16-.292.416-.438.767-.438.35 0 .607.146.767.438L20.88 18.47c.161.293.161.585 0 .877a.795.795 0 0 1-.745.439H3.866ZM12 10.139a.848.848 0 0 0-.624.252.85.85 0 0 0-.253.625v2.63c0 .25.084.457.253.625a.846.846 0 0 0 .624.253.85.85 0 0 0 .625-.253.848.848 0 0 0 .252-.624v-2.631a.851.851 0 0 0-.252-.626.851.851 0 0 0-.625-.251Zm0 7.016a.85.85 0 0 0 .625-.253.848.848 0 0 0 .252-.624.848.848 0 0 0-.252-.625.85.85 0 0 0-.625-.252.846.846 0 0 0-.624.252.846.846 0 0 0-.253.625c0 .248.084.456.253.624a.846.846 0 0 0 .624.253Zm-6.621.877H18.62L12 6.63l-6.621 11.4Z"
  })
}));
SvgWarning.displayName = 'SvgWarning';
const WarningIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgWarning, _objectSpread$1(_objectSpread$1({}, props), {}, {
      className: createClass(getIconStyles$1(props))
    }));
  }
});
WarningIcon.displayName = 'WarningIcon';
var WarningIcon$1 = WarningIcon;

function ownKeys(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes[size], "px"),
        height: "".concat(iconSizes[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes.big, "px"),
        height: "".concat(iconSizes.big, "px")
      };
  }
};
const getSizeStyle = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles = props => /*#__PURE__*/react.css("*:not([fill='none']){fill:", getColor(props.color), ";}&,image{", getSizeStyle(props.size), ";}flex-shrink:0;" + ("" ), "" );
const SvgWorld = props => jsxRuntime.jsx("svg", _objectSpread(_objectSpread({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M12 21a8.704 8.704 0 0 1-3.488-.71 9.113 9.113 0 0 1-2.868-1.934 9.113 9.113 0 0 1-1.935-2.869A8.704 8.704 0 0 1 3 12c0-1.245.236-2.411.71-3.498a9.148 9.148 0 0 1 1.934-2.858 9.126 9.126 0 0 1 2.868-1.936A8.713 8.713 0 0 1 12 3c1.245 0 2.411.236 3.498.708a9.16 9.16 0 0 1 2.858 1.936 9.148 9.148 0 0 1 1.935 2.858A8.676 8.676 0 0 1 21 12c0 1.23-.236 2.393-.71 3.488a9.113 9.113 0 0 1-1.934 2.868 9.148 9.148 0 0 1-2.858 1.935A8.676 8.676 0 0 1 12 21Zm0-1.845c.39-.54.727-1.103 1.012-1.688.285-.584.518-1.207.698-1.867h-3.42c.18.66.413 1.283.698 1.868.285.584.622 1.147 1.012 1.687Zm-2.34-.36a12.413 12.413 0 0 1-.708-1.542 13.145 13.145 0 0 1-.507-1.653H5.79c.435.75.979 1.403 1.63 1.958a6.48 6.48 0 0 0 2.24 1.237Zm4.68 0a6.471 6.471 0 0 0 2.238-1.238A7.464 7.464 0 0 0 18.21 15.6h-2.655c-.135.57-.304 1.121-.506 1.653-.203.533-.439 1.047-.709 1.542ZM5.025 13.8h3.06a12.03 12.03 0 0 1-.102-2.71c.023-.294.057-.59.102-.89h-3.06A7.21 7.21 0 0 0 4.8 12a7.21 7.21 0 0 0 .225 1.8Zm4.86 0h4.23a12.03 12.03 0 0 0 .102-2.71c-.023-.294-.057-.59-.102-.89h-4.23A12.224 12.224 0 0 0 9.75 12a11.714 11.714 0 0 0 .135 1.8Zm6.03 0h3.06A7.21 7.21 0 0 0 19.2 12a7.21 7.21 0 0 0-.225-1.8h-3.06a12.224 12.224 0 0 1 .135 1.8 11.714 11.714 0 0 1-.135 1.8Zm-.36-5.4h2.655a7.464 7.464 0 0 0-1.632-1.958 6.471 6.471 0 0 0-2.238-1.237c.27.495.506 1.009.71 1.54.201.534.37 1.085.505 1.655Zm-5.265 0h3.42c-.18-.66-.413-1.283-.698-1.868A11.426 11.426 0 0 0 12 4.845c-.39.54-.727 1.103-1.012 1.688A10.653 10.653 0 0 0 10.29 8.4Zm-4.5 0h2.655c.135-.57.304-1.121.507-1.654a12.44 12.44 0 0 1 .708-1.541 6.48 6.48 0 0 0-2.24 1.237A7.473 7.473 0 0 0 5.79 8.4Z"
  })
}));
SvgWorld.displayName = 'SvgWorld';
const WorldIcon = props => jsxRuntime.jsx(react.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgWorld, _objectSpread(_objectSpread({}, props), {}, {
      className: createClass(getIconStyles(props))
    }));
  }
});
WorldIcon.displayName = 'WorldIcon';
var WorldIcon$1 = WorldIcon;

exports.AngleDownIcon = AngleDownIcon$1;
exports.AngleLeftIcon = AngleLeftIcon$1;
exports.AngleRightIcon = AngleRightIcon$1;
exports.AngleThinLeftIcon = AngleThinLeftIcon$1;
exports.AngleThinRightIcon = AngleThinRightIcon$1;
exports.AngleUpDownIcon = AngleUpDownIcon$1;
exports.AngleUpIcon = AngleUpIcon$1;
exports.ArrowDownIcon = ArrowDownIcon$1;
exports.ArrowLeftIcon = ArrowLeftIcon$1;
exports.ArrowLongDownIcon = ArrowLongDownIcon$1;
exports.ArrowRightIcon = ArrowRightIcon$1;
exports.ArrowTriangleDownIcon = ArrowTriangleDownIcon$1;
exports.ArrowTriangleUpIcon = ArrowTriangleUpIcon$1;
exports.ArrowUpIcon = ArrowUpIcon$1;
exports.ArrowsIcon = ArrowsIcon$1;
exports.BackIcon = BackIcon$1;
exports.BidirectionalArrowIcon = BidirectionalArrowIcon$1;
exports.BinFilledIcon = BinFilledIcon$1;
exports.BinLinearIcon = BinLinearIcon$1;
exports.BoxIcon = BoxIcon$1;
exports.BrainIcon = BrainIcon$1;
exports.CalendarIcon = CalendarIcon$1;
exports.CameraIcon = CameraIcon$1;
exports.CaretDownIcon = CaretDownIcon$1;
exports.CaretUpIcon = CaretUpIcon$1;
exports.CartIcon = CartIcon$1;
exports.ChainBrokenIcon = ChainBrokenIcon$1;
exports.ChainIcon = ChainIcon$1;
exports.CheckActiveIcon = CheckActiveIcon$1;
exports.CheckBoldIcon = CheckBoldIcon$1;
exports.CheckInactiveIcon = CheckInactiveIcon$1;
exports.CheckThinIcon = CheckThinIcon$1;
exports.CircleIcon = CircleIcon$1;
exports.ClipboardIcon = ClipboardIcon$1;
exports.ClockIcon = ClockIcon$1;
exports.ClockWithArrowIcon = ClockWithArrowIcon$1;
exports.CloseBoldIcon = CloseBoldIcon$1;
exports.CloseIcon = CloseIcon$1;
exports.CodeViewIcon = CodeViewIcon$1;
exports.CoinsIcon = CoinsIcon$1;
exports.ColumnsIcon = ColumnsIcon$1;
exports.ConnectedSquareIcon = ConnectedSquareIcon$1;
exports.ConnectedTriangleIcon = ConnectedTriangleIcon$1;
exports.CopyIcon = CopyIcon$1;
exports.CubeIcon = CubeIcon$1;
exports.CubesIcon = CubesIcon$1;
exports.DomainIcon = DomainIcon$1;
exports.DotIcon = DotIcon$1;
exports.DownloadIcon = DownloadIcon$1;
exports.DragDropIcon = DragDropIcon$1;
exports.DragIcon = DragIcon$1;
exports.EditIcon = EditIcon$1;
exports.ErrorIcon = ErrorIcon$1;
exports.ExpandIcon = ExpandIcon$1;
exports.ExportIcon = ExportIcon$1;
exports.ExternalLinkIcon = ExternalLinkIcon$1;
exports.EyeCrossedIcon = EyeCrossedIcon$1;
exports.EyeIcon = EyeIcon$1;
exports.FilterAndListIcon = FilterAndListIcon$1;
exports.FilterIcon = FilterIcon$1;
exports.FlagFilledIcon = FlagFilledIcon$1;
exports.FlagLinearIcon = FlagLinearIcon$1;
exports.FlameIcon = FlameIcon$1;
exports.FractionDigitsIcon = FractionDigitsIcon$1;
exports.GearIcon = GearIcon$1;
exports.GraduationCapIcon = GraduationCapIcon$1;
exports.GraphIcon = GraphIcon$1;
exports.GridIcon = GridIcon$1;
exports.HeartIcon = HeartIcon$1;
exports.HomeIcon = HomeIcon$1;
exports.ImportIcon = ImportIcon$1;
exports.InfoIcon = InfoIcon$1;
exports.InformationIcon = InformationIcon$1;
exports.LayersIcon = LayersIcon$1;
exports.ListIcon = ListIcon$1;
exports.ListWithSearchIcon = ListWithSearchIcon$1;
exports.LockIcon = LockIcon$1;
exports.LogoutIcon = LogoutIcon$1;
exports.MailIcon = MailIcon$1;
exports.MinimizeIcon = MinimizeIcon$1;
exports.NestedViewIcon = NestedViewIcon$1;
exports.OperationsIcon = OperationsIcon$1;
exports.PageGearIcon = PageGearIcon$1;
exports.PagesIcon = PagesIcon$1;
exports.PaperBillInvertedIcon = PaperBillInvertedIcon$1;
exports.PaperclipIcon = PaperclipIcon$1;
exports.PinFilledIcon = PinFilledIcon$1;
exports.PinGearIcon = PinGearIcon$1;
exports.PinLinearIcon = PinLinearIcon$1;
exports.PluginIcon = PluginIcon$1;
exports.PlusBoldIcon = PlusBoldIcon$1;
exports.PlusThinIcon = PlusThinIcon$1;
exports.RefreshIcon = RefreshIcon$1;
exports.RestoreIcon = RestoreIcon$1;
exports.RevertIcon = RevertIcon$1;
exports.ReviewIcon = ReviewIcon$1;
exports.RightTriangleFilledIcon = RightTriangleFilledIcon$1;
exports.RightTriangleLinearIcon = RightTriangleLinearIcon$1;
exports.RocketIcon = RocketIcon$1;
exports.ScreenGearIcon = ScreenGearIcon$1;
exports.ScreenUserIcon = ScreenUserIcon$1;
exports.SearchIcon = SearchIcon$1;
exports.SidebarCollapseIcon = SidebarCollapseIcon$1;
exports.SidebarExpandIcon = SidebarExpandIcon$1;
exports.SortingIcon = SortingIcon$1;
exports.SpeechBubbleIcon = SpeechBubbleIcon$1;
exports.SpeedometerIcon = SpeedometerIcon$1;
exports.SplitIcon = SplitIcon$1;
exports.StackIcon = StackIcon$1;
exports.StarIcon = StarIcon$1;
exports.SubdirectoryArrowIcon = SubdirectoryArrowIcon$1;
exports.SupportIcon = SupportIcon$1;
exports.SwitcherIcon = SwitcherIcon$1;
exports.TableIcon = TableIcon$1;
exports.TagIcon = TagIcon$1;
exports.TagMultiIcon = TagMultiIcon$1;
exports.TagStackedIcon = TagStackedIcon$1;
exports.TerminalIcon = TerminalIcon$1;
exports.TreeStructureIcon = TreeStructureIcon$1;
exports.TruckIcon = TruckIcon$1;
exports.UserFilledIcon = UserFilledIcon$1;
exports.UserLinearIcon = UserLinearIcon$1;
exports.VerifiedIcon = VerifiedIcon$1;
exports.ViewGridPlusIcon = ViewGridPlusIcon$1;
exports.WarningIcon = WarningIcon$1;
exports.WorldIcon = WorldIcon$1;
