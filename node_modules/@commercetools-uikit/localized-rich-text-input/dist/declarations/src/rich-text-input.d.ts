import { type ReactNode, type ForwardedRef } from 'react';
import { type TEditorProps } from './editor';
type TRichTextInputProps = {
    defaultExpandMultilineText: TEditorProps['defaultExpandMultilineText'];
    hasError?: TEditorProps['hasError'];
    hasWarning?: TEditorProps['hasWarning'];
    id?: TEditorProps['id'];
    name?: string;
    placeholder: TEditorProps['placeholder'];
    isDisabled?: TEditorProps['isDisabled'];
    isReadOnly?: TEditorProps['isReadOnly'];
    onChange?: (state: string) => void;
    onBlur?: TEditorProps['onBlur'];
    onFocus?: TEditorProps['onFocus'];
    value: string;
    showExpandIcon: TEditorProps['showExpandIcon'];
    onClickExpand?: TEditorProps['onClickExpand'];
    hasLanguagesControl?: TEditorProps['hasLanguagesControl'];
    parentRef?: ForwardedRef<unknown>;
    language: string;
    isOpen: boolean;
    toggleLanguage: (language: string) => void;
    warning?: ReactNode;
    error?: string;
};
declare const RichTextInputWithRef: import("react").ForwardRefExoticComponent<TRichTextInputProps & import("react").RefAttributes<unknown>>;
export default RichTextInputWithRef;
