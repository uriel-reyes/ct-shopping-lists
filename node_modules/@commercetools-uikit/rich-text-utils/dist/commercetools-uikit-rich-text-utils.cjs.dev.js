'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _slicedToArray = require('@babel/runtime-corejs3/helpers/slicedToArray');
var _everyInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/every');
var _Object$values = require('@babel/runtime-corejs3/core-js-stable/object/values');
var _reduceInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/reduce');
var _Object$entries = require('@babel/runtime-corejs3/core-js-stable/object/entries');
var _Object$keys = require('@babel/runtime-corejs3/core-js-stable/object/keys');
var utils = require('@commercetools-uikit/utils');
var uniq = require('lodash/uniq');
var _defineProperty = require('@babel/runtime-corejs3/helpers/defineProperty');
var _mapInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/map');
var _Array$isArray = require('@babel/runtime-corejs3/core-js-stable/array/is-array');
var _flatInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/flat');
var _Array$from = require('@babel/runtime-corejs3/core-js-stable/array/from');
var _forEachInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/for-each');
var _Object$getOwnPropertySymbols = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols');
var _filterInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/filter');
var _Object$getOwnPropertyDescriptor = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor');
var _Object$getOwnPropertyDescriptors = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors');
var _Object$defineProperties = require('@babel/runtime-corejs3/core-js-stable/object/define-properties');
var _Object$defineProperty = require('@babel/runtime-corejs3/core-js-stable/object/define-property');
var escapeHtml = require('escape-html');
var slate = require('slate');
var slateHyperscript = require('slate-hyperscript');
var parse = require('style-to-object');
var isEmpty$2 = require('lodash/isEmpty');
var _someInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/some');
var _includesInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/includes');
var slateReact = require('slate-react');
var jsxRuntime = require('@emotion/react/jsx-runtime');
var _pt = require('prop-types');
var react = require('react');
var inputUtils = require('@commercetools-uikit/input-utils');
var _styled = require('@emotion/styled/base');
var _findInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/find');
var designSystem = require('@commercetools-uikit/design-system');
var reactIntl = require('react-intl');
var react$1 = require('@emotion/react');
var Tooltip = require('@commercetools-uikit/tooltip');
var icons = require('@commercetools-uikit/icons');
var Inline = require('@commercetools-uikit/spacings-inline');
var omit = require('lodash/omit');
var DownshiftUntyped = require('downshift');
var _concatInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/concat');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

var _everyInstanceProperty__default = /*#__PURE__*/_interopDefault(_everyInstanceProperty);
var _Object$values__default = /*#__PURE__*/_interopDefault(_Object$values);
var _reduceInstanceProperty__default = /*#__PURE__*/_interopDefault(_reduceInstanceProperty);
var _Object$entries__default = /*#__PURE__*/_interopDefault(_Object$entries);
var _Object$keys__default = /*#__PURE__*/_interopDefault(_Object$keys);
var uniq__default = /*#__PURE__*/_interopDefault(uniq);
var _mapInstanceProperty__default = /*#__PURE__*/_interopDefault(_mapInstanceProperty);
var _Array$isArray__default = /*#__PURE__*/_interopDefault(_Array$isArray);
var _flatInstanceProperty__default = /*#__PURE__*/_interopDefault(_flatInstanceProperty);
var _Array$from__default = /*#__PURE__*/_interopDefault(_Array$from);
var _forEachInstanceProperty__default = /*#__PURE__*/_interopDefault(_forEachInstanceProperty);
var _Object$getOwnPropertySymbols__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertySymbols);
var _filterInstanceProperty__default = /*#__PURE__*/_interopDefault(_filterInstanceProperty);
var _Object$getOwnPropertyDescriptor__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertyDescriptor);
var _Object$getOwnPropertyDescriptors__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertyDescriptors);
var _Object$defineProperties__default = /*#__PURE__*/_interopDefault(_Object$defineProperties);
var _Object$defineProperty__default = /*#__PURE__*/_interopDefault(_Object$defineProperty);
var escapeHtml__default = /*#__PURE__*/_interopDefault(escapeHtml);
var parse__default = /*#__PURE__*/_interopDefault(parse);
var isEmpty__default = /*#__PURE__*/_interopDefault(isEmpty$2);
var _someInstanceProperty__default = /*#__PURE__*/_interopDefault(_someInstanceProperty);
var _includesInstanceProperty__default = /*#__PURE__*/_interopDefault(_includesInstanceProperty);
var _pt__default = /*#__PURE__*/_interopDefault(_pt);
var _styled__default = /*#__PURE__*/_interopDefault(_styled);
var _findInstanceProperty__default = /*#__PURE__*/_interopDefault(_findInstanceProperty);
var Tooltip__default = /*#__PURE__*/_interopDefault(Tooltip);
var Inline__default = /*#__PURE__*/_interopDefault(Inline);
var omit__default = /*#__PURE__*/_interopDefault(omit);
var DownshiftUntyped__default = /*#__PURE__*/_interopDefault(DownshiftUntyped);
var _concatInstanceProperty__default = /*#__PURE__*/_interopDefault(_concatInstanceProperty);

function ownKeys$g(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$g(target) { for (var i = 1; i < arguments.length; i++) { var _context5, _context6; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context5 = ownKeys$g(Object(source), !0)).call(_context5, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context6 = ownKeys$g(Object(source))).call(_context6, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }

// Slate's way of providing custom type annotations comes down to extending `CustomTypes` interface
// more: https://docs.slatejs.org/concepts/12-typescript
// example: https://github.com/ianstormtaylor/slate/blob/main/packages/slate-react/src/custom-types.ts
const serializeNode = node => {
  var _context;
  if (slate.Text.isText(node)) {
    let string = escapeHtml__default["default"](node.text);
    if (node.bold) {
      string = "<strong>".concat(string, "</strong>");
    }
    if (node.code) {
      string = "<code>".concat(string, "</code>");
    }
    if (node.italic) {
      string = "<em>".concat(string, "</em>");
    }
    if (node.underline) {
      string = "<u>".concat(string, "</u>");
    }
    if (node.superscript) {
      string = "<sup>".concat(string, "</sup>");
    }
    if (node.subscript) {
      string = "<sub>".concat(string, "</sub>");
    }
    if (node.strikethrough) {
      string = "<del>".concat(string, "</del>");
    }
    return string;
  }
  const children = _mapInstanceProperty__default["default"](_context = node.children).call(_context, serializeNode).join('');
  switch (node.type) {
    case 'block-quote':
      return "<blockquote>".concat(children, "</blockquote>");
    case 'paragraph':
      return "<p>".concat(children, "</p>");
    case 'code':
      return "<pre>\n            <code>".concat(children, "</code>\n          </pre>");
    case 'span':
      return "<span>".concat(children, "</span>");
    case 'bulleted-list':
      return "<ul>".concat(children, "</ul>");
    case 'numbered-list':
      return "<ol>".concat(children, "</ol>");
    case 'list-item':
      return "<li>".concat(children, "</li>");
    case 'heading-one':
      return "<h1>".concat(children, "</h1>");
    case 'heading-two':
      return "<h2>".concat(children, "</h2>");
    case 'heading-three':
      return "<h3>".concat(children, "</h3>");
    case 'heading-four':
      return "<h4}>".concat(children, "</h4>");
    case 'heading-five':
      return "<h5>".concat(children, "</h5>");
    default:
      return children;
  }
};
const isEmptyParagraph = value => slate.Element.isElement(value) && value.type === 'paragraph' && value.children.length === 1 && value.children[0].text === '';
const serializeSingle = value => {
  if (value === null || isEmptyParagraph(value)) return '';
  return serializeNode(value);
};
const serialize = value => {
  let outputHtml = '';
  if (value === null || !_Array$isArray__default["default"](value)) {
    outputHtml = serializeSingle(value);
  } else {
    outputHtml = _mapInstanceProperty__default["default"](value).call(value, node => serializeSingle(node)).join('');
  }
  return outputHtml;
};
const ELEMENT_TAGS = {
  BLOCKQUOTE: () => ({
    type: 'quote'
  }),
  H1: () => ({
    type: 'heading-one'
  }),
  H2: () => ({
    type: 'heading-two'
  }),
  H3: () => ({
    type: 'heading-three'
  }),
  H4: () => ({
    type: 'heading-four'
  }),
  H5: () => ({
    type: 'heading-five'
  }),
  H6: () => ({
    type: 'heading-six'
  }),
  LI: () => ({
    type: 'list-item'
  }),
  OL: () => ({
    type: 'numbered-list'
  }),
  P: () => ({
    type: 'paragraph'
  }),
  PRE: () => ({
    type: 'code'
  }),
  UL: () => ({
    type: 'bulleted-list'
  })
};
const TEXT_TAGS = {
  CODE: () => ({
    code: true
  }),
  DEL: () => ({
    strikethrough: true
  }),
  EM: () => ({
    italic: true
  }),
  I: () => ({
    italic: true
  }),
  S: () => ({
    strikethrough: true
  }),
  SUP: () => ({
    superscript: true
  }),
  SUB: () => ({
    subscript: true
  }),
  STRONG: () => ({
    bold: true
  }),
  U: () => ({
    underline: true
  })
};
const mapper = {
  'font-weight': {
    bold: {
      bold: true
    }
  },
  'text-decoration-line': {
    underline: {
      underline: true
    },
    'line-through': {
      strikethrough: true
    }
  },
  'text-decoration': {
    underline: {
      underline: true
    }
  },
  'font-style': {
    italic: {
      italic: true
    }
  },
  'vertical-align': {
    sup: {
      superscript: true
    },
    sub: {
      subscript: true
    }
  }
};
const wrapWithParagraph = textContent => slateHyperscript.jsx('element', {
  type: 'paragraph'
}, textContent);
const wrapWithParagraphIfRootElement = (el, textContent) => {
  var _el$parentNode;
  return ((_el$parentNode = el.parentNode) === null || _el$parentNode === void 0 ? void 0 : _el$parentNode.nodeName) === 'BODY' // root element, because body is eventually turned to React fragment
  ? wrapWithParagraph(textContent) : textContent;
};
const deserializeElement = el => {
  var _context2, _context3;
  // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType#value
  if (el.nodeType === 3) {
    return wrapWithParagraphIfRootElement(el, {
      text: el.textContent || ''
    }); // for root TEXT_NODE -> wrap with <p>
  } else if (el.nodeType !== 1) {
    return null; // for non-ELEMENT_NODE
  }

  const nodeName = el.nodeName;
  let parent = el;
  if (nodeName === 'PRE' && el.childNodes[0] && el.childNodes[0].nodeName === 'CODE') {
    parent = el.childNodes[0];
  }
  let children = _flatInstanceProperty__default["default"](_context2 = _mapInstanceProperty__default["default"](_context3 = _Array$from__default["default"](parent.childNodes)).call(_context3, deserializeElement)).call(_context2);
  if (children.length === 0) {
    children = [{
      text: ''
    }];
  }
  if (el.nodeName === 'BODY') {
    return slateHyperscript.jsx('fragment', {}, children);
  }
  if (el.nodeName === 'SPAN') {
    let attrs = {};
    const styleStr = el.getAttribute('style');
    const styleObj = parse__default["default"](styleStr || '');
    if (isEmpty__default["default"](styleObj)) {
      // if no style attrs -> just use `span`
      return wrapWithParagraphIfRootElement(el, slateHyperscript.jsx('element', {
        type: 'span'
      }, children));
    } else {
      var _context4;
      attrs = _reduceInstanceProperty__default["default"](_context4 = _Object$entries__default["default"](styleObj || {})).call(_context4, (mappedAttrObj, _ref) => {
        let _ref2 = _slicedToArray(_ref, 2),
          key = _ref2[0],
          value = _ref2[1];
        const values = value.split(' '); // to cover the case of space-separated values e.g. `text-decoration-line: "underline line-through"`

        _forEachInstanceProperty__default["default"](values).call(values, splittedValue => {
          var _mapper$key;
          if ((_mapper$key = mapper[key]) !== null && _mapper$key !== void 0 && _mapper$key[splittedValue]) {
            // checking if the parsed style attr value has representation in the mapper obj
            mappedAttrObj = _objectSpread$g(_objectSpread$g({}, mappedAttrObj), mapper[key][splittedValue]);
          }
        });
        return mappedAttrObj;
      }, {});
      if (isEmpty__default["default"](attrs)) {
        // if all style attr values are irrelevant -> just use `span`
        return wrapWithParagraphIfRootElement(el, slateHyperscript.jsx('element', {
          type: 'span'
        }, children));
      }
      return wrapWithParagraphIfRootElement(el,
      // children mapping to cover nested elements within text e.g. <span>Some <span>text</span></span>
      _mapInstanceProperty__default["default"](children).call(children, child => slate.Text.isText(child) ? slateHyperscript.jsx('text', attrs, child) : slateHyperscript.jsx('element', attrs, child)));
    }
  }
  if (ELEMENT_TAGS[nodeName]) {
    const attrs = ELEMENT_TAGS[nodeName]();
    return slateHyperscript.jsx('element', attrs, children);
  }
  if (TEXT_TAGS[nodeName]) {
    const attrs = TEXT_TAGS[nodeName]();
    return _mapInstanceProperty__default["default"](children).call(children, child => slateHyperscript.jsx('text', attrs, slate.Text.isText(child) ? child : 'Invalid markup'));
  }
  return children;
};
const deserialize = html => {
  const document = new DOMParser().parseFromString(html || '<p></p>', 'text/html');
  return deserializeElement(document.body);
};
const defaultSlateState = [{
  type: 'paragraph',
  children: [{
    text: ''
  }]
}];
const html = {
  serialize,
  deserialize
};
var html$1 = html;

const isTextNodeNonEmpty = node => slate.Text.isText(node) && node.text !== '';
const isElementNodeNonEmpty = node => {
  var _context;
  return _someInstanceProperty__default["default"](_context = node.children).call(_context, isTextNodeNonEmpty);
};

/*
  Slate editor must contain at least one element.
  more: https://github.com/ianstormtaylor/slate/issues/3613

  Therefore, editor is considered non-empty if has at least one child element with non-empty text.
*/
const isEmpty$1 = rawValue => {
  const deserialized = html$1.deserialize(rawValue);
  if (slate.Element.isElement(deserialized)) {
    var _context2;
    return !_someInstanceProperty__default["default"](_context2 = deserialized.children).call(_context2, isTextNodeNonEmpty);
  }
  if (slate.Element.isElementList(deserialized)) {
    return _someInstanceProperty__default["default"](deserialized).call(deserialized, node => {
      var _context3;
      return !(slate.Element.isElement(node) && _someInstanceProperty__default["default"](_context3 = node.children).call(_context3, childNode => slate.Text.isText(childNode) && isTextNodeNonEmpty(childNode) || slate.Element.isElement(childNode) && isElementNodeNonEmpty(childNode))) || slate.Text.isText(node) && node.text === '';
    });
  }
  return true;
};
var isRichTextEmpty = isEmpty$1;

const initializeValue = value => html$1.serialize(html$1.deserialize(value));
const isLocalizedHtmlValueEmpty = value => !value || isRichTextEmpty(value);
const isEmpty = localizedHtmlValue => {
  var _context;
  if (!localizedHtmlValue) return true;
  return _everyInstanceProperty__default["default"](_context = _Object$values__default["default"](localizedHtmlValue)).call(_context, isLocalizedHtmlValueEmpty);
};
const omitEmptyTranslations = localizedString => {
  var _context2;
  process.env.NODE_ENV !== "production" ? utils.warning(typeof localizedString === 'object', 'omitEmptyTranslations must be called with an object') : void 0;
  return _reduceInstanceProperty__default["default"](_context2 = _Object$entries__default["default"](localizedString)).call(_context2, (localizedStringWithoutEmptyTranslations, _ref) => {
    let _ref2 = _slicedToArray(_ref, 2),
      language = _ref2[0],
      value = _ref2[1];
    if (!isLocalizedHtmlValueEmpty(value)) {
      localizedStringWithoutEmptyTranslations[language] = value;
    }
    return localizedStringWithoutEmptyTranslations;
  }, {});
};
const createLocalizedString = function (languages) {
  let existingTranslations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  const mergedLanguages = existingTranslations ? uniq__default["default"]([...languages, ..._Object$keys__default["default"](existingTranslations)]) : languages;
  return _reduceInstanceProperty__default["default"](mergedLanguages).call(mergedLanguages, (localizedString, language) => {
    localizedString[language] = existingTranslations[language] ? initializeValue(existingTranslations[language]) : initializeValue('');
    return localizedString;
  }, {});
};

var index = /*#__PURE__*/Object.freeze({
  __proto__: null,
  createLocalizedString: createLocalizedString,
  isEmpty: isEmpty,
  omitEmptyTranslations: omitEmptyTranslations
});

const HiddenInput = props => {
  const handleFocus = props.handleFocus;
  const onFocus = react.useCallback(event => {
    event.preventDefault();
    if (!props.isFocused) {
      handleFocus();
    }
  }, [props.isFocused, handleFocus]);
  const onBlur = react.useCallback(event => {
    event.preventDefault();
  }, []);
  return jsxRuntime.jsx("input", {
    css: inputUtils.accessibleHiddenInputStyles,
    id: props.id,
    onFocus: onFocus,
    onBlur: onBlur,
    disabled: props.disabled,
    tabIndex: props.readOnly ? 0 : -1
  });
};
HiddenInput.propTypes = process.env.NODE_ENV !== "production" ? {
  handleFocus: _pt__default["default"].func.isRequired,
  isFocused: _pt__default["default"].bool.isRequired,
  id: _pt__default["default"].string,
  disabled: _pt__default["default"].bool,
  readOnly: _pt__default["default"].bool
} : {};
HiddenInput.displayName = 'HiddenInput';
var HiddenInput$1 = HiddenInput;

function ownKeys$f(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$f(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$f(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$f(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$b = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$b = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$b[size], "px"),
        height: "".concat(iconSizes$b[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$b.big, "px"),
        height: "".concat(iconSizes$b.big, "px")
      };
  }
};
const getSizeStyle$b = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$b(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$b = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    process.env.NODE_ENV !== "production" ? utils.warning(color, "ui-kit/Icon: the specified color '".concat(color, "' is not supported.")) : void 0;
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$b = props => /*#__PURE__*/react$1.css("*:not([fill='none']){fill:", getColor$b(props.color), ";}&,image{", getSizeStyle$b(props.size), ";}flex-shrink:0;" + (process.env.NODE_ENV === "production" ? "" : ";label:getIconStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJvbGRSZWFjdC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeUdrRCIsImZpbGUiOiJCb2xkUmVhY3QudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLy8gVEhJUyBJUyBBTiBBVVRPR0VORVJBVEVEIEZJTEUuIERPIE5PVCBFRElUIFRISVMgRklMRSBESVJFQ1RMWS5cbi8vIFRoaXMgZmlsZSBpcyBjcmVhdGVkIHdpdGggJ3lhcm4gZ2VuZXJhdGUtaWNvbnMnLlxuLy8gT3JpZ2luYWwgU1ZHIGZpbGU6IHNyYy9yaWNoLXRleHQtYm9keS9pY29ucy9zdmcvYm9sZC5yZWFjdC5zdmdcbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFycyAqL1xuaW1wb3J0IHsgd2FybmluZyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L3V0aWxzJztcbmltcG9ydCB7IGNzcywgQ2xhc3NOYW1lcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB7IGRlc2lnblRva2VucyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuZXhwb3J0IHR5cGUgUHJvcHMgPSB7XG4gIGNvbG9yPzpcbiAgICB8ICdzb2xpZCdcbiAgICB8ICduZXV0cmFsNjAnXG4gICAgfCAnc3VyZmFjZSdcbiAgICB8ICdpbmZvJ1xuICAgIHwgJ3ByaW1hcnknXG4gICAgfCAncHJpbWFyeTQwJ1xuICAgIHwgJ3dhcm5pbmcnXG4gICAgfCAnZXJyb3InO1xuICBzaXplPzogJ3NtYWxsJyB8ICdtZWRpdW0nIHwgJ2JpZycgfCAnc2NhbGUnO1xufTtcbmV4cG9ydCB0eXBlIFNWR1Byb3BzID0gUHJvcHMgJiB7XG4gIGNsYXNzTmFtZTogc3RyaW5nO1xufTtcbmNvbnN0IGljb25TaXplcyA9IHtcbiAgc21hbGw6IDEyLFxuICBtZWRpdW06IDE2LFxuICBiaWc6IDI0LFxufSBhcyBjb25zdDtcbmNvbnN0IGdldFNpemVEaW1lbnNpb25zID0gKHNpemU6IFByb3BzWydzaXplJ10pID0+IHtcbiAgc3dpdGNoIChzaXplKSB7XG4gICAgY2FzZSAnc2NhbGUnOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgaGVpZ2h0OiAnYXV0bycsXG4gICAgICB9O1xuICAgIGNhc2UgJ3NtYWxsJzpcbiAgICBjYXNlICdtZWRpdW0nOlxuICAgIGNhc2UgJ2JpZyc6XG4gICAgICByZXR1cm4ge1xuICAgICAgICB3aWR0aDogYCR7aWNvblNpemVzW3NpemVdfXB4YCxcbiAgICAgICAgaGVpZ2h0OiBgJHtpY29uU2l6ZXNbc2l6ZV19cHhgLFxuICAgICAgfTtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd2lkdGg6IGAke2ljb25TaXplcy5iaWd9cHhgLFxuICAgICAgICBoZWlnaHQ6IGAke2ljb25TaXplcy5iaWd9cHhgLFxuICAgICAgfTtcbiAgfVxufTtcbmNvbnN0IGdldFNpemVTdHlsZSA9IChzaXplOiBQcm9wc1snc2l6ZSddKSA9PiB7XG4gIGNvbnN0IGRpbWVuc2lvbnMgPSBnZXRTaXplRGltZW5zaW9ucyhzaXplKTtcbiAgc3dpdGNoIChzaXplKSB7XG4gICAgY2FzZSAnc2NhbGUnOlxuICAgICAgcmV0dXJuIGBcbiAgICAgICAgJjpub3QoOnJvb3QpIHtcbiAgICAgICAgICB3aWR0aDogJHtkaW1lbnNpb25zLndpZHRofTtcbiAgICAgICAgICBoZWlnaHQ6ICR7ZGltZW5zaW9ucy5oZWlnaHR9O1xuICAgICAgICB9XG4gICAgICBgO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gYFxuICAgICAgICB3aWR0aDogJHtkaW1lbnNpb25zLndpZHRofTtcbiAgICAgICAgaGVpZ2h0OiAke2RpbWVuc2lvbnMuaGVpZ2h0fTtcbiAgICAgIGA7XG4gIH1cbn07XG5jb25zdCBnZXRDb2xvciA9IChjb2xvcjogUHJvcHNbJ2NvbG9yJ10pID0+IHtcbiAgaWYgKCFjb2xvcikgcmV0dXJuICdpbmhlcml0JztcbiAgbGV0IGljb25Db2xvcjtcbiAgc3dpdGNoIChjb2xvcikge1xuICAgIGNhc2UgJ3NvbGlkJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvclNvbGlkO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnbmV1dHJhbDYwJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvck5ldXRyYWw2MDtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3N1cmZhY2UnOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ2luZm8nOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9ySW5mbztcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3ByaW1hcnknOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9yUHJpbWFyeTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3ByaW1hcnk0MCc6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JQcmltYXJ5NDA7XG4gICAgICBicmVhaztcbiAgICBjYXNlICd3YXJuaW5nJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvcldhcm5pbmc7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdlcnJvcic6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JFcnJvcjtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICBicmVhaztcbiAgfVxuICBpZiAoIWljb25Db2xvcikge1xuICAgIHdhcm5pbmcoXG4gICAgICBjb2xvcixcbiAgICAgIGB1aS1raXQvSWNvbjogdGhlIHNwZWNpZmllZCBjb2xvciAnJHtjb2xvcn0nIGlzIG5vdCBzdXBwb3J0ZWQuYFxuICAgICk7XG4gICAgcmV0dXJuICdpbmhlcml0JztcbiAgfVxuICByZXR1cm4gaWNvbkNvbG9yO1xufTtcbmV4cG9ydCBjb25zdCBnZXRJY29uU3R5bGVzID0gKHByb3BzOiBQcm9wcykgPT4gY3NzYFxuICAqOm5vdChbZmlsbD0nbm9uZSddKSB7XG4gICAgZmlsbDogJHtnZXRDb2xvcihwcm9wcy5jb2xvcil9O1xuICB9XG4gICYsXG4gIGltYWdlIHtcbiAgICAke2dldFNpemVTdHlsZShwcm9wcy5zaXplKX07XG4gIH1cbiAgZmxleC1zaHJpbms6IDA7XG5gO1xuY29uc3QgU3ZnQm9sZCA9IChwcm9wczogU1ZHUHJvcHMpID0+IChcbiAgPHN2Z1xuICAgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxuICAgIHdpZHRoPXsyNH1cbiAgICBoZWlnaHQ9ezI0fVxuICAgIHZpZXdCb3g9XCIwIDAgMjQgMjRcIlxuICAgIHJvbGU9XCJpbWdcIlxuICAgIHsuLi5wcm9wc31cbiAgPlxuICAgIDxwYXRoXG4gICAgICBmaWxsPVwiIzFBMUExQVwiXG4gICAgICBmaWxsUnVsZT1cImV2ZW5vZGRcIlxuICAgICAgZD1cIk02IDNoNS41OTljMi41NSAwIDQuNDAzLjM2MyA1LjU1NSAxLjA4OSAxLjE1My43MjYgMS43MjkgMS44OCAxLjcyOSAzLjQ2NCAwIDEuMDc0LS4yNTIgMS45NTYtLjc1NyAyLjY0NWEzLjAyMyAzLjAyMyAwIDAgMS0yLjAxMiAxLjI0M3YuMTIzYzEuMTQuMjU0IDEuOTYzLjczIDIuNDY4IDEuNDI3LjUwNC42OTguNzU2IDEuNjI1Ljc1NiAyLjc4MSAwIDEuNjQtLjU5MiAyLjkyLTEuNzc4IDMuODQtMS4xODUuOTE4LTIuNzk1IDEuMzc3LTQuODMgMS4zNzdINlYzWm0zLjgxNCA3LjEyNGgyLjIxNWMxLjAzNCAwIDEuNzgyLS4xNiAyLjI0Ni0uNDguNDYzLS4zMi42OTUtLjg0OC42OTUtMS41ODcgMC0uNjg5LS4yNTItMS4xODMtLjc1Ny0xLjQ4Mi0uNTA0LS4zLTEuMzAyLS40NS0yLjM5My0uNDVIOS44MTR2NFptMCAzLjAyN3Y0LjY4OEgxMi4zYzEuMDUgMCAxLjgyNS0uMiAyLjMyNi0uNjAyLjUtLjQwMi43NS0xLjAxOC43NS0xLjg0NiAwLTEuNDkzLTEuMDY2LTIuMjQtMy4xOTktMi4yNEg5LjgxNFpcIlxuICAgIC8+XG4gIDwvc3ZnPlxuKTtcblN2Z0JvbGQuZGlzcGxheU5hbWUgPSAnU3ZnQm9sZCc7XG5jb25zdCBCb2xkSWNvbiA9IChwcm9wczogUHJvcHMpID0+IChcbiAgPENsYXNzTmFtZXM+XG4gICAgeyh7IGNzczogY3JlYXRlQ2xhc3MgfSkgPT4gKFxuICAgICAgPFN2Z0JvbGQgey4uLnByb3BzfSBjbGFzc05hbWU9e2NyZWF0ZUNsYXNzKGdldEljb25TdHlsZXMocHJvcHMpKX0gLz5cbiAgICApfVxuICA8L0NsYXNzTmFtZXM+XG4pO1xuQm9sZEljb24uZGlzcGxheU5hbWUgPSAnQm9sZEljb24nO1xuZXhwb3J0IGRlZmF1bHQgQm9sZEljb247XG4iXX0= */");
const SvgBold = props => jsxRuntime.jsx("svg", _objectSpread$f(_objectSpread$f({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fill: "#1A1A1A",
    fillRule: "evenodd",
    d: "M6 3h5.599c2.55 0 4.403.363 5.555 1.089 1.153.726 1.729 1.88 1.729 3.464 0 1.074-.252 1.956-.757 2.645a3.023 3.023 0 0 1-2.012 1.243v.123c1.14.254 1.963.73 2.468 1.427.504.698.756 1.625.756 2.781 0 1.64-.592 2.92-1.778 3.84-1.185.918-2.795 1.377-4.83 1.377H6V3Zm3.814 7.124h2.215c1.034 0 1.782-.16 2.246-.48.463-.32.695-.848.695-1.587 0-.689-.252-1.183-.757-1.482-.504-.3-1.302-.45-2.393-.45H9.814v4Zm0 3.027v4.688H12.3c1.05 0 1.825-.2 2.326-.602.5-.402.75-1.018.75-1.846 0-1.493-1.066-2.24-3.199-2.24H9.814Z"
  })
}));
SvgBold.displayName = 'SvgBold';
const BoldIcon = props => jsxRuntime.jsx(react$1.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgBold, _objectSpread$f(_objectSpread$f({}, props), {}, {
      className: createClass(getIconStyles$b(props))
    }));
  }
});
BoldIcon.displayName = 'BoldIcon';
var BoldIcon$1 = BoldIcon;

function ownKeys$e(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$e(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$e(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$e(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$a = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$a = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$a[size], "px"),
        height: "".concat(iconSizes$a[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$a.big, "px"),
        height: "".concat(iconSizes$a.big, "px")
      };
  }
};
const getSizeStyle$a = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$a(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$a = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    process.env.NODE_ENV !== "production" ? utils.warning(color, "ui-kit/Icon: the specified color '".concat(color, "' is not supported.")) : void 0;
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$a = props => /*#__PURE__*/react$1.css("*:not([fill='none']){fill:", getColor$a(props.color), ";}&,image{", getSizeStyle$a(props.size), ";}flex-shrink:0;" + (process.env.NODE_ENV === "production" ? "" : ";label:getIconStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkV4cGFuZFJlYWN0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5R2tEIiwiZmlsZSI6IkV4cGFuZFJlYWN0LnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8vIFRISVMgSVMgQU4gQVVUT0dFTkVSQVRFRCBGSUxFLiBETyBOT1QgRURJVCBUSElTIEZJTEUgRElSRUNUTFkuXG4vLyBUaGlzIGZpbGUgaXMgY3JlYXRlZCB3aXRoICd5YXJuIGdlbmVyYXRlLWljb25zJy5cbi8vIE9yaWdpbmFsIFNWRyBmaWxlOiBzcmMvcmljaC10ZXh0LWJvZHkvaWNvbnMvc3ZnL2V4cGFuZC5yZWFjdC5zdmdcbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFycyAqL1xuaW1wb3J0IHsgd2FybmluZyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L3V0aWxzJztcbmltcG9ydCB7IGNzcywgQ2xhc3NOYW1lcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB7IGRlc2lnblRva2VucyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuZXhwb3J0IHR5cGUgUHJvcHMgPSB7XG4gIGNvbG9yPzpcbiAgICB8ICdzb2xpZCdcbiAgICB8ICduZXV0cmFsNjAnXG4gICAgfCAnc3VyZmFjZSdcbiAgICB8ICdpbmZvJ1xuICAgIHwgJ3ByaW1hcnknXG4gICAgfCAncHJpbWFyeTQwJ1xuICAgIHwgJ3dhcm5pbmcnXG4gICAgfCAnZXJyb3InO1xuICBzaXplPzogJ3NtYWxsJyB8ICdtZWRpdW0nIHwgJ2JpZycgfCAnc2NhbGUnO1xufTtcbmV4cG9ydCB0eXBlIFNWR1Byb3BzID0gUHJvcHMgJiB7XG4gIGNsYXNzTmFtZTogc3RyaW5nO1xufTtcbmNvbnN0IGljb25TaXplcyA9IHtcbiAgc21hbGw6IDEyLFxuICBtZWRpdW06IDE2LFxuICBiaWc6IDI0LFxufSBhcyBjb25zdDtcbmNvbnN0IGdldFNpemVEaW1lbnNpb25zID0gKHNpemU6IFByb3BzWydzaXplJ10pID0+IHtcbiAgc3dpdGNoIChzaXplKSB7XG4gICAgY2FzZSAnc2NhbGUnOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgaGVpZ2h0OiAnYXV0bycsXG4gICAgICB9O1xuICAgIGNhc2UgJ3NtYWxsJzpcbiAgICBjYXNlICdtZWRpdW0nOlxuICAgIGNhc2UgJ2JpZyc6XG4gICAgICByZXR1cm4ge1xuICAgICAgICB3aWR0aDogYCR7aWNvblNpemVzW3NpemVdfXB4YCxcbiAgICAgICAgaGVpZ2h0OiBgJHtpY29uU2l6ZXNbc2l6ZV19cHhgLFxuICAgICAgfTtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd2lkdGg6IGAke2ljb25TaXplcy5iaWd9cHhgLFxuICAgICAgICBoZWlnaHQ6IGAke2ljb25TaXplcy5iaWd9cHhgLFxuICAgICAgfTtcbiAgfVxufTtcbmNvbnN0IGdldFNpemVTdHlsZSA9IChzaXplOiBQcm9wc1snc2l6ZSddKSA9PiB7XG4gIGNvbnN0IGRpbWVuc2lvbnMgPSBnZXRTaXplRGltZW5zaW9ucyhzaXplKTtcbiAgc3dpdGNoIChzaXplKSB7XG4gICAgY2FzZSAnc2NhbGUnOlxuICAgICAgcmV0dXJuIGBcbiAgICAgICAgJjpub3QoOnJvb3QpIHtcbiAgICAgICAgICB3aWR0aDogJHtkaW1lbnNpb25zLndpZHRofTtcbiAgICAgICAgICBoZWlnaHQ6ICR7ZGltZW5zaW9ucy5oZWlnaHR9O1xuICAgICAgICB9XG4gICAgICBgO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gYFxuICAgICAgICB3aWR0aDogJHtkaW1lbnNpb25zLndpZHRofTtcbiAgICAgICAgaGVpZ2h0OiAke2RpbWVuc2lvbnMuaGVpZ2h0fTtcbiAgICAgIGA7XG4gIH1cbn07XG5jb25zdCBnZXRDb2xvciA9IChjb2xvcjogUHJvcHNbJ2NvbG9yJ10pID0+IHtcbiAgaWYgKCFjb2xvcikgcmV0dXJuICdpbmhlcml0JztcbiAgbGV0IGljb25Db2xvcjtcbiAgc3dpdGNoIChjb2xvcikge1xuICAgIGNhc2UgJ3NvbGlkJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvclNvbGlkO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnbmV1dHJhbDYwJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvck5ldXRyYWw2MDtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3N1cmZhY2UnOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ2luZm8nOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9ySW5mbztcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3ByaW1hcnknOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9yUHJpbWFyeTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3ByaW1hcnk0MCc6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JQcmltYXJ5NDA7XG4gICAgICBicmVhaztcbiAgICBjYXNlICd3YXJuaW5nJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvcldhcm5pbmc7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdlcnJvcic6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JFcnJvcjtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICBicmVhaztcbiAgfVxuICBpZiAoIWljb25Db2xvcikge1xuICAgIHdhcm5pbmcoXG4gICAgICBjb2xvcixcbiAgICAgIGB1aS1raXQvSWNvbjogdGhlIHNwZWNpZmllZCBjb2xvciAnJHtjb2xvcn0nIGlzIG5vdCBzdXBwb3J0ZWQuYFxuICAgICk7XG4gICAgcmV0dXJuICdpbmhlcml0JztcbiAgfVxuICByZXR1cm4gaWNvbkNvbG9yO1xufTtcbmV4cG9ydCBjb25zdCBnZXRJY29uU3R5bGVzID0gKHByb3BzOiBQcm9wcykgPT4gY3NzYFxuICAqOm5vdChbZmlsbD0nbm9uZSddKSB7XG4gICAgZmlsbDogJHtnZXRDb2xvcihwcm9wcy5jb2xvcil9O1xuICB9XG4gICYsXG4gIGltYWdlIHtcbiAgICAke2dldFNpemVTdHlsZShwcm9wcy5zaXplKX07XG4gIH1cbiAgZmxleC1zaHJpbms6IDA7XG5gO1xuY29uc3QgU3ZnRXhwYW5kID0gKHByb3BzOiBTVkdQcm9wcykgPT4gKFxuICA8c3ZnXG4gICAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG4gICAgd2lkdGg9ezI0fVxuICAgIGhlaWdodD17MjR9XG4gICAgdmlld0JveD1cIjAgMCAyNCAyNFwiXG4gICAgcm9sZT1cImltZ1wiXG4gICAgey4uLnByb3BzfVxuICA+XG4gICAgPHBhdGggZD1cIk00IDIxYS45NjUuOTY1IDAgMCAxLS43MTItLjI4OEEuOTY1Ljk2NSAwIDAgMSAzIDIwdi02YzAtLjI4My4wOTYtLjUyMS4yODgtLjcxM0EuOTY3Ljk2NyAwIDAgMSA0IDEzYS45Ny45NyAwIDAgMSAuNzEzLjI4N0EuOTcuOTcgMCAwIDEgNSAxNHYzLjZMMTcuNiA1SDE0YS45NjUuOTY1IDAgMCAxLS43MTItLjI4OEEuOTY1Ljk2NSAwIDAgMSAxMyA0YzAtLjI4My4wOTYtLjUyMS4yODgtLjcxM0EuOTY3Ljk2NyAwIDAgMSAxNCAzaDZjLjI4MyAwIC41Mi4wOTYuNzEyLjI4Ny4xOTIuMTkyLjI4OC40My4yODguNzEzdjZjMCAuMjgzLS4wOTYuNTItLjI4OC43MTJBLjk2NS45NjUgMCAwIDEgMjAgMTFhLjk2NS45NjUgMCAwIDEtLjcxMi0uMjg4QS45NjUuOTY1IDAgMCAxIDE5IDEwVjYuNEw2LjQgMTlIMTBjLjI4MyAwIC41MjEuMDk2LjcxMy4yODhBLjk2Ny45NjcgMCAwIDEgMTEgMjBjMCAuMjgzLS4wOTYuNTItLjI4Ny43MTJBLjk2OC45NjggMCAwIDEgMTAgMjFINFpcIiAvPlxuICA8L3N2Zz5cbik7XG5TdmdFeHBhbmQuZGlzcGxheU5hbWUgPSAnU3ZnRXhwYW5kJztcbmNvbnN0IEV4cGFuZEljb24gPSAocHJvcHM6IFByb3BzKSA9PiAoXG4gIDxDbGFzc05hbWVzPlxuICAgIHsoeyBjc3M6IGNyZWF0ZUNsYXNzIH0pID0+IChcbiAgICAgIDxTdmdFeHBhbmQgey4uLnByb3BzfSBjbGFzc05hbWU9e2NyZWF0ZUNsYXNzKGdldEljb25TdHlsZXMocHJvcHMpKX0gLz5cbiAgICApfVxuICA8L0NsYXNzTmFtZXM+XG4pO1xuRXhwYW5kSWNvbi5kaXNwbGF5TmFtZSA9ICdFeHBhbmRJY29uJztcbmV4cG9ydCBkZWZhdWx0IEV4cGFuZEljb247XG4iXX0= */");
const SvgExpand = props => jsxRuntime.jsx("svg", _objectSpread$e(_objectSpread$e({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    d: "M4 21a.965.965 0 0 1-.712-.288A.965.965 0 0 1 3 20v-6c0-.283.096-.521.288-.713A.967.967 0 0 1 4 13a.97.97 0 0 1 .713.287A.97.97 0 0 1 5 14v3.6L17.6 5H14a.965.965 0 0 1-.712-.288A.965.965 0 0 1 13 4c0-.283.096-.521.288-.713A.967.967 0 0 1 14 3h6c.283 0 .52.096.712.287.192.192.288.43.288.713v6c0 .283-.096.52-.288.712A.965.965 0 0 1 20 11a.965.965 0 0 1-.712-.288A.965.965 0 0 1 19 10V6.4L6.4 19H10c.283 0 .521.096.713.288A.967.967 0 0 1 11 20c0 .283-.096.52-.287.712A.968.968 0 0 1 10 21H4Z"
  })
}));
SvgExpand.displayName = 'SvgExpand';
const ExpandIcon = props => jsxRuntime.jsx(react$1.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgExpand, _objectSpread$e(_objectSpread$e({}, props), {}, {
      className: createClass(getIconStyles$a(props))
    }));
  }
});
ExpandIcon.displayName = 'ExpandIcon';
var ExpandIcon$1 = ExpandIcon;

function ownKeys$d(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$d(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$d(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$d(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$9 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$9 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$9[size], "px"),
        height: "".concat(iconSizes$9[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$9.big, "px"),
        height: "".concat(iconSizes$9.big, "px")
      };
  }
};
const getSizeStyle$9 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$9(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$9 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    process.env.NODE_ENV !== "production" ? utils.warning(color, "ui-kit/Icon: the specified color '".concat(color, "' is not supported.")) : void 0;
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$9 = props => /*#__PURE__*/react$1.css("*:not([fill='none']){fill:", getColor$9(props.color), ";}&,image{", getSizeStyle$9(props.size), ";}flex-shrink:0;" + (process.env.NODE_ENV === "production" ? "" : ";label:getIconStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkl0YWxpY1JlYWN0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5R2tEIiwiZmlsZSI6Ikl0YWxpY1JlYWN0LnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8vIFRISVMgSVMgQU4gQVVUT0dFTkVSQVRFRCBGSUxFLiBETyBOT1QgRURJVCBUSElTIEZJTEUgRElSRUNUTFkuXG4vLyBUaGlzIGZpbGUgaXMgY3JlYXRlZCB3aXRoICd5YXJuIGdlbmVyYXRlLWljb25zJy5cbi8vIE9yaWdpbmFsIFNWRyBmaWxlOiBzcmMvcmljaC10ZXh0LWJvZHkvaWNvbnMvc3ZnL2l0YWxpYy5yZWFjdC5zdmdcbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFycyAqL1xuaW1wb3J0IHsgd2FybmluZyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L3V0aWxzJztcbmltcG9ydCB7IGNzcywgQ2xhc3NOYW1lcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB7IGRlc2lnblRva2VucyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuZXhwb3J0IHR5cGUgUHJvcHMgPSB7XG4gIGNvbG9yPzpcbiAgICB8ICdzb2xpZCdcbiAgICB8ICduZXV0cmFsNjAnXG4gICAgfCAnc3VyZmFjZSdcbiAgICB8ICdpbmZvJ1xuICAgIHwgJ3ByaW1hcnknXG4gICAgfCAncHJpbWFyeTQwJ1xuICAgIHwgJ3dhcm5pbmcnXG4gICAgfCAnZXJyb3InO1xuICBzaXplPzogJ3NtYWxsJyB8ICdtZWRpdW0nIHwgJ2JpZycgfCAnc2NhbGUnO1xufTtcbmV4cG9ydCB0eXBlIFNWR1Byb3BzID0gUHJvcHMgJiB7XG4gIGNsYXNzTmFtZTogc3RyaW5nO1xufTtcbmNvbnN0IGljb25TaXplcyA9IHtcbiAgc21hbGw6IDEyLFxuICBtZWRpdW06IDE2LFxuICBiaWc6IDI0LFxufSBhcyBjb25zdDtcbmNvbnN0IGdldFNpemVEaW1lbnNpb25zID0gKHNpemU6IFByb3BzWydzaXplJ10pID0+IHtcbiAgc3dpdGNoIChzaXplKSB7XG4gICAgY2FzZSAnc2NhbGUnOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgaGVpZ2h0OiAnYXV0bycsXG4gICAgICB9O1xuICAgIGNhc2UgJ3NtYWxsJzpcbiAgICBjYXNlICdtZWRpdW0nOlxuICAgIGNhc2UgJ2JpZyc6XG4gICAgICByZXR1cm4ge1xuICAgICAgICB3aWR0aDogYCR7aWNvblNpemVzW3NpemVdfXB4YCxcbiAgICAgICAgaGVpZ2h0OiBgJHtpY29uU2l6ZXNbc2l6ZV19cHhgLFxuICAgICAgfTtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd2lkdGg6IGAke2ljb25TaXplcy5iaWd9cHhgLFxuICAgICAgICBoZWlnaHQ6IGAke2ljb25TaXplcy5iaWd9cHhgLFxuICAgICAgfTtcbiAgfVxufTtcbmNvbnN0IGdldFNpemVTdHlsZSA9IChzaXplOiBQcm9wc1snc2l6ZSddKSA9PiB7XG4gIGNvbnN0IGRpbWVuc2lvbnMgPSBnZXRTaXplRGltZW5zaW9ucyhzaXplKTtcbiAgc3dpdGNoIChzaXplKSB7XG4gICAgY2FzZSAnc2NhbGUnOlxuICAgICAgcmV0dXJuIGBcbiAgICAgICAgJjpub3QoOnJvb3QpIHtcbiAgICAgICAgICB3aWR0aDogJHtkaW1lbnNpb25zLndpZHRofTtcbiAgICAgICAgICBoZWlnaHQ6ICR7ZGltZW5zaW9ucy5oZWlnaHR9O1xuICAgICAgICB9XG4gICAgICBgO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gYFxuICAgICAgICB3aWR0aDogJHtkaW1lbnNpb25zLndpZHRofTtcbiAgICAgICAgaGVpZ2h0OiAke2RpbWVuc2lvbnMuaGVpZ2h0fTtcbiAgICAgIGA7XG4gIH1cbn07XG5jb25zdCBnZXRDb2xvciA9IChjb2xvcjogUHJvcHNbJ2NvbG9yJ10pID0+IHtcbiAgaWYgKCFjb2xvcikgcmV0dXJuICdpbmhlcml0JztcbiAgbGV0IGljb25Db2xvcjtcbiAgc3dpdGNoIChjb2xvcikge1xuICAgIGNhc2UgJ3NvbGlkJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvclNvbGlkO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnbmV1dHJhbDYwJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvck5ldXRyYWw2MDtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3N1cmZhY2UnOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ2luZm8nOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9ySW5mbztcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3ByaW1hcnknOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9yUHJpbWFyeTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3ByaW1hcnk0MCc6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JQcmltYXJ5NDA7XG4gICAgICBicmVhaztcbiAgICBjYXNlICd3YXJuaW5nJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvcldhcm5pbmc7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdlcnJvcic6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JFcnJvcjtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICBicmVhaztcbiAgfVxuICBpZiAoIWljb25Db2xvcikge1xuICAgIHdhcm5pbmcoXG4gICAgICBjb2xvcixcbiAgICAgIGB1aS1raXQvSWNvbjogdGhlIHNwZWNpZmllZCBjb2xvciAnJHtjb2xvcn0nIGlzIG5vdCBzdXBwb3J0ZWQuYFxuICAgICk7XG4gICAgcmV0dXJuICdpbmhlcml0JztcbiAgfVxuICByZXR1cm4gaWNvbkNvbG9yO1xufTtcbmV4cG9ydCBjb25zdCBnZXRJY29uU3R5bGVzID0gKHByb3BzOiBQcm9wcykgPT4gY3NzYFxuICAqOm5vdChbZmlsbD0nbm9uZSddKSB7XG4gICAgZmlsbDogJHtnZXRDb2xvcihwcm9wcy5jb2xvcil9O1xuICB9XG4gICYsXG4gIGltYWdlIHtcbiAgICAke2dldFNpemVTdHlsZShwcm9wcy5zaXplKX07XG4gIH1cbiAgZmxleC1zaHJpbms6IDA7XG5gO1xuY29uc3QgU3ZnSXRhbGljID0gKHByb3BzOiBTVkdQcm9wcykgPT4gKFxuICA8c3ZnXG4gICAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG4gICAgd2lkdGg9ezI0fVxuICAgIGhlaWdodD17MjR9XG4gICAgdmlld0JveD1cIjAgMCAyNCAyNFwiXG4gICAgcm9sZT1cImltZ1wiXG4gICAgey4uLnByb3BzfVxuICA+XG4gICAgPHBhdGhcbiAgICAgIGZpbGw9XCIjMUExQTFBXCJcbiAgICAgIGZpbGxSdWxlPVwiZXZlbm9kZFwiXG4gICAgICBkPVwiTTkgMjAuOTkgMTIuODI3IDNoMi4wNjdsLTMuODI3IDE3Ljk5elwiXG4gICAgLz5cbiAgPC9zdmc+XG4pO1xuU3ZnSXRhbGljLmRpc3BsYXlOYW1lID0gJ1N2Z0l0YWxpYyc7XG5jb25zdCBJdGFsaWNJY29uID0gKHByb3BzOiBQcm9wcykgPT4gKFxuICA8Q2xhc3NOYW1lcz5cbiAgICB7KHsgY3NzOiBjcmVhdGVDbGFzcyB9KSA9PiAoXG4gICAgICA8U3ZnSXRhbGljIHsuLi5wcm9wc30gY2xhc3NOYW1lPXtjcmVhdGVDbGFzcyhnZXRJY29uU3R5bGVzKHByb3BzKSl9IC8+XG4gICAgKX1cbiAgPC9DbGFzc05hbWVzPlxuKTtcbkl0YWxpY0ljb24uZGlzcGxheU5hbWUgPSAnSXRhbGljSWNvbic7XG5leHBvcnQgZGVmYXVsdCBJdGFsaWNJY29uO1xuIl19 */");
const SvgItalic = props => jsxRuntime.jsx("svg", _objectSpread$d(_objectSpread$d({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fill: "#1A1A1A",
    fillRule: "evenodd",
    d: "M9 20.99 12.827 3h2.067l-3.827 17.99z"
  })
}));
SvgItalic.displayName = 'SvgItalic';
const ItalicIcon = props => jsxRuntime.jsx(react$1.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgItalic, _objectSpread$d(_objectSpread$d({}, props), {}, {
      className: createClass(getIconStyles$9(props))
    }));
  }
});
ItalicIcon.displayName = 'ItalicIcon';
var ItalicIcon$1 = ItalicIcon;

function ownKeys$c(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$c(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$c(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$c(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$8 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$8 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$8[size], "px"),
        height: "".concat(iconSizes$8[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$8.big, "px"),
        height: "".concat(iconSizes$8.big, "px")
      };
  }
};
const getSizeStyle$8 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$8(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$8 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    process.env.NODE_ENV !== "production" ? utils.warning(color, "ui-kit/Icon: the specified color '".concat(color, "' is not supported.")) : void 0;
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$8 = props => /*#__PURE__*/react$1.css("*:not([fill='none']){fill:", getColor$8(props.color), ";}&,image{", getSizeStyle$8(props.size), ";}flex-shrink:0;" + (process.env.NODE_ENV === "production" ? "" : ";label:getIconStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1vcmVTdHlsZXNSZWFjdC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeUdrRCIsImZpbGUiOiJNb3JlU3R5bGVzUmVhY3QudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLy8gVEhJUyBJUyBBTiBBVVRPR0VORVJBVEVEIEZJTEUuIERPIE5PVCBFRElUIFRISVMgRklMRSBESVJFQ1RMWS5cbi8vIFRoaXMgZmlsZSBpcyBjcmVhdGVkIHdpdGggJ3lhcm4gZ2VuZXJhdGUtaWNvbnMnLlxuLy8gT3JpZ2luYWwgU1ZHIGZpbGU6IHNyYy9yaWNoLXRleHQtYm9keS9pY29ucy9zdmcvbW9yZS1zdHlsZXMucmVhY3Quc3ZnXG4vKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnMgKi9cbmltcG9ydCB7IHdhcm5pbmcgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC91dGlscyc7XG5pbXBvcnQgeyBjc3MsIENsYXNzTmFtZXMgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcbmV4cG9ydCB0eXBlIFByb3BzID0ge1xuICBjb2xvcj86XG4gICAgfCAnc29saWQnXG4gICAgfCAnbmV1dHJhbDYwJ1xuICAgIHwgJ3N1cmZhY2UnXG4gICAgfCAnaW5mbydcbiAgICB8ICdwcmltYXJ5J1xuICAgIHwgJ3ByaW1hcnk0MCdcbiAgICB8ICd3YXJuaW5nJ1xuICAgIHwgJ2Vycm9yJztcbiAgc2l6ZT86ICdzbWFsbCcgfCAnbWVkaXVtJyB8ICdiaWcnIHwgJ3NjYWxlJztcbn07XG5leHBvcnQgdHlwZSBTVkdQcm9wcyA9IFByb3BzICYge1xuICBjbGFzc05hbWU6IHN0cmluZztcbn07XG5jb25zdCBpY29uU2l6ZXMgPSB7XG4gIHNtYWxsOiAxMixcbiAgbWVkaXVtOiAxNixcbiAgYmlnOiAyNCxcbn0gYXMgY29uc3Q7XG5jb25zdCBnZXRTaXplRGltZW5zaW9ucyA9IChzaXplOiBQcm9wc1snc2l6ZSddKSA9PiB7XG4gIHN3aXRjaCAoc2l6ZSkge1xuICAgIGNhc2UgJ3NjYWxlJzpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgIGhlaWdodDogJ2F1dG8nLFxuICAgICAgfTtcbiAgICBjYXNlICdzbWFsbCc6XG4gICAgY2FzZSAnbWVkaXVtJzpcbiAgICBjYXNlICdiaWcnOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd2lkdGg6IGAke2ljb25TaXplc1tzaXplXX1weGAsXG4gICAgICAgIGhlaWdodDogYCR7aWNvblNpemVzW3NpemVdfXB4YCxcbiAgICAgIH07XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHdpZHRoOiBgJHtpY29uU2l6ZXMuYmlnfXB4YCxcbiAgICAgICAgaGVpZ2h0OiBgJHtpY29uU2l6ZXMuYmlnfXB4YCxcbiAgICAgIH07XG4gIH1cbn07XG5jb25zdCBnZXRTaXplU3R5bGUgPSAoc2l6ZTogUHJvcHNbJ3NpemUnXSkgPT4ge1xuICBjb25zdCBkaW1lbnNpb25zID0gZ2V0U2l6ZURpbWVuc2lvbnMoc2l6ZSk7XG4gIHN3aXRjaCAoc2l6ZSkge1xuICAgIGNhc2UgJ3NjYWxlJzpcbiAgICAgIHJldHVybiBgXG4gICAgICAgICY6bm90KDpyb290KSB7XG4gICAgICAgICAgd2lkdGg6ICR7ZGltZW5zaW9ucy53aWR0aH07XG4gICAgICAgICAgaGVpZ2h0OiAke2RpbWVuc2lvbnMuaGVpZ2h0fTtcbiAgICAgICAgfVxuICAgICAgYDtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGBcbiAgICAgICAgd2lkdGg6ICR7ZGltZW5zaW9ucy53aWR0aH07XG4gICAgICAgIGhlaWdodDogJHtkaW1lbnNpb25zLmhlaWdodH07XG4gICAgICBgO1xuICB9XG59O1xuY29uc3QgZ2V0Q29sb3IgPSAoY29sb3I6IFByb3BzWydjb2xvciddKSA9PiB7XG4gIGlmICghY29sb3IpIHJldHVybiAnaW5oZXJpdCc7XG4gIGxldCBpY29uQ29sb3I7XG4gIHN3aXRjaCAoY29sb3IpIHtcbiAgICBjYXNlICdzb2xpZCc6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JTb2xpZDtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ25ldXRyYWw2MCc6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsNjA7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdzdXJmYWNlJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvclN1cmZhY2U7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdpbmZvJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvckluZm87XG4gICAgICBicmVhaztcbiAgICBjYXNlICdwcmltYXJ5JzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvclByaW1hcnk7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdwcmltYXJ5NDAnOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9yUHJpbWFyeTQwO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnd2FybmluZyc6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JXYXJuaW5nO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnZXJyb3InOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9yRXJyb3I7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgYnJlYWs7XG4gIH1cbiAgaWYgKCFpY29uQ29sb3IpIHtcbiAgICB3YXJuaW5nKFxuICAgICAgY29sb3IsXG4gICAgICBgdWkta2l0L0ljb246IHRoZSBzcGVjaWZpZWQgY29sb3IgJyR7Y29sb3J9JyBpcyBub3Qgc3VwcG9ydGVkLmBcbiAgICApO1xuICAgIHJldHVybiAnaW5oZXJpdCc7XG4gIH1cbiAgcmV0dXJuIGljb25Db2xvcjtcbn07XG5leHBvcnQgY29uc3QgZ2V0SWNvblN0eWxlcyA9IChwcm9wczogUHJvcHMpID0+IGNzc2BcbiAgKjpub3QoW2ZpbGw9J25vbmUnXSkge1xuICAgIGZpbGw6ICR7Z2V0Q29sb3IocHJvcHMuY29sb3IpfTtcbiAgfVxuICAmLFxuICBpbWFnZSB7XG4gICAgJHtnZXRTaXplU3R5bGUocHJvcHMuc2l6ZSl9O1xuICB9XG4gIGZsZXgtc2hyaW5rOiAwO1xuYDtcbmNvbnN0IFN2Z01vcmVTdHlsZXMgPSAocHJvcHM6IFNWR1Byb3BzKSA9PiAoXG4gIDxzdmdcbiAgICB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcbiAgICB4bWxuc1hsaW5rPVwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiXG4gICAgd2lkdGg9ezI0fVxuICAgIGhlaWdodD17MjR9XG4gICAgdmlld0JveD1cIjAgMCAyNCAyNFwiXG4gICAgcm9sZT1cImltZ1wiXG4gICAgey4uLnByb3BzfVxuICA+XG4gICAgPGRlZnM+XG4gICAgICA8cGF0aFxuICAgICAgICBpZD1cIm1vcmUtc3R5bGVzX3JlYWN0X3N2Z19fYVwiXG4gICAgICAgIGQ9XCJNOS4yNjEgOC4wNTdhOC45NyA4Ljk3IDAgMCAxIDMuNTQ4LjczOGwtLjYwNSAxLjM4NGMtMS4xMjgtLjQ2NS0yLjE1LS42OTctMy4wNjYtLjY5Ny0uODA2IDAtMS40MTUuMTI2LTEuODI1LjM4LS40MS4yNTItLjYxNS42LS42MTUgMS4wNDUgMCAuMzAxLjA3Ny41NTcuMjMuNzcuMTU1LjIxMS40MDIuNDEzLjc0NC42MDQuMzQyLjE5Mi45OTguNDY5IDEuOTY5LjgzLjM1NS4xMy42OC4yNi45NzQuMzlMMTMuNSAxMy41djEuMjVoLTEuMDA3Yy4zNjguNDYyLjU1MiAxLjAyMy41NTIgMS42ODQgMCAxLjA0Ni0uMzkgMS44NTMtMS4xNjkgMi40Mi0uNzguNTY3LTEuODczLjg1MS0zLjI4MS44NTEtMS40OSAwLTIuNjUyLS4yMzYtMy40ODYtLjcwN3YtMS41OGMuNTQuMjc0IDEuMTE5LjQ5IDEuNzM4LjY0NmE3LjI1OCA3LjI1OCAwIDAgMCAxLjc4OS4yMzZjLjg4OSAwIDEuNTcyLS4xNDIgMi4wNS0uNDI1LjQ4LS4yODQuNzE5LS43MTYuNzE5LTEuMjk3IDAtLjQzOC0uMTktLjgxMi0uNTctMS4xMjMtLjI1NS0uMjEtLjY3My0uNDQ0LTEuMjU1LS43MDRMNC41IDE0Ljc1VjEzLjVoMi4xNjRhNC40NDQgNC40NDQgMCAwIDEtLjI3OS0uMTY4Yy0uNDQtLjI5LS43NjktLjYyLS45ODQtLjk5LS4yMTUtLjM2OC0uMzIzLS44MS0uMzIzLTEuMzIyIDAtLjkxNi4zNzItMS42MzkgMS4xMTgtMi4xNjkuNzQ1LS41MyAxLjc2Ny0uNzk0IDMuMDY1LS43OTRabTExLjI3IDIuNDQzYy4xMjcgMCAuMjM3LjA1LjMzLjE0OC4wOTIuMDk5LjEzOS4yMTUuMTM5LjM1YS40OTIuNDkyIDAgMCAxLS4wNzguMjczbC0uMDYxLjA3OC0zLjI4MSAzLjQ4OWEuNDM4LjQzOCAwIDAgMS0uNTg3LjA2NGwtLjA3My0uMDY0LTMuMjgtMy40OWEuNDk0LjQ5NCAwIDAgMS0uMTQtLjM1YzAtLjEzNS4wNDYtLjI1MS4xNC0uMzVhLjQ0OC40NDggMCAwIDEgLjIzNy0uMTM5bC4wOTItLjAwOWg2LjU2MlptLTcuMDc2LTcuMDk0Ljc5NSAxLjMwMy44MDItMS4zMDNoMS4yNjdsLTEuMzMzIDIuMDAzTDE2LjM4MSA3LjVoLTEuMjdsLS44NjEtMS40MDMtLjg2NCAxLjQwM2gtMS4yNjdsMS4zODgtMi4wOTEtMS4zMTktMi4wMDNoMS4yNjdaXCJcbiAgICAgIC8+XG4gICAgPC9kZWZzPlxuICAgIDx1c2VcbiAgICAgIHhsaW5rSHJlZj1cIiNtb3JlLXN0eWxlc19yZWFjdF9zdmdfX2FcIlxuICAgICAgZmlsbD1cIiMxQTFBMUFcIlxuICAgICAgZmlsbFJ1bGU9XCJldmVub2RkXCJcbiAgICAvPlxuICA8L3N2Zz5cbik7XG5TdmdNb3JlU3R5bGVzLmRpc3BsYXlOYW1lID0gJ1N2Z01vcmVTdHlsZXMnO1xuY29uc3QgTW9yZVN0eWxlc0ljb24gPSAocHJvcHM6IFByb3BzKSA9PiAoXG4gIDxDbGFzc05hbWVzPlxuICAgIHsoeyBjc3M6IGNyZWF0ZUNsYXNzIH0pID0+IChcbiAgICAgIDxTdmdNb3JlU3R5bGVzIHsuLi5wcm9wc30gY2xhc3NOYW1lPXtjcmVhdGVDbGFzcyhnZXRJY29uU3R5bGVzKHByb3BzKSl9IC8+XG4gICAgKX1cbiAgPC9DbGFzc05hbWVzPlxuKTtcbk1vcmVTdHlsZXNJY29uLmRpc3BsYXlOYW1lID0gJ01vcmVTdHlsZXNJY29uJztcbmV4cG9ydCBkZWZhdWx0IE1vcmVTdHlsZXNJY29uO1xuIl19 */");
const SvgMoreStyles = props => jsxRuntime.jsxs("svg", _objectSpread$c(_objectSpread$c({
  xmlns: "http://www.w3.org/2000/svg",
  xmlnsXlink: "http://www.w3.org/1999/xlink",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: [jsxRuntime.jsx("defs", {
    children: jsxRuntime.jsx("path", {
      id: "more-styles_react_svg__a",
      d: "M9.261 8.057a8.97 8.97 0 0 1 3.548.738l-.605 1.384c-1.128-.465-2.15-.697-3.066-.697-.806 0-1.415.126-1.825.38-.41.252-.615.6-.615 1.045 0 .301.077.557.23.77.155.211.402.413.744.604.342.192.998.469 1.969.83.355.13.68.26.974.39L13.5 13.5v1.25h-1.007c.368.462.552 1.023.552 1.684 0 1.046-.39 1.853-1.169 2.42-.78.567-1.873.851-3.281.851-1.49 0-2.652-.236-3.486-.707v-1.58c.54.274 1.119.49 1.738.646a7.258 7.258 0 0 0 1.789.236c.889 0 1.572-.142 2.05-.425.48-.284.719-.716.719-1.297 0-.438-.19-.812-.57-1.123-.255-.21-.673-.444-1.255-.704L4.5 14.75V13.5h2.164a4.444 4.444 0 0 1-.279-.168c-.44-.29-.769-.62-.984-.99-.215-.368-.323-.81-.323-1.322 0-.916.372-1.639 1.118-2.169.745-.53 1.767-.794 3.065-.794Zm11.27 2.443c.127 0 .237.05.33.148.092.099.139.215.139.35a.492.492 0 0 1-.078.273l-.061.078-3.281 3.489a.438.438 0 0 1-.587.064l-.073-.064-3.28-3.49a.494.494 0 0 1-.14-.35c0-.135.046-.251.14-.35a.448.448 0 0 1 .237-.139l.092-.009h6.562Zm-7.076-7.094.795 1.303.802-1.303h1.267l-1.333 2.003L16.381 7.5h-1.27l-.861-1.403-.864 1.403h-1.267l1.388-2.091-1.319-2.003h1.267Z"
    })
  }), jsxRuntime.jsx("use", {
    xlinkHref: "#more-styles_react_svg__a",
    fill: "#1A1A1A",
    fillRule: "evenodd"
  })]
}));
SvgMoreStyles.displayName = 'SvgMoreStyles';
const MoreStylesIcon = props => jsxRuntime.jsx(react$1.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgMoreStyles, _objectSpread$c(_objectSpread$c({}, props), {}, {
      className: createClass(getIconStyles$8(props))
    }));
  }
});
MoreStylesIcon.displayName = 'MoreStylesIcon';
var MoreStylesIcon$1 = MoreStylesIcon;

function ownKeys$b(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$b(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$b(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$b(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$7 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$7 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$7[size], "px"),
        height: "".concat(iconSizes$7[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$7.big, "px"),
        height: "".concat(iconSizes$7.big, "px")
      };
  }
};
const getSizeStyle$7 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$7(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$7 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    process.env.NODE_ENV !== "production" ? utils.warning(color, "ui-kit/Icon: the specified color '".concat(color, "' is not supported.")) : void 0;
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$7 = props => /*#__PURE__*/react$1.css("*:not([fill='none']){fill:", getColor$7(props.color), ";}&,image{", getSizeStyle$7(props.size), ";}flex-shrink:0;" + (process.env.NODE_ENV === "production" ? "" : ";label:getIconStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk9yZGVyZWRMaXN0UmVhY3QudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlHa0QiLCJmaWxlIjoiT3JkZXJlZExpc3RSZWFjdC50c3giLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUSElTIElTIEFOIEFVVE9HRU5FUkFURUQgRklMRS4gRE8gTk9UIEVESVQgVEhJUyBGSUxFIERJUkVDVExZLlxuLy8gVGhpcyBmaWxlIGlzIGNyZWF0ZWQgd2l0aCAneWFybiBnZW5lcmF0ZS1pY29ucycuXG4vLyBPcmlnaW5hbCBTVkcgZmlsZTogc3JjL3JpY2gtdGV4dC1ib2R5L2ljb25zL3N2Zy9vcmRlcmVkLWxpc3QucmVhY3Quc3ZnXG4vKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnMgKi9cbmltcG9ydCB7IHdhcm5pbmcgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC91dGlscyc7XG5pbXBvcnQgeyBjc3MsIENsYXNzTmFtZXMgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcbmV4cG9ydCB0eXBlIFByb3BzID0ge1xuICBjb2xvcj86XG4gICAgfCAnc29saWQnXG4gICAgfCAnbmV1dHJhbDYwJ1xuICAgIHwgJ3N1cmZhY2UnXG4gICAgfCAnaW5mbydcbiAgICB8ICdwcmltYXJ5J1xuICAgIHwgJ3ByaW1hcnk0MCdcbiAgICB8ICd3YXJuaW5nJ1xuICAgIHwgJ2Vycm9yJztcbiAgc2l6ZT86ICdzbWFsbCcgfCAnbWVkaXVtJyB8ICdiaWcnIHwgJ3NjYWxlJztcbn07XG5leHBvcnQgdHlwZSBTVkdQcm9wcyA9IFByb3BzICYge1xuICBjbGFzc05hbWU6IHN0cmluZztcbn07XG5jb25zdCBpY29uU2l6ZXMgPSB7XG4gIHNtYWxsOiAxMixcbiAgbWVkaXVtOiAxNixcbiAgYmlnOiAyNCxcbn0gYXMgY29uc3Q7XG5jb25zdCBnZXRTaXplRGltZW5zaW9ucyA9IChzaXplOiBQcm9wc1snc2l6ZSddKSA9PiB7XG4gIHN3aXRjaCAoc2l6ZSkge1xuICAgIGNhc2UgJ3NjYWxlJzpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgIGhlaWdodDogJ2F1dG8nLFxuICAgICAgfTtcbiAgICBjYXNlICdzbWFsbCc6XG4gICAgY2FzZSAnbWVkaXVtJzpcbiAgICBjYXNlICdiaWcnOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd2lkdGg6IGAke2ljb25TaXplc1tzaXplXX1weGAsXG4gICAgICAgIGhlaWdodDogYCR7aWNvblNpemVzW3NpemVdfXB4YCxcbiAgICAgIH07XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHdpZHRoOiBgJHtpY29uU2l6ZXMuYmlnfXB4YCxcbiAgICAgICAgaGVpZ2h0OiBgJHtpY29uU2l6ZXMuYmlnfXB4YCxcbiAgICAgIH07XG4gIH1cbn07XG5jb25zdCBnZXRTaXplU3R5bGUgPSAoc2l6ZTogUHJvcHNbJ3NpemUnXSkgPT4ge1xuICBjb25zdCBkaW1lbnNpb25zID0gZ2V0U2l6ZURpbWVuc2lvbnMoc2l6ZSk7XG4gIHN3aXRjaCAoc2l6ZSkge1xuICAgIGNhc2UgJ3NjYWxlJzpcbiAgICAgIHJldHVybiBgXG4gICAgICAgICY6bm90KDpyb290KSB7XG4gICAgICAgICAgd2lkdGg6ICR7ZGltZW5zaW9ucy53aWR0aH07XG4gICAgICAgICAgaGVpZ2h0OiAke2RpbWVuc2lvbnMuaGVpZ2h0fTtcbiAgICAgICAgfVxuICAgICAgYDtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGBcbiAgICAgICAgd2lkdGg6ICR7ZGltZW5zaW9ucy53aWR0aH07XG4gICAgICAgIGhlaWdodDogJHtkaW1lbnNpb25zLmhlaWdodH07XG4gICAgICBgO1xuICB9XG59O1xuY29uc3QgZ2V0Q29sb3IgPSAoY29sb3I6IFByb3BzWydjb2xvciddKSA9PiB7XG4gIGlmICghY29sb3IpIHJldHVybiAnaW5oZXJpdCc7XG4gIGxldCBpY29uQ29sb3I7XG4gIHN3aXRjaCAoY29sb3IpIHtcbiAgICBjYXNlICdzb2xpZCc6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JTb2xpZDtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ25ldXRyYWw2MCc6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsNjA7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdzdXJmYWNlJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvclN1cmZhY2U7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdpbmZvJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvckluZm87XG4gICAgICBicmVhaztcbiAgICBjYXNlICdwcmltYXJ5JzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvclByaW1hcnk7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdwcmltYXJ5NDAnOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9yUHJpbWFyeTQwO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnd2FybmluZyc6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JXYXJuaW5nO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnZXJyb3InOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9yRXJyb3I7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgYnJlYWs7XG4gIH1cbiAgaWYgKCFpY29uQ29sb3IpIHtcbiAgICB3YXJuaW5nKFxuICAgICAgY29sb3IsXG4gICAgICBgdWkta2l0L0ljb246IHRoZSBzcGVjaWZpZWQgY29sb3IgJyR7Y29sb3J9JyBpcyBub3Qgc3VwcG9ydGVkLmBcbiAgICApO1xuICAgIHJldHVybiAnaW5oZXJpdCc7XG4gIH1cbiAgcmV0dXJuIGljb25Db2xvcjtcbn07XG5leHBvcnQgY29uc3QgZ2V0SWNvblN0eWxlcyA9IChwcm9wczogUHJvcHMpID0+IGNzc2BcbiAgKjpub3QoW2ZpbGw9J25vbmUnXSkge1xuICAgIGZpbGw6ICR7Z2V0Q29sb3IocHJvcHMuY29sb3IpfTtcbiAgfVxuICAmLFxuICBpbWFnZSB7XG4gICAgJHtnZXRTaXplU3R5bGUocHJvcHMuc2l6ZSl9O1xuICB9XG4gIGZsZXgtc2hyaW5rOiAwO1xuYDtcbmNvbnN0IFN2Z09yZGVyZWRMaXN0ID0gKHByb3BzOiBTVkdQcm9wcykgPT4gKFxuICA8c3ZnXG4gICAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG4gICAgd2lkdGg9ezI0fVxuICAgIGhlaWdodD17MjR9XG4gICAgdmlld0JveD1cIjAgMCAyNCAyNFwiXG4gICAgcm9sZT1cImltZ1wiXG4gICAgey4uLnByb3BzfVxuICA+XG4gICAgPHBhdGhcbiAgICAgIGZpbGw9XCIjMUExQTFBXCJcbiAgICAgIGZpbGxSdWxlPVwiZXZlbm9kZFwiXG4gICAgICBkPVwiTTQuNDIgMTZjLjQ0OSAwIC44MDMuMTAyIDEuMDYzLjMwNi4yNi4yMDQuMzkuNDg4LjM5Ljg1MiAwIC4zMDQtLjA4Mi41NjItLjI0Ny43NzVhMS4yNSAxLjI1IDAgMCAxLS42OS40Mzl2LjAyYy4zNS4wNDkuNjE0LjE2OC43OTQuMzU4LjE4LjE5LjI3LjQ0NS4yNy43NjYgMCAuNDY4LS4xNTEuODMzLS40NTQgMS4wOTMtLjMwMi4yNi0uNzM0LjM5MS0xLjI5NS4zOTEtLjQ3IDAtLjg4Ny0uMDg4LTEuMjUxLS4yNjN2LS44NzVjLjE2OC4wOTYuMzUzLjE3My41NTQuMjMzLjIwMi4wNi40MDIuMDkuNi4wOS4zMDIgMCAuNTI1LS4wNTguNjctLjE3My4xNDMtLjExNS4yMTYtLjMuMjE2LS41NTYgMC0uMjI4LS4wODMtLjM5LS4yNS0uNDg1LS4xNjUtLjA5Ni0uNDMtLjE0My0uNzk0LS4xNDNoLS4zMjl2LS43ODloLjMzNWMuMzM2IDAgLjU4MS0uMDUuNzM3LS4xNDguMTU1LS4wOTguMjMyLS4yNjguMjMyLS41MDcgMC0uMzY4LS4yMDUtLjU1Mi0uNjE2LS41NTItLjE0MyAwLS4yODcuMDI2LS40MzUuMDhhMi4wNCAyLjA0IDAgMCAwLS40OS4yNzZsLS40MjQtLjcwOUMzLjQgMTYuMTU5IDMuODczIDE2IDQuNDIgMTZabTE2LjMzIDEuOTYyYS4zOS4zOSAwIDAgMSAuMTc2LjAzNy4xNDUuMTQ1IDAgMCAxIC4wNjYuMDU1bC4wMDguMDMzdi43NWMwIC4wMzMtLjAyNS4wNjMtLjA3NC4wODhhLjM1LjM1IDAgMCAxLS4xMTEuMDMybC0uMDY1LjAwNWgtMTAuNWEuMzg5LjM4OSAwIDAgMS0uMTc2LS4wMzcuMTQ0LjE0NCAwIDAgMS0uMDY2LS4wNTZMMTAgMTguODM3di0uNzVjMC0uMDM0LjAyNS0uMDY0LjA3NC0uMDg4YS4zNTIuMzUyIDAgMCAxIC4xMTEtLjAzM2wuMDY1LS4wMDRoMTAuNVpNNC41MjYgOWMuMjY3IDAgLjUwMy4wNTYuNzA4LjE2OS4yMDUuMTEyLjM2My4yNy40NzcuNDcyYTEuNCAxLjQgMCAwIDEgLjE3LjY5NGMwIC4yMjctLjAzNS40NC0uMTA1LjYzOS0uMDY5LjE5OS0uMTc2LjQwMy0uMzIxLjYxMi0uMTQ2LjIwOS0uNDAxLjUwNy0uNzY4Ljg5M2wtLjU1LjU5N3YuMDQ3SDZWMTRIMy4wMTJ2LS43MjVsMS4wNzMtMS4yNWMuMzE4LS4zNzYuNTI1LS42MzYuNjIzLS43ODEuMDk3LS4xNDUuMTY3LS4yOC4yMS0uNDAzLjA0My0uMTI0LjA2NC0uMjUyLjA2NC0uMzg0IDAtLjE5OC0uMDQ3LS4zNDYtLjE0MS0uNDQyYS41MDYuNTA2IDAgMCAwLS4zNzktLjE0NS45NzIuOTcyIDAgMCAwLS40ODIuMTMxIDIuNDkzIDIuNDkzIDAgMCAwLS40ODkuMzc1TDMgOS43MDVjLjIxLS4yMDcuMzg1LS4zNTMuNTIzLS40MzkuMTM5LS4wODUuMjktLjE1LjQ1NC0uMTk3LjE2My0uMDQ2LjM0Ny0uMDY5LjU1LS4wNjlabTE2LjIyNCAyLjVhLjM5LjM5IDAgMCAxIC4xNzYuMDM3LjE0NS4xNDUgMCAwIDEgLjA2Ni4wNTZsLjAwOC4wMzJ2Ljc1YzAgLjAzNC0uMDI1LjA2My0uMDc0LjA4OGEuMzUyLjM1MiAwIDAgMS0uMTExLjAzM2wtLjA2NS4wMDRoLTEwLjVhLjM5LjM5IDAgMCAxLS4xNzYtLjAzNy4xNDUuMTQ1IDAgMCAxLS4wNjYtLjA1NkwxMCAxMi4zNzV2LS43NWMwLS4wMzQuMDI1LS4wNjMuMDc0LS4wODhhLjM1LjM1IDAgMCAxIC4xMTEtLjAzM2wuMDY1LS4wMDRoMTAuNVpNNSAzdjRoLS44NTJWNC42ODVsLjAwOC0uMzguMDE0LS40MTZhNC40NyA0LjQ3IDAgMCAxLS4yOTYuMjc3bC0uNDYzLjM2OUwzIDQuMDI2IDQuMyAzSDVabTE1Ljc1IDIuMDM4YS4zOS4zOSAwIDAgMSAuMTc2LjAzOC4xNDUuMTQ1IDAgMCAxIC4wNjYuMDU1bC4wMDguMDMydi43NWMwIC4wMzQtLjAyNS4wNjQtLjA3NC4wODhhLjM1LjM1IDAgMCAxLS4xMTEuMDMzbC0uMDY1LjAwNGgtMTAuNWEuMzg4LjM4OCAwIDAgMS0uMTc2LS4wMzcuMTQ1LjE0NSAwIDAgMS0uMDY2LS4wNTVMMTAgNS45MTN2LS43NWMwLS4wMzMuMDI1LS4wNjMuMDc0LS4wODdhLjM1LjM1IDAgMCAxIC4xMTEtLjAzM2wuMDY1LS4wMDVoMTAuNVpcIlxuICAgIC8+XG4gIDwvc3ZnPlxuKTtcblN2Z09yZGVyZWRMaXN0LmRpc3BsYXlOYW1lID0gJ1N2Z09yZGVyZWRMaXN0JztcbmNvbnN0IE9yZGVyZWRMaXN0SWNvbiA9IChwcm9wczogUHJvcHMpID0+IChcbiAgPENsYXNzTmFtZXM+XG4gICAgeyh7IGNzczogY3JlYXRlQ2xhc3MgfSkgPT4gKFxuICAgICAgPFN2Z09yZGVyZWRMaXN0XG4gICAgICAgIHsuLi5wcm9wc31cbiAgICAgICAgY2xhc3NOYW1lPXtjcmVhdGVDbGFzcyhnZXRJY29uU3R5bGVzKHByb3BzKSl9XG4gICAgICAvPlxuICAgICl9XG4gIDwvQ2xhc3NOYW1lcz5cbik7XG5PcmRlcmVkTGlzdEljb24uZGlzcGxheU5hbWUgPSAnT3JkZXJlZExpc3RJY29uJztcbmV4cG9ydCBkZWZhdWx0IE9yZGVyZWRMaXN0SWNvbjtcbiJdfQ== */");
const SvgOrderedList = props => jsxRuntime.jsx("svg", _objectSpread$b(_objectSpread$b({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fill: "#1A1A1A",
    fillRule: "evenodd",
    d: "M4.42 16c.449 0 .803.102 1.063.306.26.204.39.488.39.852 0 .304-.082.562-.247.775a1.25 1.25 0 0 1-.69.439v.02c.35.049.614.168.794.358.18.19.27.445.27.766 0 .468-.151.833-.454 1.093-.302.26-.734.391-1.295.391-.47 0-.887-.088-1.251-.263v-.875c.168.096.353.173.554.233.202.06.402.09.6.09.302 0 .525-.058.67-.173.143-.115.216-.3.216-.556 0-.228-.083-.39-.25-.485-.165-.096-.43-.143-.794-.143h-.329v-.789h.335c.336 0 .581-.05.737-.148.155-.098.232-.268.232-.507 0-.368-.205-.552-.616-.552-.143 0-.287.026-.435.08a2.04 2.04 0 0 0-.49.276l-.424-.709C3.4 16.159 3.873 16 4.42 16Zm16.33 1.962a.39.39 0 0 1 .176.037.145.145 0 0 1 .066.055l.008.033v.75c0 .033-.025.063-.074.088a.35.35 0 0 1-.111.032l-.065.005h-10.5a.389.389 0 0 1-.176-.037.144.144 0 0 1-.066-.056L10 18.837v-.75c0-.034.025-.064.074-.088a.352.352 0 0 1 .111-.033l.065-.004h10.5ZM4.526 9c.267 0 .503.056.708.169.205.112.363.27.477.472a1.4 1.4 0 0 1 .17.694c0 .227-.035.44-.105.639-.069.199-.176.403-.321.612-.146.209-.401.507-.768.893l-.55.597v.047H6V14H3.012v-.725l1.073-1.25c.318-.376.525-.636.623-.781.097-.145.167-.28.21-.403.043-.124.064-.252.064-.384 0-.198-.047-.346-.141-.442a.506.506 0 0 0-.379-.145.972.972 0 0 0-.482.131 2.493 2.493 0 0 0-.489.375L3 9.705c.21-.207.385-.353.523-.439.139-.085.29-.15.454-.197.163-.046.347-.069.55-.069Zm16.224 2.5a.39.39 0 0 1 .176.037.145.145 0 0 1 .066.056l.008.032v.75c0 .034-.025.063-.074.088a.352.352 0 0 1-.111.033l-.065.004h-10.5a.39.39 0 0 1-.176-.037.145.145 0 0 1-.066-.056L10 12.375v-.75c0-.034.025-.063.074-.088a.35.35 0 0 1 .111-.033l.065-.004h10.5ZM5 3v4h-.852V4.685l.008-.38.014-.416a4.47 4.47 0 0 1-.296.277l-.463.369L3 4.026 4.3 3H5Zm15.75 2.038a.39.39 0 0 1 .176.038.145.145 0 0 1 .066.055l.008.032v.75c0 .034-.025.064-.074.088a.35.35 0 0 1-.111.033l-.065.004h-10.5a.388.388 0 0 1-.176-.037.145.145 0 0 1-.066-.055L10 5.913v-.75c0-.033.025-.063.074-.087a.35.35 0 0 1 .111-.033l.065-.005h10.5Z"
  })
}));
SvgOrderedList.displayName = 'SvgOrderedList';
const OrderedListIcon = props => jsxRuntime.jsx(react$1.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgOrderedList, _objectSpread$b(_objectSpread$b({}, props), {}, {
      className: createClass(getIconStyles$7(props))
    }));
  }
});
OrderedListIcon.displayName = 'OrderedListIcon';
var OrderedListIcon$1 = OrderedListIcon;

function ownKeys$a(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$a(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$a(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$a(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$6 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$6 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$6[size], "px"),
        height: "".concat(iconSizes$6[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$6.big, "px"),
        height: "".concat(iconSizes$6.big, "px")
      };
  }
};
const getSizeStyle$6 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$6(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$6 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    process.env.NODE_ENV !== "production" ? utils.warning(color, "ui-kit/Icon: the specified color '".concat(color, "' is not supported.")) : void 0;
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$6 = props => /*#__PURE__*/react$1.css("*:not([fill='none']){fill:", getColor$6(props.color), ";}&,image{", getSizeStyle$6(props.size), ";}flex-shrink:0;" + (process.env.NODE_ENV === "production" ? "" : ";label:getIconStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJlZG9SZWFjdC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeUdrRCIsImZpbGUiOiJSZWRvUmVhY3QudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLy8gVEhJUyBJUyBBTiBBVVRPR0VORVJBVEVEIEZJTEUuIERPIE5PVCBFRElUIFRISVMgRklMRSBESVJFQ1RMWS5cbi8vIFRoaXMgZmlsZSBpcyBjcmVhdGVkIHdpdGggJ3lhcm4gZ2VuZXJhdGUtaWNvbnMnLlxuLy8gT3JpZ2luYWwgU1ZHIGZpbGU6IHNyYy9yaWNoLXRleHQtYm9keS9pY29ucy9zdmcvcmVkby5yZWFjdC5zdmdcbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFycyAqL1xuaW1wb3J0IHsgd2FybmluZyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L3V0aWxzJztcbmltcG9ydCB7IGNzcywgQ2xhc3NOYW1lcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB7IGRlc2lnblRva2VucyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuZXhwb3J0IHR5cGUgUHJvcHMgPSB7XG4gIGNvbG9yPzpcbiAgICB8ICdzb2xpZCdcbiAgICB8ICduZXV0cmFsNjAnXG4gICAgfCAnc3VyZmFjZSdcbiAgICB8ICdpbmZvJ1xuICAgIHwgJ3ByaW1hcnknXG4gICAgfCAncHJpbWFyeTQwJ1xuICAgIHwgJ3dhcm5pbmcnXG4gICAgfCAnZXJyb3InO1xuICBzaXplPzogJ3NtYWxsJyB8ICdtZWRpdW0nIHwgJ2JpZycgfCAnc2NhbGUnO1xufTtcbmV4cG9ydCB0eXBlIFNWR1Byb3BzID0gUHJvcHMgJiB7XG4gIGNsYXNzTmFtZTogc3RyaW5nO1xufTtcbmNvbnN0IGljb25TaXplcyA9IHtcbiAgc21hbGw6IDEyLFxuICBtZWRpdW06IDE2LFxuICBiaWc6IDI0LFxufSBhcyBjb25zdDtcbmNvbnN0IGdldFNpemVEaW1lbnNpb25zID0gKHNpemU6IFByb3BzWydzaXplJ10pID0+IHtcbiAgc3dpdGNoIChzaXplKSB7XG4gICAgY2FzZSAnc2NhbGUnOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgaGVpZ2h0OiAnYXV0bycsXG4gICAgICB9O1xuICAgIGNhc2UgJ3NtYWxsJzpcbiAgICBjYXNlICdtZWRpdW0nOlxuICAgIGNhc2UgJ2JpZyc6XG4gICAgICByZXR1cm4ge1xuICAgICAgICB3aWR0aDogYCR7aWNvblNpemVzW3NpemVdfXB4YCxcbiAgICAgICAgaGVpZ2h0OiBgJHtpY29uU2l6ZXNbc2l6ZV19cHhgLFxuICAgICAgfTtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd2lkdGg6IGAke2ljb25TaXplcy5iaWd9cHhgLFxuICAgICAgICBoZWlnaHQ6IGAke2ljb25TaXplcy5iaWd9cHhgLFxuICAgICAgfTtcbiAgfVxufTtcbmNvbnN0IGdldFNpemVTdHlsZSA9IChzaXplOiBQcm9wc1snc2l6ZSddKSA9PiB7XG4gIGNvbnN0IGRpbWVuc2lvbnMgPSBnZXRTaXplRGltZW5zaW9ucyhzaXplKTtcbiAgc3dpdGNoIChzaXplKSB7XG4gICAgY2FzZSAnc2NhbGUnOlxuICAgICAgcmV0dXJuIGBcbiAgICAgICAgJjpub3QoOnJvb3QpIHtcbiAgICAgICAgICB3aWR0aDogJHtkaW1lbnNpb25zLndpZHRofTtcbiAgICAgICAgICBoZWlnaHQ6ICR7ZGltZW5zaW9ucy5oZWlnaHR9O1xuICAgICAgICB9XG4gICAgICBgO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gYFxuICAgICAgICB3aWR0aDogJHtkaW1lbnNpb25zLndpZHRofTtcbiAgICAgICAgaGVpZ2h0OiAke2RpbWVuc2lvbnMuaGVpZ2h0fTtcbiAgICAgIGA7XG4gIH1cbn07XG5jb25zdCBnZXRDb2xvciA9IChjb2xvcjogUHJvcHNbJ2NvbG9yJ10pID0+IHtcbiAgaWYgKCFjb2xvcikgcmV0dXJuICdpbmhlcml0JztcbiAgbGV0IGljb25Db2xvcjtcbiAgc3dpdGNoIChjb2xvcikge1xuICAgIGNhc2UgJ3NvbGlkJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvclNvbGlkO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnbmV1dHJhbDYwJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvck5ldXRyYWw2MDtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3N1cmZhY2UnOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ2luZm8nOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9ySW5mbztcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3ByaW1hcnknOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9yUHJpbWFyeTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3ByaW1hcnk0MCc6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JQcmltYXJ5NDA7XG4gICAgICBicmVhaztcbiAgICBjYXNlICd3YXJuaW5nJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvcldhcm5pbmc7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdlcnJvcic6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JFcnJvcjtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICBicmVhaztcbiAgfVxuICBpZiAoIWljb25Db2xvcikge1xuICAgIHdhcm5pbmcoXG4gICAgICBjb2xvcixcbiAgICAgIGB1aS1raXQvSWNvbjogdGhlIHNwZWNpZmllZCBjb2xvciAnJHtjb2xvcn0nIGlzIG5vdCBzdXBwb3J0ZWQuYFxuICAgICk7XG4gICAgcmV0dXJuICdpbmhlcml0JztcbiAgfVxuICByZXR1cm4gaWNvbkNvbG9yO1xufTtcbmV4cG9ydCBjb25zdCBnZXRJY29uU3R5bGVzID0gKHByb3BzOiBQcm9wcykgPT4gY3NzYFxuICAqOm5vdChbZmlsbD0nbm9uZSddKSB7XG4gICAgZmlsbDogJHtnZXRDb2xvcihwcm9wcy5jb2xvcil9O1xuICB9XG4gICYsXG4gIGltYWdlIHtcbiAgICAke2dldFNpemVTdHlsZShwcm9wcy5zaXplKX07XG4gIH1cbiAgZmxleC1zaHJpbms6IDA7XG5gO1xuY29uc3QgU3ZnUmVkbyA9IChwcm9wczogU1ZHUHJvcHMpID0+IChcbiAgPHN2Z1xuICAgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxuICAgIHhtbG5zWGxpbms9XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCJcbiAgICB3aWR0aD17MjR9XG4gICAgaGVpZ2h0PXsyNH1cbiAgICB2aWV3Qm94PVwiMCAwIDI0IDI0XCJcbiAgICByb2xlPVwiaW1nXCJcbiAgICB7Li4ucHJvcHN9XG4gID5cbiAgICA8ZGVmcz5cbiAgICAgIDxwYXRoXG4gICAgICAgIGlkPVwicmVkb19yZWFjdF9zdmdfX2FcIlxuICAgICAgICBkPVwiTTEyLjQ1OCA3LjQxYTguNTI0IDguNTI0IDAgMCAwLTYuNyAzLjI0NkwzLjc5NiA4LjY5M2MtLjQzNy0uNDM4LS43OTUtLjI5LS43OTUuMzN2Ny4zMzVjMCAuNjE4LjAyNC41OTMuNjQzLjU5M2g3LjI4NmMuNjE5IDAgLjc2Ny0uMzU4LjMzLS43OTVsLTIuMjQzLTIuMjQzYTYuMjgzIDYuMjgzIDAgMCAxIDUuNjk3LTMuNjQgNi4yODMgNi4yODMgMCAwIDEgNi4yNzcgNi4wODUgOC41NDIgOC41NDIgMCAwIDAtOC41MzEtOC45NDhaXCJcbiAgICAgIC8+XG4gICAgPC9kZWZzPlxuICAgIDx1c2VcbiAgICAgIHhsaW5rSHJlZj1cIiNyZWRvX3JlYWN0X3N2Z19fYVwiXG4gICAgICBmaWxsPVwiIzFBMUExQVwiXG4gICAgICBmaWxsUnVsZT1cImV2ZW5vZGRcIlxuICAgICAgdHJhbnNmb3JtPVwibWF0cml4KC0xIDAgMCAxIDI0IDApXCJcbiAgICAvPlxuICA8L3N2Zz5cbik7XG5TdmdSZWRvLmRpc3BsYXlOYW1lID0gJ1N2Z1JlZG8nO1xuY29uc3QgUmVkb0ljb24gPSAocHJvcHM6IFByb3BzKSA9PiAoXG4gIDxDbGFzc05hbWVzPlxuICAgIHsoeyBjc3M6IGNyZWF0ZUNsYXNzIH0pID0+IChcbiAgICAgIDxTdmdSZWRvIHsuLi5wcm9wc30gY2xhc3NOYW1lPXtjcmVhdGVDbGFzcyhnZXRJY29uU3R5bGVzKHByb3BzKSl9IC8+XG4gICAgKX1cbiAgPC9DbGFzc05hbWVzPlxuKTtcblJlZG9JY29uLmRpc3BsYXlOYW1lID0gJ1JlZG9JY29uJztcbmV4cG9ydCBkZWZhdWx0IFJlZG9JY29uO1xuIl19 */");
const SvgRedo = props => jsxRuntime.jsxs("svg", _objectSpread$a(_objectSpread$a({
  xmlns: "http://www.w3.org/2000/svg",
  xmlnsXlink: "http://www.w3.org/1999/xlink",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: [jsxRuntime.jsx("defs", {
    children: jsxRuntime.jsx("path", {
      id: "redo_react_svg__a",
      d: "M12.458 7.41a8.524 8.524 0 0 0-6.7 3.246L3.796 8.693c-.437-.438-.795-.29-.795.33v7.335c0 .618.024.593.643.593h7.286c.619 0 .767-.358.33-.795l-2.243-2.243a6.283 6.283 0 0 1 5.697-3.64 6.283 6.283 0 0 1 6.277 6.085 8.542 8.542 0 0 0-8.531-8.948Z"
    })
  }), jsxRuntime.jsx("use", {
    xlinkHref: "#redo_react_svg__a",
    fill: "#1A1A1A",
    fillRule: "evenodd",
    transform: "matrix(-1 0 0 1 24 0)"
  })]
}));
SvgRedo.displayName = 'SvgRedo';
const RedoIcon = props => jsxRuntime.jsx(react$1.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgRedo, _objectSpread$a(_objectSpread$a({}, props), {}, {
      className: createClass(getIconStyles$6(props))
    }));
  }
});
RedoIcon.displayName = 'RedoIcon';
var RedoIcon$1 = RedoIcon;

function ownKeys$9(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$9(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$9(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$9(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$5 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$5 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$5[size], "px"),
        height: "".concat(iconSizes$5[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$5.big, "px"),
        height: "".concat(iconSizes$5.big, "px")
      };
  }
};
const getSizeStyle$5 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$5(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$5 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    process.env.NODE_ENV !== "production" ? utils.warning(color, "ui-kit/Icon: the specified color '".concat(color, "' is not supported.")) : void 0;
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$5 = props => /*#__PURE__*/react$1.css("*:not([fill='none']){fill:", getColor$5(props.color), ";}&,image{", getSizeStyle$5(props.size), ";}flex-shrink:0;" + (process.env.NODE_ENV === "production" ? "" : ";label:getIconStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlN0cmlrZXRocm91Z2hSZWFjdC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeUdrRCIsImZpbGUiOiJTdHJpa2V0aHJvdWdoUmVhY3QudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLy8gVEhJUyBJUyBBTiBBVVRPR0VORVJBVEVEIEZJTEUuIERPIE5PVCBFRElUIFRISVMgRklMRSBESVJFQ1RMWS5cbi8vIFRoaXMgZmlsZSBpcyBjcmVhdGVkIHdpdGggJ3lhcm4gZ2VuZXJhdGUtaWNvbnMnLlxuLy8gT3JpZ2luYWwgU1ZHIGZpbGU6IHNyYy9yaWNoLXRleHQtYm9keS9pY29ucy9zdmcvc3RyaWtldGhyb3VnaC5yZWFjdC5zdmdcbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFycyAqL1xuaW1wb3J0IHsgd2FybmluZyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L3V0aWxzJztcbmltcG9ydCB7IGNzcywgQ2xhc3NOYW1lcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB7IGRlc2lnblRva2VucyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuZXhwb3J0IHR5cGUgUHJvcHMgPSB7XG4gIGNvbG9yPzpcbiAgICB8ICdzb2xpZCdcbiAgICB8ICduZXV0cmFsNjAnXG4gICAgfCAnc3VyZmFjZSdcbiAgICB8ICdpbmZvJ1xuICAgIHwgJ3ByaW1hcnknXG4gICAgfCAncHJpbWFyeTQwJ1xuICAgIHwgJ3dhcm5pbmcnXG4gICAgfCAnZXJyb3InO1xuICBzaXplPzogJ3NtYWxsJyB8ICdtZWRpdW0nIHwgJ2JpZycgfCAnc2NhbGUnO1xufTtcbmV4cG9ydCB0eXBlIFNWR1Byb3BzID0gUHJvcHMgJiB7XG4gIGNsYXNzTmFtZTogc3RyaW5nO1xufTtcbmNvbnN0IGljb25TaXplcyA9IHtcbiAgc21hbGw6IDEyLFxuICBtZWRpdW06IDE2LFxuICBiaWc6IDI0LFxufSBhcyBjb25zdDtcbmNvbnN0IGdldFNpemVEaW1lbnNpb25zID0gKHNpemU6IFByb3BzWydzaXplJ10pID0+IHtcbiAgc3dpdGNoIChzaXplKSB7XG4gICAgY2FzZSAnc2NhbGUnOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgaGVpZ2h0OiAnYXV0bycsXG4gICAgICB9O1xuICAgIGNhc2UgJ3NtYWxsJzpcbiAgICBjYXNlICdtZWRpdW0nOlxuICAgIGNhc2UgJ2JpZyc6XG4gICAgICByZXR1cm4ge1xuICAgICAgICB3aWR0aDogYCR7aWNvblNpemVzW3NpemVdfXB4YCxcbiAgICAgICAgaGVpZ2h0OiBgJHtpY29uU2l6ZXNbc2l6ZV19cHhgLFxuICAgICAgfTtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd2lkdGg6IGAke2ljb25TaXplcy5iaWd9cHhgLFxuICAgICAgICBoZWlnaHQ6IGAke2ljb25TaXplcy5iaWd9cHhgLFxuICAgICAgfTtcbiAgfVxufTtcbmNvbnN0IGdldFNpemVTdHlsZSA9IChzaXplOiBQcm9wc1snc2l6ZSddKSA9PiB7XG4gIGNvbnN0IGRpbWVuc2lvbnMgPSBnZXRTaXplRGltZW5zaW9ucyhzaXplKTtcbiAgc3dpdGNoIChzaXplKSB7XG4gICAgY2FzZSAnc2NhbGUnOlxuICAgICAgcmV0dXJuIGBcbiAgICAgICAgJjpub3QoOnJvb3QpIHtcbiAgICAgICAgICB3aWR0aDogJHtkaW1lbnNpb25zLndpZHRofTtcbiAgICAgICAgICBoZWlnaHQ6ICR7ZGltZW5zaW9ucy5oZWlnaHR9O1xuICAgICAgICB9XG4gICAgICBgO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gYFxuICAgICAgICB3aWR0aDogJHtkaW1lbnNpb25zLndpZHRofTtcbiAgICAgICAgaGVpZ2h0OiAke2RpbWVuc2lvbnMuaGVpZ2h0fTtcbiAgICAgIGA7XG4gIH1cbn07XG5jb25zdCBnZXRDb2xvciA9IChjb2xvcjogUHJvcHNbJ2NvbG9yJ10pID0+IHtcbiAgaWYgKCFjb2xvcikgcmV0dXJuICdpbmhlcml0JztcbiAgbGV0IGljb25Db2xvcjtcbiAgc3dpdGNoIChjb2xvcikge1xuICAgIGNhc2UgJ3NvbGlkJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvclNvbGlkO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnbmV1dHJhbDYwJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvck5ldXRyYWw2MDtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3N1cmZhY2UnOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ2luZm8nOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9ySW5mbztcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3ByaW1hcnknOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9yUHJpbWFyeTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3ByaW1hcnk0MCc6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JQcmltYXJ5NDA7XG4gICAgICBicmVhaztcbiAgICBjYXNlICd3YXJuaW5nJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvcldhcm5pbmc7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdlcnJvcic6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JFcnJvcjtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICBicmVhaztcbiAgfVxuICBpZiAoIWljb25Db2xvcikge1xuICAgIHdhcm5pbmcoXG4gICAgICBjb2xvcixcbiAgICAgIGB1aS1raXQvSWNvbjogdGhlIHNwZWNpZmllZCBjb2xvciAnJHtjb2xvcn0nIGlzIG5vdCBzdXBwb3J0ZWQuYFxuICAgICk7XG4gICAgcmV0dXJuICdpbmhlcml0JztcbiAgfVxuICByZXR1cm4gaWNvbkNvbG9yO1xufTtcbmV4cG9ydCBjb25zdCBnZXRJY29uU3R5bGVzID0gKHByb3BzOiBQcm9wcykgPT4gY3NzYFxuICAqOm5vdChbZmlsbD0nbm9uZSddKSB7XG4gICAgZmlsbDogJHtnZXRDb2xvcihwcm9wcy5jb2xvcil9O1xuICB9XG4gICYsXG4gIGltYWdlIHtcbiAgICAke2dldFNpemVTdHlsZShwcm9wcy5zaXplKX07XG4gIH1cbiAgZmxleC1zaHJpbms6IDA7XG5gO1xuY29uc3QgU3ZnU3RyaWtldGhyb3VnaCA9IChwcm9wczogU1ZHUHJvcHMpID0+IChcbiAgPHN2Z1xuICAgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxuICAgIHdpZHRoPXsyNH1cbiAgICBoZWlnaHQ9ezI0fVxuICAgIHZpZXdCb3g9XCIwIDAgMjQgMjRcIlxuICAgIHJvbGU9XCJpbWdcIlxuICAgIHsuLi5wcm9wc31cbiAgPlxuICAgIDxwYXRoXG4gICAgICBmaWxsPVwiIzFBMUExQVwiXG4gICAgICBmaWxsUnVsZT1cImV2ZW5vZGRcIlxuICAgICAgZD1cIk0xMS42NDggM2MxLjcwNCAwIDMuMjcuMzEyIDQuNy45MzhsLS42MjEgMS43MzRjLTEuNDE1LS41OTQtMi43OS0uODktNC4xMjUtLjg5LTEuMDU1IDAtMS44OC4yMjYtMi40NzMuNjc5LS41OTQuNDUzLS44OSAxLjA4Mi0uODkgMS44ODcgMCAuNTkzLjEwOSAxLjA4LjMyNyAxLjQ1OS4yMi4zNzkuNTg4LjcyNiAxLjEwOCAxLjA0My41Mi4zMTYgMS4zMTQuNjY2IDIuMzg1IDEuMDQ4Ljk5LjM1MyAxLjgxLjcyIDIuNDU5IDEuMTAySDE5LjV2MS4yNWwtMy40OTMtLjAwMmMuNTE2LjY5Ljc3NCAxLjU0OC43NzQgMi41NzIgMCAxLjUwOC0uNTQ3IDIuNjg0LTEuNjQgMy41MjgtMS4wOTQuODQzLTIuNTc4IDEuMjY1LTQuNDU0IDEuMjY1LTIuMDMgMC0zLjU5My0uMjYxLTQuNjg3LS43ODV2LTEuOTIyYy43MDMuMjk3IDEuNDY5LjUzMSAyLjI5Ny43MDMuODI4LjE3MiAxLjY0OC4yNTggMi40Ni4yNTggMS4zMjkgMCAyLjMyOS0uMjUyIDMtLjc1Ni42NzMtLjUwNCAxLjAwOS0xLjIwNSAxLjAwOS0yLjEwMyAwLS41OTQtLjEyLTEuMDgtLjM1OC0xLjQ2LS4yMzgtLjM3OC0uNjM3LS43MjgtMS4xOTUtMS4wNDgtLjE0LS4wOC0uMy0uMTY0LS40NzgtLjI1SDQuNVYxMmg1LjEzN2MtMS4wNjYtLjQ3Ni0xLjg2My0xLjAxNi0yLjM4OS0xLjYxNy0uNjg0LS43ODEtMS4wMjUtMS44MDEtMS4wMjUtMy4wNTkgMC0xLjMyLjQ5Ni0yLjM3IDEuNDg4LTMuMTUyQzguNzAzIDMuMzkgMTAuMDE2IDMgMTEuNjQ4IDNaXCJcbiAgICAvPlxuICA8L3N2Zz5cbik7XG5TdmdTdHJpa2V0aHJvdWdoLmRpc3BsYXlOYW1lID0gJ1N2Z1N0cmlrZXRocm91Z2gnO1xuY29uc3QgU3RyaWtldGhyb3VnaEljb24gPSAocHJvcHM6IFByb3BzKSA9PiAoXG4gIDxDbGFzc05hbWVzPlxuICAgIHsoeyBjc3M6IGNyZWF0ZUNsYXNzIH0pID0+IChcbiAgICAgIDxTdmdTdHJpa2V0aHJvdWdoXG4gICAgICAgIHsuLi5wcm9wc31cbiAgICAgICAgY2xhc3NOYW1lPXtjcmVhdGVDbGFzcyhnZXRJY29uU3R5bGVzKHByb3BzKSl9XG4gICAgICAvPlxuICAgICl9XG4gIDwvQ2xhc3NOYW1lcz5cbik7XG5TdHJpa2V0aHJvdWdoSWNvbi5kaXNwbGF5TmFtZSA9ICdTdHJpa2V0aHJvdWdoSWNvbic7XG5leHBvcnQgZGVmYXVsdCBTdHJpa2V0aHJvdWdoSWNvbjtcbiJdfQ== */");
const SvgStrikethrough = props => jsxRuntime.jsx("svg", _objectSpread$9(_objectSpread$9({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fill: "#1A1A1A",
    fillRule: "evenodd",
    d: "M11.648 3c1.704 0 3.27.312 4.7.938l-.621 1.734c-1.415-.594-2.79-.89-4.125-.89-1.055 0-1.88.226-2.473.679-.594.453-.89 1.082-.89 1.887 0 .593.109 1.08.327 1.459.22.379.588.726 1.108 1.043.52.316 1.314.666 2.385 1.048.99.353 1.81.72 2.459 1.102H19.5v1.25l-3.493-.002c.516.69.774 1.548.774 2.572 0 1.508-.547 2.684-1.64 3.528-1.094.843-2.578 1.265-4.454 1.265-2.03 0-3.593-.261-4.687-.785v-1.922c.703.297 1.469.531 2.297.703.828.172 1.648.258 2.46.258 1.329 0 2.329-.252 3-.756.673-.504 1.009-1.205 1.009-2.103 0-.594-.12-1.08-.358-1.46-.238-.378-.637-.728-1.195-1.048-.14-.08-.3-.164-.478-.25H4.5V12h5.137c-1.066-.476-1.863-1.016-2.389-1.617-.684-.781-1.025-1.801-1.025-3.059 0-1.32.496-2.37 1.488-3.152C8.703 3.39 10.016 3 11.648 3Z"
  })
}));
SvgStrikethrough.displayName = 'SvgStrikethrough';
const StrikethroughIcon = props => jsxRuntime.jsx(react$1.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgStrikethrough, _objectSpread$9(_objectSpread$9({}, props), {}, {
      className: createClass(getIconStyles$5(props))
    }));
  }
});
StrikethroughIcon.displayName = 'StrikethroughIcon';
var StrikethroughIcon$1 = StrikethroughIcon;

function ownKeys$8(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$8(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$8(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$8(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$4 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$4 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$4[size], "px"),
        height: "".concat(iconSizes$4[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$4.big, "px"),
        height: "".concat(iconSizes$4.big, "px")
      };
  }
};
const getSizeStyle$4 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$4(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$4 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    process.env.NODE_ENV !== "production" ? utils.warning(color, "ui-kit/Icon: the specified color '".concat(color, "' is not supported.")) : void 0;
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$4 = props => /*#__PURE__*/react$1.css("*:not([fill='none']){fill:", getColor$4(props.color), ";}&,image{", getSizeStyle$4(props.size), ";}flex-shrink:0;" + (process.env.NODE_ENV === "production" ? "" : ";label:getIconStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlN1YnNjcmlwdFJlYWN0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5R2tEIiwiZmlsZSI6IlN1YnNjcmlwdFJlYWN0LnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8vIFRISVMgSVMgQU4gQVVUT0dFTkVSQVRFRCBGSUxFLiBETyBOT1QgRURJVCBUSElTIEZJTEUgRElSRUNUTFkuXG4vLyBUaGlzIGZpbGUgaXMgY3JlYXRlZCB3aXRoICd5YXJuIGdlbmVyYXRlLWljb25zJy5cbi8vIE9yaWdpbmFsIFNWRyBmaWxlOiBzcmMvcmljaC10ZXh0LWJvZHkvaWNvbnMvc3ZnL3N1YnNjcmlwdC5yZWFjdC5zdmdcbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFycyAqL1xuaW1wb3J0IHsgd2FybmluZyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L3V0aWxzJztcbmltcG9ydCB7IGNzcywgQ2xhc3NOYW1lcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB7IGRlc2lnblRva2VucyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuZXhwb3J0IHR5cGUgUHJvcHMgPSB7XG4gIGNvbG9yPzpcbiAgICB8ICdzb2xpZCdcbiAgICB8ICduZXV0cmFsNjAnXG4gICAgfCAnc3VyZmFjZSdcbiAgICB8ICdpbmZvJ1xuICAgIHwgJ3ByaW1hcnknXG4gICAgfCAncHJpbWFyeTQwJ1xuICAgIHwgJ3dhcm5pbmcnXG4gICAgfCAnZXJyb3InO1xuICBzaXplPzogJ3NtYWxsJyB8ICdtZWRpdW0nIHwgJ2JpZycgfCAnc2NhbGUnO1xufTtcbmV4cG9ydCB0eXBlIFNWR1Byb3BzID0gUHJvcHMgJiB7XG4gIGNsYXNzTmFtZTogc3RyaW5nO1xufTtcbmNvbnN0IGljb25TaXplcyA9IHtcbiAgc21hbGw6IDEyLFxuICBtZWRpdW06IDE2LFxuICBiaWc6IDI0LFxufSBhcyBjb25zdDtcbmNvbnN0IGdldFNpemVEaW1lbnNpb25zID0gKHNpemU6IFByb3BzWydzaXplJ10pID0+IHtcbiAgc3dpdGNoIChzaXplKSB7XG4gICAgY2FzZSAnc2NhbGUnOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgaGVpZ2h0OiAnYXV0bycsXG4gICAgICB9O1xuICAgIGNhc2UgJ3NtYWxsJzpcbiAgICBjYXNlICdtZWRpdW0nOlxuICAgIGNhc2UgJ2JpZyc6XG4gICAgICByZXR1cm4ge1xuICAgICAgICB3aWR0aDogYCR7aWNvblNpemVzW3NpemVdfXB4YCxcbiAgICAgICAgaGVpZ2h0OiBgJHtpY29uU2l6ZXNbc2l6ZV19cHhgLFxuICAgICAgfTtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd2lkdGg6IGAke2ljb25TaXplcy5iaWd9cHhgLFxuICAgICAgICBoZWlnaHQ6IGAke2ljb25TaXplcy5iaWd9cHhgLFxuICAgICAgfTtcbiAgfVxufTtcbmNvbnN0IGdldFNpemVTdHlsZSA9IChzaXplOiBQcm9wc1snc2l6ZSddKSA9PiB7XG4gIGNvbnN0IGRpbWVuc2lvbnMgPSBnZXRTaXplRGltZW5zaW9ucyhzaXplKTtcbiAgc3dpdGNoIChzaXplKSB7XG4gICAgY2FzZSAnc2NhbGUnOlxuICAgICAgcmV0dXJuIGBcbiAgICAgICAgJjpub3QoOnJvb3QpIHtcbiAgICAgICAgICB3aWR0aDogJHtkaW1lbnNpb25zLndpZHRofTtcbiAgICAgICAgICBoZWlnaHQ6ICR7ZGltZW5zaW9ucy5oZWlnaHR9O1xuICAgICAgICB9XG4gICAgICBgO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gYFxuICAgICAgICB3aWR0aDogJHtkaW1lbnNpb25zLndpZHRofTtcbiAgICAgICAgaGVpZ2h0OiAke2RpbWVuc2lvbnMuaGVpZ2h0fTtcbiAgICAgIGA7XG4gIH1cbn07XG5jb25zdCBnZXRDb2xvciA9IChjb2xvcjogUHJvcHNbJ2NvbG9yJ10pID0+IHtcbiAgaWYgKCFjb2xvcikgcmV0dXJuICdpbmhlcml0JztcbiAgbGV0IGljb25Db2xvcjtcbiAgc3dpdGNoIChjb2xvcikge1xuICAgIGNhc2UgJ3NvbGlkJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvclNvbGlkO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnbmV1dHJhbDYwJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvck5ldXRyYWw2MDtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3N1cmZhY2UnOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ2luZm8nOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9ySW5mbztcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3ByaW1hcnknOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9yUHJpbWFyeTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3ByaW1hcnk0MCc6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JQcmltYXJ5NDA7XG4gICAgICBicmVhaztcbiAgICBjYXNlICd3YXJuaW5nJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvcldhcm5pbmc7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdlcnJvcic6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JFcnJvcjtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICBicmVhaztcbiAgfVxuICBpZiAoIWljb25Db2xvcikge1xuICAgIHdhcm5pbmcoXG4gICAgICBjb2xvcixcbiAgICAgIGB1aS1raXQvSWNvbjogdGhlIHNwZWNpZmllZCBjb2xvciAnJHtjb2xvcn0nIGlzIG5vdCBzdXBwb3J0ZWQuYFxuICAgICk7XG4gICAgcmV0dXJuICdpbmhlcml0JztcbiAgfVxuICByZXR1cm4gaWNvbkNvbG9yO1xufTtcbmV4cG9ydCBjb25zdCBnZXRJY29uU3R5bGVzID0gKHByb3BzOiBQcm9wcykgPT4gY3NzYFxuICAqOm5vdChbZmlsbD0nbm9uZSddKSB7XG4gICAgZmlsbDogJHtnZXRDb2xvcihwcm9wcy5jb2xvcil9O1xuICB9XG4gICYsXG4gIGltYWdlIHtcbiAgICAke2dldFNpemVTdHlsZShwcm9wcy5zaXplKX07XG4gIH1cbiAgZmxleC1zaHJpbms6IDA7XG5gO1xuY29uc3QgU3ZnU3Vic2NyaXB0ID0gKHByb3BzOiBTVkdQcm9wcykgPT4gKFxuICA8c3ZnXG4gICAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG4gICAgd2lkdGg9ezI0fVxuICAgIGhlaWdodD17MjR9XG4gICAgdmlld0JveD1cIjAgMCAyNCAyNFwiXG4gICAgcm9sZT1cImltZ1wiXG4gICAgey4uLnByb3BzfVxuICA+XG4gICAgPGcgZmlsbD1cIiMzMzNcIiBmaWxsUnVsZT1cIm5vbnplcm9cIj5cbiAgICAgIDxwYXRoIGQ9XCJNNi42MDkgOS45MzcgMy4xOCAxNS4xNDVoMy4yOTRsMi4wNjctMy4zOSAyLjA4NSAzLjM5aDMuMjk0bC0zLjQ2Ni01LjIwOEwxNC4wODMgNC41aC0zLjMwNEw4LjU0MiA4LjE0NyA2LjI5NCA0LjVIM3pNMjEuMDQ0IDE5LjVoLTUuOTg4di0xLjI2bDIuMTUtMi4xNzRjLjYzNy0uNjUyIDEuMDUzLTEuMTA0IDEuMjQ4LTEuMzU2LjE5NS0uMjUyLjMzNi0uNDg1LjQyMi0uNy4wODYtLjIxNS4xMjktLjQzOC4xMjktLjY2OCAwLS4zNDQtLjA5NS0uNi0uMjg0LS43NjgtLjE5LS4xNjgtLjQ0My0uMjUyLS43Ni0uMjUyLS4zMzEgMC0uNjUzLjA3Ni0uOTY2LjIyOWE0Ljk5IDQuOTkgMCAwIDAtLjk3OC42NWwtLjk4NS0xLjE2NmMuNDIyLS4zNi43NzItLjYxMyAxLjA1LS43NjJhMy44NSAzLjg1IDAgMCAxIC45MDctLjM0MmMuMzI4LS4wOC42OTYtLjEyIDEuMTAyLS4xMi41MzUgMCAxLjAwOC4wOTcgMS40MTguMjkzLjQxLjE5NS43MjguNDY4Ljk1NS44Mi4yMjYuMzUxLjM0Ljc1NC4zNCAxLjIwNyAwIC4zOTQtLjA3Ljc2NS0uMjA4IDEuMTEtLjEzOS4zNDYtLjM1NC43LS42NDUgMS4wNjQtLjI5LjM2My0uODA0Ljg4LTEuNTM4IDEuNTUybC0xLjEwMSAxLjAzOHYuMDgyaDMuNzMyVjE5LjVaXCIgLz5cbiAgICA8L2c+XG4gIDwvc3ZnPlxuKTtcblN2Z1N1YnNjcmlwdC5kaXNwbGF5TmFtZSA9ICdTdmdTdWJzY3JpcHQnO1xuY29uc3QgU3Vic2NyaXB0SWNvbiA9IChwcm9wczogUHJvcHMpID0+IChcbiAgPENsYXNzTmFtZXM+XG4gICAgeyh7IGNzczogY3JlYXRlQ2xhc3MgfSkgPT4gKFxuICAgICAgPFN2Z1N1YnNjcmlwdCB7Li4ucHJvcHN9IGNsYXNzTmFtZT17Y3JlYXRlQ2xhc3MoZ2V0SWNvblN0eWxlcyhwcm9wcykpfSAvPlxuICAgICl9XG4gIDwvQ2xhc3NOYW1lcz5cbik7XG5TdWJzY3JpcHRJY29uLmRpc3BsYXlOYW1lID0gJ1N1YnNjcmlwdEljb24nO1xuZXhwb3J0IGRlZmF1bHQgU3Vic2NyaXB0SWNvbjtcbiJdfQ== */");
const SvgSubscript = props => jsxRuntime.jsx("svg", _objectSpread$8(_objectSpread$8({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("g", {
    fill: "#333",
    fillRule: "nonzero",
    children: jsxRuntime.jsx("path", {
      d: "M6.609 9.937 3.18 15.145h3.294l2.067-3.39 2.085 3.39h3.294l-3.466-5.208L14.083 4.5h-3.304L8.542 8.147 6.294 4.5H3zM21.044 19.5h-5.988v-1.26l2.15-2.174c.637-.652 1.053-1.104 1.248-1.356.195-.252.336-.485.422-.7.086-.215.129-.438.129-.668 0-.344-.095-.6-.284-.768-.19-.168-.443-.252-.76-.252-.331 0-.653.076-.966.229a4.99 4.99 0 0 0-.978.65l-.985-1.166c.422-.36.772-.613 1.05-.762a3.85 3.85 0 0 1 .907-.342c.328-.08.696-.12 1.102-.12.535 0 1.008.097 1.418.293.41.195.728.468.955.82.226.351.34.754.34 1.207 0 .394-.07.765-.208 1.11-.139.346-.354.7-.645 1.064-.29.363-.804.88-1.538 1.552l-1.101 1.038v.082h3.732V19.5Z"
    })
  })
}));
SvgSubscript.displayName = 'SvgSubscript';
const SubscriptIcon = props => jsxRuntime.jsx(react$1.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgSubscript, _objectSpread$8(_objectSpread$8({}, props), {}, {
      className: createClass(getIconStyles$4(props))
    }));
  }
});
SubscriptIcon.displayName = 'SubscriptIcon';
var SubscriptIcon$1 = SubscriptIcon;

function ownKeys$7(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$7(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$7(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$7(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$3 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$3 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$3[size], "px"),
        height: "".concat(iconSizes$3[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$3.big, "px"),
        height: "".concat(iconSizes$3.big, "px")
      };
  }
};
const getSizeStyle$3 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$3(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$3 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    process.env.NODE_ENV !== "production" ? utils.warning(color, "ui-kit/Icon: the specified color '".concat(color, "' is not supported.")) : void 0;
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$3 = props => /*#__PURE__*/react$1.css("*:not([fill='none']){fill:", getColor$3(props.color), ";}&,image{", getSizeStyle$3(props.size), ";}flex-shrink:0;" + (process.env.NODE_ENV === "production" ? "" : ";label:getIconStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlN1cGVyc2NyaXB0UmVhY3QudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlHa0QiLCJmaWxlIjoiU3VwZXJzY3JpcHRSZWFjdC50c3giLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUSElTIElTIEFOIEFVVE9HRU5FUkFURUQgRklMRS4gRE8gTk9UIEVESVQgVEhJUyBGSUxFIERJUkVDVExZLlxuLy8gVGhpcyBmaWxlIGlzIGNyZWF0ZWQgd2l0aCAneWFybiBnZW5lcmF0ZS1pY29ucycuXG4vLyBPcmlnaW5hbCBTVkcgZmlsZTogc3JjL3JpY2gtdGV4dC1ib2R5L2ljb25zL3N2Zy9zdXBlcnNjcmlwdC5yZWFjdC5zdmdcbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFycyAqL1xuaW1wb3J0IHsgd2FybmluZyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L3V0aWxzJztcbmltcG9ydCB7IGNzcywgQ2xhc3NOYW1lcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB7IGRlc2lnblRva2VucyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuZXhwb3J0IHR5cGUgUHJvcHMgPSB7XG4gIGNvbG9yPzpcbiAgICB8ICdzb2xpZCdcbiAgICB8ICduZXV0cmFsNjAnXG4gICAgfCAnc3VyZmFjZSdcbiAgICB8ICdpbmZvJ1xuICAgIHwgJ3ByaW1hcnknXG4gICAgfCAncHJpbWFyeTQwJ1xuICAgIHwgJ3dhcm5pbmcnXG4gICAgfCAnZXJyb3InO1xuICBzaXplPzogJ3NtYWxsJyB8ICdtZWRpdW0nIHwgJ2JpZycgfCAnc2NhbGUnO1xufTtcbmV4cG9ydCB0eXBlIFNWR1Byb3BzID0gUHJvcHMgJiB7XG4gIGNsYXNzTmFtZTogc3RyaW5nO1xufTtcbmNvbnN0IGljb25TaXplcyA9IHtcbiAgc21hbGw6IDEyLFxuICBtZWRpdW06IDE2LFxuICBiaWc6IDI0LFxufSBhcyBjb25zdDtcbmNvbnN0IGdldFNpemVEaW1lbnNpb25zID0gKHNpemU6IFByb3BzWydzaXplJ10pID0+IHtcbiAgc3dpdGNoIChzaXplKSB7XG4gICAgY2FzZSAnc2NhbGUnOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgaGVpZ2h0OiAnYXV0bycsXG4gICAgICB9O1xuICAgIGNhc2UgJ3NtYWxsJzpcbiAgICBjYXNlICdtZWRpdW0nOlxuICAgIGNhc2UgJ2JpZyc6XG4gICAgICByZXR1cm4ge1xuICAgICAgICB3aWR0aDogYCR7aWNvblNpemVzW3NpemVdfXB4YCxcbiAgICAgICAgaGVpZ2h0OiBgJHtpY29uU2l6ZXNbc2l6ZV19cHhgLFxuICAgICAgfTtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd2lkdGg6IGAke2ljb25TaXplcy5iaWd9cHhgLFxuICAgICAgICBoZWlnaHQ6IGAke2ljb25TaXplcy5iaWd9cHhgLFxuICAgICAgfTtcbiAgfVxufTtcbmNvbnN0IGdldFNpemVTdHlsZSA9IChzaXplOiBQcm9wc1snc2l6ZSddKSA9PiB7XG4gIGNvbnN0IGRpbWVuc2lvbnMgPSBnZXRTaXplRGltZW5zaW9ucyhzaXplKTtcbiAgc3dpdGNoIChzaXplKSB7XG4gICAgY2FzZSAnc2NhbGUnOlxuICAgICAgcmV0dXJuIGBcbiAgICAgICAgJjpub3QoOnJvb3QpIHtcbiAgICAgICAgICB3aWR0aDogJHtkaW1lbnNpb25zLndpZHRofTtcbiAgICAgICAgICBoZWlnaHQ6ICR7ZGltZW5zaW9ucy5oZWlnaHR9O1xuICAgICAgICB9XG4gICAgICBgO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gYFxuICAgICAgICB3aWR0aDogJHtkaW1lbnNpb25zLndpZHRofTtcbiAgICAgICAgaGVpZ2h0OiAke2RpbWVuc2lvbnMuaGVpZ2h0fTtcbiAgICAgIGA7XG4gIH1cbn07XG5jb25zdCBnZXRDb2xvciA9IChjb2xvcjogUHJvcHNbJ2NvbG9yJ10pID0+IHtcbiAgaWYgKCFjb2xvcikgcmV0dXJuICdpbmhlcml0JztcbiAgbGV0IGljb25Db2xvcjtcbiAgc3dpdGNoIChjb2xvcikge1xuICAgIGNhc2UgJ3NvbGlkJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvclNvbGlkO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnbmV1dHJhbDYwJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvck5ldXRyYWw2MDtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3N1cmZhY2UnOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ2luZm8nOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9ySW5mbztcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3ByaW1hcnknOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9yUHJpbWFyeTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3ByaW1hcnk0MCc6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JQcmltYXJ5NDA7XG4gICAgICBicmVhaztcbiAgICBjYXNlICd3YXJuaW5nJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvcldhcm5pbmc7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdlcnJvcic6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JFcnJvcjtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICBicmVhaztcbiAgfVxuICBpZiAoIWljb25Db2xvcikge1xuICAgIHdhcm5pbmcoXG4gICAgICBjb2xvcixcbiAgICAgIGB1aS1raXQvSWNvbjogdGhlIHNwZWNpZmllZCBjb2xvciAnJHtjb2xvcn0nIGlzIG5vdCBzdXBwb3J0ZWQuYFxuICAgICk7XG4gICAgcmV0dXJuICdpbmhlcml0JztcbiAgfVxuICByZXR1cm4gaWNvbkNvbG9yO1xufTtcbmV4cG9ydCBjb25zdCBnZXRJY29uU3R5bGVzID0gKHByb3BzOiBQcm9wcykgPT4gY3NzYFxuICAqOm5vdChbZmlsbD0nbm9uZSddKSB7XG4gICAgZmlsbDogJHtnZXRDb2xvcihwcm9wcy5jb2xvcil9O1xuICB9XG4gICYsXG4gIGltYWdlIHtcbiAgICAke2dldFNpemVTdHlsZShwcm9wcy5zaXplKX07XG4gIH1cbiAgZmxleC1zaHJpbms6IDA7XG5gO1xuY29uc3QgU3ZnU3VwZXJzY3JpcHQgPSAocHJvcHM6IFNWR1Byb3BzKSA9PiAoXG4gIDxzdmdcbiAgICB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcbiAgICB3aWR0aD17MjR9XG4gICAgaGVpZ2h0PXsyNH1cbiAgICB2aWV3Qm94PVwiMCAwIDI0IDI0XCJcbiAgICByb2xlPVwiaW1nXCJcbiAgICB7Li4ucHJvcHN9XG4gID5cbiAgICA8ZyBmaWxsUnVsZT1cImV2ZW5vZGRcIj5cbiAgICAgIDxwYXRoXG4gICAgICAgIGZpbGw9XCIjMzMzXCJcbiAgICAgICAgZmlsbFJ1bGU9XCJub256ZXJvXCJcbiAgICAgICAgZD1cIk03LjA2NyAxNC4wNjMgMy42NCA4Ljg1NWgzLjI5NUw5IDEyLjI0NWwyLjA4NS0zLjM5aDMuMjk1bC0zLjQ2NiA1LjIwOCAzLjYyOCA1LjQzN2gtMy4zMDRMOSAxNS44NTMgNi43NTMgMTkuNUgzLjQ1OHpNMjEuMDQ0IDEzLjVoLTUuOTg4di0xLjI2bDIuMTUtMi4xNzRjLjYzNy0uNjUyIDEuMDUzLTEuMTA0IDEuMjQ4LTEuMzU2LjE5NS0uMjUyLjMzNi0uNDg1LjQyMi0uNy4wODYtLjIxNS4xMjktLjQzOC4xMjktLjY2OCAwLS4zNDQtLjA5NS0uNi0uMjg0LS43NjgtLjE5LS4xNjgtLjQ0My0uMjUyLS43Ni0uMjUyLS4zMzEgMC0uNjUzLjA3Ni0uOTY2LjIyOWE0Ljk5IDQuOTkgMCAwIDAtLjk3OC42NWwtLjk4NS0xLjE2NmMuNDIyLS4zNi43NzItLjYxMyAxLjA1LS43NjJhMy44NSAzLjg1IDAgMCAxIC45MDctLjM0MmMuMzI4LS4wOC42OTYtLjEyIDEuMTAyLS4xMi41MzUgMCAxLjAwOC4wOTcgMS40MTguMjkzLjQxLjE5NS43MjguNDY4Ljk1NS44Mi4yMjYuMzUxLjM0Ljc1NC4zNCAxLjIwNyAwIC4zOTQtLjA3Ljc2NS0uMjA4IDEuMTEtLjEzOS4zNDYtLjM1NC43LS42NDUgMS4wNjQtLjI5LjM2My0uODA0Ljg4LTEuNTM4IDEuNTUybC0xLjEwMSAxLjAzOHYuMDgyaDMuNzMyVjEzLjVaXCJcbiAgICAgIC8+XG4gICAgPC9nPlxuICA8L3N2Zz5cbik7XG5TdmdTdXBlcnNjcmlwdC5kaXNwbGF5TmFtZSA9ICdTdmdTdXBlcnNjcmlwdCc7XG5jb25zdCBTdXBlcnNjcmlwdEljb24gPSAocHJvcHM6IFByb3BzKSA9PiAoXG4gIDxDbGFzc05hbWVzPlxuICAgIHsoeyBjc3M6IGNyZWF0ZUNsYXNzIH0pID0+IChcbiAgICAgIDxTdmdTdXBlcnNjcmlwdFxuICAgICAgICB7Li4ucHJvcHN9XG4gICAgICAgIGNsYXNzTmFtZT17Y3JlYXRlQ2xhc3MoZ2V0SWNvblN0eWxlcyhwcm9wcykpfVxuICAgICAgLz5cbiAgICApfVxuICA8L0NsYXNzTmFtZXM+XG4pO1xuU3VwZXJzY3JpcHRJY29uLmRpc3BsYXlOYW1lID0gJ1N1cGVyc2NyaXB0SWNvbic7XG5leHBvcnQgZGVmYXVsdCBTdXBlcnNjcmlwdEljb247XG4iXX0= */");
const SvgSuperscript = props => jsxRuntime.jsx("svg", _objectSpread$7(_objectSpread$7({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("g", {
    fillRule: "evenodd",
    children: jsxRuntime.jsx("path", {
      fill: "#333",
      fillRule: "nonzero",
      d: "M7.067 14.063 3.64 8.855h3.295L9 12.245l2.085-3.39h3.295l-3.466 5.208 3.628 5.437h-3.304L9 15.853 6.753 19.5H3.458zM21.044 13.5h-5.988v-1.26l2.15-2.174c.637-.652 1.053-1.104 1.248-1.356.195-.252.336-.485.422-.7.086-.215.129-.438.129-.668 0-.344-.095-.6-.284-.768-.19-.168-.443-.252-.76-.252-.331 0-.653.076-.966.229a4.99 4.99 0 0 0-.978.65l-.985-1.166c.422-.36.772-.613 1.05-.762a3.85 3.85 0 0 1 .907-.342c.328-.08.696-.12 1.102-.12.535 0 1.008.097 1.418.293.41.195.728.468.955.82.226.351.34.754.34 1.207 0 .394-.07.765-.208 1.11-.139.346-.354.7-.645 1.064-.29.363-.804.88-1.538 1.552l-1.101 1.038v.082h3.732V13.5Z"
    })
  })
}));
SvgSuperscript.displayName = 'SvgSuperscript';
const SuperscriptIcon = props => jsxRuntime.jsx(react$1.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgSuperscript, _objectSpread$7(_objectSpread$7({}, props), {}, {
      className: createClass(getIconStyles$3(props))
    }));
  }
});
SuperscriptIcon.displayName = 'SuperscriptIcon';
var SuperscriptIcon$1 = SuperscriptIcon;

function ownKeys$6(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$6(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$6(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$6(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$2 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$2 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$2[size], "px"),
        height: "".concat(iconSizes$2[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$2.big, "px"),
        height: "".concat(iconSizes$2.big, "px")
      };
  }
};
const getSizeStyle$2 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$2(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$2 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    process.env.NODE_ENV !== "production" ? utils.warning(color, "ui-kit/Icon: the specified color '".concat(color, "' is not supported.")) : void 0;
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$2 = props => /*#__PURE__*/react$1.css("*:not([fill='none']){fill:", getColor$2(props.color), ";}&,image{", getSizeStyle$2(props.size), ";}flex-shrink:0;" + (process.env.NODE_ENV === "production" ? "" : ";label:getIconStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVuZGVybGluZVJlYWN0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5R2tEIiwiZmlsZSI6IlVuZGVybGluZVJlYWN0LnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8vIFRISVMgSVMgQU4gQVVUT0dFTkVSQVRFRCBGSUxFLiBETyBOT1QgRURJVCBUSElTIEZJTEUgRElSRUNUTFkuXG4vLyBUaGlzIGZpbGUgaXMgY3JlYXRlZCB3aXRoICd5YXJuIGdlbmVyYXRlLWljb25zJy5cbi8vIE9yaWdpbmFsIFNWRyBmaWxlOiBzcmMvcmljaC10ZXh0LWJvZHkvaWNvbnMvc3ZnL3VuZGVybGluZS5yZWFjdC5zdmdcbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFycyAqL1xuaW1wb3J0IHsgd2FybmluZyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L3V0aWxzJztcbmltcG9ydCB7IGNzcywgQ2xhc3NOYW1lcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB7IGRlc2lnblRva2VucyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuZXhwb3J0IHR5cGUgUHJvcHMgPSB7XG4gIGNvbG9yPzpcbiAgICB8ICdzb2xpZCdcbiAgICB8ICduZXV0cmFsNjAnXG4gICAgfCAnc3VyZmFjZSdcbiAgICB8ICdpbmZvJ1xuICAgIHwgJ3ByaW1hcnknXG4gICAgfCAncHJpbWFyeTQwJ1xuICAgIHwgJ3dhcm5pbmcnXG4gICAgfCAnZXJyb3InO1xuICBzaXplPzogJ3NtYWxsJyB8ICdtZWRpdW0nIHwgJ2JpZycgfCAnc2NhbGUnO1xufTtcbmV4cG9ydCB0eXBlIFNWR1Byb3BzID0gUHJvcHMgJiB7XG4gIGNsYXNzTmFtZTogc3RyaW5nO1xufTtcbmNvbnN0IGljb25TaXplcyA9IHtcbiAgc21hbGw6IDEyLFxuICBtZWRpdW06IDE2LFxuICBiaWc6IDI0LFxufSBhcyBjb25zdDtcbmNvbnN0IGdldFNpemVEaW1lbnNpb25zID0gKHNpemU6IFByb3BzWydzaXplJ10pID0+IHtcbiAgc3dpdGNoIChzaXplKSB7XG4gICAgY2FzZSAnc2NhbGUnOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgaGVpZ2h0OiAnYXV0bycsXG4gICAgICB9O1xuICAgIGNhc2UgJ3NtYWxsJzpcbiAgICBjYXNlICdtZWRpdW0nOlxuICAgIGNhc2UgJ2JpZyc6XG4gICAgICByZXR1cm4ge1xuICAgICAgICB3aWR0aDogYCR7aWNvblNpemVzW3NpemVdfXB4YCxcbiAgICAgICAgaGVpZ2h0OiBgJHtpY29uU2l6ZXNbc2l6ZV19cHhgLFxuICAgICAgfTtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd2lkdGg6IGAke2ljb25TaXplcy5iaWd9cHhgLFxuICAgICAgICBoZWlnaHQ6IGAke2ljb25TaXplcy5iaWd9cHhgLFxuICAgICAgfTtcbiAgfVxufTtcbmNvbnN0IGdldFNpemVTdHlsZSA9IChzaXplOiBQcm9wc1snc2l6ZSddKSA9PiB7XG4gIGNvbnN0IGRpbWVuc2lvbnMgPSBnZXRTaXplRGltZW5zaW9ucyhzaXplKTtcbiAgc3dpdGNoIChzaXplKSB7XG4gICAgY2FzZSAnc2NhbGUnOlxuICAgICAgcmV0dXJuIGBcbiAgICAgICAgJjpub3QoOnJvb3QpIHtcbiAgICAgICAgICB3aWR0aDogJHtkaW1lbnNpb25zLndpZHRofTtcbiAgICAgICAgICBoZWlnaHQ6ICR7ZGltZW5zaW9ucy5oZWlnaHR9O1xuICAgICAgICB9XG4gICAgICBgO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gYFxuICAgICAgICB3aWR0aDogJHtkaW1lbnNpb25zLndpZHRofTtcbiAgICAgICAgaGVpZ2h0OiAke2RpbWVuc2lvbnMuaGVpZ2h0fTtcbiAgICAgIGA7XG4gIH1cbn07XG5jb25zdCBnZXRDb2xvciA9IChjb2xvcjogUHJvcHNbJ2NvbG9yJ10pID0+IHtcbiAgaWYgKCFjb2xvcikgcmV0dXJuICdpbmhlcml0JztcbiAgbGV0IGljb25Db2xvcjtcbiAgc3dpdGNoIChjb2xvcikge1xuICAgIGNhc2UgJ3NvbGlkJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvclNvbGlkO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnbmV1dHJhbDYwJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvck5ldXRyYWw2MDtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3N1cmZhY2UnOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ2luZm8nOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9ySW5mbztcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3ByaW1hcnknOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9yUHJpbWFyeTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3ByaW1hcnk0MCc6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JQcmltYXJ5NDA7XG4gICAgICBicmVhaztcbiAgICBjYXNlICd3YXJuaW5nJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvcldhcm5pbmc7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdlcnJvcic6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JFcnJvcjtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICBicmVhaztcbiAgfVxuICBpZiAoIWljb25Db2xvcikge1xuICAgIHdhcm5pbmcoXG4gICAgICBjb2xvcixcbiAgICAgIGB1aS1raXQvSWNvbjogdGhlIHNwZWNpZmllZCBjb2xvciAnJHtjb2xvcn0nIGlzIG5vdCBzdXBwb3J0ZWQuYFxuICAgICk7XG4gICAgcmV0dXJuICdpbmhlcml0JztcbiAgfVxuICByZXR1cm4gaWNvbkNvbG9yO1xufTtcbmV4cG9ydCBjb25zdCBnZXRJY29uU3R5bGVzID0gKHByb3BzOiBQcm9wcykgPT4gY3NzYFxuICAqOm5vdChbZmlsbD0nbm9uZSddKSB7XG4gICAgZmlsbDogJHtnZXRDb2xvcihwcm9wcy5jb2xvcil9O1xuICB9XG4gICYsXG4gIGltYWdlIHtcbiAgICAke2dldFNpemVTdHlsZShwcm9wcy5zaXplKX07XG4gIH1cbiAgZmxleC1zaHJpbms6IDA7XG5gO1xuY29uc3QgU3ZnVW5kZXJsaW5lID0gKHByb3BzOiBTVkdQcm9wcykgPT4gKFxuICA8c3ZnXG4gICAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG4gICAgd2lkdGg9ezI0fVxuICAgIGhlaWdodD17MjR9XG4gICAgdmlld0JveD1cIjAgMCAyNCAyNFwiXG4gICAgcm9sZT1cImltZ1wiXG4gICAgey4uLnByb3BzfVxuICA+XG4gICAgPHBhdGhcbiAgICAgIGZpbGw9XCIjMUExQTFBXCJcbiAgICAgIGZpbGxSdWxlPVwiZXZlbm9kZFwiXG4gICAgICBkPVwiTTE5LjUgMTkuNjI1djEuMjVoLTE1di0xLjI1aDE1Wk04LjY5IDMuMjIzdjkuNjQyYzAgMS4yMzQuMzEzIDIuMTguOTM4IDIuODQuNjI2LjY2MSAxLjU0Ni45OTEgMi43Ni45OTEgMS4xNTYgMCAyLjA0OC0uMzMyIDIuNjczLS45OTUuNjI2LS42NjQuOTM5LTEuNjE2LjkzOS0yLjg1NlYzLjIyM2gxLjU5NXY5LjU2MmMwIDEuNjg0LS40NzIgMy4wMDgtMS40MTcgMy45NzItLjk0NS45NjMtMi4yNDMgMS40NDUtMy44OTQgMS40NDUtMS42NTIgMC0yLjkzLS40ODUtMy44MzMtMS40NTUtLjkwNC0uOTctMS4zNTYtMi4zMDUtMS4zNTYtNC4wMDNWMy4yMjNIOC42OVpcIlxuICAgIC8+XG4gIDwvc3ZnPlxuKTtcblN2Z1VuZGVybGluZS5kaXNwbGF5TmFtZSA9ICdTdmdVbmRlcmxpbmUnO1xuY29uc3QgVW5kZXJsaW5lSWNvbiA9IChwcm9wczogUHJvcHMpID0+IChcbiAgPENsYXNzTmFtZXM+XG4gICAgeyh7IGNzczogY3JlYXRlQ2xhc3MgfSkgPT4gKFxuICAgICAgPFN2Z1VuZGVybGluZSB7Li4ucHJvcHN9IGNsYXNzTmFtZT17Y3JlYXRlQ2xhc3MoZ2V0SWNvblN0eWxlcyhwcm9wcykpfSAvPlxuICAgICl9XG4gIDwvQ2xhc3NOYW1lcz5cbik7XG5VbmRlcmxpbmVJY29uLmRpc3BsYXlOYW1lID0gJ1VuZGVybGluZUljb24nO1xuZXhwb3J0IGRlZmF1bHQgVW5kZXJsaW5lSWNvbjtcbiJdfQ== */");
const SvgUnderline = props => jsxRuntime.jsx("svg", _objectSpread$6(_objectSpread$6({
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: jsxRuntime.jsx("path", {
    fill: "#1A1A1A",
    fillRule: "evenodd",
    d: "M19.5 19.625v1.25h-15v-1.25h15ZM8.69 3.223v9.642c0 1.234.313 2.18.938 2.84.626.661 1.546.991 2.76.991 1.156 0 2.048-.332 2.673-.995.626-.664.939-1.616.939-2.856V3.223h1.595v9.562c0 1.684-.472 3.008-1.417 3.972-.945.963-2.243 1.445-3.894 1.445-1.652 0-2.93-.485-3.833-1.455-.904-.97-1.356-2.305-1.356-4.003V3.223H8.69Z"
  })
}));
SvgUnderline.displayName = 'SvgUnderline';
const UnderlineIcon = props => jsxRuntime.jsx(react$1.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgUnderline, _objectSpread$6(_objectSpread$6({}, props), {}, {
      className: createClass(getIconStyles$2(props))
    }));
  }
});
UnderlineIcon.displayName = 'UnderlineIcon';
var UnderlineIcon$1 = UnderlineIcon;

function ownKeys$5(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$5(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$5(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$5(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes$1 = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions$1 = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes$1[size], "px"),
        height: "".concat(iconSizes$1[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes$1.big, "px"),
        height: "".concat(iconSizes$1.big, "px")
      };
  }
};
const getSizeStyle$1 = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions$1(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor$1 = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    process.env.NODE_ENV !== "production" ? utils.warning(color, "ui-kit/Icon: the specified color '".concat(color, "' is not supported.")) : void 0;
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles$1 = props => /*#__PURE__*/react$1.css("*:not([fill='none']){fill:", getColor$1(props.color), ";}&,image{", getSizeStyle$1(props.size), ";}flex-shrink:0;" + (process.env.NODE_ENV === "production" ? "" : ";label:getIconStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVuZG9SZWFjdC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeUdrRCIsImZpbGUiOiJVbmRvUmVhY3QudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLy8gVEhJUyBJUyBBTiBBVVRPR0VORVJBVEVEIEZJTEUuIERPIE5PVCBFRElUIFRISVMgRklMRSBESVJFQ1RMWS5cbi8vIFRoaXMgZmlsZSBpcyBjcmVhdGVkIHdpdGggJ3lhcm4gZ2VuZXJhdGUtaWNvbnMnLlxuLy8gT3JpZ2luYWwgU1ZHIGZpbGU6IHNyYy9yaWNoLXRleHQtYm9keS9pY29ucy9zdmcvdW5kby5yZWFjdC5zdmdcbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFycyAqL1xuaW1wb3J0IHsgd2FybmluZyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L3V0aWxzJztcbmltcG9ydCB7IGNzcywgQ2xhc3NOYW1lcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB7IGRlc2lnblRva2VucyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuZXhwb3J0IHR5cGUgUHJvcHMgPSB7XG4gIGNvbG9yPzpcbiAgICB8ICdzb2xpZCdcbiAgICB8ICduZXV0cmFsNjAnXG4gICAgfCAnc3VyZmFjZSdcbiAgICB8ICdpbmZvJ1xuICAgIHwgJ3ByaW1hcnknXG4gICAgfCAncHJpbWFyeTQwJ1xuICAgIHwgJ3dhcm5pbmcnXG4gICAgfCAnZXJyb3InO1xuICBzaXplPzogJ3NtYWxsJyB8ICdtZWRpdW0nIHwgJ2JpZycgfCAnc2NhbGUnO1xufTtcbmV4cG9ydCB0eXBlIFNWR1Byb3BzID0gUHJvcHMgJiB7XG4gIGNsYXNzTmFtZTogc3RyaW5nO1xufTtcbmNvbnN0IGljb25TaXplcyA9IHtcbiAgc21hbGw6IDEyLFxuICBtZWRpdW06IDE2LFxuICBiaWc6IDI0LFxufSBhcyBjb25zdDtcbmNvbnN0IGdldFNpemVEaW1lbnNpb25zID0gKHNpemU6IFByb3BzWydzaXplJ10pID0+IHtcbiAgc3dpdGNoIChzaXplKSB7XG4gICAgY2FzZSAnc2NhbGUnOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgICAgaGVpZ2h0OiAnYXV0bycsXG4gICAgICB9O1xuICAgIGNhc2UgJ3NtYWxsJzpcbiAgICBjYXNlICdtZWRpdW0nOlxuICAgIGNhc2UgJ2JpZyc6XG4gICAgICByZXR1cm4ge1xuICAgICAgICB3aWR0aDogYCR7aWNvblNpemVzW3NpemVdfXB4YCxcbiAgICAgICAgaGVpZ2h0OiBgJHtpY29uU2l6ZXNbc2l6ZV19cHhgLFxuICAgICAgfTtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd2lkdGg6IGAke2ljb25TaXplcy5iaWd9cHhgLFxuICAgICAgICBoZWlnaHQ6IGAke2ljb25TaXplcy5iaWd9cHhgLFxuICAgICAgfTtcbiAgfVxufTtcbmNvbnN0IGdldFNpemVTdHlsZSA9IChzaXplOiBQcm9wc1snc2l6ZSddKSA9PiB7XG4gIGNvbnN0IGRpbWVuc2lvbnMgPSBnZXRTaXplRGltZW5zaW9ucyhzaXplKTtcbiAgc3dpdGNoIChzaXplKSB7XG4gICAgY2FzZSAnc2NhbGUnOlxuICAgICAgcmV0dXJuIGBcbiAgICAgICAgJjpub3QoOnJvb3QpIHtcbiAgICAgICAgICB3aWR0aDogJHtkaW1lbnNpb25zLndpZHRofTtcbiAgICAgICAgICBoZWlnaHQ6ICR7ZGltZW5zaW9ucy5oZWlnaHR9O1xuICAgICAgICB9XG4gICAgICBgO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gYFxuICAgICAgICB3aWR0aDogJHtkaW1lbnNpb25zLndpZHRofTtcbiAgICAgICAgaGVpZ2h0OiAke2RpbWVuc2lvbnMuaGVpZ2h0fTtcbiAgICAgIGA7XG4gIH1cbn07XG5jb25zdCBnZXRDb2xvciA9IChjb2xvcjogUHJvcHNbJ2NvbG9yJ10pID0+IHtcbiAgaWYgKCFjb2xvcikgcmV0dXJuICdpbmhlcml0JztcbiAgbGV0IGljb25Db2xvcjtcbiAgc3dpdGNoIChjb2xvcikge1xuICAgIGNhc2UgJ3NvbGlkJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvclNvbGlkO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnbmV1dHJhbDYwJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvck5ldXRyYWw2MDtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3N1cmZhY2UnOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ2luZm8nOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9ySW5mbztcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3ByaW1hcnknOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9yUHJpbWFyeTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3ByaW1hcnk0MCc6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JQcmltYXJ5NDA7XG4gICAgICBicmVhaztcbiAgICBjYXNlICd3YXJuaW5nJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvcldhcm5pbmc7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdlcnJvcic6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JFcnJvcjtcbiAgICAgIGJyZWFrO1xuICAgIGRlZmF1bHQ6XG4gICAgICBicmVhaztcbiAgfVxuICBpZiAoIWljb25Db2xvcikge1xuICAgIHdhcm5pbmcoXG4gICAgICBjb2xvcixcbiAgICAgIGB1aS1raXQvSWNvbjogdGhlIHNwZWNpZmllZCBjb2xvciAnJHtjb2xvcn0nIGlzIG5vdCBzdXBwb3J0ZWQuYFxuICAgICk7XG4gICAgcmV0dXJuICdpbmhlcml0JztcbiAgfVxuICByZXR1cm4gaWNvbkNvbG9yO1xufTtcbmV4cG9ydCBjb25zdCBnZXRJY29uU3R5bGVzID0gKHByb3BzOiBQcm9wcykgPT4gY3NzYFxuICAqOm5vdChbZmlsbD0nbm9uZSddKSB7XG4gICAgZmlsbDogJHtnZXRDb2xvcihwcm9wcy5jb2xvcil9O1xuICB9XG4gICYsXG4gIGltYWdlIHtcbiAgICAke2dldFNpemVTdHlsZShwcm9wcy5zaXplKX07XG4gIH1cbiAgZmxleC1zaHJpbms6IDA7XG5gO1xuY29uc3QgU3ZnVW5kbyA9IChwcm9wczogU1ZHUHJvcHMpID0+IChcbiAgPHN2Z1xuICAgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxuICAgIHhtbG5zWGxpbms9XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCJcbiAgICB3aWR0aD17MjR9XG4gICAgaGVpZ2h0PXsyNH1cbiAgICB2aWV3Qm94PVwiMCAwIDI0IDI0XCJcbiAgICByb2xlPVwiaW1nXCJcbiAgICB7Li4ucHJvcHN9XG4gID5cbiAgICA8ZGVmcz5cbiAgICAgIDxwYXRoXG4gICAgICAgIGlkPVwidW5kb19yZWFjdF9zdmdfX2FcIlxuICAgICAgICBkPVwiTTEyLjQ1OCA3LjQxYTguNTI0IDguNTI0IDAgMCAwLTYuNyAzLjI0NkwzLjc5NiA4LjY5M2MtLjQzNy0uNDM4LS43OTUtLjI5LS43OTUuMzN2Ny4zMzVjMCAuNjE4LjAyNC41OTMuNjQzLjU5M2g3LjI4NmMuNjE5IDAgLjc2Ny0uMzU4LjMzLS43OTVsLTIuMjQzLTIuMjQzYTYuMjgzIDYuMjgzIDAgMCAxIDUuNjk3LTMuNjQgNi4yODMgNi4yODMgMCAwIDEgNi4yNzcgNi4wODUgOC41NDIgOC41NDIgMCAwIDAtOC41MzEtOC45NDhaXCJcbiAgICAgIC8+XG4gICAgPC9kZWZzPlxuICAgIDx1c2UgeGxpbmtIcmVmPVwiI3VuZG9fcmVhY3Rfc3ZnX19hXCIgZmlsbD1cIiMxQTFBMUFcIiBmaWxsUnVsZT1cImV2ZW5vZGRcIiAvPlxuICA8L3N2Zz5cbik7XG5TdmdVbmRvLmRpc3BsYXlOYW1lID0gJ1N2Z1VuZG8nO1xuY29uc3QgVW5kb0ljb24gPSAocHJvcHM6IFByb3BzKSA9PiAoXG4gIDxDbGFzc05hbWVzPlxuICAgIHsoeyBjc3M6IGNyZWF0ZUNsYXNzIH0pID0+IChcbiAgICAgIDxTdmdVbmRvIHsuLi5wcm9wc30gY2xhc3NOYW1lPXtjcmVhdGVDbGFzcyhnZXRJY29uU3R5bGVzKHByb3BzKSl9IC8+XG4gICAgKX1cbiAgPC9DbGFzc05hbWVzPlxuKTtcblVuZG9JY29uLmRpc3BsYXlOYW1lID0gJ1VuZG9JY29uJztcbmV4cG9ydCBkZWZhdWx0IFVuZG9JY29uO1xuIl19 */");
const SvgUndo = props => jsxRuntime.jsxs("svg", _objectSpread$5(_objectSpread$5({
  xmlns: "http://www.w3.org/2000/svg",
  xmlnsXlink: "http://www.w3.org/1999/xlink",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: [jsxRuntime.jsx("defs", {
    children: jsxRuntime.jsx("path", {
      id: "undo_react_svg__a",
      d: "M12.458 7.41a8.524 8.524 0 0 0-6.7 3.246L3.796 8.693c-.437-.438-.795-.29-.795.33v7.335c0 .618.024.593.643.593h7.286c.619 0 .767-.358.33-.795l-2.243-2.243a6.283 6.283 0 0 1 5.697-3.64 6.283 6.283 0 0 1 6.277 6.085 8.542 8.542 0 0 0-8.531-8.948Z"
    })
  }), jsxRuntime.jsx("use", {
    xlinkHref: "#undo_react_svg__a",
    fill: "#1A1A1A",
    fillRule: "evenodd"
  })]
}));
SvgUndo.displayName = 'SvgUndo';
const UndoIcon = props => jsxRuntime.jsx(react$1.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgUndo, _objectSpread$5(_objectSpread$5({}, props), {}, {
      className: createClass(getIconStyles$1(props))
    }));
  }
});
UndoIcon.displayName = 'UndoIcon';
var UndoIcon$1 = UndoIcon;

function ownKeys$4(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$4(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$4(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$4(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const iconSizes = {
  small: 12,
  medium: 16,
  big: 24
};
const getSizeDimensions = size => {
  switch (size) {
    case 'scale':
      return {
        width: '100%',
        height: 'auto'
      };
    case 'small':
    case 'medium':
    case 'big':
      return {
        width: "".concat(iconSizes[size], "px"),
        height: "".concat(iconSizes[size], "px")
      };
    default:
      return {
        width: "".concat(iconSizes.big, "px"),
        height: "".concat(iconSizes.big, "px")
      };
  }
};
const getSizeStyle = size => {
  var _context, _context2;
  const dimensions = getSizeDimensions(size);
  switch (size) {
    case 'scale':
      return _concatInstanceProperty__default["default"](_context = "\n        &:not(:root) {\n          width: ".concat(dimensions.width, ";\n          height: ")).call(_context, dimensions.height, ";\n        }\n      ");
    default:
      return _concatInstanceProperty__default["default"](_context2 = "\n        width: ".concat(dimensions.width, ";\n        height: ")).call(_context2, dimensions.height, ";\n      ");
  }
};
const getColor = color => {
  if (!color) return 'inherit';
  let iconColor;
  switch (color) {
    case 'solid':
      iconColor = designSystem.designTokens.colorSolid;
      break;
    case 'neutral60':
      iconColor = designSystem.designTokens.colorNeutral60;
      break;
    case 'surface':
      iconColor = designSystem.designTokens.colorSurface;
      break;
    case 'info':
      iconColor = designSystem.designTokens.colorInfo;
      break;
    case 'primary':
      iconColor = designSystem.designTokens.colorPrimary;
      break;
    case 'primary40':
      iconColor = designSystem.designTokens.colorPrimary40;
      break;
    case 'warning':
      iconColor = designSystem.designTokens.colorWarning;
      break;
    case 'error':
      iconColor = designSystem.designTokens.colorError;
      break;
  }
  if (!iconColor) {
    process.env.NODE_ENV !== "production" ? utils.warning(color, "ui-kit/Icon: the specified color '".concat(color, "' is not supported.")) : void 0;
    return 'inherit';
  }
  return iconColor;
};
const getIconStyles = props => /*#__PURE__*/react$1.css("*:not([fill='none']){fill:", getColor(props.color), ";}&,image{", getSizeStyle(props.size), ";}flex-shrink:0;" + (process.env.NODE_ENV === "production" ? "" : ";label:getIconStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVub3JkZXJlZExpc3RSZWFjdC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeUdrRCIsImZpbGUiOiJVbm9yZGVyZWRMaXN0UmVhY3QudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiLy8gVEhJUyBJUyBBTiBBVVRPR0VORVJBVEVEIEZJTEUuIERPIE5PVCBFRElUIFRISVMgRklMRSBESVJFQ1RMWS5cbi8vIFRoaXMgZmlsZSBpcyBjcmVhdGVkIHdpdGggJ3lhcm4gZ2VuZXJhdGUtaWNvbnMnLlxuLy8gT3JpZ2luYWwgU1ZHIGZpbGU6IHNyYy9yaWNoLXRleHQtYm9keS9pY29ucy9zdmcvdW5vcmRlcmVkLWxpc3QucmVhY3Quc3ZnXG4vKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnMgKi9cbmltcG9ydCB7IHdhcm5pbmcgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC91dGlscyc7XG5pbXBvcnQgeyBjc3MsIENsYXNzTmFtZXMgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcbmV4cG9ydCB0eXBlIFByb3BzID0ge1xuICBjb2xvcj86XG4gICAgfCAnc29saWQnXG4gICAgfCAnbmV1dHJhbDYwJ1xuICAgIHwgJ3N1cmZhY2UnXG4gICAgfCAnaW5mbydcbiAgICB8ICdwcmltYXJ5J1xuICAgIHwgJ3ByaW1hcnk0MCdcbiAgICB8ICd3YXJuaW5nJ1xuICAgIHwgJ2Vycm9yJztcbiAgc2l6ZT86ICdzbWFsbCcgfCAnbWVkaXVtJyB8ICdiaWcnIHwgJ3NjYWxlJztcbn07XG5leHBvcnQgdHlwZSBTVkdQcm9wcyA9IFByb3BzICYge1xuICBjbGFzc05hbWU6IHN0cmluZztcbn07XG5jb25zdCBpY29uU2l6ZXMgPSB7XG4gIHNtYWxsOiAxMixcbiAgbWVkaXVtOiAxNixcbiAgYmlnOiAyNCxcbn0gYXMgY29uc3Q7XG5jb25zdCBnZXRTaXplRGltZW5zaW9ucyA9IChzaXplOiBQcm9wc1snc2l6ZSddKSA9PiB7XG4gIHN3aXRjaCAoc2l6ZSkge1xuICAgIGNhc2UgJ3NjYWxlJzpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgIGhlaWdodDogJ2F1dG8nLFxuICAgICAgfTtcbiAgICBjYXNlICdzbWFsbCc6XG4gICAgY2FzZSAnbWVkaXVtJzpcbiAgICBjYXNlICdiaWcnOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd2lkdGg6IGAke2ljb25TaXplc1tzaXplXX1weGAsXG4gICAgICAgIGhlaWdodDogYCR7aWNvblNpemVzW3NpemVdfXB4YCxcbiAgICAgIH07XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHdpZHRoOiBgJHtpY29uU2l6ZXMuYmlnfXB4YCxcbiAgICAgICAgaGVpZ2h0OiBgJHtpY29uU2l6ZXMuYmlnfXB4YCxcbiAgICAgIH07XG4gIH1cbn07XG5jb25zdCBnZXRTaXplU3R5bGUgPSAoc2l6ZTogUHJvcHNbJ3NpemUnXSkgPT4ge1xuICBjb25zdCBkaW1lbnNpb25zID0gZ2V0U2l6ZURpbWVuc2lvbnMoc2l6ZSk7XG4gIHN3aXRjaCAoc2l6ZSkge1xuICAgIGNhc2UgJ3NjYWxlJzpcbiAgICAgIHJldHVybiBgXG4gICAgICAgICY6bm90KDpyb290KSB7XG4gICAgICAgICAgd2lkdGg6ICR7ZGltZW5zaW9ucy53aWR0aH07XG4gICAgICAgICAgaGVpZ2h0OiAke2RpbWVuc2lvbnMuaGVpZ2h0fTtcbiAgICAgICAgfVxuICAgICAgYDtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGBcbiAgICAgICAgd2lkdGg6ICR7ZGltZW5zaW9ucy53aWR0aH07XG4gICAgICAgIGhlaWdodDogJHtkaW1lbnNpb25zLmhlaWdodH07XG4gICAgICBgO1xuICB9XG59O1xuY29uc3QgZ2V0Q29sb3IgPSAoY29sb3I6IFByb3BzWydjb2xvciddKSA9PiB7XG4gIGlmICghY29sb3IpIHJldHVybiAnaW5oZXJpdCc7XG4gIGxldCBpY29uQ29sb3I7XG4gIHN3aXRjaCAoY29sb3IpIHtcbiAgICBjYXNlICdzb2xpZCc6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JTb2xpZDtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ25ldXRyYWw2MCc6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsNjA7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdzdXJmYWNlJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvclN1cmZhY2U7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdpbmZvJzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvckluZm87XG4gICAgICBicmVhaztcbiAgICBjYXNlICdwcmltYXJ5JzpcbiAgICAgIGljb25Db2xvciA9IGRlc2lnblRva2Vucy5jb2xvclByaW1hcnk7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdwcmltYXJ5NDAnOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9yUHJpbWFyeTQwO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnd2FybmluZyc6XG4gICAgICBpY29uQ29sb3IgPSBkZXNpZ25Ub2tlbnMuY29sb3JXYXJuaW5nO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnZXJyb3InOlxuICAgICAgaWNvbkNvbG9yID0gZGVzaWduVG9rZW5zLmNvbG9yRXJyb3I7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgYnJlYWs7XG4gIH1cbiAgaWYgKCFpY29uQ29sb3IpIHtcbiAgICB3YXJuaW5nKFxuICAgICAgY29sb3IsXG4gICAgICBgdWkta2l0L0ljb246IHRoZSBzcGVjaWZpZWQgY29sb3IgJyR7Y29sb3J9JyBpcyBub3Qgc3VwcG9ydGVkLmBcbiAgICApO1xuICAgIHJldHVybiAnaW5oZXJpdCc7XG4gIH1cbiAgcmV0dXJuIGljb25Db2xvcjtcbn07XG5leHBvcnQgY29uc3QgZ2V0SWNvblN0eWxlcyA9IChwcm9wczogUHJvcHMpID0+IGNzc2BcbiAgKjpub3QoW2ZpbGw9J25vbmUnXSkge1xuICAgIGZpbGw6ICR7Z2V0Q29sb3IocHJvcHMuY29sb3IpfTtcbiAgfVxuICAmLFxuICBpbWFnZSB7XG4gICAgJHtnZXRTaXplU3R5bGUocHJvcHMuc2l6ZSl9O1xuICB9XG4gIGZsZXgtc2hyaW5rOiAwO1xuYDtcbmNvbnN0IFN2Z1Vub3JkZXJlZExpc3QgPSAocHJvcHM6IFNWR1Byb3BzKSA9PiAoXG4gIDxzdmdcbiAgICB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcbiAgICB4bWxuc1hsaW5rPVwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiXG4gICAgd2lkdGg9ezI0fVxuICAgIGhlaWdodD17MjR9XG4gICAgdmlld0JveD1cIjAgMCAyNCAyNFwiXG4gICAgcm9sZT1cImltZ1wiXG4gICAgey4uLnByb3BzfVxuICA+XG4gICAgPGRlZnM+XG4gICAgICA8cGF0aFxuICAgICAgICBpZD1cInVub3JkZXJlZC1saXN0X3JlYWN0X3N2Z19fYVwiXG4gICAgICAgIGQ9XCJNNS42MjUgMTdhLjM2LjM2IDAgMCAxIC4yNjQuMTExYy4wNTUuMDU2LjA5LjEyLjEwNC4xOWwuMDA3LjA3NHYyLjI1YS4zNi4zNiAwIDAgMS0uMTExLjI2NC4zNjMuMzYzIDAgMCAxLS4xOS4xMDRMNS42MjUgMjBoLTIuMjVhLjM2LjM2IDAgMCAxLS4yNjQtLjExMS4zNjQuMzY0IDAgMCAxLS4xMDQtLjE5TDMgMTkuNjI1di0yLjI1YS4zNi4zNiAwIDAgMSAuMTExLS4yNjQuMzY2LjM2NiAwIDAgMSAuMTktLjEwNEwzLjM3NSAxN2gyLjI1Wm0xNS4xMjUgMWEuMzkuMzkgMCAwIDEgLjE3Ni4wMzcuMTQ1LjE0NSAwIDAgMSAuMDY2LjA1NmwuMDA4LjAzMnYuNzVjMCAuMDM0LS4wMjUuMDYzLS4wNzQuMDg4YS4zNS4zNSAwIDAgMS0uMTExLjAzM0wyMC43NSAxOWgtMTAuNWEuMzg5LjM4OSAwIDAgMS0uMTc2LS4wMzcuMTQ0LjE0NCAwIDAgMS0uMDY2LS4wNTZMMTAgMTguODc1di0uNzVjMC0uMDM0LjAyNS0uMDYzLjA3NC0uMDg4YS4zNTIuMzUyIDAgMCAxIC4xMTEtLjAzM0wxMC4yNSAxOGgxMC41Wk01LjYyNSAxMGEuMzYuMzYgMCAwIDEgLjI2NC4xMTFjLjA1NS4wNTYuMDkuMTIuMTA0LjE5bC4wMDcuMDc0djIuMjVhLjM2LjM2IDAgMCAxLS4xMTEuMjY0LjM2NS4zNjUgMCAwIDEtLjE5LjEwNEw1LjYyNSAxM2gtMi4yNWEuMzYxLjM2MSAwIDAgMS0uMjY0LS4xMTEuMzY0LjM2NCAwIDAgMS0uMTA0LS4xOUwzIDEyLjYyNXYtMi4yNWEuMzYuMzYgMCAwIDEgLjExMS0uMjY0LjM2NC4zNjQgMCAwIDEgLjE5LS4xMDRMMy4zNzUgMTBoMi4yNVptMTUuMTI1IDFhLjM5LjM5IDAgMCAxIC4xNzYuMDM3Yy4wNS4wMjUuMDc0LjA1NC4wNzQuMDg4di43NWMwIC4wMzQtLjAyNS4wNjMtLjA3NC4wODhhLjM5LjM5IDAgMCAxLS4xNzYuMDM3aC0xMC41YS4zOS4zOSAwIDAgMS0uMTc2LS4wMzdjLS4wNS0uMDI1LS4wNzQtLjA1NC0uMDc0LS4wODh2LS43NWMwLS4wMzQuMDI1LS4wNjMuMDc0LS4wODhBLjM4OS4zODkgMCAwIDEgMTAuMjUgMTFaTTUuNjI1IDRjLjEwMiAwIC4xOS4wMzcuMjY0LjExMS4wNTUuMDU2LjA5LjEyLjEwNC4xOUw2IDQuMzc1djIuMjVhLjM2LjM2IDAgMCAxLS4xMTEuMjY0LjM2My4zNjMgMCAwIDEtLjE5LjEwNEw1LjYyNSA3aC0yLjI1YS4zNi4zNiAwIDAgMS0uMjY0LS4xMTEuMzY0LjM2NCAwIDAgMS0uMTA0LS4xOUwzIDYuNjI1di0yLjI1YS4zNi4zNiAwIDAgMSAuMTExLS4yNjQuMzY0LjM2NCAwIDAgMSAuMTktLjEwNEwzLjM3NSA0aDIuMjVabTQuNjI1IDFoMTAuNWEuMzkuMzkgMCAwIDEgLjE3Ni4wMzcuMTQ1LjE0NSAwIDAgMSAuMDY2LjA1NmwuMDA4LjAzMnYuNzVjMCAuMDM0LS4wMjUuMDYzLS4wNzQuMDg4YS4zNS4zNSAwIDAgMS0uMTExLjAzM0wyMC43NSA2aC0xMC41YS4zODguMzg4IDAgMCAxLS4xNzYtLjAzNy4xNDUuMTQ1IDAgMCAxLS4wNjYtLjA1NkwxMCA1Ljg3NXYtLjc1YzAtLjAzNC4wMjUtLjA2My4wNzQtLjA4OGEuMzUuMzUgMCAwIDEgLjExMS0uMDMzTDEwLjI1IDVoMTAuNVpcIlxuICAgICAgLz5cbiAgICA8L2RlZnM+XG4gICAgPHVzZVxuICAgICAgeGxpbmtIcmVmPVwiI3Vub3JkZXJlZC1saXN0X3JlYWN0X3N2Z19fYVwiXG4gICAgICBmaWxsPVwiIzFBMUExQVwiXG4gICAgICBmaWxsUnVsZT1cImV2ZW5vZGRcIlxuICAgIC8+XG4gIDwvc3ZnPlxuKTtcblN2Z1Vub3JkZXJlZExpc3QuZGlzcGxheU5hbWUgPSAnU3ZnVW5vcmRlcmVkTGlzdCc7XG5jb25zdCBVbm9yZGVyZWRMaXN0SWNvbiA9IChwcm9wczogUHJvcHMpID0+IChcbiAgPENsYXNzTmFtZXM+XG4gICAgeyh7IGNzczogY3JlYXRlQ2xhc3MgfSkgPT4gKFxuICAgICAgPFN2Z1Vub3JkZXJlZExpc3RcbiAgICAgICAgey4uLnByb3BzfVxuICAgICAgICBjbGFzc05hbWU9e2NyZWF0ZUNsYXNzKGdldEljb25TdHlsZXMocHJvcHMpKX1cbiAgICAgIC8+XG4gICAgKX1cbiAgPC9DbGFzc05hbWVzPlxuKTtcblVub3JkZXJlZExpc3RJY29uLmRpc3BsYXlOYW1lID0gJ1Vub3JkZXJlZExpc3RJY29uJztcbmV4cG9ydCBkZWZhdWx0IFVub3JkZXJlZExpc3RJY29uO1xuIl19 */");
const SvgUnorderedList = props => jsxRuntime.jsxs("svg", _objectSpread$4(_objectSpread$4({
  xmlns: "http://www.w3.org/2000/svg",
  xmlnsXlink: "http://www.w3.org/1999/xlink",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  role: "img"
}, props), {}, {
  children: [jsxRuntime.jsx("defs", {
    children: jsxRuntime.jsx("path", {
      id: "unordered-list_react_svg__a",
      d: "M5.625 17a.36.36 0 0 1 .264.111c.055.056.09.12.104.19l.007.074v2.25a.36.36 0 0 1-.111.264.363.363 0 0 1-.19.104L5.625 20h-2.25a.36.36 0 0 1-.264-.111.364.364 0 0 1-.104-.19L3 19.625v-2.25a.36.36 0 0 1 .111-.264.366.366 0 0 1 .19-.104L3.375 17h2.25Zm15.125 1a.39.39 0 0 1 .176.037.145.145 0 0 1 .066.056l.008.032v.75c0 .034-.025.063-.074.088a.35.35 0 0 1-.111.033L20.75 19h-10.5a.389.389 0 0 1-.176-.037.144.144 0 0 1-.066-.056L10 18.875v-.75c0-.034.025-.063.074-.088a.352.352 0 0 1 .111-.033L10.25 18h10.5ZM5.625 10a.36.36 0 0 1 .264.111c.055.056.09.12.104.19l.007.074v2.25a.36.36 0 0 1-.111.264.365.365 0 0 1-.19.104L5.625 13h-2.25a.361.361 0 0 1-.264-.111.364.364 0 0 1-.104-.19L3 12.625v-2.25a.36.36 0 0 1 .111-.264.364.364 0 0 1 .19-.104L3.375 10h2.25Zm15.125 1a.39.39 0 0 1 .176.037c.05.025.074.054.074.088v.75c0 .034-.025.063-.074.088a.39.39 0 0 1-.176.037h-10.5a.39.39 0 0 1-.176-.037c-.05-.025-.074-.054-.074-.088v-.75c0-.034.025-.063.074-.088A.389.389 0 0 1 10.25 11ZM5.625 4c.102 0 .19.037.264.111.055.056.09.12.104.19L6 4.375v2.25a.36.36 0 0 1-.111.264.363.363 0 0 1-.19.104L5.625 7h-2.25a.36.36 0 0 1-.264-.111.364.364 0 0 1-.104-.19L3 6.625v-2.25a.36.36 0 0 1 .111-.264.364.364 0 0 1 .19-.104L3.375 4h2.25Zm4.625 1h10.5a.39.39 0 0 1 .176.037.145.145 0 0 1 .066.056l.008.032v.75c0 .034-.025.063-.074.088a.35.35 0 0 1-.111.033L20.75 6h-10.5a.388.388 0 0 1-.176-.037.145.145 0 0 1-.066-.056L10 5.875v-.75c0-.034.025-.063.074-.088a.35.35 0 0 1 .111-.033L10.25 5h10.5Z"
    })
  }), jsxRuntime.jsx("use", {
    xlinkHref: "#unordered-list_react_svg__a",
    fill: "#1A1A1A",
    fillRule: "evenodd"
  })]
}));
SvgUnorderedList.displayName = 'SvgUnorderedList';
const UnorderedListIcon = props => jsxRuntime.jsx(react$1.ClassNames, {
  children: _ref => {
    let createClass = _ref.css;
    return jsxRuntime.jsx(SvgUnorderedList, _objectSpread$4(_objectSpread$4({}, props), {}, {
      className: createClass(getIconStyles(props))
    }));
  }
});
UnorderedListIcon.displayName = 'UnorderedListIcon';
var UnorderedListIcon$1 = UnorderedListIcon;

function _EMOTION_STRINGIFIED_CSS_ERROR__$2() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }
const getBorderColor = function (props) {
  let defaultBorderColor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : designSystem.designTokens.borderColorForInput;
  if (props.isDisabled) {
    return designSystem.designTokens.borderColorForInputWhenDisabled;
  }
  if (props.hasError) {
    return designSystem.designTokens.borderColorForInputWhenError;
  }
  if (props.hasWarning) {
    return designSystem.designTokens.borderColorForInputWhenWarning;
  }
  if (props.isReadOnly) {
    return designSystem.designTokens.borderColorForInputWhenReadonly;
  }
  return defaultBorderColor;
};
const getInputBoxShadow = function (props) {
  let defaultBoxShadow = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : designSystem.designTokens.shadowForInput;
  if (props.hasError) {
    return /*#__PURE__*/react$1.css("box-shadow:", designSystem.designTokens.shadowForInputWhenError, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:getInputBoxShadow;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJpY2gtdGV4dC1ib2R5LnN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrQ2MiLCJmaWxlIjoicmljaC10ZXh0LWJvZHkuc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5pbXBvcnQgdHlwZSB7IFRSaWNoVGV4dEVkaXRvckJvZHkgfSBmcm9tICcuL3JpY2gtdGV4dC1ib2R5JztcblxudHlwZSBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMgPSBQaWNrPFxuICBUUmljaFRleHRFZGl0b3JCb2R5LFxuICAnaGFzRXJyb3InIHwgJ2lzUmVhZE9ubHknIHwgJ2hhc1dhcm5pbmcnIHwgJ2lzRGlzYWJsZWQnXG4+O1xuXG5jb25zdCBnZXRCb3JkZXJDb2xvciA9IChcbiAgcHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcyxcbiAgZGVmYXVsdEJvcmRlckNvbG9yOiBzdHJpbmcgPSBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFxuKSA9PiB7XG4gIGlmIChwcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkRpc2FibGVkO1xuICB9XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5FcnJvcjtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIHJldHVybiBkZWZhdWx0Qm9yZGVyQ29sb3I7XG59O1xuXG5jb25zdCBnZXRJbnB1dEJveFNoYWRvdyA9IChcbiAgcHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcyxcbiAgZGVmYXVsdEJveFNoYWRvdzogc3RyaW5nID0gZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0XG4pID0+IHtcbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0V2hlbkVycm9yfTtcbiAgICBgO1xuICB9XG4gIGlmIChwcm9wcy5oYXNXYXJuaW5nKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0V2hlbldhcm5pbmd9O1xuICAgIGA7XG4gIH1cbiAgcmV0dXJuIGNzc2BcbiAgICBib3gtc2hhZG93OiAke2RlZmF1bHRCb3hTaGFkb3d9O1xuICBgO1xufTtcblxuY29uc3QgZ2V0VGV4dENvbG9yID0gKHByb3BzOiBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5FcnJvcn07XG4gICAgYDtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuV2FybmluZ307XG4gICAgYDtcbiAgfVxuICBpZiAocHJvcHMuaXNEaXNhYmxlZCB8fCBwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5EaXNhYmxlZH07XG4gICAgYDtcbiAgfVxuICByZXR1cm4gY3NzYFxuICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dH07XG4gIGA7XG59O1xuXG5jb25zdCBnZXRDb250YWluZXJCYWNrZ3JvdW5kQ29sb3IgPSAocHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcykgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWQ7XG4gIH1cbiAgaWYgKHByb3BzLmlzUmVhZE9ubHkpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIHJldHVybiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXQ7XG59O1xuXG5leHBvcnQgY29uc3QgVG9vbGJhck1haW5Db250cm9scyA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgZmxleDogMTtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG5cbiAgPiAqIHtcbiAgICBtYXJnaW4tbGVmdDogMXB4O1xuICB9XG5gO1xuXG5leHBvcnQgY29uc3QgVG9vbGJhclJpZ2h0Q29udHJvbHMgPSBzdHlsZWQuZGl2YGA7XG5cbmV4cG9ydCBjb25zdCBUb29sYmFyID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBmb250LWZhbWlseTogJHtkZXNpZ25Ub2tlbnMuZm9udEZhbWlseURlZmF1bHR9O1xuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGJvcmRlci1ib3R0b206IDA7XG4gIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JSaWNoVGV4dFRvb2xiYXJ9O1xuICBwYWRkaW5nLWxlZnQ6ICR7ZGVzaWduVG9rZW5zLnBhZGRpbmdMZWZ0Rm9yUmljaFRleHRUb29sYmFyfTtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGFsaWduLWNvbnRlbnQ6IHN0cmV0Y2g7XG5cbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICY6OmFmdGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgY29udGVudDogJyc7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcyMH0pO1xuICAgIGhlaWdodDogMXB4O1xuICAgIGJhY2tncm91bmQ6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbH07XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICBib3R0b206IC0xcHg7XG4gIH1cblxuICAmOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICB9XG5gO1xuXG5jb25zdCByZXNldCA9IChwcm9wczogVFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzKSA9PiBbXG4gIGNzc2BcbiAgICBoMSxcbiAgICBoMixcbiAgICBoMyxcbiAgICBoNCxcbiAgICBoNSxcbiAgICBoNiB7XG4gICAgICBtYXJnaW46IDA7XG4gICAgfVxuICAgIHAge1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gICAgfVxuICBgLFxuICBwcm9wcy5pc1JlYWRPbmx5ICYmXG4gICAgY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlblJlYWRvbmx5fTtcbiAgICBgLFxuXG4gIHByb3BzLmlzRGlzYWJsZWQgJiZcbiAgICBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWR9O1xuICAgIGAsXG5dO1xuXG5leHBvcnQgY29uc3QgRWRpdG9yQ29udGFpbmVyID0gc3R5bGVkLmRpdjxUUmljaFRleHRCb2R5U3R5bGVzUHJvcHM+YFxuICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yUmljaFRleHRFZGl0b3JDb250YWluZXJ9O1xuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGZvbnQtZmFtaWx5OiAke2Rlc2lnblRva2Vucy5mb250RmFtaWx5RGVmYXVsdH07XG4gIGJvcmRlci1jb2xvcjogJHsocHJvcHMpID0+IGdldEJvcmRlckNvbG9yKHByb3BzKX07XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgJHtyZXNldH1cbiAgJHtnZXRUZXh0Q29sb3J9XG5gO1xuXG5leHBvcnQgY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLmRpdjxUUmljaFRleHRCb2R5U3R5bGVzUHJvcHM+YFxuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXR9O1xuICB0cmFuc2l0aW9uOiAke2Rlc2lnblRva2Vucy50cmFuc2l0aW9uU3RhbmRhcmR9O1xuICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yUmljaFRleHRJbnB1dH07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBnZXRDb250YWluZXJCYWNrZ3JvdW5kQ29sb3IocHJvcHMpfTtcbiAgJHsocHJvcHMpID0+IGdldElucHV0Qm94U2hhZG93KHByb3BzKX1cbiAgYm9yZGVyLWNvbG9yOiAkeyhwcm9wcykgPT4gZ2V0Qm9yZGVyQ29sb3IocHJvcHMpfTtcbiAgcG9pbnRlci1ldmVudHM6ICR7KHByb3BzKSA9PlxuICAgIHByb3BzLmlzRGlzYWJsZWQgfHwgcHJvcHMuaXNSZWFkT25seSA/ICdub25lJyA6ICdpbmhlcml0J307XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAmOmhvdmVyIHtcbiAgICAkeyhwcm9wcykgPT5cbiAgICAgIGdldEJvcmRlckNvbG9yKHByb3BzLCBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Ib3ZlcmVkKX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXRXaGVuSG92ZXJlZH07XG4gIH1cblxuICAmOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDJweCAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWR9O1xuICB9XG5cbiAgJHtUb29sYmFyfSB7XG4gICAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzRm9ySW5wdXR9O1xuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLWNvbG9yOiAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0fTtcbiAgfVxuXG4gICY6Zm9jdXMtd2l0aGluIHtcbiAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgYm94LXNoYWRvdzogJHtkZXNpZ25Ub2tlbnMuc2hhZG93Rm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgJHtUb29sYmFyfSB7XG4gICAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgfVxuXG4gICAgJHtFZGl0b3JDb250YWluZXJ9IHtcbiAgICAgIGJvcmRlci1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkfTtcbiAgICB9XG4gIH1cbmA7XG4iXX0= */");
  }
  if (props.hasWarning) {
    return /*#__PURE__*/react$1.css("box-shadow:", designSystem.designTokens.shadowForInputWhenWarning, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:getInputBoxShadow;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJpY2gtdGV4dC1ib2R5LnN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF1Q2MiLCJmaWxlIjoicmljaC10ZXh0LWJvZHkuc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5pbXBvcnQgdHlwZSB7IFRSaWNoVGV4dEVkaXRvckJvZHkgfSBmcm9tICcuL3JpY2gtdGV4dC1ib2R5JztcblxudHlwZSBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMgPSBQaWNrPFxuICBUUmljaFRleHRFZGl0b3JCb2R5LFxuICAnaGFzRXJyb3InIHwgJ2lzUmVhZE9ubHknIHwgJ2hhc1dhcm5pbmcnIHwgJ2lzRGlzYWJsZWQnXG4+O1xuXG5jb25zdCBnZXRCb3JkZXJDb2xvciA9IChcbiAgcHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcyxcbiAgZGVmYXVsdEJvcmRlckNvbG9yOiBzdHJpbmcgPSBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFxuKSA9PiB7XG4gIGlmIChwcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkRpc2FibGVkO1xuICB9XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5FcnJvcjtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIHJldHVybiBkZWZhdWx0Qm9yZGVyQ29sb3I7XG59O1xuXG5jb25zdCBnZXRJbnB1dEJveFNoYWRvdyA9IChcbiAgcHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcyxcbiAgZGVmYXVsdEJveFNoYWRvdzogc3RyaW5nID0gZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0XG4pID0+IHtcbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0V2hlbkVycm9yfTtcbiAgICBgO1xuICB9XG4gIGlmIChwcm9wcy5oYXNXYXJuaW5nKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0V2hlbldhcm5pbmd9O1xuICAgIGA7XG4gIH1cbiAgcmV0dXJuIGNzc2BcbiAgICBib3gtc2hhZG93OiAke2RlZmF1bHRCb3hTaGFkb3d9O1xuICBgO1xufTtcblxuY29uc3QgZ2V0VGV4dENvbG9yID0gKHByb3BzOiBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5FcnJvcn07XG4gICAgYDtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuV2FybmluZ307XG4gICAgYDtcbiAgfVxuICBpZiAocHJvcHMuaXNEaXNhYmxlZCB8fCBwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5EaXNhYmxlZH07XG4gICAgYDtcbiAgfVxuICByZXR1cm4gY3NzYFxuICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dH07XG4gIGA7XG59O1xuXG5jb25zdCBnZXRDb250YWluZXJCYWNrZ3JvdW5kQ29sb3IgPSAocHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcykgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWQ7XG4gIH1cbiAgaWYgKHByb3BzLmlzUmVhZE9ubHkpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIHJldHVybiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXQ7XG59O1xuXG5leHBvcnQgY29uc3QgVG9vbGJhck1haW5Db250cm9scyA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgZmxleDogMTtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG5cbiAgPiAqIHtcbiAgICBtYXJnaW4tbGVmdDogMXB4O1xuICB9XG5gO1xuXG5leHBvcnQgY29uc3QgVG9vbGJhclJpZ2h0Q29udHJvbHMgPSBzdHlsZWQuZGl2YGA7XG5cbmV4cG9ydCBjb25zdCBUb29sYmFyID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBmb250LWZhbWlseTogJHtkZXNpZ25Ub2tlbnMuZm9udEZhbWlseURlZmF1bHR9O1xuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGJvcmRlci1ib3R0b206IDA7XG4gIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JSaWNoVGV4dFRvb2xiYXJ9O1xuICBwYWRkaW5nLWxlZnQ6ICR7ZGVzaWduVG9rZW5zLnBhZGRpbmdMZWZ0Rm9yUmljaFRleHRUb29sYmFyfTtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGFsaWduLWNvbnRlbnQ6IHN0cmV0Y2g7XG5cbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICY6OmFmdGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgY29udGVudDogJyc7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcyMH0pO1xuICAgIGhlaWdodDogMXB4O1xuICAgIGJhY2tncm91bmQ6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbH07XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICBib3R0b206IC0xcHg7XG4gIH1cblxuICAmOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICB9XG5gO1xuXG5jb25zdCByZXNldCA9IChwcm9wczogVFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzKSA9PiBbXG4gIGNzc2BcbiAgICBoMSxcbiAgICBoMixcbiAgICBoMyxcbiAgICBoNCxcbiAgICBoNSxcbiAgICBoNiB7XG4gICAgICBtYXJnaW46IDA7XG4gICAgfVxuICAgIHAge1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gICAgfVxuICBgLFxuICBwcm9wcy5pc1JlYWRPbmx5ICYmXG4gICAgY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlblJlYWRvbmx5fTtcbiAgICBgLFxuXG4gIHByb3BzLmlzRGlzYWJsZWQgJiZcbiAgICBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWR9O1xuICAgIGAsXG5dO1xuXG5leHBvcnQgY29uc3QgRWRpdG9yQ29udGFpbmVyID0gc3R5bGVkLmRpdjxUUmljaFRleHRCb2R5U3R5bGVzUHJvcHM+YFxuICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yUmljaFRleHRFZGl0b3JDb250YWluZXJ9O1xuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGZvbnQtZmFtaWx5OiAke2Rlc2lnblRva2Vucy5mb250RmFtaWx5RGVmYXVsdH07XG4gIGJvcmRlci1jb2xvcjogJHsocHJvcHMpID0+IGdldEJvcmRlckNvbG9yKHByb3BzKX07XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgJHtyZXNldH1cbiAgJHtnZXRUZXh0Q29sb3J9XG5gO1xuXG5leHBvcnQgY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLmRpdjxUUmljaFRleHRCb2R5U3R5bGVzUHJvcHM+YFxuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXR9O1xuICB0cmFuc2l0aW9uOiAke2Rlc2lnblRva2Vucy50cmFuc2l0aW9uU3RhbmRhcmR9O1xuICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yUmljaFRleHRJbnB1dH07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBnZXRDb250YWluZXJCYWNrZ3JvdW5kQ29sb3IocHJvcHMpfTtcbiAgJHsocHJvcHMpID0+IGdldElucHV0Qm94U2hhZG93KHByb3BzKX1cbiAgYm9yZGVyLWNvbG9yOiAkeyhwcm9wcykgPT4gZ2V0Qm9yZGVyQ29sb3IocHJvcHMpfTtcbiAgcG9pbnRlci1ldmVudHM6ICR7KHByb3BzKSA9PlxuICAgIHByb3BzLmlzRGlzYWJsZWQgfHwgcHJvcHMuaXNSZWFkT25seSA/ICdub25lJyA6ICdpbmhlcml0J307XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAmOmhvdmVyIHtcbiAgICAkeyhwcm9wcykgPT5cbiAgICAgIGdldEJvcmRlckNvbG9yKHByb3BzLCBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Ib3ZlcmVkKX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXRXaGVuSG92ZXJlZH07XG4gIH1cblxuICAmOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDJweCAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWR9O1xuICB9XG5cbiAgJHtUb29sYmFyfSB7XG4gICAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzRm9ySW5wdXR9O1xuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLWNvbG9yOiAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0fTtcbiAgfVxuXG4gICY6Zm9jdXMtd2l0aGluIHtcbiAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgYm94LXNoYWRvdzogJHtkZXNpZ25Ub2tlbnMuc2hhZG93Rm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgJHtUb29sYmFyfSB7XG4gICAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgfVxuXG4gICAgJHtFZGl0b3JDb250YWluZXJ9IHtcbiAgICAgIGJvcmRlci1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkfTtcbiAgICB9XG4gIH1cbmA7XG4iXX0= */");
  }
  return /*#__PURE__*/react$1.css("box-shadow:", defaultBoxShadow, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:getInputBoxShadow;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJpY2gtdGV4dC1ib2R5LnN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEyQ1kiLCJmaWxlIjoicmljaC10ZXh0LWJvZHkuc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5pbXBvcnQgdHlwZSB7IFRSaWNoVGV4dEVkaXRvckJvZHkgfSBmcm9tICcuL3JpY2gtdGV4dC1ib2R5JztcblxudHlwZSBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMgPSBQaWNrPFxuICBUUmljaFRleHRFZGl0b3JCb2R5LFxuICAnaGFzRXJyb3InIHwgJ2lzUmVhZE9ubHknIHwgJ2hhc1dhcm5pbmcnIHwgJ2lzRGlzYWJsZWQnXG4+O1xuXG5jb25zdCBnZXRCb3JkZXJDb2xvciA9IChcbiAgcHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcyxcbiAgZGVmYXVsdEJvcmRlckNvbG9yOiBzdHJpbmcgPSBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFxuKSA9PiB7XG4gIGlmIChwcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkRpc2FibGVkO1xuICB9XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5FcnJvcjtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIHJldHVybiBkZWZhdWx0Qm9yZGVyQ29sb3I7XG59O1xuXG5jb25zdCBnZXRJbnB1dEJveFNoYWRvdyA9IChcbiAgcHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcyxcbiAgZGVmYXVsdEJveFNoYWRvdzogc3RyaW5nID0gZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0XG4pID0+IHtcbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0V2hlbkVycm9yfTtcbiAgICBgO1xuICB9XG4gIGlmIChwcm9wcy5oYXNXYXJuaW5nKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0V2hlbldhcm5pbmd9O1xuICAgIGA7XG4gIH1cbiAgcmV0dXJuIGNzc2BcbiAgICBib3gtc2hhZG93OiAke2RlZmF1bHRCb3hTaGFkb3d9O1xuICBgO1xufTtcblxuY29uc3QgZ2V0VGV4dENvbG9yID0gKHByb3BzOiBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5FcnJvcn07XG4gICAgYDtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuV2FybmluZ307XG4gICAgYDtcbiAgfVxuICBpZiAocHJvcHMuaXNEaXNhYmxlZCB8fCBwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5EaXNhYmxlZH07XG4gICAgYDtcbiAgfVxuICByZXR1cm4gY3NzYFxuICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dH07XG4gIGA7XG59O1xuXG5jb25zdCBnZXRDb250YWluZXJCYWNrZ3JvdW5kQ29sb3IgPSAocHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcykgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWQ7XG4gIH1cbiAgaWYgKHByb3BzLmlzUmVhZE9ubHkpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIHJldHVybiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXQ7XG59O1xuXG5leHBvcnQgY29uc3QgVG9vbGJhck1haW5Db250cm9scyA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgZmxleDogMTtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG5cbiAgPiAqIHtcbiAgICBtYXJnaW4tbGVmdDogMXB4O1xuICB9XG5gO1xuXG5leHBvcnQgY29uc3QgVG9vbGJhclJpZ2h0Q29udHJvbHMgPSBzdHlsZWQuZGl2YGA7XG5cbmV4cG9ydCBjb25zdCBUb29sYmFyID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBmb250LWZhbWlseTogJHtkZXNpZ25Ub2tlbnMuZm9udEZhbWlseURlZmF1bHR9O1xuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGJvcmRlci1ib3R0b206IDA7XG4gIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JSaWNoVGV4dFRvb2xiYXJ9O1xuICBwYWRkaW5nLWxlZnQ6ICR7ZGVzaWduVG9rZW5zLnBhZGRpbmdMZWZ0Rm9yUmljaFRleHRUb29sYmFyfTtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGFsaWduLWNvbnRlbnQ6IHN0cmV0Y2g7XG5cbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICY6OmFmdGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgY29udGVudDogJyc7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcyMH0pO1xuICAgIGhlaWdodDogMXB4O1xuICAgIGJhY2tncm91bmQ6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbH07XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICBib3R0b206IC0xcHg7XG4gIH1cblxuICAmOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICB9XG5gO1xuXG5jb25zdCByZXNldCA9IChwcm9wczogVFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzKSA9PiBbXG4gIGNzc2BcbiAgICBoMSxcbiAgICBoMixcbiAgICBoMyxcbiAgICBoNCxcbiAgICBoNSxcbiAgICBoNiB7XG4gICAgICBtYXJnaW46IDA7XG4gICAgfVxuICAgIHAge1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gICAgfVxuICBgLFxuICBwcm9wcy5pc1JlYWRPbmx5ICYmXG4gICAgY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlblJlYWRvbmx5fTtcbiAgICBgLFxuXG4gIHByb3BzLmlzRGlzYWJsZWQgJiZcbiAgICBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWR9O1xuICAgIGAsXG5dO1xuXG5leHBvcnQgY29uc3QgRWRpdG9yQ29udGFpbmVyID0gc3R5bGVkLmRpdjxUUmljaFRleHRCb2R5U3R5bGVzUHJvcHM+YFxuICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yUmljaFRleHRFZGl0b3JDb250YWluZXJ9O1xuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGZvbnQtZmFtaWx5OiAke2Rlc2lnblRva2Vucy5mb250RmFtaWx5RGVmYXVsdH07XG4gIGJvcmRlci1jb2xvcjogJHsocHJvcHMpID0+IGdldEJvcmRlckNvbG9yKHByb3BzKX07XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgJHtyZXNldH1cbiAgJHtnZXRUZXh0Q29sb3J9XG5gO1xuXG5leHBvcnQgY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLmRpdjxUUmljaFRleHRCb2R5U3R5bGVzUHJvcHM+YFxuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXR9O1xuICB0cmFuc2l0aW9uOiAke2Rlc2lnblRva2Vucy50cmFuc2l0aW9uU3RhbmRhcmR9O1xuICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yUmljaFRleHRJbnB1dH07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBnZXRDb250YWluZXJCYWNrZ3JvdW5kQ29sb3IocHJvcHMpfTtcbiAgJHsocHJvcHMpID0+IGdldElucHV0Qm94U2hhZG93KHByb3BzKX1cbiAgYm9yZGVyLWNvbG9yOiAkeyhwcm9wcykgPT4gZ2V0Qm9yZGVyQ29sb3IocHJvcHMpfTtcbiAgcG9pbnRlci1ldmVudHM6ICR7KHByb3BzKSA9PlxuICAgIHByb3BzLmlzRGlzYWJsZWQgfHwgcHJvcHMuaXNSZWFkT25seSA/ICdub25lJyA6ICdpbmhlcml0J307XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAmOmhvdmVyIHtcbiAgICAkeyhwcm9wcykgPT5cbiAgICAgIGdldEJvcmRlckNvbG9yKHByb3BzLCBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Ib3ZlcmVkKX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXRXaGVuSG92ZXJlZH07XG4gIH1cblxuICAmOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDJweCAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWR9O1xuICB9XG5cbiAgJHtUb29sYmFyfSB7XG4gICAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzRm9ySW5wdXR9O1xuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLWNvbG9yOiAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0fTtcbiAgfVxuXG4gICY6Zm9jdXMtd2l0aGluIHtcbiAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgYm94LXNoYWRvdzogJHtkZXNpZ25Ub2tlbnMuc2hhZG93Rm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgJHtUb29sYmFyfSB7XG4gICAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgfVxuXG4gICAgJHtFZGl0b3JDb250YWluZXJ9IHtcbiAgICAgIGJvcmRlci1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkfTtcbiAgICB9XG4gIH1cbmA7XG4iXX0= */");
};
const getTextColor = props => {
  if (props.hasError) {
    return /*#__PURE__*/react$1.css("color:", designSystem.designTokens.fontColorForInputWhenError, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:getTextColor;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJpY2gtdGV4dC1ib2R5LnN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrRGMiLCJmaWxlIjoicmljaC10ZXh0LWJvZHkuc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5pbXBvcnQgdHlwZSB7IFRSaWNoVGV4dEVkaXRvckJvZHkgfSBmcm9tICcuL3JpY2gtdGV4dC1ib2R5JztcblxudHlwZSBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMgPSBQaWNrPFxuICBUUmljaFRleHRFZGl0b3JCb2R5LFxuICAnaGFzRXJyb3InIHwgJ2lzUmVhZE9ubHknIHwgJ2hhc1dhcm5pbmcnIHwgJ2lzRGlzYWJsZWQnXG4+O1xuXG5jb25zdCBnZXRCb3JkZXJDb2xvciA9IChcbiAgcHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcyxcbiAgZGVmYXVsdEJvcmRlckNvbG9yOiBzdHJpbmcgPSBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFxuKSA9PiB7XG4gIGlmIChwcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkRpc2FibGVkO1xuICB9XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5FcnJvcjtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIHJldHVybiBkZWZhdWx0Qm9yZGVyQ29sb3I7XG59O1xuXG5jb25zdCBnZXRJbnB1dEJveFNoYWRvdyA9IChcbiAgcHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcyxcbiAgZGVmYXVsdEJveFNoYWRvdzogc3RyaW5nID0gZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0XG4pID0+IHtcbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0V2hlbkVycm9yfTtcbiAgICBgO1xuICB9XG4gIGlmIChwcm9wcy5oYXNXYXJuaW5nKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0V2hlbldhcm5pbmd9O1xuICAgIGA7XG4gIH1cbiAgcmV0dXJuIGNzc2BcbiAgICBib3gtc2hhZG93OiAke2RlZmF1bHRCb3hTaGFkb3d9O1xuICBgO1xufTtcblxuY29uc3QgZ2V0VGV4dENvbG9yID0gKHByb3BzOiBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5FcnJvcn07XG4gICAgYDtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuV2FybmluZ307XG4gICAgYDtcbiAgfVxuICBpZiAocHJvcHMuaXNEaXNhYmxlZCB8fCBwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5EaXNhYmxlZH07XG4gICAgYDtcbiAgfVxuICByZXR1cm4gY3NzYFxuICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dH07XG4gIGA7XG59O1xuXG5jb25zdCBnZXRDb250YWluZXJCYWNrZ3JvdW5kQ29sb3IgPSAocHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcykgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWQ7XG4gIH1cbiAgaWYgKHByb3BzLmlzUmVhZE9ubHkpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIHJldHVybiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXQ7XG59O1xuXG5leHBvcnQgY29uc3QgVG9vbGJhck1haW5Db250cm9scyA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgZmxleDogMTtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG5cbiAgPiAqIHtcbiAgICBtYXJnaW4tbGVmdDogMXB4O1xuICB9XG5gO1xuXG5leHBvcnQgY29uc3QgVG9vbGJhclJpZ2h0Q29udHJvbHMgPSBzdHlsZWQuZGl2YGA7XG5cbmV4cG9ydCBjb25zdCBUb29sYmFyID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBmb250LWZhbWlseTogJHtkZXNpZ25Ub2tlbnMuZm9udEZhbWlseURlZmF1bHR9O1xuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGJvcmRlci1ib3R0b206IDA7XG4gIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JSaWNoVGV4dFRvb2xiYXJ9O1xuICBwYWRkaW5nLWxlZnQ6ICR7ZGVzaWduVG9rZW5zLnBhZGRpbmdMZWZ0Rm9yUmljaFRleHRUb29sYmFyfTtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGFsaWduLWNvbnRlbnQ6IHN0cmV0Y2g7XG5cbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICY6OmFmdGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgY29udGVudDogJyc7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcyMH0pO1xuICAgIGhlaWdodDogMXB4O1xuICAgIGJhY2tncm91bmQ6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbH07XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICBib3R0b206IC0xcHg7XG4gIH1cblxuICAmOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICB9XG5gO1xuXG5jb25zdCByZXNldCA9IChwcm9wczogVFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzKSA9PiBbXG4gIGNzc2BcbiAgICBoMSxcbiAgICBoMixcbiAgICBoMyxcbiAgICBoNCxcbiAgICBoNSxcbiAgICBoNiB7XG4gICAgICBtYXJnaW46IDA7XG4gICAgfVxuICAgIHAge1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gICAgfVxuICBgLFxuICBwcm9wcy5pc1JlYWRPbmx5ICYmXG4gICAgY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlblJlYWRvbmx5fTtcbiAgICBgLFxuXG4gIHByb3BzLmlzRGlzYWJsZWQgJiZcbiAgICBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWR9O1xuICAgIGAsXG5dO1xuXG5leHBvcnQgY29uc3QgRWRpdG9yQ29udGFpbmVyID0gc3R5bGVkLmRpdjxUUmljaFRleHRCb2R5U3R5bGVzUHJvcHM+YFxuICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yUmljaFRleHRFZGl0b3JDb250YWluZXJ9O1xuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGZvbnQtZmFtaWx5OiAke2Rlc2lnblRva2Vucy5mb250RmFtaWx5RGVmYXVsdH07XG4gIGJvcmRlci1jb2xvcjogJHsocHJvcHMpID0+IGdldEJvcmRlckNvbG9yKHByb3BzKX07XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgJHtyZXNldH1cbiAgJHtnZXRUZXh0Q29sb3J9XG5gO1xuXG5leHBvcnQgY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLmRpdjxUUmljaFRleHRCb2R5U3R5bGVzUHJvcHM+YFxuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXR9O1xuICB0cmFuc2l0aW9uOiAke2Rlc2lnblRva2Vucy50cmFuc2l0aW9uU3RhbmRhcmR9O1xuICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yUmljaFRleHRJbnB1dH07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBnZXRDb250YWluZXJCYWNrZ3JvdW5kQ29sb3IocHJvcHMpfTtcbiAgJHsocHJvcHMpID0+IGdldElucHV0Qm94U2hhZG93KHByb3BzKX1cbiAgYm9yZGVyLWNvbG9yOiAkeyhwcm9wcykgPT4gZ2V0Qm9yZGVyQ29sb3IocHJvcHMpfTtcbiAgcG9pbnRlci1ldmVudHM6ICR7KHByb3BzKSA9PlxuICAgIHByb3BzLmlzRGlzYWJsZWQgfHwgcHJvcHMuaXNSZWFkT25seSA/ICdub25lJyA6ICdpbmhlcml0J307XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAmOmhvdmVyIHtcbiAgICAkeyhwcm9wcykgPT5cbiAgICAgIGdldEJvcmRlckNvbG9yKHByb3BzLCBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Ib3ZlcmVkKX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXRXaGVuSG92ZXJlZH07XG4gIH1cblxuICAmOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDJweCAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWR9O1xuICB9XG5cbiAgJHtUb29sYmFyfSB7XG4gICAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzRm9ySW5wdXR9O1xuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLWNvbG9yOiAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0fTtcbiAgfVxuXG4gICY6Zm9jdXMtd2l0aGluIHtcbiAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgYm94LXNoYWRvdzogJHtkZXNpZ25Ub2tlbnMuc2hhZG93Rm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgJHtUb29sYmFyfSB7XG4gICAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgfVxuXG4gICAgJHtFZGl0b3JDb250YWluZXJ9IHtcbiAgICAgIGJvcmRlci1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkfTtcbiAgICB9XG4gIH1cbmA7XG4iXX0= */");
  }
  if (props.hasWarning) {
    return /*#__PURE__*/react$1.css("color:", designSystem.designTokens.fontColorForInputWhenWarning, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:getTextColor;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJpY2gtdGV4dC1ib2R5LnN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF1RGMiLCJmaWxlIjoicmljaC10ZXh0LWJvZHkuc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5pbXBvcnQgdHlwZSB7IFRSaWNoVGV4dEVkaXRvckJvZHkgfSBmcm9tICcuL3JpY2gtdGV4dC1ib2R5JztcblxudHlwZSBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMgPSBQaWNrPFxuICBUUmljaFRleHRFZGl0b3JCb2R5LFxuICAnaGFzRXJyb3InIHwgJ2lzUmVhZE9ubHknIHwgJ2hhc1dhcm5pbmcnIHwgJ2lzRGlzYWJsZWQnXG4+O1xuXG5jb25zdCBnZXRCb3JkZXJDb2xvciA9IChcbiAgcHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcyxcbiAgZGVmYXVsdEJvcmRlckNvbG9yOiBzdHJpbmcgPSBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFxuKSA9PiB7XG4gIGlmIChwcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkRpc2FibGVkO1xuICB9XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5FcnJvcjtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIHJldHVybiBkZWZhdWx0Qm9yZGVyQ29sb3I7XG59O1xuXG5jb25zdCBnZXRJbnB1dEJveFNoYWRvdyA9IChcbiAgcHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcyxcbiAgZGVmYXVsdEJveFNoYWRvdzogc3RyaW5nID0gZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0XG4pID0+IHtcbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0V2hlbkVycm9yfTtcbiAgICBgO1xuICB9XG4gIGlmIChwcm9wcy5oYXNXYXJuaW5nKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0V2hlbldhcm5pbmd9O1xuICAgIGA7XG4gIH1cbiAgcmV0dXJuIGNzc2BcbiAgICBib3gtc2hhZG93OiAke2RlZmF1bHRCb3hTaGFkb3d9O1xuICBgO1xufTtcblxuY29uc3QgZ2V0VGV4dENvbG9yID0gKHByb3BzOiBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5FcnJvcn07XG4gICAgYDtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuV2FybmluZ307XG4gICAgYDtcbiAgfVxuICBpZiAocHJvcHMuaXNEaXNhYmxlZCB8fCBwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5EaXNhYmxlZH07XG4gICAgYDtcbiAgfVxuICByZXR1cm4gY3NzYFxuICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dH07XG4gIGA7XG59O1xuXG5jb25zdCBnZXRDb250YWluZXJCYWNrZ3JvdW5kQ29sb3IgPSAocHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcykgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWQ7XG4gIH1cbiAgaWYgKHByb3BzLmlzUmVhZE9ubHkpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIHJldHVybiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXQ7XG59O1xuXG5leHBvcnQgY29uc3QgVG9vbGJhck1haW5Db250cm9scyA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgZmxleDogMTtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG5cbiAgPiAqIHtcbiAgICBtYXJnaW4tbGVmdDogMXB4O1xuICB9XG5gO1xuXG5leHBvcnQgY29uc3QgVG9vbGJhclJpZ2h0Q29udHJvbHMgPSBzdHlsZWQuZGl2YGA7XG5cbmV4cG9ydCBjb25zdCBUb29sYmFyID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBmb250LWZhbWlseTogJHtkZXNpZ25Ub2tlbnMuZm9udEZhbWlseURlZmF1bHR9O1xuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGJvcmRlci1ib3R0b206IDA7XG4gIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JSaWNoVGV4dFRvb2xiYXJ9O1xuICBwYWRkaW5nLWxlZnQ6ICR7ZGVzaWduVG9rZW5zLnBhZGRpbmdMZWZ0Rm9yUmljaFRleHRUb29sYmFyfTtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGFsaWduLWNvbnRlbnQ6IHN0cmV0Y2g7XG5cbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICY6OmFmdGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgY29udGVudDogJyc7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcyMH0pO1xuICAgIGhlaWdodDogMXB4O1xuICAgIGJhY2tncm91bmQ6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbH07XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICBib3R0b206IC0xcHg7XG4gIH1cblxuICAmOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICB9XG5gO1xuXG5jb25zdCByZXNldCA9IChwcm9wczogVFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzKSA9PiBbXG4gIGNzc2BcbiAgICBoMSxcbiAgICBoMixcbiAgICBoMyxcbiAgICBoNCxcbiAgICBoNSxcbiAgICBoNiB7XG4gICAgICBtYXJnaW46IDA7XG4gICAgfVxuICAgIHAge1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gICAgfVxuICBgLFxuICBwcm9wcy5pc1JlYWRPbmx5ICYmXG4gICAgY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlblJlYWRvbmx5fTtcbiAgICBgLFxuXG4gIHByb3BzLmlzRGlzYWJsZWQgJiZcbiAgICBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWR9O1xuICAgIGAsXG5dO1xuXG5leHBvcnQgY29uc3QgRWRpdG9yQ29udGFpbmVyID0gc3R5bGVkLmRpdjxUUmljaFRleHRCb2R5U3R5bGVzUHJvcHM+YFxuICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yUmljaFRleHRFZGl0b3JDb250YWluZXJ9O1xuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGZvbnQtZmFtaWx5OiAke2Rlc2lnblRva2Vucy5mb250RmFtaWx5RGVmYXVsdH07XG4gIGJvcmRlci1jb2xvcjogJHsocHJvcHMpID0+IGdldEJvcmRlckNvbG9yKHByb3BzKX07XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgJHtyZXNldH1cbiAgJHtnZXRUZXh0Q29sb3J9XG5gO1xuXG5leHBvcnQgY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLmRpdjxUUmljaFRleHRCb2R5U3R5bGVzUHJvcHM+YFxuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXR9O1xuICB0cmFuc2l0aW9uOiAke2Rlc2lnblRva2Vucy50cmFuc2l0aW9uU3RhbmRhcmR9O1xuICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yUmljaFRleHRJbnB1dH07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBnZXRDb250YWluZXJCYWNrZ3JvdW5kQ29sb3IocHJvcHMpfTtcbiAgJHsocHJvcHMpID0+IGdldElucHV0Qm94U2hhZG93KHByb3BzKX1cbiAgYm9yZGVyLWNvbG9yOiAkeyhwcm9wcykgPT4gZ2V0Qm9yZGVyQ29sb3IocHJvcHMpfTtcbiAgcG9pbnRlci1ldmVudHM6ICR7KHByb3BzKSA9PlxuICAgIHByb3BzLmlzRGlzYWJsZWQgfHwgcHJvcHMuaXNSZWFkT25seSA/ICdub25lJyA6ICdpbmhlcml0J307XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAmOmhvdmVyIHtcbiAgICAkeyhwcm9wcykgPT5cbiAgICAgIGdldEJvcmRlckNvbG9yKHByb3BzLCBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Ib3ZlcmVkKX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXRXaGVuSG92ZXJlZH07XG4gIH1cblxuICAmOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDJweCAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWR9O1xuICB9XG5cbiAgJHtUb29sYmFyfSB7XG4gICAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzRm9ySW5wdXR9O1xuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLWNvbG9yOiAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0fTtcbiAgfVxuXG4gICY6Zm9jdXMtd2l0aGluIHtcbiAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgYm94LXNoYWRvdzogJHtkZXNpZ25Ub2tlbnMuc2hhZG93Rm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgJHtUb29sYmFyfSB7XG4gICAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgfVxuXG4gICAgJHtFZGl0b3JDb250YWluZXJ9IHtcbiAgICAgIGJvcmRlci1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkfTtcbiAgICB9XG4gIH1cbmA7XG4iXX0= */");
  }
  if (props.isDisabled || props.isReadOnly) {
    return /*#__PURE__*/react$1.css("color:", designSystem.designTokens.fontColorForInputWhenDisabled, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:getTextColor;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJpY2gtdGV4dC1ib2R5LnN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0RGMiLCJmaWxlIjoicmljaC10ZXh0LWJvZHkuc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5pbXBvcnQgdHlwZSB7IFRSaWNoVGV4dEVkaXRvckJvZHkgfSBmcm9tICcuL3JpY2gtdGV4dC1ib2R5JztcblxudHlwZSBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMgPSBQaWNrPFxuICBUUmljaFRleHRFZGl0b3JCb2R5LFxuICAnaGFzRXJyb3InIHwgJ2lzUmVhZE9ubHknIHwgJ2hhc1dhcm5pbmcnIHwgJ2lzRGlzYWJsZWQnXG4+O1xuXG5jb25zdCBnZXRCb3JkZXJDb2xvciA9IChcbiAgcHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcyxcbiAgZGVmYXVsdEJvcmRlckNvbG9yOiBzdHJpbmcgPSBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFxuKSA9PiB7XG4gIGlmIChwcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkRpc2FibGVkO1xuICB9XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5FcnJvcjtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIHJldHVybiBkZWZhdWx0Qm9yZGVyQ29sb3I7XG59O1xuXG5jb25zdCBnZXRJbnB1dEJveFNoYWRvdyA9IChcbiAgcHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcyxcbiAgZGVmYXVsdEJveFNoYWRvdzogc3RyaW5nID0gZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0XG4pID0+IHtcbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0V2hlbkVycm9yfTtcbiAgICBgO1xuICB9XG4gIGlmIChwcm9wcy5oYXNXYXJuaW5nKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0V2hlbldhcm5pbmd9O1xuICAgIGA7XG4gIH1cbiAgcmV0dXJuIGNzc2BcbiAgICBib3gtc2hhZG93OiAke2RlZmF1bHRCb3hTaGFkb3d9O1xuICBgO1xufTtcblxuY29uc3QgZ2V0VGV4dENvbG9yID0gKHByb3BzOiBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5FcnJvcn07XG4gICAgYDtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuV2FybmluZ307XG4gICAgYDtcbiAgfVxuICBpZiAocHJvcHMuaXNEaXNhYmxlZCB8fCBwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5EaXNhYmxlZH07XG4gICAgYDtcbiAgfVxuICByZXR1cm4gY3NzYFxuICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dH07XG4gIGA7XG59O1xuXG5jb25zdCBnZXRDb250YWluZXJCYWNrZ3JvdW5kQ29sb3IgPSAocHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcykgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWQ7XG4gIH1cbiAgaWYgKHByb3BzLmlzUmVhZE9ubHkpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIHJldHVybiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXQ7XG59O1xuXG5leHBvcnQgY29uc3QgVG9vbGJhck1haW5Db250cm9scyA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgZmxleDogMTtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG5cbiAgPiAqIHtcbiAgICBtYXJnaW4tbGVmdDogMXB4O1xuICB9XG5gO1xuXG5leHBvcnQgY29uc3QgVG9vbGJhclJpZ2h0Q29udHJvbHMgPSBzdHlsZWQuZGl2YGA7XG5cbmV4cG9ydCBjb25zdCBUb29sYmFyID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBmb250LWZhbWlseTogJHtkZXNpZ25Ub2tlbnMuZm9udEZhbWlseURlZmF1bHR9O1xuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGJvcmRlci1ib3R0b206IDA7XG4gIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JSaWNoVGV4dFRvb2xiYXJ9O1xuICBwYWRkaW5nLWxlZnQ6ICR7ZGVzaWduVG9rZW5zLnBhZGRpbmdMZWZ0Rm9yUmljaFRleHRUb29sYmFyfTtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGFsaWduLWNvbnRlbnQ6IHN0cmV0Y2g7XG5cbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICY6OmFmdGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgY29udGVudDogJyc7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcyMH0pO1xuICAgIGhlaWdodDogMXB4O1xuICAgIGJhY2tncm91bmQ6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbH07XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICBib3R0b206IC0xcHg7XG4gIH1cblxuICAmOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICB9XG5gO1xuXG5jb25zdCByZXNldCA9IChwcm9wczogVFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzKSA9PiBbXG4gIGNzc2BcbiAgICBoMSxcbiAgICBoMixcbiAgICBoMyxcbiAgICBoNCxcbiAgICBoNSxcbiAgICBoNiB7XG4gICAgICBtYXJnaW46IDA7XG4gICAgfVxuICAgIHAge1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gICAgfVxuICBgLFxuICBwcm9wcy5pc1JlYWRPbmx5ICYmXG4gICAgY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlblJlYWRvbmx5fTtcbiAgICBgLFxuXG4gIHByb3BzLmlzRGlzYWJsZWQgJiZcbiAgICBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWR9O1xuICAgIGAsXG5dO1xuXG5leHBvcnQgY29uc3QgRWRpdG9yQ29udGFpbmVyID0gc3R5bGVkLmRpdjxUUmljaFRleHRCb2R5U3R5bGVzUHJvcHM+YFxuICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yUmljaFRleHRFZGl0b3JDb250YWluZXJ9O1xuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGZvbnQtZmFtaWx5OiAke2Rlc2lnblRva2Vucy5mb250RmFtaWx5RGVmYXVsdH07XG4gIGJvcmRlci1jb2xvcjogJHsocHJvcHMpID0+IGdldEJvcmRlckNvbG9yKHByb3BzKX07XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgJHtyZXNldH1cbiAgJHtnZXRUZXh0Q29sb3J9XG5gO1xuXG5leHBvcnQgY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLmRpdjxUUmljaFRleHRCb2R5U3R5bGVzUHJvcHM+YFxuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXR9O1xuICB0cmFuc2l0aW9uOiAke2Rlc2lnblRva2Vucy50cmFuc2l0aW9uU3RhbmRhcmR9O1xuICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yUmljaFRleHRJbnB1dH07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBnZXRDb250YWluZXJCYWNrZ3JvdW5kQ29sb3IocHJvcHMpfTtcbiAgJHsocHJvcHMpID0+IGdldElucHV0Qm94U2hhZG93KHByb3BzKX1cbiAgYm9yZGVyLWNvbG9yOiAkeyhwcm9wcykgPT4gZ2V0Qm9yZGVyQ29sb3IocHJvcHMpfTtcbiAgcG9pbnRlci1ldmVudHM6ICR7KHByb3BzKSA9PlxuICAgIHByb3BzLmlzRGlzYWJsZWQgfHwgcHJvcHMuaXNSZWFkT25seSA/ICdub25lJyA6ICdpbmhlcml0J307XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAmOmhvdmVyIHtcbiAgICAkeyhwcm9wcykgPT5cbiAgICAgIGdldEJvcmRlckNvbG9yKHByb3BzLCBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Ib3ZlcmVkKX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXRXaGVuSG92ZXJlZH07XG4gIH1cblxuICAmOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDJweCAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWR9O1xuICB9XG5cbiAgJHtUb29sYmFyfSB7XG4gICAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzRm9ySW5wdXR9O1xuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLWNvbG9yOiAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0fTtcbiAgfVxuXG4gICY6Zm9jdXMtd2l0aGluIHtcbiAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgYm94LXNoYWRvdzogJHtkZXNpZ25Ub2tlbnMuc2hhZG93Rm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgJHtUb29sYmFyfSB7XG4gICAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgfVxuXG4gICAgJHtFZGl0b3JDb250YWluZXJ9IHtcbiAgICAgIGJvcmRlci1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkfTtcbiAgICB9XG4gIH1cbmA7XG4iXX0= */");
  }
  return /*#__PURE__*/react$1.css("color:", designSystem.designTokens.fontColorForInput, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:getTextColor;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJpY2gtdGV4dC1ib2R5LnN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFnRVkiLCJmaWxlIjoicmljaC10ZXh0LWJvZHkuc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5pbXBvcnQgdHlwZSB7IFRSaWNoVGV4dEVkaXRvckJvZHkgfSBmcm9tICcuL3JpY2gtdGV4dC1ib2R5JztcblxudHlwZSBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMgPSBQaWNrPFxuICBUUmljaFRleHRFZGl0b3JCb2R5LFxuICAnaGFzRXJyb3InIHwgJ2lzUmVhZE9ubHknIHwgJ2hhc1dhcm5pbmcnIHwgJ2lzRGlzYWJsZWQnXG4+O1xuXG5jb25zdCBnZXRCb3JkZXJDb2xvciA9IChcbiAgcHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcyxcbiAgZGVmYXVsdEJvcmRlckNvbG9yOiBzdHJpbmcgPSBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFxuKSA9PiB7XG4gIGlmIChwcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkRpc2FibGVkO1xuICB9XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5FcnJvcjtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIHJldHVybiBkZWZhdWx0Qm9yZGVyQ29sb3I7XG59O1xuXG5jb25zdCBnZXRJbnB1dEJveFNoYWRvdyA9IChcbiAgcHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcyxcbiAgZGVmYXVsdEJveFNoYWRvdzogc3RyaW5nID0gZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0XG4pID0+IHtcbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0V2hlbkVycm9yfTtcbiAgICBgO1xuICB9XG4gIGlmIChwcm9wcy5oYXNXYXJuaW5nKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0V2hlbldhcm5pbmd9O1xuICAgIGA7XG4gIH1cbiAgcmV0dXJuIGNzc2BcbiAgICBib3gtc2hhZG93OiAke2RlZmF1bHRCb3hTaGFkb3d9O1xuICBgO1xufTtcblxuY29uc3QgZ2V0VGV4dENvbG9yID0gKHByb3BzOiBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5FcnJvcn07XG4gICAgYDtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuV2FybmluZ307XG4gICAgYDtcbiAgfVxuICBpZiAocHJvcHMuaXNEaXNhYmxlZCB8fCBwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5EaXNhYmxlZH07XG4gICAgYDtcbiAgfVxuICByZXR1cm4gY3NzYFxuICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dH07XG4gIGA7XG59O1xuXG5jb25zdCBnZXRDb250YWluZXJCYWNrZ3JvdW5kQ29sb3IgPSAocHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcykgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWQ7XG4gIH1cbiAgaWYgKHByb3BzLmlzUmVhZE9ubHkpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIHJldHVybiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXQ7XG59O1xuXG5leHBvcnQgY29uc3QgVG9vbGJhck1haW5Db250cm9scyA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgZmxleDogMTtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG5cbiAgPiAqIHtcbiAgICBtYXJnaW4tbGVmdDogMXB4O1xuICB9XG5gO1xuXG5leHBvcnQgY29uc3QgVG9vbGJhclJpZ2h0Q29udHJvbHMgPSBzdHlsZWQuZGl2YGA7XG5cbmV4cG9ydCBjb25zdCBUb29sYmFyID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBmb250LWZhbWlseTogJHtkZXNpZ25Ub2tlbnMuZm9udEZhbWlseURlZmF1bHR9O1xuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGJvcmRlci1ib3R0b206IDA7XG4gIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JSaWNoVGV4dFRvb2xiYXJ9O1xuICBwYWRkaW5nLWxlZnQ6ICR7ZGVzaWduVG9rZW5zLnBhZGRpbmdMZWZ0Rm9yUmljaFRleHRUb29sYmFyfTtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGFsaWduLWNvbnRlbnQ6IHN0cmV0Y2g7XG5cbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICY6OmFmdGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgY29udGVudDogJyc7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcyMH0pO1xuICAgIGhlaWdodDogMXB4O1xuICAgIGJhY2tncm91bmQ6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbH07XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICBib3R0b206IC0xcHg7XG4gIH1cblxuICAmOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICB9XG5gO1xuXG5jb25zdCByZXNldCA9IChwcm9wczogVFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzKSA9PiBbXG4gIGNzc2BcbiAgICBoMSxcbiAgICBoMixcbiAgICBoMyxcbiAgICBoNCxcbiAgICBoNSxcbiAgICBoNiB7XG4gICAgICBtYXJnaW46IDA7XG4gICAgfVxuICAgIHAge1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gICAgfVxuICBgLFxuICBwcm9wcy5pc1JlYWRPbmx5ICYmXG4gICAgY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlblJlYWRvbmx5fTtcbiAgICBgLFxuXG4gIHByb3BzLmlzRGlzYWJsZWQgJiZcbiAgICBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWR9O1xuICAgIGAsXG5dO1xuXG5leHBvcnQgY29uc3QgRWRpdG9yQ29udGFpbmVyID0gc3R5bGVkLmRpdjxUUmljaFRleHRCb2R5U3R5bGVzUHJvcHM+YFxuICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yUmljaFRleHRFZGl0b3JDb250YWluZXJ9O1xuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGZvbnQtZmFtaWx5OiAke2Rlc2lnblRva2Vucy5mb250RmFtaWx5RGVmYXVsdH07XG4gIGJvcmRlci1jb2xvcjogJHsocHJvcHMpID0+IGdldEJvcmRlckNvbG9yKHByb3BzKX07XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgJHtyZXNldH1cbiAgJHtnZXRUZXh0Q29sb3J9XG5gO1xuXG5leHBvcnQgY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLmRpdjxUUmljaFRleHRCb2R5U3R5bGVzUHJvcHM+YFxuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXR9O1xuICB0cmFuc2l0aW9uOiAke2Rlc2lnblRva2Vucy50cmFuc2l0aW9uU3RhbmRhcmR9O1xuICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yUmljaFRleHRJbnB1dH07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBnZXRDb250YWluZXJCYWNrZ3JvdW5kQ29sb3IocHJvcHMpfTtcbiAgJHsocHJvcHMpID0+IGdldElucHV0Qm94U2hhZG93KHByb3BzKX1cbiAgYm9yZGVyLWNvbG9yOiAkeyhwcm9wcykgPT4gZ2V0Qm9yZGVyQ29sb3IocHJvcHMpfTtcbiAgcG9pbnRlci1ldmVudHM6ICR7KHByb3BzKSA9PlxuICAgIHByb3BzLmlzRGlzYWJsZWQgfHwgcHJvcHMuaXNSZWFkT25seSA/ICdub25lJyA6ICdpbmhlcml0J307XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAmOmhvdmVyIHtcbiAgICAkeyhwcm9wcykgPT5cbiAgICAgIGdldEJvcmRlckNvbG9yKHByb3BzLCBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Ib3ZlcmVkKX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXRXaGVuSG92ZXJlZH07XG4gIH1cblxuICAmOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDJweCAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWR9O1xuICB9XG5cbiAgJHtUb29sYmFyfSB7XG4gICAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzRm9ySW5wdXR9O1xuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLWNvbG9yOiAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0fTtcbiAgfVxuXG4gICY6Zm9jdXMtd2l0aGluIHtcbiAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgYm94LXNoYWRvdzogJHtkZXNpZ25Ub2tlbnMuc2hhZG93Rm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgJHtUb29sYmFyfSB7XG4gICAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgfVxuXG4gICAgJHtFZGl0b3JDb250YWluZXJ9IHtcbiAgICAgIGJvcmRlci1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkfTtcbiAgICB9XG4gIH1cbmA7XG4iXX0= */");
};
const getContainerBackgroundColor = props => {
  if (props.isDisabled) {
    return designSystem.designTokens.backgroundColorForInputWhenDisabled;
  }
  if (props.isReadOnly) {
    return designSystem.designTokens.backgroundColorForInputWhenReadonly;
  }
  return designSystem.designTokens.backgroundColorForInput;
};
const ToolbarMainControls = /*#__PURE__*/_styled__default["default"]("div", process.env.NODE_ENV === "production" ? {
  target: "e1sckae44"
} : {
  target: "e1sckae44",
  label: "ToolbarMainControls"
})(process.env.NODE_ENV === "production" ? {
  name: "tg5p88",
  styles: "display:flex;flex-wrap:wrap;flex:1;align-items:flex-start;>*{margin-left:1px;}"
} : {
  name: "tg5p88",
  styles: "display:flex;flex-wrap:wrap;flex:1;align-items:flex-start;>*{margin-left:1px;}",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJpY2gtdGV4dC1ib2R5LnN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUErRTZDIiwiZmlsZSI6InJpY2gtdGV4dC1ib2R5LnN0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB7IGRlc2lnblRva2VucyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuaW1wb3J0IHR5cGUgeyBUUmljaFRleHRFZGl0b3JCb2R5IH0gZnJvbSAnLi9yaWNoLXRleHQtYm9keSc7XG5cbnR5cGUgVFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzID0gUGljazxcbiAgVFJpY2hUZXh0RWRpdG9yQm9keSxcbiAgJ2hhc0Vycm9yJyB8ICdpc1JlYWRPbmx5JyB8ICdoYXNXYXJuaW5nJyB8ICdpc0Rpc2FibGVkJ1xuPjtcblxuY29uc3QgZ2V0Qm9yZGVyQ29sb3IgPSAoXG4gIHByb3BzOiBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMsXG4gIGRlZmF1bHRCb3JkZXJDb2xvcjogc3RyaW5nID0gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRcbikgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5EaXNhYmxlZDtcbiAgfVxuICBpZiAocHJvcHMuaGFzRXJyb3IpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRXJyb3I7XG4gIH1cbiAgaWYgKHByb3BzLmhhc1dhcm5pbmcpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuV2FybmluZztcbiAgfVxuICBpZiAocHJvcHMuaXNSZWFkT25seSkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5SZWFkb25seTtcbiAgfVxuICByZXR1cm4gZGVmYXVsdEJvcmRlckNvbG9yO1xufTtcblxuY29uc3QgZ2V0SW5wdXRCb3hTaGFkb3cgPSAoXG4gIHByb3BzOiBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMsXG4gIGRlZmF1bHRCb3hTaGFkb3c6IHN0cmluZyA9IGRlc2lnblRva2Vucy5zaGFkb3dGb3JJbnB1dFxuKSA9PiB7XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBib3gtc2hhZG93OiAke2Rlc2lnblRva2Vucy5zaGFkb3dGb3JJbnB1dFdoZW5FcnJvcn07XG4gICAgYDtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBib3gtc2hhZG93OiAke2Rlc2lnblRva2Vucy5zaGFkb3dGb3JJbnB1dFdoZW5XYXJuaW5nfTtcbiAgICBgO1xuICB9XG4gIHJldHVybiBjc3NgXG4gICAgYm94LXNoYWRvdzogJHtkZWZhdWx0Qm94U2hhZG93fTtcbiAgYDtcbn07XG5cbmNvbnN0IGdldFRleHRDb2xvciA9IChwcm9wczogVFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzKSA9PiB7XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRXJyb3J9O1xuICAgIGA7XG4gIH1cbiAgaWYgKHByb3BzLmhhc1dhcm5pbmcpIHtcbiAgICByZXR1cm4gY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlbldhcm5pbmd9O1xuICAgIGA7XG4gIH1cbiAgaWYgKHByb3BzLmlzRGlzYWJsZWQgfHwgcHJvcHMuaXNSZWFkT25seSkge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWR9O1xuICAgIGA7XG4gIH1cbiAgcmV0dXJuIGNzc2BcbiAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXR9O1xuICBgO1xufTtcblxuY29uc3QgZ2V0Q29udGFpbmVyQmFja2dyb3VuZENvbG9yID0gKHByb3BzOiBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLmlzRGlzYWJsZWQpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0V2hlbkRpc2FibGVkO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JJbnB1dFdoZW5SZWFkb25seTtcbiAgfVxuICByZXR1cm4gZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0O1xufTtcblxuZXhwb3J0IGNvbnN0IFRvb2xiYXJNYWluQ29udHJvbHMgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGZsZXg6IDE7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuXG4gID4gKiB7XG4gICAgbWFyZ2luLWxlZnQ6IDFweDtcbiAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IFRvb2xiYXJSaWdodENvbnRyb2xzID0gc3R5bGVkLmRpdmBgO1xuXG5leHBvcnQgY29uc3QgVG9vbGJhciA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgZm9udC1mYW1pbHk6ICR7ZGVzaWduVG9rZW5zLmZvbnRGYW1pbHlEZWZhdWx0fTtcbiAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzRm9ySW5wdXR9O1xuICBib3JkZXItYm90dG9tOiAwO1xuICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yUmljaFRleHRUb29sYmFyfTtcbiAgcGFkZGluZy1sZWZ0OiAke2Rlc2lnblRva2Vucy5wYWRkaW5nTGVmdEZvclJpY2hUZXh0VG9vbGJhcn07XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBhbGlnbi1jb250ZW50OiBzdHJldGNoO1xuXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAmOjphZnRlciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAke2Rlc2lnblRva2Vucy5zcGFjaW5nMjB9KTtcbiAgICBoZWlnaHQ6IDFweDtcbiAgICBiYWNrZ3JvdW5kOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWx9O1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgYm90dG9tOiAtMXB4O1xuICB9XG5cbiAgJjpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgfVxuYDtcblxuY29uc3QgcmVzZXQgPSAocHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcykgPT4gW1xuICBjc3NgXG4gICAgaDEsXG4gICAgaDIsXG4gICAgaDMsXG4gICAgaDQsXG4gICAgaDUsXG4gICAgaDYge1xuICAgICAgbWFyZ2luOiAwO1xuICAgIH1cbiAgICBwIHtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICAgIH1cbiAgYCxcbiAgcHJvcHMuaXNSZWFkT25seSAmJlxuICAgIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5SZWFkb25seX07XG4gICAgYCxcblxuICBwcm9wcy5pc0Rpc2FibGVkICYmXG4gICAgY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlbkRpc2FibGVkfTtcbiAgICBgLFxuXTtcblxuZXhwb3J0IGNvbnN0IEVkaXRvckNvbnRhaW5lciA9IHN0eWxlZC5kaXY8VFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzPmBcbiAgcGFkZGluZzogJHtkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvclJpY2hUZXh0RWRpdG9yQ29udGFpbmVyfTtcbiAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzRm9ySW5wdXR9O1xuICBmb250LWZhbWlseTogJHtkZXNpZ25Ub2tlbnMuZm9udEZhbWlseURlZmF1bHR9O1xuICBib3JkZXItY29sb3I6ICR7KHByb3BzKSA9PiBnZXRCb3JkZXJDb2xvcihwcm9wcyl9O1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gICR7cmVzZXR9XG4gICR7Z2V0VGV4dENvbG9yfVxuYDtcblxuZXhwb3J0IGNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXY8VFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzPmBcbiAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzRm9ySW5wdXR9O1xuICBib3JkZXI6IDFweCBzb2xpZCAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0fTtcbiAgdHJhbnNpdGlvbjogJHtkZXNpZ25Ub2tlbnMudHJhbnNpdGlvblN0YW5kYXJkfTtcbiAgcGFkZGluZzogJHtkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvclJpY2hUZXh0SW5wdXR9O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gZ2V0Q29udGFpbmVyQmFja2dyb3VuZENvbG9yKHByb3BzKX07XG4gICR7KHByb3BzKSA9PiBnZXRJbnB1dEJveFNoYWRvdyhwcm9wcyl9XG4gIGJvcmRlci1jb2xvcjogJHsocHJvcHMpID0+IGdldEJvcmRlckNvbG9yKHByb3BzKX07XG4gIHBvaW50ZXItZXZlbnRzOiAkeyhwcm9wcykgPT5cbiAgICBwcm9wcy5pc0Rpc2FibGVkIHx8IHByb3BzLmlzUmVhZE9ubHkgPyAnbm9uZScgOiAnaW5oZXJpdCd9O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJjpob3ZlciB7XG4gICAgJHsocHJvcHMpID0+XG4gICAgICBnZXRCb3JkZXJDb2xvcihwcm9wcywgZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuSG92ZXJlZCl9O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0V2hlbkhvdmVyZWR9O1xuICB9XG5cbiAgJjpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBib3gtc2hhZG93OiBpbnNldCAwIDAgMCAycHggJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkfTtcbiAgfVxuXG4gICR7VG9vbGJhcn0ge1xuICAgIGJvcmRlci1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1c0ZvcklucHV0fTtcbiAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwO1xuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xuICAgIGJvcmRlci1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dH07XG4gIH1cblxuICAmOmZvY3VzLXdpdGhpbiB7XG4gICAgYm9yZGVyLWNvbG9yOiAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWR9O1xuICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0V2hlbkZvY3VzZWR9O1xuICAgICR7VG9vbGJhcn0ge1xuICAgICAgYm9yZGVyLWNvbG9yOiAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWR9O1xuICAgIH1cblxuICAgICR7RWRpdG9yQ29udGFpbmVyfSB7XG4gICAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgfVxuICB9XG5gO1xuIl19 */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__$2
});
const ToolbarRightControls = /*#__PURE__*/_styled__default["default"]("div", process.env.NODE_ENV === "production" ? {
  target: "e1sckae43"
} : {
  target: "e1sckae43",
  label: "ToolbarRightControls"
})(process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJpY2gtdGV4dC1ib2R5LnN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwRjhDIiwiZmlsZSI6InJpY2gtdGV4dC1ib2R5LnN0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB7IGRlc2lnblRva2VucyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuaW1wb3J0IHR5cGUgeyBUUmljaFRleHRFZGl0b3JCb2R5IH0gZnJvbSAnLi9yaWNoLXRleHQtYm9keSc7XG5cbnR5cGUgVFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzID0gUGljazxcbiAgVFJpY2hUZXh0RWRpdG9yQm9keSxcbiAgJ2hhc0Vycm9yJyB8ICdpc1JlYWRPbmx5JyB8ICdoYXNXYXJuaW5nJyB8ICdpc0Rpc2FibGVkJ1xuPjtcblxuY29uc3QgZ2V0Qm9yZGVyQ29sb3IgPSAoXG4gIHByb3BzOiBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMsXG4gIGRlZmF1bHRCb3JkZXJDb2xvcjogc3RyaW5nID0gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRcbikgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5EaXNhYmxlZDtcbiAgfVxuICBpZiAocHJvcHMuaGFzRXJyb3IpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRXJyb3I7XG4gIH1cbiAgaWYgKHByb3BzLmhhc1dhcm5pbmcpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuV2FybmluZztcbiAgfVxuICBpZiAocHJvcHMuaXNSZWFkT25seSkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5SZWFkb25seTtcbiAgfVxuICByZXR1cm4gZGVmYXVsdEJvcmRlckNvbG9yO1xufTtcblxuY29uc3QgZ2V0SW5wdXRCb3hTaGFkb3cgPSAoXG4gIHByb3BzOiBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMsXG4gIGRlZmF1bHRCb3hTaGFkb3c6IHN0cmluZyA9IGRlc2lnblRva2Vucy5zaGFkb3dGb3JJbnB1dFxuKSA9PiB7XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBib3gtc2hhZG93OiAke2Rlc2lnblRva2Vucy5zaGFkb3dGb3JJbnB1dFdoZW5FcnJvcn07XG4gICAgYDtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBib3gtc2hhZG93OiAke2Rlc2lnblRva2Vucy5zaGFkb3dGb3JJbnB1dFdoZW5XYXJuaW5nfTtcbiAgICBgO1xuICB9XG4gIHJldHVybiBjc3NgXG4gICAgYm94LXNoYWRvdzogJHtkZWZhdWx0Qm94U2hhZG93fTtcbiAgYDtcbn07XG5cbmNvbnN0IGdldFRleHRDb2xvciA9IChwcm9wczogVFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzKSA9PiB7XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRXJyb3J9O1xuICAgIGA7XG4gIH1cbiAgaWYgKHByb3BzLmhhc1dhcm5pbmcpIHtcbiAgICByZXR1cm4gY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlbldhcm5pbmd9O1xuICAgIGA7XG4gIH1cbiAgaWYgKHByb3BzLmlzRGlzYWJsZWQgfHwgcHJvcHMuaXNSZWFkT25seSkge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWR9O1xuICAgIGA7XG4gIH1cbiAgcmV0dXJuIGNzc2BcbiAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXR9O1xuICBgO1xufTtcblxuY29uc3QgZ2V0Q29udGFpbmVyQmFja2dyb3VuZENvbG9yID0gKHByb3BzOiBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLmlzRGlzYWJsZWQpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0V2hlbkRpc2FibGVkO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JJbnB1dFdoZW5SZWFkb25seTtcbiAgfVxuICByZXR1cm4gZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0O1xufTtcblxuZXhwb3J0IGNvbnN0IFRvb2xiYXJNYWluQ29udHJvbHMgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGZsZXg6IDE7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuXG4gID4gKiB7XG4gICAgbWFyZ2luLWxlZnQ6IDFweDtcbiAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IFRvb2xiYXJSaWdodENvbnRyb2xzID0gc3R5bGVkLmRpdmBgO1xuXG5leHBvcnQgY29uc3QgVG9vbGJhciA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgZm9udC1mYW1pbHk6ICR7ZGVzaWduVG9rZW5zLmZvbnRGYW1pbHlEZWZhdWx0fTtcbiAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzRm9ySW5wdXR9O1xuICBib3JkZXItYm90dG9tOiAwO1xuICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yUmljaFRleHRUb29sYmFyfTtcbiAgcGFkZGluZy1sZWZ0OiAke2Rlc2lnblRva2Vucy5wYWRkaW5nTGVmdEZvclJpY2hUZXh0VG9vbGJhcn07XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBhbGlnbi1jb250ZW50OiBzdHJldGNoO1xuXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAmOjphZnRlciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAke2Rlc2lnblRva2Vucy5zcGFjaW5nMjB9KTtcbiAgICBoZWlnaHQ6IDFweDtcbiAgICBiYWNrZ3JvdW5kOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWx9O1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgYm90dG9tOiAtMXB4O1xuICB9XG5cbiAgJjpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgfVxuYDtcblxuY29uc3QgcmVzZXQgPSAocHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcykgPT4gW1xuICBjc3NgXG4gICAgaDEsXG4gICAgaDIsXG4gICAgaDMsXG4gICAgaDQsXG4gICAgaDUsXG4gICAgaDYge1xuICAgICAgbWFyZ2luOiAwO1xuICAgIH1cbiAgICBwIHtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICAgIH1cbiAgYCxcbiAgcHJvcHMuaXNSZWFkT25seSAmJlxuICAgIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5SZWFkb25seX07XG4gICAgYCxcblxuICBwcm9wcy5pc0Rpc2FibGVkICYmXG4gICAgY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlbkRpc2FibGVkfTtcbiAgICBgLFxuXTtcblxuZXhwb3J0IGNvbnN0IEVkaXRvckNvbnRhaW5lciA9IHN0eWxlZC5kaXY8VFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzPmBcbiAgcGFkZGluZzogJHtkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvclJpY2hUZXh0RWRpdG9yQ29udGFpbmVyfTtcbiAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzRm9ySW5wdXR9O1xuICBmb250LWZhbWlseTogJHtkZXNpZ25Ub2tlbnMuZm9udEZhbWlseURlZmF1bHR9O1xuICBib3JkZXItY29sb3I6ICR7KHByb3BzKSA9PiBnZXRCb3JkZXJDb2xvcihwcm9wcyl9O1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gICR7cmVzZXR9XG4gICR7Z2V0VGV4dENvbG9yfVxuYDtcblxuZXhwb3J0IGNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXY8VFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzPmBcbiAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzRm9ySW5wdXR9O1xuICBib3JkZXI6IDFweCBzb2xpZCAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0fTtcbiAgdHJhbnNpdGlvbjogJHtkZXNpZ25Ub2tlbnMudHJhbnNpdGlvblN0YW5kYXJkfTtcbiAgcGFkZGluZzogJHtkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvclJpY2hUZXh0SW5wdXR9O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gZ2V0Q29udGFpbmVyQmFja2dyb3VuZENvbG9yKHByb3BzKX07XG4gICR7KHByb3BzKSA9PiBnZXRJbnB1dEJveFNoYWRvdyhwcm9wcyl9XG4gIGJvcmRlci1jb2xvcjogJHsocHJvcHMpID0+IGdldEJvcmRlckNvbG9yKHByb3BzKX07XG4gIHBvaW50ZXItZXZlbnRzOiAkeyhwcm9wcykgPT5cbiAgICBwcm9wcy5pc0Rpc2FibGVkIHx8IHByb3BzLmlzUmVhZE9ubHkgPyAnbm9uZScgOiAnaW5oZXJpdCd9O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJjpob3ZlciB7XG4gICAgJHsocHJvcHMpID0+XG4gICAgICBnZXRCb3JkZXJDb2xvcihwcm9wcywgZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuSG92ZXJlZCl9O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0V2hlbkhvdmVyZWR9O1xuICB9XG5cbiAgJjpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBib3gtc2hhZG93OiBpbnNldCAwIDAgMCAycHggJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkfTtcbiAgfVxuXG4gICR7VG9vbGJhcn0ge1xuICAgIGJvcmRlci1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1c0ZvcklucHV0fTtcbiAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwO1xuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xuICAgIGJvcmRlci1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dH07XG4gIH1cblxuICAmOmZvY3VzLXdpdGhpbiB7XG4gICAgYm9yZGVyLWNvbG9yOiAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWR9O1xuICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0V2hlbkZvY3VzZWR9O1xuICAgICR7VG9vbGJhcn0ge1xuICAgICAgYm9yZGVyLWNvbG9yOiAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWR9O1xuICAgIH1cblxuICAgICR7RWRpdG9yQ29udGFpbmVyfSB7XG4gICAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgfVxuICB9XG5gO1xuIl19 */");
const Toolbar = /*#__PURE__*/_styled__default["default"]("div", process.env.NODE_ENV === "production" ? {
  target: "e1sckae42"
} : {
  target: "e1sckae42",
  label: "Toolbar"
})("display:flex;flex-wrap:wrap;font-family:", designSystem.designTokens.fontFamilyDefault, ";border-radius:", designSystem.designTokens.borderRadiusForInput, ";border-bottom:0;padding:", designSystem.designTokens.paddingForRichTextToolbar, ";padding-left:", designSystem.designTokens.paddingLeftForRichTextToolbar, ";align-items:flex-start;align-content:stretch;position:relative;&::after{position:absolute;content:'';width:calc(100% - ", designSystem.designTokens.spacing20, ");height:1px;background:", designSystem.designTokens.colorNeutral, ";left:50%;transform:translateX(-50%);bottom:-1px;}&:focus{outline:none;}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJpY2gtdGV4dC1ib2R5LnN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0RmlDIiwiZmlsZSI6InJpY2gtdGV4dC1ib2R5LnN0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB7IGRlc2lnblRva2VucyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuaW1wb3J0IHR5cGUgeyBUUmljaFRleHRFZGl0b3JCb2R5IH0gZnJvbSAnLi9yaWNoLXRleHQtYm9keSc7XG5cbnR5cGUgVFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzID0gUGljazxcbiAgVFJpY2hUZXh0RWRpdG9yQm9keSxcbiAgJ2hhc0Vycm9yJyB8ICdpc1JlYWRPbmx5JyB8ICdoYXNXYXJuaW5nJyB8ICdpc0Rpc2FibGVkJ1xuPjtcblxuY29uc3QgZ2V0Qm9yZGVyQ29sb3IgPSAoXG4gIHByb3BzOiBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMsXG4gIGRlZmF1bHRCb3JkZXJDb2xvcjogc3RyaW5nID0gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRcbikgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5EaXNhYmxlZDtcbiAgfVxuICBpZiAocHJvcHMuaGFzRXJyb3IpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRXJyb3I7XG4gIH1cbiAgaWYgKHByb3BzLmhhc1dhcm5pbmcpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuV2FybmluZztcbiAgfVxuICBpZiAocHJvcHMuaXNSZWFkT25seSkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5SZWFkb25seTtcbiAgfVxuICByZXR1cm4gZGVmYXVsdEJvcmRlckNvbG9yO1xufTtcblxuY29uc3QgZ2V0SW5wdXRCb3hTaGFkb3cgPSAoXG4gIHByb3BzOiBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMsXG4gIGRlZmF1bHRCb3hTaGFkb3c6IHN0cmluZyA9IGRlc2lnblRva2Vucy5zaGFkb3dGb3JJbnB1dFxuKSA9PiB7XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBib3gtc2hhZG93OiAke2Rlc2lnblRva2Vucy5zaGFkb3dGb3JJbnB1dFdoZW5FcnJvcn07XG4gICAgYDtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBib3gtc2hhZG93OiAke2Rlc2lnblRva2Vucy5zaGFkb3dGb3JJbnB1dFdoZW5XYXJuaW5nfTtcbiAgICBgO1xuICB9XG4gIHJldHVybiBjc3NgXG4gICAgYm94LXNoYWRvdzogJHtkZWZhdWx0Qm94U2hhZG93fTtcbiAgYDtcbn07XG5cbmNvbnN0IGdldFRleHRDb2xvciA9IChwcm9wczogVFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzKSA9PiB7XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRXJyb3J9O1xuICAgIGA7XG4gIH1cbiAgaWYgKHByb3BzLmhhc1dhcm5pbmcpIHtcbiAgICByZXR1cm4gY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlbldhcm5pbmd9O1xuICAgIGA7XG4gIH1cbiAgaWYgKHByb3BzLmlzRGlzYWJsZWQgfHwgcHJvcHMuaXNSZWFkT25seSkge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWR9O1xuICAgIGA7XG4gIH1cbiAgcmV0dXJuIGNzc2BcbiAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXR9O1xuICBgO1xufTtcblxuY29uc3QgZ2V0Q29udGFpbmVyQmFja2dyb3VuZENvbG9yID0gKHByb3BzOiBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLmlzRGlzYWJsZWQpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0V2hlbkRpc2FibGVkO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JJbnB1dFdoZW5SZWFkb25seTtcbiAgfVxuICByZXR1cm4gZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0O1xufTtcblxuZXhwb3J0IGNvbnN0IFRvb2xiYXJNYWluQ29udHJvbHMgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGZsZXg6IDE7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuXG4gID4gKiB7XG4gICAgbWFyZ2luLWxlZnQ6IDFweDtcbiAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IFRvb2xiYXJSaWdodENvbnRyb2xzID0gc3R5bGVkLmRpdmBgO1xuXG5leHBvcnQgY29uc3QgVG9vbGJhciA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgZm9udC1mYW1pbHk6ICR7ZGVzaWduVG9rZW5zLmZvbnRGYW1pbHlEZWZhdWx0fTtcbiAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzRm9ySW5wdXR9O1xuICBib3JkZXItYm90dG9tOiAwO1xuICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yUmljaFRleHRUb29sYmFyfTtcbiAgcGFkZGluZy1sZWZ0OiAke2Rlc2lnblRva2Vucy5wYWRkaW5nTGVmdEZvclJpY2hUZXh0VG9vbGJhcn07XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBhbGlnbi1jb250ZW50OiBzdHJldGNoO1xuXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAmOjphZnRlciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAke2Rlc2lnblRva2Vucy5zcGFjaW5nMjB9KTtcbiAgICBoZWlnaHQ6IDFweDtcbiAgICBiYWNrZ3JvdW5kOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWx9O1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgYm90dG9tOiAtMXB4O1xuICB9XG5cbiAgJjpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgfVxuYDtcblxuY29uc3QgcmVzZXQgPSAocHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcykgPT4gW1xuICBjc3NgXG4gICAgaDEsXG4gICAgaDIsXG4gICAgaDMsXG4gICAgaDQsXG4gICAgaDUsXG4gICAgaDYge1xuICAgICAgbWFyZ2luOiAwO1xuICAgIH1cbiAgICBwIHtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICAgIH1cbiAgYCxcbiAgcHJvcHMuaXNSZWFkT25seSAmJlxuICAgIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5SZWFkb25seX07XG4gICAgYCxcblxuICBwcm9wcy5pc0Rpc2FibGVkICYmXG4gICAgY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlbkRpc2FibGVkfTtcbiAgICBgLFxuXTtcblxuZXhwb3J0IGNvbnN0IEVkaXRvckNvbnRhaW5lciA9IHN0eWxlZC5kaXY8VFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzPmBcbiAgcGFkZGluZzogJHtkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvclJpY2hUZXh0RWRpdG9yQ29udGFpbmVyfTtcbiAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzRm9ySW5wdXR9O1xuICBmb250LWZhbWlseTogJHtkZXNpZ25Ub2tlbnMuZm9udEZhbWlseURlZmF1bHR9O1xuICBib3JkZXItY29sb3I6ICR7KHByb3BzKSA9PiBnZXRCb3JkZXJDb2xvcihwcm9wcyl9O1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gICR7cmVzZXR9XG4gICR7Z2V0VGV4dENvbG9yfVxuYDtcblxuZXhwb3J0IGNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXY8VFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzPmBcbiAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzRm9ySW5wdXR9O1xuICBib3JkZXI6IDFweCBzb2xpZCAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0fTtcbiAgdHJhbnNpdGlvbjogJHtkZXNpZ25Ub2tlbnMudHJhbnNpdGlvblN0YW5kYXJkfTtcbiAgcGFkZGluZzogJHtkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvclJpY2hUZXh0SW5wdXR9O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gZ2V0Q29udGFpbmVyQmFja2dyb3VuZENvbG9yKHByb3BzKX07XG4gICR7KHByb3BzKSA9PiBnZXRJbnB1dEJveFNoYWRvdyhwcm9wcyl9XG4gIGJvcmRlci1jb2xvcjogJHsocHJvcHMpID0+IGdldEJvcmRlckNvbG9yKHByb3BzKX07XG4gIHBvaW50ZXItZXZlbnRzOiAkeyhwcm9wcykgPT5cbiAgICBwcm9wcy5pc0Rpc2FibGVkIHx8IHByb3BzLmlzUmVhZE9ubHkgPyAnbm9uZScgOiAnaW5oZXJpdCd9O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJjpob3ZlciB7XG4gICAgJHsocHJvcHMpID0+XG4gICAgICBnZXRCb3JkZXJDb2xvcihwcm9wcywgZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuSG92ZXJlZCl9O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0V2hlbkhvdmVyZWR9O1xuICB9XG5cbiAgJjpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBib3gtc2hhZG93OiBpbnNldCAwIDAgMCAycHggJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkfTtcbiAgfVxuXG4gICR7VG9vbGJhcn0ge1xuICAgIGJvcmRlci1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1c0ZvcklucHV0fTtcbiAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwO1xuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xuICAgIGJvcmRlci1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dH07XG4gIH1cblxuICAmOmZvY3VzLXdpdGhpbiB7XG4gICAgYm9yZGVyLWNvbG9yOiAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWR9O1xuICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0V2hlbkZvY3VzZWR9O1xuICAgICR7VG9vbGJhcn0ge1xuICAgICAgYm9yZGVyLWNvbG9yOiAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWR9O1xuICAgIH1cblxuICAgICR7RWRpdG9yQ29udGFpbmVyfSB7XG4gICAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgfVxuICB9XG5gO1xuIl19 */"));
var _ref$2 = process.env.NODE_ENV === "production" ? {
  name: "7g2mws",
  styles: "h1,h2,h3,h4,h5,h6{margin:0;}p{margin:0;line-height:22px;}"
} : {
  name: "ip66me-reset",
  styles: "h1,h2,h3,h4,h5,h6{margin:0;}p{margin:0;line-height:22px;};label:reset;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJpY2gtdGV4dC1ib2R5LnN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwSEsiLCJmaWxlIjoicmljaC10ZXh0LWJvZHkuc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5pbXBvcnQgdHlwZSB7IFRSaWNoVGV4dEVkaXRvckJvZHkgfSBmcm9tICcuL3JpY2gtdGV4dC1ib2R5JztcblxudHlwZSBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMgPSBQaWNrPFxuICBUUmljaFRleHRFZGl0b3JCb2R5LFxuICAnaGFzRXJyb3InIHwgJ2lzUmVhZE9ubHknIHwgJ2hhc1dhcm5pbmcnIHwgJ2lzRGlzYWJsZWQnXG4+O1xuXG5jb25zdCBnZXRCb3JkZXJDb2xvciA9IChcbiAgcHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcyxcbiAgZGVmYXVsdEJvcmRlckNvbG9yOiBzdHJpbmcgPSBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFxuKSA9PiB7XG4gIGlmIChwcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkRpc2FibGVkO1xuICB9XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5FcnJvcjtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIHJldHVybiBkZWZhdWx0Qm9yZGVyQ29sb3I7XG59O1xuXG5jb25zdCBnZXRJbnB1dEJveFNoYWRvdyA9IChcbiAgcHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcyxcbiAgZGVmYXVsdEJveFNoYWRvdzogc3RyaW5nID0gZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0XG4pID0+IHtcbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0V2hlbkVycm9yfTtcbiAgICBgO1xuICB9XG4gIGlmIChwcm9wcy5oYXNXYXJuaW5nKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0V2hlbldhcm5pbmd9O1xuICAgIGA7XG4gIH1cbiAgcmV0dXJuIGNzc2BcbiAgICBib3gtc2hhZG93OiAke2RlZmF1bHRCb3hTaGFkb3d9O1xuICBgO1xufTtcblxuY29uc3QgZ2V0VGV4dENvbG9yID0gKHByb3BzOiBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5FcnJvcn07XG4gICAgYDtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuV2FybmluZ307XG4gICAgYDtcbiAgfVxuICBpZiAocHJvcHMuaXNEaXNhYmxlZCB8fCBwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5EaXNhYmxlZH07XG4gICAgYDtcbiAgfVxuICByZXR1cm4gY3NzYFxuICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dH07XG4gIGA7XG59O1xuXG5jb25zdCBnZXRDb250YWluZXJCYWNrZ3JvdW5kQ29sb3IgPSAocHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcykgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWQ7XG4gIH1cbiAgaWYgKHByb3BzLmlzUmVhZE9ubHkpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIHJldHVybiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXQ7XG59O1xuXG5leHBvcnQgY29uc3QgVG9vbGJhck1haW5Db250cm9scyA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgZmxleDogMTtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG5cbiAgPiAqIHtcbiAgICBtYXJnaW4tbGVmdDogMXB4O1xuICB9XG5gO1xuXG5leHBvcnQgY29uc3QgVG9vbGJhclJpZ2h0Q29udHJvbHMgPSBzdHlsZWQuZGl2YGA7XG5cbmV4cG9ydCBjb25zdCBUb29sYmFyID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBmb250LWZhbWlseTogJHtkZXNpZ25Ub2tlbnMuZm9udEZhbWlseURlZmF1bHR9O1xuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGJvcmRlci1ib3R0b206IDA7XG4gIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JSaWNoVGV4dFRvb2xiYXJ9O1xuICBwYWRkaW5nLWxlZnQ6ICR7ZGVzaWduVG9rZW5zLnBhZGRpbmdMZWZ0Rm9yUmljaFRleHRUb29sYmFyfTtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGFsaWduLWNvbnRlbnQ6IHN0cmV0Y2g7XG5cbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICY6OmFmdGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgY29udGVudDogJyc7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcyMH0pO1xuICAgIGhlaWdodDogMXB4O1xuICAgIGJhY2tncm91bmQ6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbH07XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICBib3R0b206IC0xcHg7XG4gIH1cblxuICAmOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICB9XG5gO1xuXG5jb25zdCByZXNldCA9IChwcm9wczogVFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzKSA9PiBbXG4gIGNzc2BcbiAgICBoMSxcbiAgICBoMixcbiAgICBoMyxcbiAgICBoNCxcbiAgICBoNSxcbiAgICBoNiB7XG4gICAgICBtYXJnaW46IDA7XG4gICAgfVxuICAgIHAge1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gICAgfVxuICBgLFxuICBwcm9wcy5pc1JlYWRPbmx5ICYmXG4gICAgY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlblJlYWRvbmx5fTtcbiAgICBgLFxuXG4gIHByb3BzLmlzRGlzYWJsZWQgJiZcbiAgICBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWR9O1xuICAgIGAsXG5dO1xuXG5leHBvcnQgY29uc3QgRWRpdG9yQ29udGFpbmVyID0gc3R5bGVkLmRpdjxUUmljaFRleHRCb2R5U3R5bGVzUHJvcHM+YFxuICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yUmljaFRleHRFZGl0b3JDb250YWluZXJ9O1xuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGZvbnQtZmFtaWx5OiAke2Rlc2lnblRva2Vucy5mb250RmFtaWx5RGVmYXVsdH07XG4gIGJvcmRlci1jb2xvcjogJHsocHJvcHMpID0+IGdldEJvcmRlckNvbG9yKHByb3BzKX07XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgJHtyZXNldH1cbiAgJHtnZXRUZXh0Q29sb3J9XG5gO1xuXG5leHBvcnQgY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLmRpdjxUUmljaFRleHRCb2R5U3R5bGVzUHJvcHM+YFxuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXR9O1xuICB0cmFuc2l0aW9uOiAke2Rlc2lnblRva2Vucy50cmFuc2l0aW9uU3RhbmRhcmR9O1xuICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yUmljaFRleHRJbnB1dH07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBnZXRDb250YWluZXJCYWNrZ3JvdW5kQ29sb3IocHJvcHMpfTtcbiAgJHsocHJvcHMpID0+IGdldElucHV0Qm94U2hhZG93KHByb3BzKX1cbiAgYm9yZGVyLWNvbG9yOiAkeyhwcm9wcykgPT4gZ2V0Qm9yZGVyQ29sb3IocHJvcHMpfTtcbiAgcG9pbnRlci1ldmVudHM6ICR7KHByb3BzKSA9PlxuICAgIHByb3BzLmlzRGlzYWJsZWQgfHwgcHJvcHMuaXNSZWFkT25seSA/ICdub25lJyA6ICdpbmhlcml0J307XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAmOmhvdmVyIHtcbiAgICAkeyhwcm9wcykgPT5cbiAgICAgIGdldEJvcmRlckNvbG9yKHByb3BzLCBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Ib3ZlcmVkKX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXRXaGVuSG92ZXJlZH07XG4gIH1cblxuICAmOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDJweCAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWR9O1xuICB9XG5cbiAgJHtUb29sYmFyfSB7XG4gICAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzRm9ySW5wdXR9O1xuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLWNvbG9yOiAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0fTtcbiAgfVxuXG4gICY6Zm9jdXMtd2l0aGluIHtcbiAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgYm94LXNoYWRvdzogJHtkZXNpZ25Ub2tlbnMuc2hhZG93Rm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgJHtUb29sYmFyfSB7XG4gICAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgfVxuXG4gICAgJHtFZGl0b3JDb250YWluZXJ9IHtcbiAgICAgIGJvcmRlci1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkfTtcbiAgICB9XG4gIH1cbmA7XG4iXX0= */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__$2
};
const reset = props => [_ref$2, props.isReadOnly && /*#__PURE__*/react$1.css("color:", designSystem.designTokens.fontColorForInputWhenReadonly, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:reset;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJpY2gtdGV4dC1ib2R5LnN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5SU8iLCJmaWxlIjoicmljaC10ZXh0LWJvZHkuc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5pbXBvcnQgdHlwZSB7IFRSaWNoVGV4dEVkaXRvckJvZHkgfSBmcm9tICcuL3JpY2gtdGV4dC1ib2R5JztcblxudHlwZSBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMgPSBQaWNrPFxuICBUUmljaFRleHRFZGl0b3JCb2R5LFxuICAnaGFzRXJyb3InIHwgJ2lzUmVhZE9ubHknIHwgJ2hhc1dhcm5pbmcnIHwgJ2lzRGlzYWJsZWQnXG4+O1xuXG5jb25zdCBnZXRCb3JkZXJDb2xvciA9IChcbiAgcHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcyxcbiAgZGVmYXVsdEJvcmRlckNvbG9yOiBzdHJpbmcgPSBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFxuKSA9PiB7XG4gIGlmIChwcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkRpc2FibGVkO1xuICB9XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5FcnJvcjtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIHJldHVybiBkZWZhdWx0Qm9yZGVyQ29sb3I7XG59O1xuXG5jb25zdCBnZXRJbnB1dEJveFNoYWRvdyA9IChcbiAgcHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcyxcbiAgZGVmYXVsdEJveFNoYWRvdzogc3RyaW5nID0gZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0XG4pID0+IHtcbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0V2hlbkVycm9yfTtcbiAgICBgO1xuICB9XG4gIGlmIChwcm9wcy5oYXNXYXJuaW5nKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0V2hlbldhcm5pbmd9O1xuICAgIGA7XG4gIH1cbiAgcmV0dXJuIGNzc2BcbiAgICBib3gtc2hhZG93OiAke2RlZmF1bHRCb3hTaGFkb3d9O1xuICBgO1xufTtcblxuY29uc3QgZ2V0VGV4dENvbG9yID0gKHByb3BzOiBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5FcnJvcn07XG4gICAgYDtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuV2FybmluZ307XG4gICAgYDtcbiAgfVxuICBpZiAocHJvcHMuaXNEaXNhYmxlZCB8fCBwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5EaXNhYmxlZH07XG4gICAgYDtcbiAgfVxuICByZXR1cm4gY3NzYFxuICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dH07XG4gIGA7XG59O1xuXG5jb25zdCBnZXRDb250YWluZXJCYWNrZ3JvdW5kQ29sb3IgPSAocHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcykgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWQ7XG4gIH1cbiAgaWYgKHByb3BzLmlzUmVhZE9ubHkpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIHJldHVybiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXQ7XG59O1xuXG5leHBvcnQgY29uc3QgVG9vbGJhck1haW5Db250cm9scyA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgZmxleDogMTtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG5cbiAgPiAqIHtcbiAgICBtYXJnaW4tbGVmdDogMXB4O1xuICB9XG5gO1xuXG5leHBvcnQgY29uc3QgVG9vbGJhclJpZ2h0Q29udHJvbHMgPSBzdHlsZWQuZGl2YGA7XG5cbmV4cG9ydCBjb25zdCBUb29sYmFyID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBmb250LWZhbWlseTogJHtkZXNpZ25Ub2tlbnMuZm9udEZhbWlseURlZmF1bHR9O1xuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGJvcmRlci1ib3R0b206IDA7XG4gIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JSaWNoVGV4dFRvb2xiYXJ9O1xuICBwYWRkaW5nLWxlZnQ6ICR7ZGVzaWduVG9rZW5zLnBhZGRpbmdMZWZ0Rm9yUmljaFRleHRUb29sYmFyfTtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGFsaWduLWNvbnRlbnQ6IHN0cmV0Y2g7XG5cbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICY6OmFmdGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgY29udGVudDogJyc7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcyMH0pO1xuICAgIGhlaWdodDogMXB4O1xuICAgIGJhY2tncm91bmQ6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbH07XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICBib3R0b206IC0xcHg7XG4gIH1cblxuICAmOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICB9XG5gO1xuXG5jb25zdCByZXNldCA9IChwcm9wczogVFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzKSA9PiBbXG4gIGNzc2BcbiAgICBoMSxcbiAgICBoMixcbiAgICBoMyxcbiAgICBoNCxcbiAgICBoNSxcbiAgICBoNiB7XG4gICAgICBtYXJnaW46IDA7XG4gICAgfVxuICAgIHAge1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gICAgfVxuICBgLFxuICBwcm9wcy5pc1JlYWRPbmx5ICYmXG4gICAgY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlblJlYWRvbmx5fTtcbiAgICBgLFxuXG4gIHByb3BzLmlzRGlzYWJsZWQgJiZcbiAgICBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWR9O1xuICAgIGAsXG5dO1xuXG5leHBvcnQgY29uc3QgRWRpdG9yQ29udGFpbmVyID0gc3R5bGVkLmRpdjxUUmljaFRleHRCb2R5U3R5bGVzUHJvcHM+YFxuICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yUmljaFRleHRFZGl0b3JDb250YWluZXJ9O1xuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGZvbnQtZmFtaWx5OiAke2Rlc2lnblRva2Vucy5mb250RmFtaWx5RGVmYXVsdH07XG4gIGJvcmRlci1jb2xvcjogJHsocHJvcHMpID0+IGdldEJvcmRlckNvbG9yKHByb3BzKX07XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgJHtyZXNldH1cbiAgJHtnZXRUZXh0Q29sb3J9XG5gO1xuXG5leHBvcnQgY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLmRpdjxUUmljaFRleHRCb2R5U3R5bGVzUHJvcHM+YFxuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXR9O1xuICB0cmFuc2l0aW9uOiAke2Rlc2lnblRva2Vucy50cmFuc2l0aW9uU3RhbmRhcmR9O1xuICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yUmljaFRleHRJbnB1dH07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBnZXRDb250YWluZXJCYWNrZ3JvdW5kQ29sb3IocHJvcHMpfTtcbiAgJHsocHJvcHMpID0+IGdldElucHV0Qm94U2hhZG93KHByb3BzKX1cbiAgYm9yZGVyLWNvbG9yOiAkeyhwcm9wcykgPT4gZ2V0Qm9yZGVyQ29sb3IocHJvcHMpfTtcbiAgcG9pbnRlci1ldmVudHM6ICR7KHByb3BzKSA9PlxuICAgIHByb3BzLmlzRGlzYWJsZWQgfHwgcHJvcHMuaXNSZWFkT25seSA/ICdub25lJyA6ICdpbmhlcml0J307XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAmOmhvdmVyIHtcbiAgICAkeyhwcm9wcykgPT5cbiAgICAgIGdldEJvcmRlckNvbG9yKHByb3BzLCBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Ib3ZlcmVkKX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXRXaGVuSG92ZXJlZH07XG4gIH1cblxuICAmOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDJweCAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWR9O1xuICB9XG5cbiAgJHtUb29sYmFyfSB7XG4gICAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzRm9ySW5wdXR9O1xuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLWNvbG9yOiAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0fTtcbiAgfVxuXG4gICY6Zm9jdXMtd2l0aGluIHtcbiAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgYm94LXNoYWRvdzogJHtkZXNpZ25Ub2tlbnMuc2hhZG93Rm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgJHtUb29sYmFyfSB7XG4gICAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgfVxuXG4gICAgJHtFZGl0b3JDb250YWluZXJ9IHtcbiAgICAgIGJvcmRlci1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkfTtcbiAgICB9XG4gIH1cbmA7XG4iXX0= */"), props.isDisabled && /*#__PURE__*/react$1.css("color:", designSystem.designTokens.fontColorForInputWhenDisabled, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:reset;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJpY2gtdGV4dC1ib2R5LnN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE4SU8iLCJmaWxlIjoicmljaC10ZXh0LWJvZHkuc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5pbXBvcnQgdHlwZSB7IFRSaWNoVGV4dEVkaXRvckJvZHkgfSBmcm9tICcuL3JpY2gtdGV4dC1ib2R5JztcblxudHlwZSBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMgPSBQaWNrPFxuICBUUmljaFRleHRFZGl0b3JCb2R5LFxuICAnaGFzRXJyb3InIHwgJ2lzUmVhZE9ubHknIHwgJ2hhc1dhcm5pbmcnIHwgJ2lzRGlzYWJsZWQnXG4+O1xuXG5jb25zdCBnZXRCb3JkZXJDb2xvciA9IChcbiAgcHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcyxcbiAgZGVmYXVsdEJvcmRlckNvbG9yOiBzdHJpbmcgPSBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFxuKSA9PiB7XG4gIGlmIChwcm9wcy5pc0Rpc2FibGVkKSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkRpc2FibGVkO1xuICB9XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5FcnJvcjtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5XYXJuaW5nO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIHJldHVybiBkZWZhdWx0Qm9yZGVyQ29sb3I7XG59O1xuXG5jb25zdCBnZXRJbnB1dEJveFNoYWRvdyA9IChcbiAgcHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcyxcbiAgZGVmYXVsdEJveFNoYWRvdzogc3RyaW5nID0gZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0XG4pID0+IHtcbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0V2hlbkVycm9yfTtcbiAgICBgO1xuICB9XG4gIGlmIChwcm9wcy5oYXNXYXJuaW5nKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0V2hlbldhcm5pbmd9O1xuICAgIGA7XG4gIH1cbiAgcmV0dXJuIGNzc2BcbiAgICBib3gtc2hhZG93OiAke2RlZmF1bHRCb3hTaGFkb3d9O1xuICBgO1xufTtcblxuY29uc3QgZ2V0VGV4dENvbG9yID0gKHByb3BzOiBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLmhhc0Vycm9yKSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5FcnJvcn07XG4gICAgYDtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuV2FybmluZ307XG4gICAgYDtcbiAgfVxuICBpZiAocHJvcHMuaXNEaXNhYmxlZCB8fCBwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5EaXNhYmxlZH07XG4gICAgYDtcbiAgfVxuICByZXR1cm4gY3NzYFxuICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dH07XG4gIGA7XG59O1xuXG5jb25zdCBnZXRDb250YWluZXJCYWNrZ3JvdW5kQ29sb3IgPSAocHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcykgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWQ7XG4gIH1cbiAgaWYgKHByb3BzLmlzUmVhZE9ubHkpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0V2hlblJlYWRvbmx5O1xuICB9XG4gIHJldHVybiBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXQ7XG59O1xuXG5leHBvcnQgY29uc3QgVG9vbGJhck1haW5Db250cm9scyA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgZmxleDogMTtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG5cbiAgPiAqIHtcbiAgICBtYXJnaW4tbGVmdDogMXB4O1xuICB9XG5gO1xuXG5leHBvcnQgY29uc3QgVG9vbGJhclJpZ2h0Q29udHJvbHMgPSBzdHlsZWQuZGl2YGA7XG5cbmV4cG9ydCBjb25zdCBUb29sYmFyID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBmb250LWZhbWlseTogJHtkZXNpZ25Ub2tlbnMuZm9udEZhbWlseURlZmF1bHR9O1xuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGJvcmRlci1ib3R0b206IDA7XG4gIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JSaWNoVGV4dFRvb2xiYXJ9O1xuICBwYWRkaW5nLWxlZnQ6ICR7ZGVzaWduVG9rZW5zLnBhZGRpbmdMZWZ0Rm9yUmljaFRleHRUb29sYmFyfTtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGFsaWduLWNvbnRlbnQ6IHN0cmV0Y2g7XG5cbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICY6OmFmdGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgY29udGVudDogJyc7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcyMH0pO1xuICAgIGhlaWdodDogMXB4O1xuICAgIGJhY2tncm91bmQ6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbH07XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICBib3R0b206IC0xcHg7XG4gIH1cblxuICAmOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICB9XG5gO1xuXG5jb25zdCByZXNldCA9IChwcm9wczogVFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzKSA9PiBbXG4gIGNzc2BcbiAgICBoMSxcbiAgICBoMixcbiAgICBoMyxcbiAgICBoNCxcbiAgICBoNSxcbiAgICBoNiB7XG4gICAgICBtYXJnaW46IDA7XG4gICAgfVxuICAgIHAge1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gICAgfVxuICBgLFxuICBwcm9wcy5pc1JlYWRPbmx5ICYmXG4gICAgY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlblJlYWRvbmx5fTtcbiAgICBgLFxuXG4gIHByb3BzLmlzRGlzYWJsZWQgJiZcbiAgICBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWR9O1xuICAgIGAsXG5dO1xuXG5leHBvcnQgY29uc3QgRWRpdG9yQ29udGFpbmVyID0gc3R5bGVkLmRpdjxUUmljaFRleHRCb2R5U3R5bGVzUHJvcHM+YFxuICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yUmljaFRleHRFZGl0b3JDb250YWluZXJ9O1xuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGZvbnQtZmFtaWx5OiAke2Rlc2lnblRva2Vucy5mb250RmFtaWx5RGVmYXVsdH07XG4gIGJvcmRlci1jb2xvcjogJHsocHJvcHMpID0+IGdldEJvcmRlckNvbG9yKHByb3BzKX07XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgJHtyZXNldH1cbiAgJHtnZXRUZXh0Q29sb3J9XG5gO1xuXG5leHBvcnQgY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLmRpdjxUUmljaFRleHRCb2R5U3R5bGVzUHJvcHM+YFxuICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXNGb3JJbnB1dH07XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXR9O1xuICB0cmFuc2l0aW9uOiAke2Rlc2lnblRva2Vucy50cmFuc2l0aW9uU3RhbmRhcmR9O1xuICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yUmljaFRleHRJbnB1dH07XG4gIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBnZXRDb250YWluZXJCYWNrZ3JvdW5kQ29sb3IocHJvcHMpfTtcbiAgJHsocHJvcHMpID0+IGdldElucHV0Qm94U2hhZG93KHByb3BzKX1cbiAgYm9yZGVyLWNvbG9yOiAkeyhwcm9wcykgPT4gZ2V0Qm9yZGVyQ29sb3IocHJvcHMpfTtcbiAgcG9pbnRlci1ldmVudHM6ICR7KHByb3BzKSA9PlxuICAgIHByb3BzLmlzRGlzYWJsZWQgfHwgcHJvcHMuaXNSZWFkT25seSA/ICdub25lJyA6ICdpbmhlcml0J307XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAmOmhvdmVyIHtcbiAgICAkeyhwcm9wcykgPT5cbiAgICAgIGdldEJvcmRlckNvbG9yKHByb3BzLCBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Ib3ZlcmVkKX07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXRXaGVuSG92ZXJlZH07XG4gIH1cblxuICAmOmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDJweCAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWR9O1xuICB9XG5cbiAgJHtUb29sYmFyfSB7XG4gICAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzRm9ySW5wdXR9O1xuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLWNvbG9yOiAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0fTtcbiAgfVxuXG4gICY6Zm9jdXMtd2l0aGluIHtcbiAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgYm94LXNoYWRvdzogJHtkZXNpZ25Ub2tlbnMuc2hhZG93Rm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgJHtUb29sYmFyfSB7XG4gICAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgfVxuXG4gICAgJHtFZGl0b3JDb250YWluZXJ9IHtcbiAgICAgIGJvcmRlci1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkfTtcbiAgICB9XG4gIH1cbmA7XG4iXX0= */")];
const EditorContainer = /*#__PURE__*/_styled__default["default"]("div", process.env.NODE_ENV === "production" ? {
  target: "e1sckae41"
} : {
  target: "e1sckae41",
  label: "EditorContainer"
})("padding:", designSystem.designTokens.paddingForRichTextEditorContainer, ";border-radius:", designSystem.designTokens.borderRadiusForInput, ";font-family:", designSystem.designTokens.fontFamilyDefault, ";border-color:", props => getBorderColor(props), ";overflow-y:scroll;", reset, " ", getTextColor, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJpY2gtdGV4dC1ib2R5LnN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtSm1FIiwiZmlsZSI6InJpY2gtdGV4dC1ib2R5LnN0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB7IGRlc2lnblRva2VucyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuaW1wb3J0IHR5cGUgeyBUUmljaFRleHRFZGl0b3JCb2R5IH0gZnJvbSAnLi9yaWNoLXRleHQtYm9keSc7XG5cbnR5cGUgVFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzID0gUGljazxcbiAgVFJpY2hUZXh0RWRpdG9yQm9keSxcbiAgJ2hhc0Vycm9yJyB8ICdpc1JlYWRPbmx5JyB8ICdoYXNXYXJuaW5nJyB8ICdpc0Rpc2FibGVkJ1xuPjtcblxuY29uc3QgZ2V0Qm9yZGVyQ29sb3IgPSAoXG4gIHByb3BzOiBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMsXG4gIGRlZmF1bHRCb3JkZXJDb2xvcjogc3RyaW5nID0gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRcbikgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5EaXNhYmxlZDtcbiAgfVxuICBpZiAocHJvcHMuaGFzRXJyb3IpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRXJyb3I7XG4gIH1cbiAgaWYgKHByb3BzLmhhc1dhcm5pbmcpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuV2FybmluZztcbiAgfVxuICBpZiAocHJvcHMuaXNSZWFkT25seSkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5SZWFkb25seTtcbiAgfVxuICByZXR1cm4gZGVmYXVsdEJvcmRlckNvbG9yO1xufTtcblxuY29uc3QgZ2V0SW5wdXRCb3hTaGFkb3cgPSAoXG4gIHByb3BzOiBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMsXG4gIGRlZmF1bHRCb3hTaGFkb3c6IHN0cmluZyA9IGRlc2lnblRva2Vucy5zaGFkb3dGb3JJbnB1dFxuKSA9PiB7XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBib3gtc2hhZG93OiAke2Rlc2lnblRva2Vucy5zaGFkb3dGb3JJbnB1dFdoZW5FcnJvcn07XG4gICAgYDtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBib3gtc2hhZG93OiAke2Rlc2lnblRva2Vucy5zaGFkb3dGb3JJbnB1dFdoZW5XYXJuaW5nfTtcbiAgICBgO1xuICB9XG4gIHJldHVybiBjc3NgXG4gICAgYm94LXNoYWRvdzogJHtkZWZhdWx0Qm94U2hhZG93fTtcbiAgYDtcbn07XG5cbmNvbnN0IGdldFRleHRDb2xvciA9IChwcm9wczogVFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzKSA9PiB7XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRXJyb3J9O1xuICAgIGA7XG4gIH1cbiAgaWYgKHByb3BzLmhhc1dhcm5pbmcpIHtcbiAgICByZXR1cm4gY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlbldhcm5pbmd9O1xuICAgIGA7XG4gIH1cbiAgaWYgKHByb3BzLmlzRGlzYWJsZWQgfHwgcHJvcHMuaXNSZWFkT25seSkge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWR9O1xuICAgIGA7XG4gIH1cbiAgcmV0dXJuIGNzc2BcbiAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXR9O1xuICBgO1xufTtcblxuY29uc3QgZ2V0Q29udGFpbmVyQmFja2dyb3VuZENvbG9yID0gKHByb3BzOiBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLmlzRGlzYWJsZWQpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0V2hlbkRpc2FibGVkO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JJbnB1dFdoZW5SZWFkb25seTtcbiAgfVxuICByZXR1cm4gZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0O1xufTtcblxuZXhwb3J0IGNvbnN0IFRvb2xiYXJNYWluQ29udHJvbHMgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGZsZXg6IDE7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuXG4gID4gKiB7XG4gICAgbWFyZ2luLWxlZnQ6IDFweDtcbiAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IFRvb2xiYXJSaWdodENvbnRyb2xzID0gc3R5bGVkLmRpdmBgO1xuXG5leHBvcnQgY29uc3QgVG9vbGJhciA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgZm9udC1mYW1pbHk6ICR7ZGVzaWduVG9rZW5zLmZvbnRGYW1pbHlEZWZhdWx0fTtcbiAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzRm9ySW5wdXR9O1xuICBib3JkZXItYm90dG9tOiAwO1xuICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yUmljaFRleHRUb29sYmFyfTtcbiAgcGFkZGluZy1sZWZ0OiAke2Rlc2lnblRva2Vucy5wYWRkaW5nTGVmdEZvclJpY2hUZXh0VG9vbGJhcn07XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBhbGlnbi1jb250ZW50OiBzdHJldGNoO1xuXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAmOjphZnRlciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAke2Rlc2lnblRva2Vucy5zcGFjaW5nMjB9KTtcbiAgICBoZWlnaHQ6IDFweDtcbiAgICBiYWNrZ3JvdW5kOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWx9O1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgYm90dG9tOiAtMXB4O1xuICB9XG5cbiAgJjpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgfVxuYDtcblxuY29uc3QgcmVzZXQgPSAocHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcykgPT4gW1xuICBjc3NgXG4gICAgaDEsXG4gICAgaDIsXG4gICAgaDMsXG4gICAgaDQsXG4gICAgaDUsXG4gICAgaDYge1xuICAgICAgbWFyZ2luOiAwO1xuICAgIH1cbiAgICBwIHtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICAgIH1cbiAgYCxcbiAgcHJvcHMuaXNSZWFkT25seSAmJlxuICAgIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5SZWFkb25seX07XG4gICAgYCxcblxuICBwcm9wcy5pc0Rpc2FibGVkICYmXG4gICAgY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlbkRpc2FibGVkfTtcbiAgICBgLFxuXTtcblxuZXhwb3J0IGNvbnN0IEVkaXRvckNvbnRhaW5lciA9IHN0eWxlZC5kaXY8VFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzPmBcbiAgcGFkZGluZzogJHtkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvclJpY2hUZXh0RWRpdG9yQ29udGFpbmVyfTtcbiAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzRm9ySW5wdXR9O1xuICBmb250LWZhbWlseTogJHtkZXNpZ25Ub2tlbnMuZm9udEZhbWlseURlZmF1bHR9O1xuICBib3JkZXItY29sb3I6ICR7KHByb3BzKSA9PiBnZXRCb3JkZXJDb2xvcihwcm9wcyl9O1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gICR7cmVzZXR9XG4gICR7Z2V0VGV4dENvbG9yfVxuYDtcblxuZXhwb3J0IGNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXY8VFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzPmBcbiAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzRm9ySW5wdXR9O1xuICBib3JkZXI6IDFweCBzb2xpZCAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0fTtcbiAgdHJhbnNpdGlvbjogJHtkZXNpZ25Ub2tlbnMudHJhbnNpdGlvblN0YW5kYXJkfTtcbiAgcGFkZGluZzogJHtkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvclJpY2hUZXh0SW5wdXR9O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gZ2V0Q29udGFpbmVyQmFja2dyb3VuZENvbG9yKHByb3BzKX07XG4gICR7KHByb3BzKSA9PiBnZXRJbnB1dEJveFNoYWRvdyhwcm9wcyl9XG4gIGJvcmRlci1jb2xvcjogJHsocHJvcHMpID0+IGdldEJvcmRlckNvbG9yKHByb3BzKX07XG4gIHBvaW50ZXItZXZlbnRzOiAkeyhwcm9wcykgPT5cbiAgICBwcm9wcy5pc0Rpc2FibGVkIHx8IHByb3BzLmlzUmVhZE9ubHkgPyAnbm9uZScgOiAnaW5oZXJpdCd9O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJjpob3ZlciB7XG4gICAgJHsocHJvcHMpID0+XG4gICAgICBnZXRCb3JkZXJDb2xvcihwcm9wcywgZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuSG92ZXJlZCl9O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0V2hlbkhvdmVyZWR9O1xuICB9XG5cbiAgJjpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBib3gtc2hhZG93OiBpbnNldCAwIDAgMCAycHggJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkfTtcbiAgfVxuXG4gICR7VG9vbGJhcn0ge1xuICAgIGJvcmRlci1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1c0ZvcklucHV0fTtcbiAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwO1xuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xuICAgIGJvcmRlci1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dH07XG4gIH1cblxuICAmOmZvY3VzLXdpdGhpbiB7XG4gICAgYm9yZGVyLWNvbG9yOiAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWR9O1xuICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0V2hlbkZvY3VzZWR9O1xuICAgICR7VG9vbGJhcn0ge1xuICAgICAgYm9yZGVyLWNvbG9yOiAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWR9O1xuICAgIH1cblxuICAgICR7RWRpdG9yQ29udGFpbmVyfSB7XG4gICAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgfVxuICB9XG5gO1xuIl19 */"));
const Container = /*#__PURE__*/_styled__default["default"]("div", process.env.NODE_ENV === "production" ? {
  target: "e1sckae40"
} : {
  target: "e1sckae40",
  label: "Container"
})("border-radius:", designSystem.designTokens.borderRadiusForInput, ";border:1px solid ", designSystem.designTokens.borderColorForInput, ";transition:", designSystem.designTokens.transitionStandard, ";padding:", designSystem.designTokens.paddingForRichTextInput, ";background-color:", props => getContainerBackgroundColor(props), ";", props => getInputBoxShadow(props), " border-color:", props => getBorderColor(props), ";pointer-events:", props => props.isDisabled || props.isReadOnly ? 'none' : 'inherit', ";position:relative;&:hover{", props => getBorderColor(props, designSystem.designTokens.borderColorForInputWhenHovered), ";background-color:", designSystem.designTokens.backgroundColorForInputWhenHovered, ";}&:focus{outline:none;box-shadow:inset 0 0 0 2px ", designSystem.designTokens.borderColorForInputWhenFocused, ";}", Toolbar, "{border-radius:", designSystem.designTokens.borderRadiusForInput, ";border-bottom-left-radius:0;border-bottom-right-radius:0;border-color:", designSystem.designTokens.borderColorForInput, ";}&:focus-within{border-color:", designSystem.designTokens.borderColorForInputWhenFocused, ";box-shadow:", designSystem.designTokens.shadowForInputWhenFocused, ";", Toolbar, "{border-color:", designSystem.designTokens.borderColorForInputWhenFocused, ";}", EditorContainer, "{border-color:", designSystem.designTokens.borderColorForInputWhenFocused, ";}}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJpY2gtdGV4dC1ib2R5LnN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE2SjZEIiwiZmlsZSI6InJpY2gtdGV4dC1ib2R5LnN0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB7IGRlc2lnblRva2VucyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuaW1wb3J0IHR5cGUgeyBUUmljaFRleHRFZGl0b3JCb2R5IH0gZnJvbSAnLi9yaWNoLXRleHQtYm9keSc7XG5cbnR5cGUgVFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzID0gUGljazxcbiAgVFJpY2hUZXh0RWRpdG9yQm9keSxcbiAgJ2hhc0Vycm9yJyB8ICdpc1JlYWRPbmx5JyB8ICdoYXNXYXJuaW5nJyB8ICdpc0Rpc2FibGVkJ1xuPjtcblxuY29uc3QgZ2V0Qm9yZGVyQ29sb3IgPSAoXG4gIHByb3BzOiBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMsXG4gIGRlZmF1bHRCb3JkZXJDb2xvcjogc3RyaW5nID0gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRcbikgPT4ge1xuICBpZiAocHJvcHMuaXNEaXNhYmxlZCkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5EaXNhYmxlZDtcbiAgfVxuICBpZiAocHJvcHMuaGFzRXJyb3IpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRXJyb3I7XG4gIH1cbiAgaWYgKHByb3BzLmhhc1dhcm5pbmcpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuV2FybmluZztcbiAgfVxuICBpZiAocHJvcHMuaXNSZWFkT25seSkge1xuICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5SZWFkb25seTtcbiAgfVxuICByZXR1cm4gZGVmYXVsdEJvcmRlckNvbG9yO1xufTtcblxuY29uc3QgZ2V0SW5wdXRCb3hTaGFkb3cgPSAoXG4gIHByb3BzOiBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMsXG4gIGRlZmF1bHRCb3hTaGFkb3c6IHN0cmluZyA9IGRlc2lnblRva2Vucy5zaGFkb3dGb3JJbnB1dFxuKSA9PiB7XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBib3gtc2hhZG93OiAke2Rlc2lnblRva2Vucy5zaGFkb3dGb3JJbnB1dFdoZW5FcnJvcn07XG4gICAgYDtcbiAgfVxuICBpZiAocHJvcHMuaGFzV2FybmluZykge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBib3gtc2hhZG93OiAke2Rlc2lnblRva2Vucy5zaGFkb3dGb3JJbnB1dFdoZW5XYXJuaW5nfTtcbiAgICBgO1xuICB9XG4gIHJldHVybiBjc3NgXG4gICAgYm94LXNoYWRvdzogJHtkZWZhdWx0Qm94U2hhZG93fTtcbiAgYDtcbn07XG5cbmNvbnN0IGdldFRleHRDb2xvciA9IChwcm9wczogVFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzKSA9PiB7XG4gIGlmIChwcm9wcy5oYXNFcnJvcikge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRXJyb3J9O1xuICAgIGA7XG4gIH1cbiAgaWYgKHByb3BzLmhhc1dhcm5pbmcpIHtcbiAgICByZXR1cm4gY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlbldhcm5pbmd9O1xuICAgIGA7XG4gIH1cbiAgaWYgKHByb3BzLmlzRGlzYWJsZWQgfHwgcHJvcHMuaXNSZWFkT25seSkge1xuICAgIHJldHVybiBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXRXaGVuRGlzYWJsZWR9O1xuICAgIGA7XG4gIH1cbiAgcmV0dXJuIGNzc2BcbiAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuZm9udENvbG9yRm9ySW5wdXR9O1xuICBgO1xufTtcblxuY29uc3QgZ2V0Q29udGFpbmVyQmFja2dyb3VuZENvbG9yID0gKHByb3BzOiBUUmljaFRleHRCb2R5U3R5bGVzUHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLmlzRGlzYWJsZWQpIHtcbiAgICByZXR1cm4gZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0V2hlbkRpc2FibGVkO1xuICB9XG4gIGlmIChwcm9wcy5pc1JlYWRPbmx5KSB7XG4gICAgcmV0dXJuIGRlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JJbnB1dFdoZW5SZWFkb25seTtcbiAgfVxuICByZXR1cm4gZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0O1xufTtcblxuZXhwb3J0IGNvbnN0IFRvb2xiYXJNYWluQ29udHJvbHMgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGZsZXg6IDE7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuXG4gID4gKiB7XG4gICAgbWFyZ2luLWxlZnQ6IDFweDtcbiAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IFRvb2xiYXJSaWdodENvbnRyb2xzID0gc3R5bGVkLmRpdmBgO1xuXG5leHBvcnQgY29uc3QgVG9vbGJhciA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgZm9udC1mYW1pbHk6ICR7ZGVzaWduVG9rZW5zLmZvbnRGYW1pbHlEZWZhdWx0fTtcbiAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzRm9ySW5wdXR9O1xuICBib3JkZXItYm90dG9tOiAwO1xuICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yUmljaFRleHRUb29sYmFyfTtcbiAgcGFkZGluZy1sZWZ0OiAke2Rlc2lnblRva2Vucy5wYWRkaW5nTGVmdEZvclJpY2hUZXh0VG9vbGJhcn07XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBhbGlnbi1jb250ZW50OiBzdHJldGNoO1xuXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuICAmOjphZnRlciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAke2Rlc2lnblRva2Vucy5zcGFjaW5nMjB9KTtcbiAgICBoZWlnaHQ6IDFweDtcbiAgICBiYWNrZ3JvdW5kOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWx9O1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgYm90dG9tOiAtMXB4O1xuICB9XG5cbiAgJjpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgfVxuYDtcblxuY29uc3QgcmVzZXQgPSAocHJvcHM6IFRSaWNoVGV4dEJvZHlTdHlsZXNQcm9wcykgPT4gW1xuICBjc3NgXG4gICAgaDEsXG4gICAgaDIsXG4gICAgaDMsXG4gICAgaDQsXG4gICAgaDUsXG4gICAgaDYge1xuICAgICAgbWFyZ2luOiAwO1xuICAgIH1cbiAgICBwIHtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICAgIH1cbiAgYCxcbiAgcHJvcHMuaXNSZWFkT25seSAmJlxuICAgIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5mb250Q29sb3JGb3JJbnB1dFdoZW5SZWFkb25seX07XG4gICAgYCxcblxuICBwcm9wcy5pc0Rpc2FibGVkICYmXG4gICAgY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmZvbnRDb2xvckZvcklucHV0V2hlbkRpc2FibGVkfTtcbiAgICBgLFxuXTtcblxuZXhwb3J0IGNvbnN0IEVkaXRvckNvbnRhaW5lciA9IHN0eWxlZC5kaXY8VFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzPmBcbiAgcGFkZGluZzogJHtkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvclJpY2hUZXh0RWRpdG9yQ29udGFpbmVyfTtcbiAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzRm9ySW5wdXR9O1xuICBmb250LWZhbWlseTogJHtkZXNpZ25Ub2tlbnMuZm9udEZhbWlseURlZmF1bHR9O1xuICBib3JkZXItY29sb3I6ICR7KHByb3BzKSA9PiBnZXRCb3JkZXJDb2xvcihwcm9wcyl9O1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gICR7cmVzZXR9XG4gICR7Z2V0VGV4dENvbG9yfVxuYDtcblxuZXhwb3J0IGNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXY8VFJpY2hUZXh0Qm9keVN0eWxlc1Byb3BzPmBcbiAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzRm9ySW5wdXR9O1xuICBib3JkZXI6IDFweCBzb2xpZCAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0fTtcbiAgdHJhbnNpdGlvbjogJHtkZXNpZ25Ub2tlbnMudHJhbnNpdGlvblN0YW5kYXJkfTtcbiAgcGFkZGluZzogJHtkZXNpZ25Ub2tlbnMucGFkZGluZ0ZvclJpY2hUZXh0SW5wdXR9O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT4gZ2V0Q29udGFpbmVyQmFja2dyb3VuZENvbG9yKHByb3BzKX07XG4gICR7KHByb3BzKSA9PiBnZXRJbnB1dEJveFNoYWRvdyhwcm9wcyl9XG4gIGJvcmRlci1jb2xvcjogJHsocHJvcHMpID0+IGdldEJvcmRlckNvbG9yKHByb3BzKX07XG4gIHBvaW50ZXItZXZlbnRzOiAkeyhwcm9wcykgPT5cbiAgICBwcm9wcy5pc0Rpc2FibGVkIHx8IHByb3BzLmlzUmVhZE9ubHkgPyAnbm9uZScgOiAnaW5oZXJpdCd9O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgJjpob3ZlciB7XG4gICAgJHsocHJvcHMpID0+XG4gICAgICBnZXRCb3JkZXJDb2xvcihwcm9wcywgZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuSG92ZXJlZCl9O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvcklucHV0V2hlbkhvdmVyZWR9O1xuICB9XG5cbiAgJjpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBib3gtc2hhZG93OiBpbnNldCAwIDAgMCAycHggJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dFdoZW5Gb2N1c2VkfTtcbiAgfVxuXG4gICR7VG9vbGJhcn0ge1xuICAgIGJvcmRlci1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1c0ZvcklucHV0fTtcbiAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwO1xuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xuICAgIGJvcmRlci1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyQ29sb3JGb3JJbnB1dH07XG4gIH1cblxuICAmOmZvY3VzLXdpdGhpbiB7XG4gICAgYm9yZGVyLWNvbG9yOiAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWR9O1xuICAgIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLnNoYWRvd0ZvcklucHV0V2hlbkZvY3VzZWR9O1xuICAgICR7VG9vbGJhcn0ge1xuICAgICAgYm9yZGVyLWNvbG9yOiAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvcklucHV0V2hlbkZvY3VzZWR9O1xuICAgIH1cblxuICAgICR7RWRpdG9yQ29udGFpbmVyfSB7XG4gICAgICBib3JkZXItY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9ySW5wdXRXaGVuRm9jdXNlZH07XG4gICAgfVxuICB9XG5gO1xuIl19 */"));

function ownKeys$3(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$3(target) { for (var i = 1; i < arguments.length; i++) { var _context, _context2; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context = ownKeys$3(Object(source), !0)).call(_context, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context2 = ownKeys$3(Object(source))).call(_context2, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const propsToOmit = ['isActive', 'label', 'isDisabled', 'isReadOnly'];
function getFillColor(props) {
  if (props.isActive) return designSystem.designTokens.colorSurface;
  return designSystem.designTokens.colorSolid;
}
const RichTextBodyButton = props => {
  const restOfProps = omit__default["default"](props, propsToOmit);
  return jsxRuntime.jsx("button", _objectSpread$3(_objectSpread$3({}, restOfProps), {}, {
    type: "button",
    tabIndex: -1,
    "aria-disabled": props.isDisabled,
    disabled: props.isDisabled,
    "aria-label": props.label,
    css: [/*#__PURE__*/react$1.css("border:0;cursor:pointer;background:", props.isActive ? designSystem.designTokens.backgroundColorForLocalizedRichTextBodyButtonWhenActive : 'transparent', ";display:flex;justify-content:center;align-items:center;border-radius:", designSystem.designTokens.spacing10, ";padding:", designSystem.designTokens.paddingForLocalizedRichTextBodyButton, ";margin:", designSystem.designTokens.marginForLocalizedRichTextBodyButton, ";&:focus{outline:none;}&:hover,&:focus{background:", props.isActive ? designSystem.designTokens.backgroundColorForLocalizedRichTextBodyButtonWhenActive : designSystem.designTokens.backgroundColorForLocalizedRichTextBodyButton, ";}svg{fill:", getFillColor(props), ";}&:disabled{pointer-events:none;svg{fill:", designSystem.designTokens.colorNeutral60, ";}}" + (process.env.NODE_ENV === "production" ? "" : ";label:RichTextBodyButton;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJpY2gtdGV4dC1ib2R5LWJ1dHRvbi50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUNXIiwiZmlsZSI6InJpY2gtdGV4dC1ib2R5LWJ1dHRvbi50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgb21pdCBmcm9tICdsb2Rhc2gvb21pdCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcbmltcG9ydCB0eXBlIHsgUmVhY3ROb2RlLCBNb3VzZUV2ZW50LCBLZXlib2FyZEV2ZW50IH0gZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgdHlwZSBUUmljaFRleHRCb2R5QnV0dG9uUHJvcHMgPSB7XG4gIGlzRGlzYWJsZWQ/OiBib29sZWFuO1xuICBsYWJlbDogc3RyaW5nO1xuICBpc0FjdGl2ZT86IGJvb2xlYW47XG4gIGlzUmVhZE9ubHk/OiBib29sZWFuO1xuICBjaGlsZHJlbjogUmVhY3ROb2RlO1xuICBvbkNsaWNrPzogKFxuICAgIGV2ZW50OiBNb3VzZUV2ZW50PEhUTUxCdXR0b25FbGVtZW50PiB8IEtleWJvYXJkRXZlbnQ8SFRNTEJ1dHRvbkVsZW1lbnQ+XG4gICkgPT4gdm9pZDtcbn07XG5cbmNvbnN0IHByb3BzVG9PbWl0ID0gWydpc0FjdGl2ZScsICdsYWJlbCcsICdpc0Rpc2FibGVkJywgJ2lzUmVhZE9ubHknXTtcblxuZnVuY3Rpb24gZ2V0RmlsbENvbG9yKHByb3BzOiBUUmljaFRleHRCb2R5QnV0dG9uUHJvcHMpIHtcbiAgaWYgKHByb3BzLmlzQWN0aXZlKSByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZTtcbiAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvclNvbGlkO1xufVxuXG5jb25zdCBSaWNoVGV4dEJvZHlCdXR0b24gPSAocHJvcHM6IFRSaWNoVGV4dEJvZHlCdXR0b25Qcm9wcykgPT4ge1xuICBjb25zdCByZXN0T2ZQcm9wcyA9IG9taXQocHJvcHMsIHByb3BzVG9PbWl0KTtcblxuICByZXR1cm4gKFxuICAgIDxidXR0b25cbiAgICAgIHsuLi5yZXN0T2ZQcm9wc31cbiAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgdGFiSW5kZXg9ey0xfVxuICAgICAgYXJpYS1kaXNhYmxlZD17cHJvcHMuaXNEaXNhYmxlZH1cbiAgICAgIGRpc2FibGVkPXtwcm9wcy5pc0Rpc2FibGVkfVxuICAgICAgYXJpYS1sYWJlbD17cHJvcHMubGFiZWx9XG4gICAgICBjc3M9e1tcbiAgICAgICAgY3NzYFxuICAgICAgICAgIGJvcmRlcjogMDtcbiAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgYmFja2dyb3VuZDogJHtwcm9wcy5pc0FjdGl2ZVxuICAgICAgICAgICAgPyBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yTG9jYWxpemVkUmljaFRleHRCb2R5QnV0dG9uV2hlbkFjdGl2ZVxuICAgICAgICAgICAgOiAndHJhbnNwYXJlbnQnfTtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuc3BhY2luZzEwfTtcbiAgICAgICAgICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yTG9jYWxpemVkUmljaFRleHRCb2R5QnV0dG9ufTtcbiAgICAgICAgICBtYXJnaW46ICR7ZGVzaWduVG9rZW5zLm1hcmdpbkZvckxvY2FsaXplZFJpY2hUZXh0Qm9keUJ1dHRvbn07XG5cbiAgICAgICAgICAmOmZvY3VzIHtcbiAgICAgICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgJjpob3ZlcixcbiAgICAgICAgICAmOmZvY3VzIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICR7cHJvcHMuaXNBY3RpdmVcbiAgICAgICAgICAgICAgPyBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yTG9jYWxpemVkUmljaFRleHRCb2R5QnV0dG9uV2hlbkFjdGl2ZVxuICAgICAgICAgICAgICA6IGRlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JMb2NhbGl6ZWRSaWNoVGV4dEJvZHlCdXR0b259O1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHN2ZyB7XG4gICAgICAgICAgICBmaWxsOiAke2dldEZpbGxDb2xvcihwcm9wcyl9O1xuICAgICAgICAgIH1cblxuICAgICAgICAgICY6ZGlzYWJsZWQge1xuICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgICAgICAgICBzdmcge1xuICAgICAgICAgICAgICBmaWxsOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw2MH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICBgLFxuICAgICAgICBwcm9wcy5pc1JlYWRPbmx5ICYmXG4gICAgICAgICAgY3NzYFxuICAgICAgICAgICAgc3ZnIHtcbiAgICAgICAgICAgICAgZmlsbDogJHtkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsNjB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIGAsXG4gICAgICBdfVxuICAgID5cbiAgICAgIHtwcm9wcy5jaGlsZHJlbn1cbiAgICA8L2J1dHRvbj5cbiAgKTtcbn07XG5cblJpY2hUZXh0Qm9keUJ1dHRvbi5kaXNwbGF5TmFtZSA9ICdSaWNoVGV4dElucHV0QnV0dG9uJztcblxuZXhwb3J0IGRlZmF1bHQgUmljaFRleHRCb2R5QnV0dG9uO1xuIl19 */"), props.isReadOnly && /*#__PURE__*/react$1.css("svg{fill:", designSystem.designTokens.colorNeutral60, ";}" + (process.env.NODE_ENV === "production" ? "" : ";label:RichTextBodyButton;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJpY2gtdGV4dC1ib2R5LWJ1dHRvbi50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdUVhIiwiZmlsZSI6InJpY2gtdGV4dC1ib2R5LWJ1dHRvbi50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgb21pdCBmcm9tICdsb2Rhc2gvb21pdCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcbmltcG9ydCB0eXBlIHsgUmVhY3ROb2RlLCBNb3VzZUV2ZW50LCBLZXlib2FyZEV2ZW50IH0gZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgdHlwZSBUUmljaFRleHRCb2R5QnV0dG9uUHJvcHMgPSB7XG4gIGlzRGlzYWJsZWQ/OiBib29sZWFuO1xuICBsYWJlbDogc3RyaW5nO1xuICBpc0FjdGl2ZT86IGJvb2xlYW47XG4gIGlzUmVhZE9ubHk/OiBib29sZWFuO1xuICBjaGlsZHJlbjogUmVhY3ROb2RlO1xuICBvbkNsaWNrPzogKFxuICAgIGV2ZW50OiBNb3VzZUV2ZW50PEhUTUxCdXR0b25FbGVtZW50PiB8IEtleWJvYXJkRXZlbnQ8SFRNTEJ1dHRvbkVsZW1lbnQ+XG4gICkgPT4gdm9pZDtcbn07XG5cbmNvbnN0IHByb3BzVG9PbWl0ID0gWydpc0FjdGl2ZScsICdsYWJlbCcsICdpc0Rpc2FibGVkJywgJ2lzUmVhZE9ubHknXTtcblxuZnVuY3Rpb24gZ2V0RmlsbENvbG9yKHByb3BzOiBUUmljaFRleHRCb2R5QnV0dG9uUHJvcHMpIHtcbiAgaWYgKHByb3BzLmlzQWN0aXZlKSByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZTtcbiAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvclNvbGlkO1xufVxuXG5jb25zdCBSaWNoVGV4dEJvZHlCdXR0b24gPSAocHJvcHM6IFRSaWNoVGV4dEJvZHlCdXR0b25Qcm9wcykgPT4ge1xuICBjb25zdCByZXN0T2ZQcm9wcyA9IG9taXQocHJvcHMsIHByb3BzVG9PbWl0KTtcblxuICByZXR1cm4gKFxuICAgIDxidXR0b25cbiAgICAgIHsuLi5yZXN0T2ZQcm9wc31cbiAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgdGFiSW5kZXg9ey0xfVxuICAgICAgYXJpYS1kaXNhYmxlZD17cHJvcHMuaXNEaXNhYmxlZH1cbiAgICAgIGRpc2FibGVkPXtwcm9wcy5pc0Rpc2FibGVkfVxuICAgICAgYXJpYS1sYWJlbD17cHJvcHMubGFiZWx9XG4gICAgICBjc3M9e1tcbiAgICAgICAgY3NzYFxuICAgICAgICAgIGJvcmRlcjogMDtcbiAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgYmFja2dyb3VuZDogJHtwcm9wcy5pc0FjdGl2ZVxuICAgICAgICAgICAgPyBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yTG9jYWxpemVkUmljaFRleHRCb2R5QnV0dG9uV2hlbkFjdGl2ZVxuICAgICAgICAgICAgOiAndHJhbnNwYXJlbnQnfTtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuc3BhY2luZzEwfTtcbiAgICAgICAgICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yTG9jYWxpemVkUmljaFRleHRCb2R5QnV0dG9ufTtcbiAgICAgICAgICBtYXJnaW46ICR7ZGVzaWduVG9rZW5zLm1hcmdpbkZvckxvY2FsaXplZFJpY2hUZXh0Qm9keUJ1dHRvbn07XG5cbiAgICAgICAgICAmOmZvY3VzIHtcbiAgICAgICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgJjpob3ZlcixcbiAgICAgICAgICAmOmZvY3VzIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICR7cHJvcHMuaXNBY3RpdmVcbiAgICAgICAgICAgICAgPyBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yTG9jYWxpemVkUmljaFRleHRCb2R5QnV0dG9uV2hlbkFjdGl2ZVxuICAgICAgICAgICAgICA6IGRlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JMb2NhbGl6ZWRSaWNoVGV4dEJvZHlCdXR0b259O1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHN2ZyB7XG4gICAgICAgICAgICBmaWxsOiAke2dldEZpbGxDb2xvcihwcm9wcyl9O1xuICAgICAgICAgIH1cblxuICAgICAgICAgICY6ZGlzYWJsZWQge1xuICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgICAgICAgICBzdmcge1xuICAgICAgICAgICAgICBmaWxsOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw2MH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICBgLFxuICAgICAgICBwcm9wcy5pc1JlYWRPbmx5ICYmXG4gICAgICAgICAgY3NzYFxuICAgICAgICAgICAgc3ZnIHtcbiAgICAgICAgICAgICAgZmlsbDogJHtkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsNjB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIGAsXG4gICAgICBdfVxuICAgID5cbiAgICAgIHtwcm9wcy5jaGlsZHJlbn1cbiAgICA8L2J1dHRvbj5cbiAgKTtcbn07XG5cblJpY2hUZXh0Qm9keUJ1dHRvbi5kaXNwbGF5TmFtZSA9ICdSaWNoVGV4dElucHV0QnV0dG9uJztcblxuZXhwb3J0IGRlZmF1bHQgUmljaFRleHRCb2R5QnV0dG9uO1xuIl19 */"), process.env.NODE_ENV === "production" ? "" : ";label:RichTextBodyButton;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJpY2gtdGV4dC1ib2R5LWJ1dHRvbi50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0NNIiwiZmlsZSI6InJpY2gtdGV4dC1ib2R5LWJ1dHRvbi50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgb21pdCBmcm9tICdsb2Rhc2gvb21pdCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcbmltcG9ydCB0eXBlIHsgUmVhY3ROb2RlLCBNb3VzZUV2ZW50LCBLZXlib2FyZEV2ZW50IH0gZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgdHlwZSBUUmljaFRleHRCb2R5QnV0dG9uUHJvcHMgPSB7XG4gIGlzRGlzYWJsZWQ/OiBib29sZWFuO1xuICBsYWJlbDogc3RyaW5nO1xuICBpc0FjdGl2ZT86IGJvb2xlYW47XG4gIGlzUmVhZE9ubHk/OiBib29sZWFuO1xuICBjaGlsZHJlbjogUmVhY3ROb2RlO1xuICBvbkNsaWNrPzogKFxuICAgIGV2ZW50OiBNb3VzZUV2ZW50PEhUTUxCdXR0b25FbGVtZW50PiB8IEtleWJvYXJkRXZlbnQ8SFRNTEJ1dHRvbkVsZW1lbnQ+XG4gICkgPT4gdm9pZDtcbn07XG5cbmNvbnN0IHByb3BzVG9PbWl0ID0gWydpc0FjdGl2ZScsICdsYWJlbCcsICdpc0Rpc2FibGVkJywgJ2lzUmVhZE9ubHknXTtcblxuZnVuY3Rpb24gZ2V0RmlsbENvbG9yKHByb3BzOiBUUmljaFRleHRCb2R5QnV0dG9uUHJvcHMpIHtcbiAgaWYgKHByb3BzLmlzQWN0aXZlKSByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZTtcbiAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvclNvbGlkO1xufVxuXG5jb25zdCBSaWNoVGV4dEJvZHlCdXR0b24gPSAocHJvcHM6IFRSaWNoVGV4dEJvZHlCdXR0b25Qcm9wcykgPT4ge1xuICBjb25zdCByZXN0T2ZQcm9wcyA9IG9taXQocHJvcHMsIHByb3BzVG9PbWl0KTtcblxuICByZXR1cm4gKFxuICAgIDxidXR0b25cbiAgICAgIHsuLi5yZXN0T2ZQcm9wc31cbiAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgdGFiSW5kZXg9ey0xfVxuICAgICAgYXJpYS1kaXNhYmxlZD17cHJvcHMuaXNEaXNhYmxlZH1cbiAgICAgIGRpc2FibGVkPXtwcm9wcy5pc0Rpc2FibGVkfVxuICAgICAgYXJpYS1sYWJlbD17cHJvcHMubGFiZWx9XG4gICAgICBjc3M9e1tcbiAgICAgICAgY3NzYFxuICAgICAgICAgIGJvcmRlcjogMDtcbiAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgYmFja2dyb3VuZDogJHtwcm9wcy5pc0FjdGl2ZVxuICAgICAgICAgICAgPyBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yTG9jYWxpemVkUmljaFRleHRCb2R5QnV0dG9uV2hlbkFjdGl2ZVxuICAgICAgICAgICAgOiAndHJhbnNwYXJlbnQnfTtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuc3BhY2luZzEwfTtcbiAgICAgICAgICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yTG9jYWxpemVkUmljaFRleHRCb2R5QnV0dG9ufTtcbiAgICAgICAgICBtYXJnaW46ICR7ZGVzaWduVG9rZW5zLm1hcmdpbkZvckxvY2FsaXplZFJpY2hUZXh0Qm9keUJ1dHRvbn07XG5cbiAgICAgICAgICAmOmZvY3VzIHtcbiAgICAgICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgJjpob3ZlcixcbiAgICAgICAgICAmOmZvY3VzIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICR7cHJvcHMuaXNBY3RpdmVcbiAgICAgICAgICAgICAgPyBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yTG9jYWxpemVkUmljaFRleHRCb2R5QnV0dG9uV2hlbkFjdGl2ZVxuICAgICAgICAgICAgICA6IGRlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JMb2NhbGl6ZWRSaWNoVGV4dEJvZHlCdXR0b259O1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHN2ZyB7XG4gICAgICAgICAgICBmaWxsOiAke2dldEZpbGxDb2xvcihwcm9wcyl9O1xuICAgICAgICAgIH1cblxuICAgICAgICAgICY6ZGlzYWJsZWQge1xuICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgICAgICAgICBzdmcge1xuICAgICAgICAgICAgICBmaWxsOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw2MH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICBgLFxuICAgICAgICBwcm9wcy5pc1JlYWRPbmx5ICYmXG4gICAgICAgICAgY3NzYFxuICAgICAgICAgICAgc3ZnIHtcbiAgICAgICAgICAgICAgZmlsbDogJHtkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsNjB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIGAsXG4gICAgICBdfVxuICAgID5cbiAgICAgIHtwcm9wcy5jaGlsZHJlbn1cbiAgICA8L2J1dHRvbj5cbiAgKTtcbn07XG5cblJpY2hUZXh0Qm9keUJ1dHRvbi5kaXNwbGF5TmFtZSA9ICdSaWNoVGV4dElucHV0QnV0dG9uJztcblxuZXhwb3J0IGRlZmF1bHQgUmljaFRleHRCb2R5QnV0dG9uO1xuIl19 */"],
    children: props.children
  }));
};
RichTextBodyButton.propTypes = process.env.NODE_ENV !== "production" ? {
  isDisabled: _pt__default["default"].bool,
  label: _pt__default["default"].string.isRequired,
  isActive: _pt__default["default"].bool,
  isReadOnly: _pt__default["default"].bool,
  children: _pt__default["default"].node.isRequired,
  onClick: _pt__default["default"].func
} : {};
RichTextBodyButton.displayName = 'RichTextInputButton';
var Button = RichTextBodyButton;

const Divider = /*#__PURE__*/_styled__default["default"]("span", process.env.NODE_ENV === "production" ? {
  target: "ehglnxa0"
} : {
  target: "ehglnxa0",
  label: "Divider"
})("width:1px;height:", designSystem.designTokens.spacing40, ";background:", designSystem.designTokens.colorNeutral, ";margin:0 ", designSystem.designTokens.spacing10, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRpdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRzJCIiwiZmlsZSI6ImRpdmlkZXIudHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcblxuY29uc3QgRGl2aWRlciA9IHN0eWxlZC5zcGFuYFxuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmc0MH07XG4gIGJhY2tncm91bmQ6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbH07XG4gIG1hcmdpbjogMCAke2Rlc2lnblRva2Vucy5zcGFjaW5nMTB9O1xuYDtcblxuZXhwb3J0IGRlZmF1bHQgRGl2aWRlcjtcbiJdfQ== */"));
var Divider$1 = Divider;

const DropdownItem = /*#__PURE__*/_styled__default["default"]("button", process.env.NODE_ENV === "production" ? {
  target: "e1f4n71b2"
} : {
  target: "e1f4n71b2",
  label: "DropdownItem"
})("width:100%;border:0;font-size:1rem;cursor:pointer;padding:", designSystem.designTokens.paddingForLocalizedRichTextDropdownItem, ";font-family:", designSystem.designTokens.fontFamilyDefault, ";display:block;background-color:", props => props.isSelected ? designSystem.designTokens.backgroundColorForInputWhenActive : designSystem.designTokens.colorSurface, ";&:focus,&:hover{outline:none;background-color:", designSystem.designTokens.backgroundColorForSelectInputOptionWhenHovered, ";}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRyb3Bkb3duLnN0eWxlcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBYXdEIiwiZmlsZSI6ImRyb3Bkb3duLnN0eWxlcy50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcblxudHlwZSBURHJvcGRvd25TdHlsZXNQcm9wcyA9IHtcbiAgaXNTZWxlY3RlZD86IGJvb2xlYW47XG4gIGlzSW5kZXRlcm1pbmF0ZT86IGJvb2xlYW47XG4gIGlzU3R5bGVCdXR0b24/OiBib29sZWFuO1xuICBpc09wZW4/OiBib29sZWFuO1xuICBpc0Rpc2FibGVkPzogYm9vbGVhbjtcbiAgaXNSZWFkT25seT86IGJvb2xlYW47XG59O1xuXG5jb25zdCBEcm9wZG93bkl0ZW0gPSBzdHlsZWQuYnV0dG9uPFREcm9wZG93blN0eWxlc1Byb3BzPmBcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlcjogMDtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JMb2NhbGl6ZWRSaWNoVGV4dERyb3Bkb3duSXRlbX07XG4gIGZvbnQtZmFtaWx5OiAke2Rlc2lnblRva2Vucy5mb250RmFtaWx5RGVmYXVsdH07XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT5cbiAgICBwcm9wcy5pc1NlbGVjdGVkXG4gICAgICA/IGRlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JJbnB1dFdoZW5BY3RpdmVcbiAgICAgIDogZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG5cbiAgJjpmb2N1cyxcbiAgJjpob3ZlciB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JTZWxlY3RJbnB1dE9wdGlvbldoZW5Ib3ZlcmVkfTtcbiAgfVxuYDtcblxuY29uc3QgZ2V0QnV0dG9uU3R5bGVzID0gKHByb3BzOiBURHJvcGRvd25TdHlsZXNQcm9wcykgPT4gW1xuICBjc3NgXG4gICAgYm9yZGVyOiAwO1xuICAgIGZvbnQtZmFtaWx5OiAke2Rlc2lnblRva2Vucy5mb250RmFtaWx5RGVmYXVsdH07XG4gICAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNH07XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGZvbnQtc2l6ZTogJHtkZXNpZ25Ub2tlbnMuZm9udFNpemVGb3JJbnB1dH07XG4gICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU29saWR9O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAke3Byb3BzLmlzU3R5bGVCdXR0b25cbiAgICAgID8gYCR7ZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JMb2NhbGl6ZWRSaWNoVGV4dERyb3Bkb3duQnV0dG9ufWBcbiAgICAgIDogZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JMb2NhbGl6ZWRSaWNoVGV4dEJvZHlCdXR0b259O1xuXG4gICAgJjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JSaWNoVGV4dERyb3Bkb3duV2hlbkhvdmVyZWR9O1xuICAgIH1cbiAgYCxcbiAgcHJvcHMuaXNJbmRldGVybWluYXRlICYmXG4gICAgY3NzYFxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JBY2NlbnQ5NX07XG4gICAgYCxcbiAgcHJvcHMuaXNPcGVuICYmXG4gICAgY3NzYFxuICAgICAgJjpub3QoOmhvdmVyKSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclJpY2hUZXh0QnV0dG9ufTtcbiAgICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG5cbiAgICAgICAgc3ZnIHtcbiAgICAgICAgICBmaWxsOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgYCxcbiAgcHJvcHMuaXNSZWFkT25seSAmJlxuICAgIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw2MH07XG5cbiAgICAgIHN2ZyB7XG4gICAgICAgIGZpbGw6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDYwfTtcbiAgICAgIH1cbiAgICBgLFxuICBwcm9wcy5pc0Rpc2FibGVkICYmXG4gICAgY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDYwfTtcblxuICAgICAgc3ZnIHtcbiAgICAgICAgZmlsbDogJHtkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsNjB9O1xuICAgICAgfVxuICAgIGAsXG5dO1xuXG5jb25zdCBEcm9wZG93bkNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBmb250LXNpemU6ICR7ZGVzaWduVG9rZW5zLmZvbnRTaXplRm9ySW5wdXR9O1xuICB0b3A6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcxMH07XG4gIG1hcmdpbi10b3A6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcxMH07XG4gIGxlZnQ6IDA7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGJhY2tncm91bmQ6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHotaW5kZXg6IDk5OTk7XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9yU2VsZWN0SW5wdXRNZW51fTtcbiAgYm94LXNoYWRvdzogJHtkZXNpZ25Ub2tlbnMuc2hhZG93Rm9yU2VsZWN0SW5wdXRNZW51fTtcbiAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNn07XG5gO1xuXG5jb25zdCBEcm9wZG93bkl0ZW1MYWJlbFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxuICBtYXJnaW46ICR7ZGVzaWduVG9rZW5zLm1hcmdpbkZvclJpY2hUZXh0RHJvcGRvd25JdGVtTGFiZWx9O1xuYDtcblxuZXhwb3J0IHtcbiAgRHJvcGRvd25Db250YWluZXIsXG4gIERyb3Bkb3duSXRlbSxcbiAgRHJvcGRvd25JdGVtTGFiZWxXcmFwcGVyLFxuICBnZXRCdXR0b25TdHlsZXMsXG59O1xuIl19 */"));
const getButtonStyles = props => [/*#__PURE__*/react$1.css("border:0;font-family:", designSystem.designTokens.fontFamilyDefault, ";border-radius:", designSystem.designTokens.borderRadius4, ";cursor:pointer;font-size:", designSystem.designTokens.fontSizeForInput, ";color:", designSystem.designTokens.colorSolid, ";display:flex;justify-content:center;align-items:center;padding:", props.isStyleButton ? "".concat(designSystem.designTokens.paddingForLocalizedRichTextDropdownButton) : designSystem.designTokens.paddingForLocalizedRichTextBodyButton, ";&:hover{background-color:", designSystem.designTokens.backgroundColorForRichTextDropdownWhenHovered, ";}" + (process.env.NODE_ENV === "production" ? "" : ";label:getButtonStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRyb3Bkb3duLnN0eWxlcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0NLIiwiZmlsZSI6ImRyb3Bkb3duLnN0eWxlcy50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcblxudHlwZSBURHJvcGRvd25TdHlsZXNQcm9wcyA9IHtcbiAgaXNTZWxlY3RlZD86IGJvb2xlYW47XG4gIGlzSW5kZXRlcm1pbmF0ZT86IGJvb2xlYW47XG4gIGlzU3R5bGVCdXR0b24/OiBib29sZWFuO1xuICBpc09wZW4/OiBib29sZWFuO1xuICBpc0Rpc2FibGVkPzogYm9vbGVhbjtcbiAgaXNSZWFkT25seT86IGJvb2xlYW47XG59O1xuXG5jb25zdCBEcm9wZG93bkl0ZW0gPSBzdHlsZWQuYnV0dG9uPFREcm9wZG93blN0eWxlc1Byb3BzPmBcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlcjogMDtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JMb2NhbGl6ZWRSaWNoVGV4dERyb3Bkb3duSXRlbX07XG4gIGZvbnQtZmFtaWx5OiAke2Rlc2lnblRva2Vucy5mb250RmFtaWx5RGVmYXVsdH07XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT5cbiAgICBwcm9wcy5pc1NlbGVjdGVkXG4gICAgICA/IGRlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JJbnB1dFdoZW5BY3RpdmVcbiAgICAgIDogZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG5cbiAgJjpmb2N1cyxcbiAgJjpob3ZlciB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JTZWxlY3RJbnB1dE9wdGlvbldoZW5Ib3ZlcmVkfTtcbiAgfVxuYDtcblxuY29uc3QgZ2V0QnV0dG9uU3R5bGVzID0gKHByb3BzOiBURHJvcGRvd25TdHlsZXNQcm9wcykgPT4gW1xuICBjc3NgXG4gICAgYm9yZGVyOiAwO1xuICAgIGZvbnQtZmFtaWx5OiAke2Rlc2lnblRva2Vucy5mb250RmFtaWx5RGVmYXVsdH07XG4gICAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNH07XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGZvbnQtc2l6ZTogJHtkZXNpZ25Ub2tlbnMuZm9udFNpemVGb3JJbnB1dH07XG4gICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU29saWR9O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAke3Byb3BzLmlzU3R5bGVCdXR0b25cbiAgICAgID8gYCR7ZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JMb2NhbGl6ZWRSaWNoVGV4dERyb3Bkb3duQnV0dG9ufWBcbiAgICAgIDogZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JMb2NhbGl6ZWRSaWNoVGV4dEJvZHlCdXR0b259O1xuXG4gICAgJjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JSaWNoVGV4dERyb3Bkb3duV2hlbkhvdmVyZWR9O1xuICAgIH1cbiAgYCxcbiAgcHJvcHMuaXNJbmRldGVybWluYXRlICYmXG4gICAgY3NzYFxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JBY2NlbnQ5NX07XG4gICAgYCxcbiAgcHJvcHMuaXNPcGVuICYmXG4gICAgY3NzYFxuICAgICAgJjpub3QoOmhvdmVyKSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclJpY2hUZXh0QnV0dG9ufTtcbiAgICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG5cbiAgICAgICAgc3ZnIHtcbiAgICAgICAgICBmaWxsOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgYCxcbiAgcHJvcHMuaXNSZWFkT25seSAmJlxuICAgIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw2MH07XG5cbiAgICAgIHN2ZyB7XG4gICAgICAgIGZpbGw6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDYwfTtcbiAgICAgIH1cbiAgICBgLFxuICBwcm9wcy5pc0Rpc2FibGVkICYmXG4gICAgY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDYwfTtcblxuICAgICAgc3ZnIHtcbiAgICAgICAgZmlsbDogJHtkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsNjB9O1xuICAgICAgfVxuICAgIGAsXG5dO1xuXG5jb25zdCBEcm9wZG93bkNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBmb250LXNpemU6ICR7ZGVzaWduVG9rZW5zLmZvbnRTaXplRm9ySW5wdXR9O1xuICB0b3A6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcxMH07XG4gIG1hcmdpbi10b3A6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcxMH07XG4gIGxlZnQ6IDA7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGJhY2tncm91bmQ6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHotaW5kZXg6IDk5OTk7XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9yU2VsZWN0SW5wdXRNZW51fTtcbiAgYm94LXNoYWRvdzogJHtkZXNpZ25Ub2tlbnMuc2hhZG93Rm9yU2VsZWN0SW5wdXRNZW51fTtcbiAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNn07XG5gO1xuXG5jb25zdCBEcm9wZG93bkl0ZW1MYWJlbFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxuICBtYXJnaW46ICR7ZGVzaWduVG9rZW5zLm1hcmdpbkZvclJpY2hUZXh0RHJvcGRvd25JdGVtTGFiZWx9O1xuYDtcblxuZXhwb3J0IHtcbiAgRHJvcGRvd25Db250YWluZXIsXG4gIERyb3Bkb3duSXRlbSxcbiAgRHJvcGRvd25JdGVtTGFiZWxXcmFwcGVyLFxuICBnZXRCdXR0b25TdHlsZXMsXG59O1xuIl19 */"), props.isIndeterminate && /*#__PURE__*/react$1.css("background-color:", designSystem.designTokens.colorAccent95, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:getButtonStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRyb3Bkb3duLnN0eWxlcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcURPIiwiZmlsZSI6ImRyb3Bkb3duLnN0eWxlcy50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcblxudHlwZSBURHJvcGRvd25TdHlsZXNQcm9wcyA9IHtcbiAgaXNTZWxlY3RlZD86IGJvb2xlYW47XG4gIGlzSW5kZXRlcm1pbmF0ZT86IGJvb2xlYW47XG4gIGlzU3R5bGVCdXR0b24/OiBib29sZWFuO1xuICBpc09wZW4/OiBib29sZWFuO1xuICBpc0Rpc2FibGVkPzogYm9vbGVhbjtcbiAgaXNSZWFkT25seT86IGJvb2xlYW47XG59O1xuXG5jb25zdCBEcm9wZG93bkl0ZW0gPSBzdHlsZWQuYnV0dG9uPFREcm9wZG93blN0eWxlc1Byb3BzPmBcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlcjogMDtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JMb2NhbGl6ZWRSaWNoVGV4dERyb3Bkb3duSXRlbX07XG4gIGZvbnQtZmFtaWx5OiAke2Rlc2lnblRva2Vucy5mb250RmFtaWx5RGVmYXVsdH07XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT5cbiAgICBwcm9wcy5pc1NlbGVjdGVkXG4gICAgICA/IGRlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JJbnB1dFdoZW5BY3RpdmVcbiAgICAgIDogZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG5cbiAgJjpmb2N1cyxcbiAgJjpob3ZlciB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JTZWxlY3RJbnB1dE9wdGlvbldoZW5Ib3ZlcmVkfTtcbiAgfVxuYDtcblxuY29uc3QgZ2V0QnV0dG9uU3R5bGVzID0gKHByb3BzOiBURHJvcGRvd25TdHlsZXNQcm9wcykgPT4gW1xuICBjc3NgXG4gICAgYm9yZGVyOiAwO1xuICAgIGZvbnQtZmFtaWx5OiAke2Rlc2lnblRva2Vucy5mb250RmFtaWx5RGVmYXVsdH07XG4gICAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNH07XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGZvbnQtc2l6ZTogJHtkZXNpZ25Ub2tlbnMuZm9udFNpemVGb3JJbnB1dH07XG4gICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU29saWR9O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAke3Byb3BzLmlzU3R5bGVCdXR0b25cbiAgICAgID8gYCR7ZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JMb2NhbGl6ZWRSaWNoVGV4dERyb3Bkb3duQnV0dG9ufWBcbiAgICAgIDogZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JMb2NhbGl6ZWRSaWNoVGV4dEJvZHlCdXR0b259O1xuXG4gICAgJjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JSaWNoVGV4dERyb3Bkb3duV2hlbkhvdmVyZWR9O1xuICAgIH1cbiAgYCxcbiAgcHJvcHMuaXNJbmRldGVybWluYXRlICYmXG4gICAgY3NzYFxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JBY2NlbnQ5NX07XG4gICAgYCxcbiAgcHJvcHMuaXNPcGVuICYmXG4gICAgY3NzYFxuICAgICAgJjpub3QoOmhvdmVyKSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclJpY2hUZXh0QnV0dG9ufTtcbiAgICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG5cbiAgICAgICAgc3ZnIHtcbiAgICAgICAgICBmaWxsOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgYCxcbiAgcHJvcHMuaXNSZWFkT25seSAmJlxuICAgIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw2MH07XG5cbiAgICAgIHN2ZyB7XG4gICAgICAgIGZpbGw6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDYwfTtcbiAgICAgIH1cbiAgICBgLFxuICBwcm9wcy5pc0Rpc2FibGVkICYmXG4gICAgY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDYwfTtcblxuICAgICAgc3ZnIHtcbiAgICAgICAgZmlsbDogJHtkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsNjB9O1xuICAgICAgfVxuICAgIGAsXG5dO1xuXG5jb25zdCBEcm9wZG93bkNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBmb250LXNpemU6ICR7ZGVzaWduVG9rZW5zLmZvbnRTaXplRm9ySW5wdXR9O1xuICB0b3A6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcxMH07XG4gIG1hcmdpbi10b3A6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcxMH07XG4gIGxlZnQ6IDA7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGJhY2tncm91bmQ6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHotaW5kZXg6IDk5OTk7XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9yU2VsZWN0SW5wdXRNZW51fTtcbiAgYm94LXNoYWRvdzogJHtkZXNpZ25Ub2tlbnMuc2hhZG93Rm9yU2VsZWN0SW5wdXRNZW51fTtcbiAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNn07XG5gO1xuXG5jb25zdCBEcm9wZG93bkl0ZW1MYWJlbFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxuICBtYXJnaW46ICR7ZGVzaWduVG9rZW5zLm1hcmdpbkZvclJpY2hUZXh0RHJvcGRvd25JdGVtTGFiZWx9O1xuYDtcblxuZXhwb3J0IHtcbiAgRHJvcGRvd25Db250YWluZXIsXG4gIERyb3Bkb3duSXRlbSxcbiAgRHJvcGRvd25JdGVtTGFiZWxXcmFwcGVyLFxuICBnZXRCdXR0b25TdHlsZXMsXG59O1xuIl19 */"), props.isOpen && /*#__PURE__*/react$1.css("&:not(:hover){background-color:", designSystem.designTokens.backgroundColorForRichTextButton, ";color:", designSystem.designTokens.colorSurface, ";svg{fill:", designSystem.designTokens.colorSurface, ";}}" + (process.env.NODE_ENV === "production" ? "" : ";label:getButtonStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRyb3Bkb3duLnN0eWxlcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeURPIiwiZmlsZSI6ImRyb3Bkb3duLnN0eWxlcy50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcblxudHlwZSBURHJvcGRvd25TdHlsZXNQcm9wcyA9IHtcbiAgaXNTZWxlY3RlZD86IGJvb2xlYW47XG4gIGlzSW5kZXRlcm1pbmF0ZT86IGJvb2xlYW47XG4gIGlzU3R5bGVCdXR0b24/OiBib29sZWFuO1xuICBpc09wZW4/OiBib29sZWFuO1xuICBpc0Rpc2FibGVkPzogYm9vbGVhbjtcbiAgaXNSZWFkT25seT86IGJvb2xlYW47XG59O1xuXG5jb25zdCBEcm9wZG93bkl0ZW0gPSBzdHlsZWQuYnV0dG9uPFREcm9wZG93blN0eWxlc1Byb3BzPmBcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlcjogMDtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JMb2NhbGl6ZWRSaWNoVGV4dERyb3Bkb3duSXRlbX07XG4gIGZvbnQtZmFtaWx5OiAke2Rlc2lnblRva2Vucy5mb250RmFtaWx5RGVmYXVsdH07XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT5cbiAgICBwcm9wcy5pc1NlbGVjdGVkXG4gICAgICA/IGRlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JJbnB1dFdoZW5BY3RpdmVcbiAgICAgIDogZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG5cbiAgJjpmb2N1cyxcbiAgJjpob3ZlciB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JTZWxlY3RJbnB1dE9wdGlvbldoZW5Ib3ZlcmVkfTtcbiAgfVxuYDtcblxuY29uc3QgZ2V0QnV0dG9uU3R5bGVzID0gKHByb3BzOiBURHJvcGRvd25TdHlsZXNQcm9wcykgPT4gW1xuICBjc3NgXG4gICAgYm9yZGVyOiAwO1xuICAgIGZvbnQtZmFtaWx5OiAke2Rlc2lnblRva2Vucy5mb250RmFtaWx5RGVmYXVsdH07XG4gICAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNH07XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGZvbnQtc2l6ZTogJHtkZXNpZ25Ub2tlbnMuZm9udFNpemVGb3JJbnB1dH07XG4gICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU29saWR9O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAke3Byb3BzLmlzU3R5bGVCdXR0b25cbiAgICAgID8gYCR7ZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JMb2NhbGl6ZWRSaWNoVGV4dERyb3Bkb3duQnV0dG9ufWBcbiAgICAgIDogZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JMb2NhbGl6ZWRSaWNoVGV4dEJvZHlCdXR0b259O1xuXG4gICAgJjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JSaWNoVGV4dERyb3Bkb3duV2hlbkhvdmVyZWR9O1xuICAgIH1cbiAgYCxcbiAgcHJvcHMuaXNJbmRldGVybWluYXRlICYmXG4gICAgY3NzYFxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JBY2NlbnQ5NX07XG4gICAgYCxcbiAgcHJvcHMuaXNPcGVuICYmXG4gICAgY3NzYFxuICAgICAgJjpub3QoOmhvdmVyKSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclJpY2hUZXh0QnV0dG9ufTtcbiAgICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG5cbiAgICAgICAgc3ZnIHtcbiAgICAgICAgICBmaWxsOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgYCxcbiAgcHJvcHMuaXNSZWFkT25seSAmJlxuICAgIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw2MH07XG5cbiAgICAgIHN2ZyB7XG4gICAgICAgIGZpbGw6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDYwfTtcbiAgICAgIH1cbiAgICBgLFxuICBwcm9wcy5pc0Rpc2FibGVkICYmXG4gICAgY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDYwfTtcblxuICAgICAgc3ZnIHtcbiAgICAgICAgZmlsbDogJHtkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsNjB9O1xuICAgICAgfVxuICAgIGAsXG5dO1xuXG5jb25zdCBEcm9wZG93bkNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBmb250LXNpemU6ICR7ZGVzaWduVG9rZW5zLmZvbnRTaXplRm9ySW5wdXR9O1xuICB0b3A6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcxMH07XG4gIG1hcmdpbi10b3A6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcxMH07XG4gIGxlZnQ6IDA7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGJhY2tncm91bmQ6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHotaW5kZXg6IDk5OTk7XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9yU2VsZWN0SW5wdXRNZW51fTtcbiAgYm94LXNoYWRvdzogJHtkZXNpZ25Ub2tlbnMuc2hhZG93Rm9yU2VsZWN0SW5wdXRNZW51fTtcbiAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNn07XG5gO1xuXG5jb25zdCBEcm9wZG93bkl0ZW1MYWJlbFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxuICBtYXJnaW46ICR7ZGVzaWduVG9rZW5zLm1hcmdpbkZvclJpY2hUZXh0RHJvcGRvd25JdGVtTGFiZWx9O1xuYDtcblxuZXhwb3J0IHtcbiAgRHJvcGRvd25Db250YWluZXIsXG4gIERyb3Bkb3duSXRlbSxcbiAgRHJvcGRvd25JdGVtTGFiZWxXcmFwcGVyLFxuICBnZXRCdXR0b25TdHlsZXMsXG59O1xuIl19 */"), props.isReadOnly && /*#__PURE__*/react$1.css("color:", designSystem.designTokens.colorNeutral60, ";svg{fill:", designSystem.designTokens.colorNeutral60, ";}" + (process.env.NODE_ENV === "production" ? "" : ";label:getButtonStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRyb3Bkb3duLnN0eWxlcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0VPIiwiZmlsZSI6ImRyb3Bkb3duLnN0eWxlcy50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcblxudHlwZSBURHJvcGRvd25TdHlsZXNQcm9wcyA9IHtcbiAgaXNTZWxlY3RlZD86IGJvb2xlYW47XG4gIGlzSW5kZXRlcm1pbmF0ZT86IGJvb2xlYW47XG4gIGlzU3R5bGVCdXR0b24/OiBib29sZWFuO1xuICBpc09wZW4/OiBib29sZWFuO1xuICBpc0Rpc2FibGVkPzogYm9vbGVhbjtcbiAgaXNSZWFkT25seT86IGJvb2xlYW47XG59O1xuXG5jb25zdCBEcm9wZG93bkl0ZW0gPSBzdHlsZWQuYnV0dG9uPFREcm9wZG93blN0eWxlc1Byb3BzPmBcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlcjogMDtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JMb2NhbGl6ZWRSaWNoVGV4dERyb3Bkb3duSXRlbX07XG4gIGZvbnQtZmFtaWx5OiAke2Rlc2lnblRva2Vucy5mb250RmFtaWx5RGVmYXVsdH07XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT5cbiAgICBwcm9wcy5pc1NlbGVjdGVkXG4gICAgICA/IGRlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JJbnB1dFdoZW5BY3RpdmVcbiAgICAgIDogZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG5cbiAgJjpmb2N1cyxcbiAgJjpob3ZlciB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JTZWxlY3RJbnB1dE9wdGlvbldoZW5Ib3ZlcmVkfTtcbiAgfVxuYDtcblxuY29uc3QgZ2V0QnV0dG9uU3R5bGVzID0gKHByb3BzOiBURHJvcGRvd25TdHlsZXNQcm9wcykgPT4gW1xuICBjc3NgXG4gICAgYm9yZGVyOiAwO1xuICAgIGZvbnQtZmFtaWx5OiAke2Rlc2lnblRva2Vucy5mb250RmFtaWx5RGVmYXVsdH07XG4gICAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNH07XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGZvbnQtc2l6ZTogJHtkZXNpZ25Ub2tlbnMuZm9udFNpemVGb3JJbnB1dH07XG4gICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU29saWR9O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAke3Byb3BzLmlzU3R5bGVCdXR0b25cbiAgICAgID8gYCR7ZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JMb2NhbGl6ZWRSaWNoVGV4dERyb3Bkb3duQnV0dG9ufWBcbiAgICAgIDogZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JMb2NhbGl6ZWRSaWNoVGV4dEJvZHlCdXR0b259O1xuXG4gICAgJjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JSaWNoVGV4dERyb3Bkb3duV2hlbkhvdmVyZWR9O1xuICAgIH1cbiAgYCxcbiAgcHJvcHMuaXNJbmRldGVybWluYXRlICYmXG4gICAgY3NzYFxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JBY2NlbnQ5NX07XG4gICAgYCxcbiAgcHJvcHMuaXNPcGVuICYmXG4gICAgY3NzYFxuICAgICAgJjpub3QoOmhvdmVyKSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclJpY2hUZXh0QnV0dG9ufTtcbiAgICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG5cbiAgICAgICAgc3ZnIHtcbiAgICAgICAgICBmaWxsOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgYCxcbiAgcHJvcHMuaXNSZWFkT25seSAmJlxuICAgIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw2MH07XG5cbiAgICAgIHN2ZyB7XG4gICAgICAgIGZpbGw6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDYwfTtcbiAgICAgIH1cbiAgICBgLFxuICBwcm9wcy5pc0Rpc2FibGVkICYmXG4gICAgY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDYwfTtcblxuICAgICAgc3ZnIHtcbiAgICAgICAgZmlsbDogJHtkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsNjB9O1xuICAgICAgfVxuICAgIGAsXG5dO1xuXG5jb25zdCBEcm9wZG93bkNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBmb250LXNpemU6ICR7ZGVzaWduVG9rZW5zLmZvbnRTaXplRm9ySW5wdXR9O1xuICB0b3A6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcxMH07XG4gIG1hcmdpbi10b3A6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcxMH07XG4gIGxlZnQ6IDA7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGJhY2tncm91bmQ6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHotaW5kZXg6IDk5OTk7XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9yU2VsZWN0SW5wdXRNZW51fTtcbiAgYm94LXNoYWRvdzogJHtkZXNpZ25Ub2tlbnMuc2hhZG93Rm9yU2VsZWN0SW5wdXRNZW51fTtcbiAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNn07XG5gO1xuXG5jb25zdCBEcm9wZG93bkl0ZW1MYWJlbFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxuICBtYXJnaW46ICR7ZGVzaWduVG9rZW5zLm1hcmdpbkZvclJpY2hUZXh0RHJvcGRvd25JdGVtTGFiZWx9O1xuYDtcblxuZXhwb3J0IHtcbiAgRHJvcGRvd25Db250YWluZXIsXG4gIERyb3Bkb3duSXRlbSxcbiAgRHJvcGRvd25JdGVtTGFiZWxXcmFwcGVyLFxuICBnZXRCdXR0b25TdHlsZXMsXG59O1xuIl19 */"), props.isDisabled && /*#__PURE__*/react$1.css("color:", designSystem.designTokens.colorNeutral60, ";svg{fill:", designSystem.designTokens.colorNeutral60, ";}" + (process.env.NODE_ENV === "production" ? "" : ";label:getButtonStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRyb3Bkb3duLnN0eWxlcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNEVPIiwiZmlsZSI6ImRyb3Bkb3duLnN0eWxlcy50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBkZXNpZ25Ub2tlbnMgfSBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC9kZXNpZ24tc3lzdGVtJztcblxudHlwZSBURHJvcGRvd25TdHlsZXNQcm9wcyA9IHtcbiAgaXNTZWxlY3RlZD86IGJvb2xlYW47XG4gIGlzSW5kZXRlcm1pbmF0ZT86IGJvb2xlYW47XG4gIGlzU3R5bGVCdXR0b24/OiBib29sZWFuO1xuICBpc09wZW4/OiBib29sZWFuO1xuICBpc0Rpc2FibGVkPzogYm9vbGVhbjtcbiAgaXNSZWFkT25seT86IGJvb2xlYW47XG59O1xuXG5jb25zdCBEcm9wZG93bkl0ZW0gPSBzdHlsZWQuYnV0dG9uPFREcm9wZG93blN0eWxlc1Byb3BzPmBcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlcjogMDtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JMb2NhbGl6ZWRSaWNoVGV4dERyb3Bkb3duSXRlbX07XG4gIGZvbnQtZmFtaWx5OiAke2Rlc2lnblRva2Vucy5mb250RmFtaWx5RGVmYXVsdH07XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkeyhwcm9wcykgPT5cbiAgICBwcm9wcy5pc1NlbGVjdGVkXG4gICAgICA/IGRlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JJbnB1dFdoZW5BY3RpdmVcbiAgICAgIDogZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG5cbiAgJjpmb2N1cyxcbiAgJjpob3ZlciB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JTZWxlY3RJbnB1dE9wdGlvbldoZW5Ib3ZlcmVkfTtcbiAgfVxuYDtcblxuY29uc3QgZ2V0QnV0dG9uU3R5bGVzID0gKHByb3BzOiBURHJvcGRvd25TdHlsZXNQcm9wcykgPT4gW1xuICBjc3NgXG4gICAgYm9yZGVyOiAwO1xuICAgIGZvbnQtZmFtaWx5OiAke2Rlc2lnblRva2Vucy5mb250RmFtaWx5RGVmYXVsdH07XG4gICAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNH07XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGZvbnQtc2l6ZTogJHtkZXNpZ25Ub2tlbnMuZm9udFNpemVGb3JJbnB1dH07XG4gICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU29saWR9O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAke3Byb3BzLmlzU3R5bGVCdXR0b25cbiAgICAgID8gYCR7ZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JMb2NhbGl6ZWRSaWNoVGV4dERyb3Bkb3duQnV0dG9ufWBcbiAgICAgIDogZGVzaWduVG9rZW5zLnBhZGRpbmdGb3JMb2NhbGl6ZWRSaWNoVGV4dEJvZHlCdXR0b259O1xuXG4gICAgJjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JSaWNoVGV4dERyb3Bkb3duV2hlbkhvdmVyZWR9O1xuICAgIH1cbiAgYCxcbiAgcHJvcHMuaXNJbmRldGVybWluYXRlICYmXG4gICAgY3NzYFxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JBY2NlbnQ5NX07XG4gICAgYCxcbiAgcHJvcHMuaXNPcGVuICYmXG4gICAgY3NzYFxuICAgICAgJjpub3QoOmhvdmVyKSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmJhY2tncm91bmRDb2xvckZvclJpY2hUZXh0QnV0dG9ufTtcbiAgICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG5cbiAgICAgICAgc3ZnIHtcbiAgICAgICAgICBmaWxsOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgYCxcbiAgcHJvcHMuaXNSZWFkT25seSAmJlxuICAgIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw2MH07XG5cbiAgICAgIHN2ZyB7XG4gICAgICAgIGZpbGw6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDYwfTtcbiAgICAgIH1cbiAgICBgLFxuICBwcm9wcy5pc0Rpc2FibGVkICYmXG4gICAgY3NzYFxuICAgICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDYwfTtcblxuICAgICAgc3ZnIHtcbiAgICAgICAgZmlsbDogJHtkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsNjB9O1xuICAgICAgfVxuICAgIGAsXG5dO1xuXG5jb25zdCBEcm9wZG93bkNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBmb250LXNpemU6ICR7ZGVzaWduVG9rZW5zLmZvbnRTaXplRm9ySW5wdXR9O1xuICB0b3A6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcxMH07XG4gIG1hcmdpbi10b3A6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmcxMH07XG4gIGxlZnQ6IDA7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGJhY2tncm91bmQ6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHotaW5kZXg6IDk5OTk7XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7ZGVzaWduVG9rZW5zLmJvcmRlckNvbG9yRm9yU2VsZWN0SW5wdXRNZW51fTtcbiAgYm94LXNoYWRvdzogJHtkZXNpZ25Ub2tlbnMuc2hhZG93Rm9yU2VsZWN0SW5wdXRNZW51fTtcbiAgYm9yZGVyLXJhZGl1czogJHtkZXNpZ25Ub2tlbnMuYm9yZGVyUmFkaXVzNn07XG5gO1xuXG5jb25zdCBEcm9wZG93bkl0ZW1MYWJlbFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxuICBtYXJnaW46ICR7ZGVzaWduVG9rZW5zLm1hcmdpbkZvclJpY2hUZXh0RHJvcGRvd25JdGVtTGFiZWx9O1xuYDtcblxuZXhwb3J0IHtcbiAgRHJvcGRvd25Db250YWluZXIsXG4gIERyb3Bkb3duSXRlbSxcbiAgRHJvcGRvd25JdGVtTGFiZWxXcmFwcGVyLFxuICBnZXRCdXR0b25TdHlsZXMsXG59O1xuIl19 */")];
const DropdownContainer = /*#__PURE__*/_styled__default["default"]("div", process.env.NODE_ENV === "production" ? {
  target: "e1f4n71b1"
} : {
  target: "e1f4n71b1",
  label: "DropdownContainer"
})("position:absolute;cursor:pointer;font-size:", designSystem.designTokens.fontSizeForInput, ";top:", designSystem.designTokens.spacing10, ";margin-top:", designSystem.designTokens.spacing10, ";left:0;white-space:nowrap;background:", designSystem.designTokens.colorSurface, ";overflow:hidden;z-index:9999;border:1px solid ", designSystem.designTokens.borderColorForSelectInputMenu, ";box-shadow:", designSystem.designTokens.shadowForSelectInputMenu, ";border-radius:", designSystem.designTokens.borderRadius6, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRyb3Bkb3duLnN0eWxlcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUZvQyIsImZpbGUiOiJkcm9wZG93bi5zdHlsZXMudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5cbnR5cGUgVERyb3Bkb3duU3R5bGVzUHJvcHMgPSB7XG4gIGlzU2VsZWN0ZWQ/OiBib29sZWFuO1xuICBpc0luZGV0ZXJtaW5hdGU/OiBib29sZWFuO1xuICBpc1N0eWxlQnV0dG9uPzogYm9vbGVhbjtcbiAgaXNPcGVuPzogYm9vbGVhbjtcbiAgaXNEaXNhYmxlZD86IGJvb2xlYW47XG4gIGlzUmVhZE9ubHk/OiBib29sZWFuO1xufTtcblxuY29uc3QgRHJvcGRvd25JdGVtID0gc3R5bGVkLmJ1dHRvbjxURHJvcGRvd25TdHlsZXNQcm9wcz5gXG4gIHdpZHRoOiAxMDAlO1xuICBib3JkZXI6IDA7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yTG9jYWxpemVkUmljaFRleHREcm9wZG93bkl0ZW19O1xuICBmb250LWZhbWlseTogJHtkZXNpZ25Ub2tlbnMuZm9udEZhbWlseURlZmF1bHR9O1xuICBkaXNwbGF5OiBibG9jaztcbiAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+XG4gICAgcHJvcHMuaXNTZWxlY3RlZFxuICAgICAgPyBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXRXaGVuQWN0aXZlXG4gICAgICA6IGRlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuXG4gICY6Zm9jdXMsXG4gICY6aG92ZXIge1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yU2VsZWN0SW5wdXRPcHRpb25XaGVuSG92ZXJlZH07XG4gIH1cbmA7XG5cbmNvbnN0IGdldEJ1dHRvblN0eWxlcyA9IChwcm9wczogVERyb3Bkb3duU3R5bGVzUHJvcHMpID0+IFtcbiAgY3NzYFxuICAgIGJvcmRlcjogMDtcbiAgICBmb250LWZhbWlseTogJHtkZXNpZ25Ub2tlbnMuZm9udEZhbWlseURlZmF1bHR9O1xuICAgIGJvcmRlci1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1czR9O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBmb250LXNpemU6ICR7ZGVzaWduVG9rZW5zLmZvbnRTaXplRm9ySW5wdXR9O1xuICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclNvbGlkfTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcGFkZGluZzogJHtwcm9wcy5pc1N0eWxlQnV0dG9uXG4gICAgICA/IGAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yTG9jYWxpemVkUmljaFRleHREcm9wZG93bkJ1dHRvbn1gXG4gICAgICA6IGRlc2lnblRva2Vucy5wYWRkaW5nRm9yTG9jYWxpemVkUmljaFRleHRCb2R5QnV0dG9ufTtcblxuICAgICY6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yUmljaFRleHREcm9wZG93bldoZW5Ib3ZlcmVkfTtcbiAgICB9XG4gIGAsXG4gIHByb3BzLmlzSW5kZXRlcm1pbmF0ZSAmJlxuICAgIGNzc2BcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yQWNjZW50OTV9O1xuICAgIGAsXG4gIHByb3BzLmlzT3BlbiAmJlxuICAgIGNzc2BcbiAgICAgICY6bm90KDpob3Zlcikge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JSaWNoVGV4dEJ1dHRvbn07XG4gICAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuXG4gICAgICAgIHN2ZyB7XG4gICAgICAgICAgZmlsbDogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIGAsXG4gIHByb3BzLmlzUmVhZE9ubHkgJiZcbiAgICBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsNjB9O1xuXG4gICAgICBzdmcge1xuICAgICAgICBmaWxsOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw2MH07XG4gICAgICB9XG4gICAgYCxcbiAgcHJvcHMuaXNEaXNhYmxlZCAmJlxuICAgIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw2MH07XG5cbiAgICAgIHN2ZyB7XG4gICAgICAgIGZpbGw6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDYwfTtcbiAgICAgIH1cbiAgICBgLFxuXTtcblxuY29uc3QgRHJvcGRvd25Db250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZm9udC1zaXplOiAke2Rlc2lnblRva2Vucy5mb250U2l6ZUZvcklucHV0fTtcbiAgdG9wOiAke2Rlc2lnblRva2Vucy5zcGFjaW5nMTB9O1xuICBtYXJnaW4tdG9wOiAke2Rlc2lnblRva2Vucy5zcGFjaW5nMTB9O1xuICBsZWZ0OiAwO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBiYWNrZ3JvdW5kOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB6LWluZGV4OiA5OTk5O1xuICBib3JkZXI6IDFweCBzb2xpZCAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvclNlbGVjdElucHV0TWVudX07XG4gIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLnNoYWRvd0ZvclNlbGVjdElucHV0TWVudX07XG4gIGJvcmRlci1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1czZ9O1xuYDtcblxuY29uc3QgRHJvcGRvd25JdGVtTGFiZWxXcmFwcGVyID0gc3R5bGVkLmRpdmBcbiAgbWFyZ2luOiAke2Rlc2lnblRva2Vucy5tYXJnaW5Gb3JSaWNoVGV4dERyb3Bkb3duSXRlbUxhYmVsfTtcbmA7XG5cbmV4cG9ydCB7XG4gIERyb3Bkb3duQ29udGFpbmVyLFxuICBEcm9wZG93bkl0ZW0sXG4gIERyb3Bkb3duSXRlbUxhYmVsV3JhcHBlcixcbiAgZ2V0QnV0dG9uU3R5bGVzLFxufTtcbiJdfQ== */"));
const DropdownItemLabelWrapper = /*#__PURE__*/_styled__default["default"]("div", process.env.NODE_ENV === "production" ? {
  target: "e1f4n71b0"
} : {
  target: "e1f4n71b0",
  label: "DropdownItemLabelWrapper"
})("margin:", designSystem.designTokens.marginForRichTextDropdownItemLabel, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRyb3Bkb3duLnN0eWxlcy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUcyQyIsImZpbGUiOiJkcm9wZG93bi5zdHlsZXMudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5cbnR5cGUgVERyb3Bkb3duU3R5bGVzUHJvcHMgPSB7XG4gIGlzU2VsZWN0ZWQ/OiBib29sZWFuO1xuICBpc0luZGV0ZXJtaW5hdGU/OiBib29sZWFuO1xuICBpc1N0eWxlQnV0dG9uPzogYm9vbGVhbjtcbiAgaXNPcGVuPzogYm9vbGVhbjtcbiAgaXNEaXNhYmxlZD86IGJvb2xlYW47XG4gIGlzUmVhZE9ubHk/OiBib29sZWFuO1xufTtcblxuY29uc3QgRHJvcGRvd25JdGVtID0gc3R5bGVkLmJ1dHRvbjxURHJvcGRvd25TdHlsZXNQcm9wcz5gXG4gIHdpZHRoOiAxMDAlO1xuICBib3JkZXI6IDA7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yTG9jYWxpemVkUmljaFRleHREcm9wZG93bkl0ZW19O1xuICBmb250LWZhbWlseTogJHtkZXNpZ25Ub2tlbnMuZm9udEZhbWlseURlZmF1bHR9O1xuICBkaXNwbGF5OiBibG9jaztcbiAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+XG4gICAgcHJvcHMuaXNTZWxlY3RlZFxuICAgICAgPyBkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9ySW5wdXRXaGVuQWN0aXZlXG4gICAgICA6IGRlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuXG4gICY6Zm9jdXMsXG4gICY6aG92ZXIge1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yU2VsZWN0SW5wdXRPcHRpb25XaGVuSG92ZXJlZH07XG4gIH1cbmA7XG5cbmNvbnN0IGdldEJ1dHRvblN0eWxlcyA9IChwcm9wczogVERyb3Bkb3duU3R5bGVzUHJvcHMpID0+IFtcbiAgY3NzYFxuICAgIGJvcmRlcjogMDtcbiAgICBmb250LWZhbWlseTogJHtkZXNpZ25Ub2tlbnMuZm9udEZhbWlseURlZmF1bHR9O1xuICAgIGJvcmRlci1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1czR9O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBmb250LXNpemU6ICR7ZGVzaWduVG9rZW5zLmZvbnRTaXplRm9ySW5wdXR9O1xuICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclNvbGlkfTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgcGFkZGluZzogJHtwcm9wcy5pc1N0eWxlQnV0dG9uXG4gICAgICA/IGAke2Rlc2lnblRva2Vucy5wYWRkaW5nRm9yTG9jYWxpemVkUmljaFRleHREcm9wZG93bkJ1dHRvbn1gXG4gICAgICA6IGRlc2lnblRva2Vucy5wYWRkaW5nRm9yTG9jYWxpemVkUmljaFRleHRCb2R5QnV0dG9ufTtcblxuICAgICY6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtkZXNpZ25Ub2tlbnMuYmFja2dyb3VuZENvbG9yRm9yUmljaFRleHREcm9wZG93bldoZW5Ib3ZlcmVkfTtcbiAgICB9XG4gIGAsXG4gIHByb3BzLmlzSW5kZXRlcm1pbmF0ZSAmJlxuICAgIGNzc2BcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yQWNjZW50OTV9O1xuICAgIGAsXG4gIHByb3BzLmlzT3BlbiAmJlxuICAgIGNzc2BcbiAgICAgICY6bm90KDpob3Zlcikge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2Rlc2lnblRva2Vucy5iYWNrZ3JvdW5kQ29sb3JGb3JSaWNoVGV4dEJ1dHRvbn07XG4gICAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuXG4gICAgICAgIHN2ZyB7XG4gICAgICAgICAgZmlsbDogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIGAsXG4gIHByb3BzLmlzUmVhZE9ubHkgJiZcbiAgICBjc3NgXG4gICAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JOZXV0cmFsNjB9O1xuXG4gICAgICBzdmcge1xuICAgICAgICBmaWxsOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw2MH07XG4gICAgICB9XG4gICAgYCxcbiAgcHJvcHMuaXNEaXNhYmxlZCAmJlxuICAgIGNzc2BcbiAgICAgIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvck5ldXRyYWw2MH07XG5cbiAgICAgIHN2ZyB7XG4gICAgICAgIGZpbGw6ICR7ZGVzaWduVG9rZW5zLmNvbG9yTmV1dHJhbDYwfTtcbiAgICAgIH1cbiAgICBgLFxuXTtcblxuY29uc3QgRHJvcGRvd25Db250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZm9udC1zaXplOiAke2Rlc2lnblRva2Vucy5mb250U2l6ZUZvcklucHV0fTtcbiAgdG9wOiAke2Rlc2lnblRva2Vucy5zcGFjaW5nMTB9O1xuICBtYXJnaW4tdG9wOiAke2Rlc2lnblRva2Vucy5zcGFjaW5nMTB9O1xuICBsZWZ0OiAwO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBiYWNrZ3JvdW5kOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB6LWluZGV4OiA5OTk5O1xuICBib3JkZXI6IDFweCBzb2xpZCAke2Rlc2lnblRva2Vucy5ib3JkZXJDb2xvckZvclNlbGVjdElucHV0TWVudX07XG4gIGJveC1zaGFkb3c6ICR7ZGVzaWduVG9rZW5zLnNoYWRvd0ZvclNlbGVjdElucHV0TWVudX07XG4gIGJvcmRlci1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1czZ9O1xuYDtcblxuY29uc3QgRHJvcGRvd25JdGVtTGFiZWxXcmFwcGVyID0gc3R5bGVkLmRpdmBcbiAgbWFyZ2luOiAke2Rlc2lnblRva2Vucy5tYXJnaW5Gb3JSaWNoVGV4dERyb3Bkb3duSXRlbUxhYmVsfTtcbmA7XG5cbmV4cG9ydCB7XG4gIERyb3Bkb3duQ29udGFpbmVyLFxuICBEcm9wZG93bkl0ZW0sXG4gIERyb3Bkb3duSXRlbUxhYmVsV3JhcHBlcixcbiAgZ2V0QnV0dG9uU3R5bGVzLFxufTtcbiJdfQ== */"));

function ownKeys$2(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var _context3, _context4; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context3 = ownKeys$2(Object(source), !0)).call(_context3, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context4 = ownKeys$2(Object(source))).call(_context4, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
function _EMOTION_STRINGIFIED_CSS_ERROR__$1() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }
const Label = _styled__default["default"]("div", process.env.NODE_ENV === "production" ? {
  target: "e176a1kh0"
} : {
  target: "e176a1kh0",
  label: "Label"
});
var _ref$1 = process.env.NODE_ENV === "production" ? {
  name: "bjn8wh",
  styles: "position:relative"
} : {
  name: "p8svpx-Dropdown",
  styles: "position:relative;label:Dropdown;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRyb3Bkb3duLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0RndCIiwiZmlsZSI6ImRyb3Bkb3duLnRzeCIsInNvdXJjZXNDb250ZW50IjpbIi8vLyA8cmVmZXJlbmNlIHR5cGVzPVwiQGVtb3Rpb24vcmVhY3QvdHlwZXMvY3NzLXByb3BcIiAvPlxuaW1wb3J0IHR5cGUgeyBFbGVtZW50VHlwZSwgRnVuY3Rpb25Db21wb25lbnQsIFJlYWN0Tm9kZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBEb3duc2hpZnRVbnR5cGVkLCB7IHR5cGUgQ29udHJvbGxlclN0YXRlQW5kSGVscGVycyB9IGZyb20gJ2Rvd25zaGlmdCc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgVG9vbHRpcCBmcm9tICdAY29tbWVyY2V0b29scy11aWtpdC90b29sdGlwJztcbmltcG9ydCBCdXR0b24gZnJvbSAnLi9yaWNoLXRleHQtYm9keS1idXR0b24nO1xuaW1wb3J0IHtcbiAgZ2V0QnV0dG9uU3R5bGVzLFxuICBEcm9wZG93bkNvbnRhaW5lcixcbiAgRHJvcGRvd25JdGVtTGFiZWxXcmFwcGVyLFxuICBEcm9wZG93bkl0ZW0gYXMgU3R5bGVkRHJvcGRvd25JdGVtLFxufSBmcm9tICcuL2Ryb3Bkb3duLnN0eWxlcyc7XG5cbmV4cG9ydCB0eXBlIFREcm9wZG93bkxhYmVsID0ge1xuICBjaGlsZHJlbjogUmVhY3ROb2RlO1xufTtcblxuZXhwb3J0IHR5cGUgVERyb3Bkb3duUHJvcHMgPSB7XG4gIGxhYmVsOiBzdHJpbmc7XG4gIGlzTXVsdGk6IGJvb2xlYW47XG4gIGlzRGlzYWJsZWQ/OiBib29sZWFuO1xuICBpc1JlYWRPbmx5PzogYm9vbGVhbjtcbiAgb25DaGFuZ2U/OiAoeyB2YWx1ZSB9OiBUSXRlbSkgPT4gdm9pZDtcbiAgY29tcG9uZW50czoge1xuICAgIEl0ZW06IEZ1bmN0aW9uQ29tcG9uZW50PHVua25vd24+O1xuICAgIExhYmVsOiBGdW5jdGlvbkNvbXBvbmVudDxURHJvcGRvd25MYWJlbD47XG4gIH07XG4gIG9wdGlvbnM6IEFycmF5PFRJdGVtPjtcbiAgZ2V0SXNJdGVtU2VsZWN0ZWQ6ICh7IHZhbHVlIH06IFRJdGVtKSA9PiBib29sZWFuO1xufTtcblxudHlwZSBUSXRlbSA9IHtcbiAgdmFsdWU6IHN0cmluZztcbiAgbGFiZWw6IHN0cmluZztcbn07XG5cbnR5cGUgVEhlYWRpbmdzID0ge1xuICBsYWJlbD86IHN0cmluZztcbn07XG5cbmNvbnN0IExhYmVsID0gc3R5bGVkLmRpdjtcblxuY29uc3QgRHJvcGRvd24gPSAocHJvcHM6IFREcm9wZG93blByb3BzKSA9PiB7XG4gIGNvbnN0IERyb3Bkb3duSXRlbTogRnVuY3Rpb25Db21wb25lbnQ8e1xuICAgIHZhbHVlOiBzdHJpbmc7XG4gICAgaXNTZWxlY3RlZDogYm9vbGVhbjtcbiAgfT4gPSBwcm9wcy5jb21wb25lbnRzLkl0ZW07XG4gIGNvbnN0IERyb3Bkb3duTGFiZWwgPSBwcm9wcy5jb21wb25lbnRzLkxhYmVsO1xuXG4gIGNvbnN0IGlzSW5kZXRlcm1pbmF0ZSA9XG4gICAgcHJvcHMuaXNNdWx0aSAmJlxuICAgIHByb3BzLm9wdGlvbnMuc29tZSgoaXRlbSkgPT4gcHJvcHMuZ2V0SXNJdGVtU2VsZWN0ZWQoaXRlbSkgPT09IHRydWUpO1xuXG4gIGNvbnN0IERvd25zaGlmdCA9IERvd25zaGlmdFVudHlwZWQgYXMgRWxlbWVudFR5cGU7XG5cbiAgcmV0dXJuIChcbiAgICA8RG93bnNoaWZ0XG4gICAgICBvbkNoYW5nZT17cHJvcHMub25DaGFuZ2V9XG4gICAgICBpdGVtVG9TdHJpbmc9eyhoZWFkaW5nczogVEhlYWRpbmdzKSA9PiBoZWFkaW5ncz8ubGFiZWwgfHwgJyd9XG4gICAgPlxuICAgICAgeyh7XG4gICAgICAgIGlzT3BlbixcbiAgICAgICAgZ2V0VG9nZ2xlQnV0dG9uUHJvcHMsXG4gICAgICAgIGdldEl0ZW1Qcm9wcyxcbiAgICAgIH06IENvbnRyb2xsZXJTdGF0ZUFuZEhlbHBlcnM8dW5rbm93bj4pID0+IHtcbiAgICAgICAgY29uc3QgdG9nZ2xlQnV0dG9uUHJvcHMgPSBnZXRUb2dnbGVCdXR0b25Qcm9wcygpO1xuXG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgIDxUb29sdGlwXG4gICAgICAgICAgICAgIHRpdGxlPXtwcm9wcy5sYWJlbH1cbiAgICAgICAgICAgICAgcGxhY2VtZW50PVwiYm90dG9tXCJcbiAgICAgICAgICAgICAgb2ZmPXtpc09wZW59XG4gICAgICAgICAgICAgIHN0eWxlcz17eyBib2R5OiB7IHpJbmRleDogOTk5OSB9IH19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICB7Li4udG9nZ2xlQnV0dG9uUHJvcHN9XG4gICAgICAgICAgICAgICAgbGFiZWw9e3Byb3BzLmxhYmVsfVxuICAgICAgICAgICAgICAgIGNzcz17Z2V0QnV0dG9uU3R5bGVzKHtcbiAgICAgICAgICAgICAgICAgIGlzT3BlbixcbiAgICAgICAgICAgICAgICAgIGlzSW5kZXRlcm1pbmF0ZSxcbiAgICAgICAgICAgICAgICAgIGlzU3R5bGVCdXR0b246ICFwcm9wcy5pc011bHRpLFxuICAgICAgICAgICAgICAgICAgaXNEaXNhYmxlZDogcHJvcHMuaXNEaXNhYmxlZCxcbiAgICAgICAgICAgICAgICAgIGlzUmVhZE9ubHk6IHByb3BzLmlzUmVhZE9ubHksXG4gICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8RHJvcGRvd25MYWJlbD57cHJvcHMubGFiZWx9PC9Ecm9wZG93bkxhYmVsPlxuICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgIDwvVG9vbHRpcD5cbiAgICAgICAgICAgIHtpc09wZW4gPyAoXG4gICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgICAgICBgfVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPERyb3Bkb3duQ29udGFpbmVyPlxuICAgICAgICAgICAgICAgICAge3Byb3BzLm9wdGlvbnMubWFwKChpdGVtLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBpdGVtUHJvcHMgPSBnZXRJdGVtUHJvcHMoe1xuICAgICAgICAgICAgICAgICAgICAgIGluZGV4LFxuICAgICAgICAgICAgICAgICAgICAgIGl0ZW0sXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBkcm9wZG93bkl0ZW1Qcm9wcyA9IGl0ZW1Qcm9wcztcblxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgIDxEcm9wZG93bkl0ZW1cbiAgICAgICAgICAgICAgICAgICAgICAgIHsuLi5kcm9wZG93bkl0ZW1Qcm9wc31cbiAgICAgICAgICAgICAgICAgICAgICAgIGtleT17aW5kZXh9XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17aXRlbS52YWx1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlzU2VsZWN0ZWQ9e3Byb3BzLmdldElzSXRlbVNlbGVjdGVkKGl0ZW0pfVxuICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxEcm9wZG93bkl0ZW1MYWJlbFdyYXBwZXI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHtpdGVtLmxhYmVsfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9Ecm9wZG93bkl0ZW1MYWJlbFdyYXBwZXI+XG4gICAgICAgICAgICAgICAgICAgICAgPC9Ecm9wZG93bkl0ZW0+XG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgICAgICA8L0Ryb3Bkb3duQ29udGFpbmVyPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICkgOiBudWxsfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgICAgfX1cbiAgICA8L0Rvd25zaGlmdD5cbiAgKTtcbn07XG5cbkRyb3Bkb3duLmRpc3BsYXlOYW1lID0gJ0Ryb3Bkb3duJztcblxuRHJvcGRvd24uZGVmYXVsdFByb3BzID0ge1xuICBjb21wb25lbnRzOiB7XG4gICAgSXRlbTogU3R5bGVkRHJvcGRvd25JdGVtLFxuICAgIExhYmVsLFxuICB9LFxuICBpc011bHRpOiBmYWxzZSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IERyb3Bkb3duO1xuIl19 */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__$1
};
const Dropdown = props => {
  var _context;
  const DropdownItem = props.components.Item;
  const DropdownLabel = props.components.Label;
  const isIndeterminate = props.isMulti && _someInstanceProperty__default["default"](_context = props.options).call(_context, item => props.getIsItemSelected(item) === true);
  const Downshift = DownshiftUntyped__default["default"];
  return jsxRuntime.jsx(Downshift, {
    onChange: props.onChange,
    itemToString: headings => (headings === null || headings === void 0 ? void 0 : headings.label) || '',
    children: _ref2 => {
      var _context2;
      let isOpen = _ref2.isOpen,
        getToggleButtonProps = _ref2.getToggleButtonProps,
        getItemProps = _ref2.getItemProps;
      const toggleButtonProps = getToggleButtonProps();
      return jsxRuntime.jsxs("div", {
        children: [jsxRuntime.jsx(Tooltip__default["default"], {
          title: props.label,
          placement: "bottom",
          off: isOpen,
          styles: {
            body: {
              zIndex: 9999
            }
          },
          children: jsxRuntime.jsx(Button, _objectSpread$2(_objectSpread$2({}, toggleButtonProps), {}, {
            label: props.label,
            css: getButtonStyles({
              isOpen,
              isIndeterminate,
              isStyleButton: !props.isMulti,
              isDisabled: props.isDisabled,
              isReadOnly: props.isReadOnly
            }),
            children: jsxRuntime.jsx(DropdownLabel, {
              children: props.label
            })
          }))
        }), isOpen ? jsxRuntime.jsx("div", {
          css: _ref$1,
          children: jsxRuntime.jsx(DropdownContainer, {
            children: _mapInstanceProperty__default["default"](_context2 = props.options).call(_context2, (item, index) => {
              const itemProps = getItemProps({
                index,
                item
              });
              const dropdownItemProps = itemProps;
              return react$1.createElement(DropdownItem, _objectSpread$2(_objectSpread$2({}, dropdownItemProps), {}, {
                key: index,
                value: item.value,
                isSelected: props.getIsItemSelected(item)
              }), jsxRuntime.jsx(DropdownItemLabelWrapper, {
                children: item.label
              }));
            })
          })
        }) : null]
      });
    }
  });
};
Dropdown.propTypes = process.env.NODE_ENV !== "production" ? {
  label: _pt__default["default"].string.isRequired,
  isMulti: _pt__default["default"].bool,
  isDisabled: _pt__default["default"].bool,
  isReadOnly: _pt__default["default"].bool,
  onChange: _pt__default["default"].func,
  components: _pt__default["default"].shape({
    Item: _pt__default["default"].any.isRequired,
    Label: _pt__default["default"].any.isRequired
  }),
  options: _pt__default["default"].arrayOf(_pt__default["default"].shape({
    value: _pt__default["default"].string.isRequired,
    label: _pt__default["default"].string.isRequired
  })).isRequired,
  getIsItemSelected: _pt__default["default"].func.isRequired
} : {};
Dropdown.displayName = 'Dropdown';
Dropdown.defaultProps = {
  components: {
    Item: DropdownItem,
    Label
  },
  isMulti: false
};
var Dropdown$1 = Dropdown;

const BLOCK_TAGS = {
  blockquote: 'block-quote',
  p: 'paragraph',
  h1: 'heading-one',
  h2: 'heading-two',
  h3: 'heading-three',
  h4: 'heading-four',
  h5: 'heading-five',
  pre: 'code',
  li: 'list-item',
  ol: 'numbered-list',
  ul: 'bulleted-list'
};

// Add a dictionary of mark tags.
const MARK_TAGS = {
  em: 'italic',
  strong: 'bold',
  u: 'underline',
  sup: 'superscript',
  sub: 'subscript',
  del: 'strikethrough',
  span: 'span'
};

var messages = reactIntl.defineMessages({
  boldButtonLabel: {
    id: 'UIKit.RichTextBody.boldButtonLabel',
    description: 'Label for the bold button',
    defaultMessage: 'Bold'
  },
  expandButtonLabel: {
    id: 'UIKit.RichTextBody.expandButtonLabel',
    description: 'Label for the expand button',
    defaultMessage: 'Expand'
  },
  italicButtonLabel: {
    id: 'UIKit.RichTextBody.italicButtonLabel',
    description: 'Label for the italic button',
    defaultMessage: 'Italic'
  },
  moreStylesDropdownLabel: {
    id: 'UIKit.RichTextBody.moreStylesDropdownLabel',
    description: 'Label for the more styles dropdown',
    defaultMessage: 'More styles'
  },
  moreStylesDropdownOptionStrikethrough: {
    id: 'UIKit.RichTextBody.moreStylesDropdownOptionStrikethrough',
    description: 'label for the more styles `strikethrough` option',
    defaultMessage: 'Strikethrough'
  },
  moreStylesDropdownOptionSuperscript: {
    id: 'UIKit.RichTextBody.moreStylesDropdownOptionSuperscript',
    description: 'label for the more styles `superscript` option',
    defaultMessage: 'Superscript'
  },
  moreStylesDropdownOptionSubscript: {
    id: 'UIKit.RichTextBody.moreStylesDropdownOptionSubscript',
    description: 'label for the more styles `subscript` option',
    defaultMessage: 'Subscript'
  },
  orderedListButtonLabel: {
    id: 'UIKit.RichTextBody.orderedListButtonLabel',
    description: 'Label for the numbered list button',
    defaultMessage: 'Numbered list'
  },
  redoButtonLabel: {
    id: 'UIKit.RichTextBody.redoButtonLabel',
    description: 'Label for the redo button',
    defaultMessage: 'Redo'
  },
  styleDropdownLabel: {
    id: 'UIKit.RichTextBody.styleDropdownLabel',
    description: 'Label for the style dropdown',
    defaultMessage: 'Text styles'
  },
  styleDropdownOptionParagraph: {
    id: 'UIKit.RichTextBody.styleDropdownOptionParagraph',
    description: 'Label for the `paragraph` option',
    defaultMessage: 'Paragraph'
  },
  styleDropdownOptionH1: {
    id: 'UIKit.RichTextBody.styleDropdownOptionH1',
    description: 'Label for the `headline-one` option',
    defaultMessage: 'Headline H1'
  },
  styleDropdownOptionH2: {
    id: 'UIKit.RichTextBody.styleDropdownOptionH2',
    description: 'Label for the `headline-two` option',
    defaultMessage: 'Headline H2'
  },
  styleDropdownOptionH3: {
    id: 'UIKit.RichTextBody.styleDropdownOptionH3',
    description: 'Label for the `headline-three` option',
    defaultMessage: 'Headline H3'
  },
  styleDropdownOptionH4: {
    id: 'UIKit.RichTextBody.styleDropdownOptionH4',
    description: 'Label for the `headline-four` option',
    defaultMessage: 'Headline H4'
  },
  styleDropdownOptionH5: {
    id: 'UIKit.RichTextBody.styleDropdownOptionH5',
    description: 'Label for the `headline-five` option',
    defaultMessage: 'Headline H5'
  },
  styleDropdownOptionQuote: {
    id: 'UIKit.RichTextBody.styleDropdownOptionQuote',
    description: 'Label for the `quote` option',
    defaultMessage: 'Quote'
  },
  styleDropdownOptionPreformatted: {
    id: 'UIKit.RichTextBody.styleDropdownOptionPreformatted',
    description: 'Label for the `code` option',
    defaultMessage: 'Preformatted'
  },
  underlinedButtonLabel: {
    id: 'UIKit.RichTextBody.underlinedButtonLabel',
    description: 'Label for the underline button',
    defaultMessage: 'Underline'
  },
  undoButtonLabel: {
    id: 'UIKit.RichTextBody.undoButtonLabel',
    description: 'Label for the undo button',
    defaultMessage: 'Undo'
  },
  unorderedListButtonLabel: {
    id: 'UIKit.RichTextBody.unorderedListButtonLabel',
    description: 'Label for the bullet list button',
    defaultMessage: 'Bullet list'
  }
});

function ownKeys$1(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var _context2, _context3; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context2 = ownKeys$1(Object(source), !0)).call(_context2, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context3 = ownKeys$1(Object(source))).call(_context3, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const LIST_TYPES = [BLOCK_TAGS.ol, BLOCK_TAGS.ul];

/* 
  From Slate's own implementation of rich text editor
  https://github.com/ianstormtaylor/slate/blob/main/site/examples/richtext.tsx#L133:L179
 */
const Element = _ref => {
  let attributes = _ref.attributes,
    children = _ref.children,
    element = _ref.element;
  const style = {
    textAlign: element.align
  };
  switch (element.type) {
    case BLOCK_TAGS.blockquote:
      return jsxRuntime.jsx("blockquote", _objectSpread$1(_objectSpread$1({
        style: style
      }, attributes), {}, {
        children: children
      }));
    case BLOCK_TAGS.ul:
      return jsxRuntime.jsx("ul", _objectSpread$1(_objectSpread$1({
        style: style
      }, attributes), {}, {
        children: children
      }));
    case BLOCK_TAGS.h1:
      return jsxRuntime.jsx("h1", _objectSpread$1(_objectSpread$1({
        style: style
      }, attributes), {}, {
        children: children
      }));
    case BLOCK_TAGS.h2:
      return jsxRuntime.jsx("h2", _objectSpread$1(_objectSpread$1({
        style: style
      }, attributes), {}, {
        children: children
      }));
    case BLOCK_TAGS.h3:
      return jsxRuntime.jsx("h3", _objectSpread$1(_objectSpread$1({
        style: style
      }, attributes), {}, {
        children: children
      }));
    case BLOCK_TAGS.h4:
      return jsxRuntime.jsx("h4", _objectSpread$1(_objectSpread$1({
        style: style
      }, attributes), {}, {
        children: children
      }));
    case BLOCK_TAGS.h5:
      return jsxRuntime.jsx("h5", _objectSpread$1(_objectSpread$1({
        style: style
      }, attributes), {}, {
        children: children
      }));
    case BLOCK_TAGS.li:
      return jsxRuntime.jsx("li", _objectSpread$1(_objectSpread$1({
        style: style
      }, attributes), {}, {
        children: children
      }));
    case BLOCK_TAGS.ol:
      return jsxRuntime.jsx("ol", _objectSpread$1(_objectSpread$1({
        style: style
      }, attributes), {}, {
        children: children
      }));
    default:
      return jsxRuntime.jsx("p", _objectSpread$1(_objectSpread$1({
        style: style
      }, attributes), {}, {
        children: children
      }));
  }
};

/* 
  From Slate's own implementation of rich text editor
  https://github.com/ianstormtaylor/slate/blob/main/site/examples/richtext.tsx#L181:L199
 */
const Leaf = _ref2 => {
  let attributes = _ref2.attributes,
    children = _ref2.children,
    leaf = _ref2.leaf;
  if (leaf.bold) {
    children = jsxRuntime.jsx("strong", {
      children: children
    });
  }
  if (leaf.code) {
    children = jsxRuntime.jsx("code", {
      children: children
    });
  }
  if (leaf.italic) {
    children = jsxRuntime.jsx("em", {
      children: children
    });
  }
  if (leaf.underline) {
    children = jsxRuntime.jsx("u", {
      children: children
    });
  }
  if (leaf.superscript) {
    children = jsxRuntime.jsx("sup", {
      children: children
    });
  }
  if (leaf.subscript) {
    children = jsxRuntime.jsx("sub", {
      children: children
    });
  }
  if (leaf.strikethrough) {
    children = jsxRuntime.jsx("del", {
      children: children
    });
  }
  return jsxRuntime.jsx("span", _objectSpread$1(_objectSpread$1({}, attributes), {}, {
    children: children
  }));
};

/* 
  From Slate's own implementation of rich text editor
  https://github.com/ianstormtaylor/slate/blob/main/site/examples/richtext.tsx#L128:L131
 */
const isMarkActive = (editor, format) => {
  const marks = slate.Editor.marks(editor);
  return marks ? marks[format] === true : false;
};

/* 
  From Slate's own implementation of rich text editor
  https://github.com/ianstormtaylor/slate/blob/main/site/examples/richtext.tsx#L101:L09
 */
const toggleMark = (editor, format) => {
  const isActive = isMarkActive(editor, format);
  if (isActive) {
    slate.Editor.removeMark(editor, format);
  } else {
    slate.Editor.addMark(editor, format, true);
  }
};

/* 
  From Slate's own implementation of rich text editor
  https://github.com/ianstormtaylor/slate/blob/main/site/examples/richtext.tsx#L111:L126
 */
const isBlockActive = (editor, format) => {
  const selection = editor.selection;
  if (!selection) return false;
  const _Array$from = _Array$from__default["default"](slate.Editor.nodes(editor, {
      at: slate.Editor.unhangRange(editor, selection),
      match: n => !slate.Editor.isEditor(n) && slate.Element.isElement(n) && n.type === format
    })),
    _Array$from2 = _slicedToArray(_Array$from, 1),
    match = _Array$from2[0];
  return Boolean(match);
};

/* 
  From slate's own implementation of rich text editor
  https://github.com/ianstormtaylor/slate/blob/main/site/examples/richtext.tsx#L67:L99
 */
const toggleBlock = (editor, format) => {
  const isActive = isBlockActive(editor, format);
  const isList = _includesInstanceProperty__default["default"](LIST_TYPES).call(LIST_TYPES, format);
  slate.Transforms.unwrapNodes(editor, {
    match: n => !slate.Editor.isEditor(n) && slate.Element.isElement(n) && _includesInstanceProperty__default["default"](LIST_TYPES).call(LIST_TYPES, n.type),
    split: true
  });
  const newProperties = {
    type: isActive ? BLOCK_TAGS.p : isList ? BLOCK_TAGS.li : format
  };
  slate.Transforms.setNodes(editor, newProperties);
  if (!isActive && isList) {
    const block = {
      type: format,
      children: []
    };
    slate.Transforms.wrapNodes(editor, block);
  }
};
function nonNullable(value) {
  return value !== null && value !== undefined;
}
const validSlateStateAdapter = value => {
  const valueAsArray = _Array$isArray__default["default"](value) ? value : [value];
  if (slate.Element.isElementList(value) || slate.Text.isTextList(value) ||
  // in case of an array of mixed text and element nodes
  _Array$isArray__default["default"](value) && _everyInstanceProperty__default["default"](value).call(value, node => slate.Element.isElement(node) || slate.Text.isText(node))) {
    var _context;
    return _filterInstanceProperty__default["default"](_context = _mapInstanceProperty__default["default"](valueAsArray).call(valueAsArray, node => slate.Text.isText(node) ? {
      type: 'text',
      children: [node]
    } : node)).call(_context, nonNullable);
  }
  return defaultSlateState;
};
const resetEditor = (editor, resetValue) => {
  slate.Transforms.delete(editor, {
    at: {
      anchor: slate.Editor.start(editor, []),
      focus: slate.Editor.end(editor, [])
    }
  });

  // remove empty node
  slate.Transforms.removeNodes(editor, {
    at: [0]
  });
  const newState = resetValue ? validSlateStateAdapter(html$1.deserialize(resetValue)) : defaultSlateState;

  // insert all new nodes
  slate.Transforms.insertNodes(editor, newState);
};
const focusEditor = editor => {
  slateReact.ReactEditor.focus(editor);
  slate.Transforms.select(editor, slate.Editor.end(editor, []));
};

const MarkButton = props => {
  const editor = slateReact.useSlate();
  return jsxRuntime.jsx(Button, {
    isDisabled: props.isDisabled,
    isReadOnly: props.isReadOnly,
    isActive: isMarkActive(editor, props.format),
    onClick: event => {
      event.preventDefault();
      toggleMark(editor, props.format);
    },
    label: props.label,
    children: props.children
  });
};
MarkButton.propTypes = process.env.NODE_ENV !== "production" ? {
  format: _pt__default["default"].string.isRequired,
  isDisabled: _pt__default["default"].bool,
  label: _pt__default["default"].string.isRequired,
  isReadOnly: _pt__default["default"].bool,
  children: _pt__default["default"].node.isRequired
} : {};
const BlockButton = props => {
  const editor = slateReact.useSlate();
  return jsxRuntime.jsx(Button, {
    isDisabled: props.isDisabled,
    isReadOnly: props.isReadOnly,
    isActive: isBlockActive(editor, props.format),
    onClick: event => {
      event.preventDefault();
      toggleBlock(editor, props.format);
    },
    label: props.label,
    children: props.children
  });
};
BlockButton.propTypes = process.env.NODE_ENV !== "production" ? {
  format: _pt__default["default"].string.isRequired,
  isDisabled: _pt__default["default"].bool,
  label: _pt__default["default"].string.isRequired,
  isReadOnly: _pt__default["default"].bool,
  children: _pt__default["default"].node.isRequired
} : {};

function ownKeys(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var _context2, _context3; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context2 = ownKeys(Object(source), !0)).call(_context2, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context3 = ownKeys(Object(source))).call(_context3, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }
const MoreStylesDropdownLabel = () => jsxRuntime.jsx(MoreStylesIcon$1, {
  size: "medium"
});
MoreStylesDropdownLabel.displayName = 'MoreStylesDropdownLabel';
const MoreStylesDropdownItem = props => {
  let Icon;
  switch (props.value) {
    case MARK_TAGS.sub:
      Icon = SubscriptIcon$1;
      break;
    case MARK_TAGS.del:
      Icon = StrikethroughIcon$1;
      break;
    default:
      Icon = SuperscriptIcon$1;
  }
  return jsxRuntime.jsx(DropdownItem, _objectSpread(_objectSpread({}, props), {}, {
    children: jsxRuntime.jsxs(Inline__default["default"], {
      scale: "xs",
      alignItems: "center",
      justifyContent: "flex-start",
      children: [jsxRuntime.jsx(Icon, {
        size: "medium"
      }), jsxRuntime.jsx("div", {
        children: props.children
      })]
    })
  }));
};
MoreStylesDropdownItem.propTypes = process.env.NODE_ENV !== "production" ? {
  value: _pt__default["default"].string,
  children: _pt__default["default"].node
} : {};
MoreStylesDropdownItem.displayName = 'MoreStylesDropdownItem';
const DropdownLabel = props => {
  return jsxRuntime.jsxs(Inline__default["default"], {
    scale: "xs",
    alignItems: "center",
    justifyContent: "center",
    children: [jsxRuntime.jsx("span", {
      children: props.children
    }), jsxRuntime.jsx(icons.CaretDownIcon, {
      size: "small"
    })]
  });
};
DropdownLabel.displayName = 'DropdownLabel';
const Item = /*#__PURE__*/_styled__default["default"]("div", process.env.NODE_ENV === "production" ? {
  target: "e1yf02eo0"
} : {
  target: "e1yf02eo0",
  label: "Item"
})(process.env.NODE_ENV === "production" ? {
  name: "1rmndyi",
  styles: "margin:0;text-align:left"
} : {
  name: "1rmndyi",
  styles: "margin:0;text-align:left",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});
const StylesDropdownItem = props => {
  var _context;
  const asProp = _findInstanceProperty__default["default"](_context = _Object$keys__default["default"](BLOCK_TAGS)).call(_context, key => BLOCK_TAGS[key] === props.value) || 'div';
  return jsxRuntime.jsx(DropdownItem, _objectSpread(_objectSpread({}, props), {}, {
    children: jsxRuntime.jsx(Item, {
      as: asProp,
      children: props.children
    })
  }));
};
StylesDropdownItem.propTypes = process.env.NODE_ENV !== "production" ? {
  value: _pt__default["default"].string,
  children: _pt__default["default"].node,
  displayName: _pt__default["default"].string
} : {};
StylesDropdownItem.displayName = 'StylesDropdownItem';
const tooltipStyles = {
  body: {
    zIndex: 9999
  }
};
const createStyleDropdownOptions = intl => {
  return [{
    label: intl.formatMessage(messages.styleDropdownOptionParagraph),
    value: BLOCK_TAGS.p
  }, {
    label: intl.formatMessage(messages.styleDropdownOptionH1),
    value: BLOCK_TAGS.h1
  }, {
    label: intl.formatMessage(messages.styleDropdownOptionH2),
    value: BLOCK_TAGS.h2
  }, {
    label: intl.formatMessage(messages.styleDropdownOptionH3),
    value: BLOCK_TAGS.h3
  }, {
    label: intl.formatMessage(messages.styleDropdownOptionH4),
    value: BLOCK_TAGS.h4
  }, {
    label: intl.formatMessage(messages.styleDropdownOptionH5),
    value: BLOCK_TAGS.h5
  }, {
    label: intl.formatMessage(messages.styleDropdownOptionQuote),
    value: BLOCK_TAGS.blockquote
  }, {
    label: intl.formatMessage(messages.styleDropdownOptionPreformatted),
    value: BLOCK_TAGS.pre
  }];
};
const createMoreStylesDropdownOptions = intl => {
  return [{
    label: intl.formatMessage(messages.moreStylesDropdownOptionStrikethrough),
    value: MARK_TAGS.del
  }, {
    label: intl.formatMessage(messages.moreStylesDropdownOptionSuperscript),
    value: MARK_TAGS.sup
  }, {
    label: intl.formatMessage(messages.moreStylesDropdownOptionSubscript),
    value: MARK_TAGS.sub
  }];
};
var _ref = process.env.NODE_ENV === "production" ? {
  name: "1h10g35",
  styles: "display:flex;flex-wrap:wrap;>*{margin-left:1px;}"
} : {
  name: "1jeej1l-RichTextEditorBody",
  styles: "display:flex;flex-wrap:wrap;>*{margin-left:1px;};label:RichTextEditorBody;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};
const RichTextEditorBody = /*#__PURE__*/react.forwardRef((props, ref) => {
  var _props$styles;
  // NOTE: the forwarded ref is an object of refs, thus making it a bit trickier to type.
  const _ref2 = ref,
    registerContentNode = _ref2.registerContentNode,
    containerRef = _ref2.containerRef;
  const intl = reactIntl.useIntl();
  const editor = slateReact.useSlate();
  const dropdownOptions = createMoreStylesDropdownOptions(intl);
  const styleDropdownOptions = createStyleDropdownOptions(intl);
  const hasUndos = editor.history.undos.length > 0;
  const hasRedos = editor.history.redos.length > 0;
  const onClickBlock = react.useCallback(_ref3 => {
    let format = _ref3.value;
    toggleBlock(editor, format);
  }, [editor]);
  const onClickMoreStyleMark = react.useCallback(_ref4 => {
    let format = _ref4.value;
    toggleMark(editor, format);
  }, [editor]);
  const getIsMoreStyleMarkItemSelected = react.useCallback(_ref5 => {
    let format = _ref5.value;
    return isMarkActive(editor, format);
  }, [editor]);
  const getIsBlockItemSelected = react.useCallback(_ref6 => {
    let format = _ref6.value;
    return isBlockActive(editor, format);
  }, [editor]);

  // https://codepen.io/mudassir0909/pen/eIHqB
  // we prevent all our defined onClicks inside of the CalendarHeader
  // from blurring our input.

  const onToolbarMouseDown = react.useCallback(event => {
    event.preventDefault();
  }, []);
  if (props.showExpandIcon) {
    process.env.NODE_ENV !== "production" ? utils.warning(typeof props.onClickExpand === 'function', 'RichTextUtils: "onClickExpand" is required when showExpandIcon is true') : void 0;
  }
  return jsxRuntime.jsxs(Container, {
    css: (_props$styles = props.styles) === null || _props$styles === void 0 ? void 0 : _props$styles.container,
    hasError: props.hasError,
    hasWarning: props.hasWarning,
    isReadOnly: props.isReadOnly,
    isDisabled: props.isDisabled,
    children: [jsxRuntime.jsxs(Toolbar, {
      onMouseDown: onToolbarMouseDown,
      children: [jsxRuntime.jsxs(ToolbarMainControls, {
        children: [jsxRuntime.jsx(Dropdown$1, {
          label: intl.formatMessage(messages.styleDropdownLabel),
          onChange: onClickBlock,
          options: styleDropdownOptions,
          components: {
            Item: StylesDropdownItem,
            Label: DropdownLabel
          },
          isDisabled: props.isDisabled,
          isReadOnly: props.isReadOnly,
          getIsItemSelected: getIsBlockItemSelected
        }), jsxRuntime.jsx(Tooltip__default["default"], {
          title: intl.formatMessage(messages.boldButtonLabel),
          placement: "bottom",
          styles: tooltipStyles,
          children: jsxRuntime.jsx(MarkButton, {
            isDisabled: props.isDisabled,
            isReadOnly: props.isReadOnly,
            label: intl.formatMessage(messages.boldButtonLabel),
            format: MARK_TAGS.strong,
            children: jsxRuntime.jsx(BoldIcon$1, {
              size: "medium"
            })
          })
        }), jsxRuntime.jsx(Tooltip__default["default"], {
          title: intl.formatMessage(messages.italicButtonLabel),
          placement: "bottom",
          styles: tooltipStyles,
          children: jsxRuntime.jsx(MarkButton, {
            isDisabled: props.isDisabled,
            isReadOnly: props.isReadOnly,
            label: intl.formatMessage(messages.italicButtonLabel),
            format: MARK_TAGS.em,
            children: jsxRuntime.jsx(ItalicIcon$1, {
              size: "medium"
            })
          })
        }), jsxRuntime.jsx(Tooltip__default["default"], {
          title: intl.formatMessage(messages.underlinedButtonLabel),
          placement: "bottom",
          styles: tooltipStyles,
          children: jsxRuntime.jsx(MarkButton, {
            isDisabled: props.isDisabled,
            isReadOnly: props.isReadOnly,
            label: intl.formatMessage(messages.underlinedButtonLabel),
            format: MARK_TAGS.u,
            children: jsxRuntime.jsx(UnderlineIcon$1, {
              size: "medium"
            })
          })
        }), jsxRuntime.jsx(Dropdown$1, {
          isMulti: true,
          label: intl.formatMessage(messages.moreStylesDropdownLabel),
          options: dropdownOptions,
          onChange: onClickMoreStyleMark,
          isDisabled: props.isDisabled,
          isReadOnly: props.isReadOnly,
          components: {
            Item: MoreStylesDropdownItem,
            Label: MoreStylesDropdownLabel
          },
          getIsItemSelected: getIsMoreStyleMarkItemSelected
        }), jsxRuntime.jsx(Divider$1, {
          css: /*#__PURE__*/react$1.css("margin:", designSystem.designTokens.marginForRichTextDivider, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:RichTextEditorBody;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */")
        }), jsxRuntime.jsx(Tooltip__default["default"], {
          title: intl.formatMessage(messages.orderedListButtonLabel),
          placement: "bottom",
          styles: tooltipStyles,
          children: jsxRuntime.jsx(BlockButton, {
            isDisabled: props.isDisabled,
            isReadOnly: props.isReadOnly,
            label: intl.formatMessage(messages.orderedListButtonLabel),
            format: BLOCK_TAGS.ol,
            children: jsxRuntime.jsx(OrderedListIcon$1, {
              size: "medium"
            })
          })
        }), jsxRuntime.jsx(Tooltip__default["default"], {
          title: intl.formatMessage(messages.unorderedListButtonLabel),
          placement: "bottom",
          styles: tooltipStyles,
          children: jsxRuntime.jsx(BlockButton, {
            isDisabled: props.isDisabled,
            isReadOnly: props.isReadOnly,
            label: intl.formatMessage(messages.unorderedListButtonLabel),
            format: BLOCK_TAGS.ul,
            children: jsxRuntime.jsx(UnorderedListIcon$1, {
              size: "medium"
            })
          })
        })]
      }), jsxRuntime.jsxs(ToolbarRightControls, {
        css: _ref,
        children: [jsxRuntime.jsx(Tooltip__default["default"], {
          title: intl.formatMessage(messages.undoButtonLabel),
          placement: "bottom",
          off: !hasUndos,
          children: jsxRuntime.jsx(Button, {
            isActive: false,
            label: intl.formatMessage(messages.undoButtonLabel),
            isDisabled: !hasUndos || props.isDisabled,
            isReadOnly: props.isReadOnly,
            onClick: editor.undo,
            children: jsxRuntime.jsx(UndoIcon$1, {
              size: "medium"
            })
          })
        }), jsxRuntime.jsx(Tooltip__default["default"], {
          title: intl.formatMessage(messages.redoButtonLabel),
          placement: "bottom",
          off: !hasRedos,
          children: jsxRuntime.jsx(Button, {
            isActive: false,
            label: intl.formatMessage(messages.redoButtonLabel),
            isDisabled: !hasRedos || props.isDisabled,
            isReadOnly: props.isReadOnly,
            onClick: editor.redo,
            children: jsxRuntime.jsx(RedoIcon$1, {
              size: "medium"
            })
          })
        }), props.showExpandIcon && jsxRuntime.jsxs(jsxRuntime.Fragment, {
          children: [jsxRuntime.jsx(Divider$1, {
            css: /*#__PURE__*/react$1.css("margin:", designSystem.designTokens.marginForRichTextDivider, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:RichTextEditorBody;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */")
          }), jsxRuntime.jsx(Tooltip__default["default"], {
            title: intl.formatMessage(messages.expandButtonLabel),
            placement: "bottom-end",
            children: jsxRuntime.jsx(Button, {
              isActive: false,
              isDisabled: props.isDisabled,
              isReadOnly: props.isReadOnly,
              label: intl.formatMessage(messages.expandButtonLabel),
              onClick: props.onClickExpand,
              children: jsxRuntime.jsx(ExpandIcon$1, {
                size: "medium"
              })
            })
          })]
        })]
      })]
    }), jsxRuntime.jsx("div", {
      style: props.containerStyles,
      children: jsxRuntime.jsx("div", {
        ref: registerContentNode,
        children: jsxRuntime.jsx(EditorContainer, {
          hasError: props.hasError,
          hasWarning: props.hasWarning,
          isReadOnly: props.isReadOnly,
          isDisabled: props.isDisabled,
          ref: containerRef,
          children: props.children
        })
      })
    })]
  });
});
const defaultProps = {
  styles: {}
};
RichTextEditorBody.displayName = 'RichTextEditorBody';
RichTextEditorBody.defaultProps = defaultProps;
var RichTextEditorBody$1 = RichTextEditorBody;

// NOTE: This string will be replaced on build time with the package version.
var version = "16.11.0";

exports.Element = Element;
exports.HiddenInput = HiddenInput$1;
exports.Leaf = Leaf;
exports.RichTextBody = RichTextEditorBody$1;
exports.focusEditor = focusEditor;
exports.html = html$1;
exports.isBlockActive = isBlockActive;
exports.isEmpty = isRichTextEmpty;
exports.isMarkActive = isMarkActive;
exports.localized = index;
exports.resetEditor = resetEditor;
exports.toggleBlock = toggleBlock;
exports.toggleMark = toggleMark;
exports.validSlateStateAdapter = validSlateStateAdapter;
exports.version = version;
