import { Editor, type Editor as TEditor, type Descendant } from 'slate';
import { type RenderElementProps, type RenderLeafProps } from 'slate-react';
import { type Deserialized, type Format } from './html';
declare const Element: ({ attributes, children, element }: RenderElementProps) => import("@emotion/react/jsx-runtime").JSX.Element;
declare const Leaf: ({ attributes, children, leaf }: RenderLeafProps) => import("@emotion/react/jsx-runtime").JSX.Element;
declare const isMarkActive: (editor: TEditor, format: Format) => boolean;
declare const toggleMark: (editor: Editor, format: Format) => void;
declare const isBlockActive: (editor: TEditor, format: Format) => boolean;
declare const toggleBlock: (editor: TEditor, format: Format) => void;
declare const validSlateStateAdapter: (value: Deserialized | Deserialized[]) => Descendant[];
declare const resetEditor: (editor: Editor, resetValue?: string) => void;
declare const focusEditor: (editor: Editor) => void;
export { Element, Leaf, isMarkActive, isBlockActive, toggleMark, toggleBlock, validSlateStateAdapter, resetEditor, focusEditor, };
