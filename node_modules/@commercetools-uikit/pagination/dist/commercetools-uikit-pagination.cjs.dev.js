'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

require('@emotion/react');
var Spacings = require('@commercetools-uikit/spacings');
var jsxRuntime = require('@emotion/react/jsx-runtime');
var _defineProperty = require('@babel/runtime-corejs3/helpers/defineProperty');
var _slicedToArray = require('@babel/runtime-corejs3/helpers/slicedToArray');
var _pt = require('prop-types');
var _includesInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/includes');
var _concatInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/concat');
var _mapInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/map');
var _Object$keys = require('@babel/runtime-corejs3/core-js-stable/object/keys');
var _Object$getOwnPropertySymbols = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols');
var _filterInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/filter');
var _Object$getOwnPropertyDescriptor = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor');
var _forEachInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/for-each');
var _Object$getOwnPropertyDescriptors = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors');
var _Object$defineProperties = require('@babel/runtime-corejs3/core-js-stable/object/define-properties');
var _Object$defineProperty = require('@babel/runtime-corejs3/core-js-stable/object/define-property');
var react = require('react');
var uniqueId = require('lodash/uniqueId');
var SelectInput = require('@commercetools-uikit/select-input');
var Constraints = require('@commercetools-uikit/constraints');
var utils = require('@commercetools-uikit/utils');
var Label = require('@commercetools-uikit/label');
var reactIntl = require('react-intl');
var _valuesInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/values');
var formik = require('formik');
var icons = require('@commercetools-uikit/icons');
var NumberInput = require('@commercetools-uikit/number-input');
var SecondaryIconButton = require('@commercetools-uikit/secondary-icon-button');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

var Spacings__default = /*#__PURE__*/_interopDefault(Spacings);
var _pt__default = /*#__PURE__*/_interopDefault(_pt);
var _includesInstanceProperty__default = /*#__PURE__*/_interopDefault(_includesInstanceProperty);
var _concatInstanceProperty__default = /*#__PURE__*/_interopDefault(_concatInstanceProperty);
var _mapInstanceProperty__default = /*#__PURE__*/_interopDefault(_mapInstanceProperty);
var _Object$keys__default = /*#__PURE__*/_interopDefault(_Object$keys);
var _Object$getOwnPropertySymbols__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertySymbols);
var _filterInstanceProperty__default = /*#__PURE__*/_interopDefault(_filterInstanceProperty);
var _Object$getOwnPropertyDescriptor__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertyDescriptor);
var _forEachInstanceProperty__default = /*#__PURE__*/_interopDefault(_forEachInstanceProperty);
var _Object$getOwnPropertyDescriptors__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertyDescriptors);
var _Object$defineProperties__default = /*#__PURE__*/_interopDefault(_Object$defineProperties);
var _Object$defineProperty__default = /*#__PURE__*/_interopDefault(_Object$defineProperty);
var uniqueId__default = /*#__PURE__*/_interopDefault(uniqueId);
var SelectInput__default = /*#__PURE__*/_interopDefault(SelectInput);
var Constraints__default = /*#__PURE__*/_interopDefault(Constraints);
var Label__default = /*#__PURE__*/_interopDefault(Label);
var _valuesInstanceProperty__default = /*#__PURE__*/_interopDefault(_valuesInstanceProperty);
var NumberInput__default = /*#__PURE__*/_interopDefault(NumberInput);
var SecondaryIconButton__default = /*#__PURE__*/_interopDefault(SecondaryIconButton);

const isValid = (page, totalPages) => {
  if (page > totalPages) return false;
  if (page <= 0) return false;
  return true;
};
const normalizePageValue = (value, totalPages) => {
  if (value < 1) {
    return 1;
  }
  if (value > totalPages) {
    return totalPages;
  }
  return value;
};

var messages$2 = reactIntl.defineMessages({
  page: {
    id: 'UIKit.Pagination.PageNavigator.page',
    description: 'Label for page',
    defaultMessage: 'Page'
  },
  pageCount: {
    id: 'UIKit.Pagination.PageNavigator.pageCount',
    description: 'Label for total pages',
    defaultMessage: 'of {count}'
  },
  previousPageLabel: {
    id: 'UIKit.Pagination.PageNavigator.previousPageLabel',
    description: 'Label for previous page button',
    defaultMessage: 'Previous page'
  },
  nextPageLabel: {
    id: 'UIKit.Pagination.PageNavigator.nextPageLabel',
    description: 'Label for next page button',
    defaultMessage: 'Next page'
  }
});

function ownKeys$1(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var _context, _context2; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context = ownKeys$1(Object(source), !0)).call(_context, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context2 = ownKeys$1(Object(source))).call(_context2, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const PageNavigator = props => {
  const intl = reactIntl.useIntl();
  const _useState = react.useState(uniqueId__default["default"]('page-number-')),
    _useState2 = _slicedToArray(_useState, 1),
    pageNumberInputId = _useState2[0];
  const paginationForm = formik.useFormik({
    initialValues: {
      page: props.page
    },
    enableReinitialize: true,
    validateOnBlur: true,
    validateOnChange: true,
    validateOnMount: true,
    onSubmit: (values /**, helpers */) => {
      const nextNormalizedValue = Number(normalizePageValue(values.page, props.totalPages));
      props.onPageChange(nextNormalizedValue);
    },
    validate: values => {
      if (!isValid(values.page, props.totalPages)) {
        return {
          page: true
        };
      }
      return {};
    }
  });
  const page = props.page,
    totalPages = props.totalPages;
  const isDisabled = totalPages === 0;
  const isPreviousDisabled = page <= 1;
  const isNextDisabled = page >= totalPages;
  const handlePrevPageChange = react.useCallback(() => {
    const previousPage = _valuesInstanceProperty__default["default"](paginationForm).page - 1;
    if (previousPage >= 1) {
      paginationForm.setFieldValue('page', previousPage, true);
      paginationForm.submitForm();
    }
  }, [paginationForm]);
  const handleNextPageChange = react.useCallback(() => {
    const nextPage = _valuesInstanceProperty__default["default"](paginationForm).page + 1;
    if (nextPage <= totalPages) {
      paginationForm.setFieldValue('page', nextPage, true);
      paginationForm.submitForm();
    }
  }, [paginationForm, totalPages]);
  return jsxRuntime.jsx("form", {
    onSubmit: paginationForm.handleSubmit,
    children: jsxRuntime.jsxs(Spacings__default["default"].Inline, {
      alignItems: "center",
      scale: "s",
      children: [jsxRuntime.jsx(SecondaryIconButton__default["default"], {
        label: intl.formatMessage(messages$2.previousPageLabel),
        onClick: handlePrevPageChange,
        isDisabled: isPreviousDisabled || isDisabled,
        icon: jsxRuntime.jsx(icons.AngleLeftIcon, {})
      }), jsxRuntime.jsx(Label__default["default"], {
        htmlFor: pageNumberInputId,
        intlMessage: messages$2.page
      }), jsxRuntime.jsx("div", {
        children: jsxRuntime.jsx(NumberInput__default["default"], {
          name: "page",
          id: pageNumberInputId,
          value: _valuesInstanceProperty__default["default"](paginationForm).page,
          min: 1,
          max: totalPages,
          onBlur: paginationForm.handleBlur,
          onChange: paginationForm.handleChange,
          isDisabled: isDisabled,
          hasWarning: Boolean(paginationForm.errors.page),
          horizontalConstraint: 2
        })
      }), jsxRuntime.jsx(Label__default["default"], {
        intlMessage: _objectSpread$1(_objectSpread$1({}, messages$2.pageCount), {}, {
          values: {
            count: props.totalPages
          }
        })
      }), jsxRuntime.jsx(SecondaryIconButton__default["default"], {
        label: intl.formatMessage(messages$2.nextPageLabel),
        onClick: handleNextPageChange,
        isDisabled: isNextDisabled || isDisabled,
        icon: jsxRuntime.jsx(icons.AngleRightIcon, {})
      })]
    })
  });
};
PageNavigator.propTypes = process.env.NODE_ENV !== "production" ? {
  totalPages: _pt__default["default"].number.isRequired,
  page: _pt__default["default"].number.isRequired,
  onPageChange: _pt__default["default"].func.isRequired
} : {};
PageNavigator.displayName = 'PageNavigator';
var PageNavigator$1 = PageNavigator;

const messages = reactIntl.defineMessages({
  pageSize: {
    id: 'UIKit.Pagination.PageSizeSelector.pageSize',
    description: 'How many items are per page',
    defaultMessage: 'Items per page ({count} items)'
  }
});
var messages$1 = messages;

function ownKeys(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var _context2, _context3; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context2 = ownKeys(Object(source), !0)).call(_context2, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context3 = ownKeys(Object(source))).call(_context3, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const mapRangeToListOfOptions = perPageRange => {
  switch (perPageRange) {
    case 's':
      return [20, 50];
    case 'm':
      return [20, 50, 100];
    case 'l':
      return [200, 500];
    default:
      throw new Error("Invalid page range \"".concat(perPageRange, "\", expected one of \"s,m,l\"."));
  }
};
const PageSizeSelector = props => {
  var _context;
  const _useState = react.useState(uniqueId__default["default"]('per-page-selector-')),
    _useState2 = _slicedToArray(_useState, 1),
    perPageSelectorId = _useState2[0];
  const options = mapRangeToListOfOptions(props.perPageRange);
  const hasValidPerPageOption = _includesInstanceProperty__default["default"](options).call(options, props.perPage);
  process.env.NODE_ENV !== "production" ? utils.warning(hasValidPerPageOption, _concatInstanceProperty__default["default"](_context = "@commercetools-uikit/pagination: invalid page size ".concat(props.perPage, ". It must be one of the values of the selected range in \"")).call(_context, options.toString(), "\".")) : void 0;
  const onPerPageChange = props.onPerPageChange;
  const handleSelectPerPage = react.useCallback(event => {
    onPerPageChange(Number(event.target.value));
  }, [onPerPageChange]);
  return jsxRuntime.jsxs(Spacings__default["default"].Inline, {
    alignItems: "center",
    children: [jsxRuntime.jsx(Constraints__default["default"].Horizontal, {
      max: "auto",
      children: jsxRuntime.jsx(SelectInput__default["default"], {
        id: perPageSelectorId,
        isSearchable: false,
        name: "per-page-selector",
        value: props.perPage.toString(),
        options: _mapInstanceProperty__default["default"](options).call(options, option => ({
          value: option.toString(),
          label: option.toString()
        })),
        onChange: handleSelectPerPage
      })
    }), jsxRuntime.jsx(Label__default["default"], {
      htmlFor: perPageSelectorId,
      intlMessage: _objectSpread(_objectSpread({}, messages$1.pageSize), {}, {
        values: {
          count: props.pageItems
        }
      })
    })]
  });
};
PageSizeSelector.propTypes = process.env.NODE_ENV !== "production" ? {
  perPage: _pt__default["default"].number.isRequired,
  perPageRange: _pt__default["default"].oneOf(['s', 'm', 'l']).isRequired,
  onPerPageChange: _pt__default["default"].func.isRequired,
  pageItems: _pt__default["default"].number.isRequired
} : {};
PageSizeSelector.displayName = 'PageSizeSelector';
const defaultProps$1 = {
  perPage: 20,
  perPageRange: 's'
};
PageSizeSelector.defaultProps = defaultProps$1;
var PageSizeSelector$1 = PageSizeSelector;

function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }
var _ref = process.env.NODE_ENV === "production" ? {
  name: "15sp3y3",
  styles: "flex-grow:2"
} : {
  name: "mvvfm1-Pagination",
  styles: "flex-grow:2;label:Pagination;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhZ2luYXRpb24udHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXNEZ0IiLCJmaWxlIjoicGFnaW5hdGlvbi50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgU3BhY2luZ3MgZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvc3BhY2luZ3MnO1xuaW1wb3J0IFBhZ2VOYXZpZ2F0b3IgZnJvbSAnLi9wYWdlLW5hdmlnYXRvcic7XG5pbXBvcnQgUGFnZVNpemVTZWxlY3RvciwgeyB0eXBlIFRQYWdlUmFuZ2VTaXplIH0gZnJvbSAnLi9wYWdlLXNpemUtc2VsZWN0b3InO1xuXG5leHBvcnQgdHlwZSBUUGFnaW5hdGlvblByb3BzID0ge1xuICAvKipcbiAgICogVG90YWwgbnVtYmVyIG9mIGl0ZW1zIGFjcm9zcyBhbGwgcGFnZXNcbiAgICovXG4gIHRvdGFsSXRlbXM6IG51bWJlcjtcblxuICAvKipcbiAgICogVGhlIGN1cnJlbnQgcGFnZVxuICAgKi9cbiAgcGFnZTogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBBIGNhbGxiYWNrIGZ1bmN0aW9uLCBjYWxsZWQgd2hlbiB0aGUgcGFnZSBpcyBjaGFuZ2VkLlxuICAgKi9cbiAgb25QYWdlQ2hhbmdlOiAobmV3UGFnZTogbnVtYmVyKSA9PiB2b2lkO1xuXG4gIC8qKlxuICAgKiBOdW1iZXIgb2YgaXRlbXMgcGVyIHBhZ2UsIGFjY29yZGluZyB0byB0aGUgcHJlLWRlZmluZWQgcmFuZ2UgdmFsdWVzLlxuICAgKi9cbiAgcGVyUGFnZTogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBSYW5nZSBvZiBpdGVtcyBwZXIgcGFnZS5cbiAgICogPGJyLz5cbiAgICogYHM6IDIwLDUwYFxuICAgKiA8YnIvPlxuICAgKiBgbTogMjAsNTAsMTAwYFxuICAgKiA8YnIvPlxuICAgKiBgbDogMjAwLDUwMGBcbiAgICovXG4gIHBlclBhZ2VSYW5nZTogVFBhZ2VSYW5nZVNpemU7XG5cbiAgLyoqXG4gICAqIEEgY2FsbGJhY2sgZnVuY3Rpb24sIGNhbGxlZCB3aGVuIGBwZXJQYWdlYCBpcyBjaGFuZ2VkLlxuICAgKi9cbiAgb25QZXJQYWdlQ2hhbmdlOiAobmV3UGVyUGFnZTogbnVtYmVyKSA9PiB2b2lkO1xufTtcblxuY29uc3QgUGFnaW5hdGlvbiA9IChwcm9wczogVFBhZ2luYXRpb25Qcm9wcykgPT4ge1xuICBjb25zdCB0b3RhbFBhZ2VzID0gTWF0aC5jZWlsKHByb3BzLnRvdGFsSXRlbXMgLyBwcm9wcy5wZXJQYWdlKTtcblxuICBjb25zdCBwYWdlSXRlbXMgPVxuICAgIHByb3BzLnBhZ2UgPT09IHRvdGFsUGFnZXNcbiAgICAgID8gcHJvcHMudG90YWxJdGVtcyAtIHByb3BzLnBlclBhZ2UgKiAocHJvcHMucGFnZSAtIDEpXG4gICAgICA6IHByb3BzLnBlclBhZ2U7XG5cbiAgcmV0dXJuIChcbiAgICA8U3BhY2luZ3MuSW5saW5lIGp1c3RpZnlDb250ZW50PVwic3BhY2UtYmV0d2VlblwiPlxuICAgICAgPGRpdlxuICAgICAgICBjc3M9e2Nzc2BcbiAgICAgICAgICBmbGV4LWdyb3c6IDI7XG4gICAgICAgIGB9XG4gICAgICA+XG4gICAgICAgIDxQYWdlU2l6ZVNlbGVjdG9yXG4gICAgICAgICAgcGFnZUl0ZW1zPXtwYWdlSXRlbXN9XG4gICAgICAgICAgcGVyUGFnZT17cHJvcHMucGVyUGFnZX1cbiAgICAgICAgICBwZXJQYWdlUmFuZ2U9e3Byb3BzLnBlclBhZ2VSYW5nZX1cbiAgICAgICAgICBvblBlclBhZ2VDaGFuZ2U9e3Byb3BzLm9uUGVyUGFnZUNoYW5nZX1cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPFBhZ2VOYXZpZ2F0b3JcbiAgICAgICAgdG90YWxQYWdlcz17dG90YWxQYWdlc31cbiAgICAgICAgcGFnZT17cHJvcHMucGFnZX1cbiAgICAgICAgb25QYWdlQ2hhbmdlPXtwcm9wcy5vblBhZ2VDaGFuZ2V9XG4gICAgICAvPlxuICAgIDwvU3BhY2luZ3MuSW5saW5lPlxuICApO1xufTtcblxuUGFnaW5hdGlvbi5kaXNwbGF5TmFtZSA9ICdQYWdpbmF0aW9uJztcblxuY29uc3QgZGVmYXVsdFByb3BzOiBQaWNrPFRQYWdpbmF0aW9uUHJvcHMsICdwZXJQYWdlJyB8ICdwZXJQYWdlUmFuZ2UnPiA9IHtcbiAgcGVyUGFnZTogMjAsXG4gIHBlclBhZ2VSYW5nZTogJ3MnLFxufTtcblBhZ2luYXRpb24uZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuXG5leHBvcnQgdHlwZSB7IFRQYWdlUmFuZ2VTaXplIH07XG5cbmV4cG9ydCBkZWZhdWx0IFBhZ2luYXRpb247XG4iXX0= */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};
const Pagination = props => {
  const totalPages = Math.ceil(props.totalItems / props.perPage);
  const pageItems = props.page === totalPages ? props.totalItems - props.perPage * (props.page - 1) : props.perPage;
  return jsxRuntime.jsxs(Spacings__default["default"].Inline, {
    justifyContent: "space-between",
    children: [jsxRuntime.jsx("div", {
      css: _ref,
      children: jsxRuntime.jsx(PageSizeSelector$1, {
        pageItems: pageItems,
        perPage: props.perPage,
        perPageRange: props.perPageRange,
        onPerPageChange: props.onPerPageChange
      })
    }), jsxRuntime.jsx(PageNavigator$1, {
      totalPages: totalPages,
      page: props.page,
      onPageChange: props.onPageChange
    })]
  });
};
Pagination.displayName = 'Pagination';
const defaultProps = {
  perPage: 20,
  perPageRange: 's'
};
Pagination.defaultProps = defaultProps;
var Pagination$1 = Pagination;

// NOTE: This string will be replaced on build time with the package version.
var version = "16.11.0";

exports.PageNavigator = PageNavigator$1;
exports.PageSizeSelector = PageSizeSelector$1;
exports.Pagination = Pagination$1;
exports.version = version;
