'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _Object$keys = require('@babel/runtime-corejs3/core-js-stable/object/keys');
var _Object$getOwnPropertySymbols = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols');
var _filterInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/filter');
var _Object$getOwnPropertyDescriptor = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor');
var _forEachInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/for-each');
var _Object$getOwnPropertyDescriptors = require('@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors');
var _Object$defineProperties = require('@babel/runtime-corejs3/core-js-stable/object/define-properties');
var _Object$defineProperty = require('@babel/runtime-corejs3/core-js-stable/object/define-property');
var _defineProperty = require('@babel/runtime-corejs3/helpers/defineProperty');
require('prop-types');
var utils = require('@commercetools-uikit/utils');
var inputUtils = require('@commercetools-uikit/input-utils');
var _styled = require('@emotion/styled/base');
var _concatInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/concat');
var react = require('@emotion/react');
var designSystem = require('@commercetools-uikit/design-system');
var jsxRuntime = require('@emotion/react/jsx-runtime');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

var _Object$keys__default = /*#__PURE__*/_interopDefault(_Object$keys);
var _Object$getOwnPropertySymbols__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertySymbols);
var _filterInstanceProperty__default = /*#__PURE__*/_interopDefault(_filterInstanceProperty);
var _Object$getOwnPropertyDescriptor__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertyDescriptor);
var _forEachInstanceProperty__default = /*#__PURE__*/_interopDefault(_forEachInstanceProperty);
var _Object$getOwnPropertyDescriptors__default = /*#__PURE__*/_interopDefault(_Object$getOwnPropertyDescriptors);
var _Object$defineProperties__default = /*#__PURE__*/_interopDefault(_Object$defineProperties);
var _Object$defineProperty__default = /*#__PURE__*/_interopDefault(_Object$defineProperty);
var _styled__default = /*#__PURE__*/_interopDefault(_styled);
var _concatInstanceProperty__default = /*#__PURE__*/_interopDefault(_concatInstanceProperty);

const trackSizes = {
  small: {
    width: '29px',
    height: '12px'
  },
  big: {
    width: '56px',
    height: '24px'
  }
};
const thumbSizes = {
  small: {
    diameter: '18px',
    shift: '3px',
    hoverAreaWidth: '4px'
  },
  big: {
    diameter: '32px',
    shift: '4px',
    hoverAreaWidth: '8px'
  }
};
const labelSizeStyles = props => /*#__PURE__*/react.css("height:", props.trackSizes[props.size].height, ";width:", props.trackSizes[props.size].width, ";" + ("" ), "" );
const getThumbSize = props => props.thumbSizes[props.size].diameter;
const getThumbShift = props => "-".concat(props.thumbSizes[props.size].shift);
const getFocusIndicatorWidth = props => {
  var _context, _context2;
  return _concatInstanceProperty__default["default"](_context = _concatInstanceProperty__default["default"](_context2 = "\n    calc(\n      ".concat(props.trackSizes[props.size].width, " + 2 *\n        ")).call(_context2, props.thumbSizes[props.size].hoverAreaWidth, " + 2 *\n        ")).call(_context, props.thumbSizes[props.size].shift, " + 2px\n    )");
};
const getFocusIndicatorHeight = props => {
  var _context3;
  return _concatInstanceProperty__default["default"](_context3 = "\n    calc(\n      ".concat(props.thumbSizes[props.size].diameter, " + 2 *\n        ")).call(_context3, props.thumbSizes[props.size].hoverAreaWidth, " + 2px\n    )\n");
};
const getFocusIndicatorLeftPositioning = props => {
  var _context4;
  return _concatInstanceProperty__default["default"](_context4 = "\n    calc(\n      -".concat(props.thumbSizes[props.size].hoverAreaWidth, " - ")).call(_context4, props.thumbSizes[props.size].shift, " - 1px\n    )\n");
};
const getFocusIndicatorTopPositioning = props => "calc(-50% - ".concat(props.size === 'small' ? '2px' : '1px', ")");
const getFocusIndicator = props => /*#__PURE__*/react.css("&::after{content:'';position:absolute;outline:auto 2px ", designSystem.designTokens.borderColorForInputWhenFocused, ";height:", getFocusIndicatorHeight(props), ";top:", getFocusIndicatorTopPositioning(props), ";width:", getFocusIndicatorWidth(props), ";left:", getFocusIndicatorLeftPositioning(props), ";}" + ("" ), "" );
const getMargin = props => {
  var _context5, _context6;
  return /*#__PURE__*/react.css("margin:", _concatInstanceProperty__default["default"](_context5 = _concatInstanceProperty__default["default"](_context6 = "calc(2px + ".concat(props.thumbSizes[props.size].hoverAreaWidth, " + (")).call(_context6, props.thumbSizes[props.size].diameter, " - ")).call(_context5, props.trackSizes[props.size].height, ") / 2)"), ";" + ("" ), "" );
};
const Label = /*#__PURE__*/_styled__default["default"]("label", {
  target: "e1p8kklm1"
} )("position:relative;display:inline-block;cursor:", props => props.isDisabled ? 'not-allowed' : 'pointer', ";align-self:center;", getMargin, " ", labelSizeStyles, " &:focus-within{", props => getFocusIndicator(props), ";}" + ("" ));
const Span = /*#__PURE__*/_styled__default["default"]("span", {
  target: "e1p8kklm0"
} )("&::before{border-radius:12px;box-shadow:none;background-color:", designSystem.designTokens.backgroundColorForToggleInputTrack, ";left:0;top:50%;transition:background 0.2s ease-in-out;content:'';position:absolute;transform:translateY(-50%);height:100%;width:100%;}&::after{content:'';position:absolute;transform:translateY(-50%);top:50%;left:", getThumbShift, ";height:", getThumbSize, ";width:", getThumbSize, ";background-color:", designSystem.designTokens.colorSurface, ";box-shadow:", designSystem.designTokens.shadowForToggleInputThumb, ";border-radius:50%;transition:transform 0.2s ease,background 0.2s ease;}" + ("" ));
const getInputStyles = props => /*#__PURE__*/react.css("&:checked{+span::before{background:", designSystem.designTokens.backgroundColorForToggleInputTrackWhenChecked, ";}&+span::after{background:", designSystem.designTokens.backgroundColorForToggleInputThumbWhenChecked, ";transform:translate(", props.thumbSizes[props.size].diameter, ", -50%);}}&:disabled{&+span::before{background:", designSystem.designTokens.backgroundColorForToggleInputTrackWhenDisabled, ";box-shadow:none;}&+span::after{background:", designSystem.designTokens.backgroundColorForToggleInputThumbWhenDisabled, ";box-shadow:", designSystem.designTokens.shadowForToggleInputThumb, ";}}&:disabled&:checked{&+span::before{background:", designSystem.designTokens.backgroundColorForToggleInputTrackWhenCheckedAndDisabled, ";}&+span::after{background:", designSystem.designTokens.backgroundColorForToggleInputThumbWhenCheckedAndDisabled, ";}}:not(:disabled)&:hover+span::after,:not(:disabled)&:focus+span::after{box-shadow:none;outline:", "".concat(props.thumbSizes[props.size].hoverAreaWidth, " solid rgba(0, 0, 0, 0.1)"), ";}" + ("" ), "" );

function ownKeys(object, enumerableOnly) { var keys = _Object$keys__default["default"](object); if (_Object$getOwnPropertySymbols__default["default"]) { var symbols = _Object$getOwnPropertySymbols__default["default"](object); enumerableOnly && (symbols = _filterInstanceProperty__default["default"](symbols).call(symbols, function (sym) { return _Object$getOwnPropertyDescriptor__default["default"](object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var _context, _context2; var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? _forEachInstanceProperty__default["default"](_context = ownKeys(Object(source), !0)).call(_context, function (key) { _defineProperty(target, key, source[key]); }) : _Object$getOwnPropertyDescriptors__default["default"] ? _Object$defineProperties__default["default"](target, _Object$getOwnPropertyDescriptors__default["default"](source)) : _forEachInstanceProperty__default["default"](_context2 = ownKeys(Object(source))).call(_context2, function (key) { _Object$defineProperty__default["default"](target, key, _Object$getOwnPropertyDescriptor__default["default"](source, key)); }); } return target; }
const defaultProps = {
  isDisabled: false,
  isChecked: false,
  size: 'big'
};
const ToggleInput = props => {
  return jsxRuntime.jsxs(Label, {
    htmlFor: props.id,
    size: props.size,
    isDisabled: props.isDisabled,
    trackSizes: trackSizes,
    thumbSizes: thumbSizes,
    children: [jsxRuntime.jsx("input", _objectSpread(_objectSpread({
      type: "checkbox",
      css: [inputUtils.accessibleHiddenInputStyles, getInputStyles(_objectSpread(_objectSpread({}, props), {}, {
        trackSizes,
        thumbSizes
      })), "" , "" ],
      id: props.id,
      name: props.name,
      onChange: props.onChange,
      disabled: props.isDisabled,
      checked: props.isChecked,
      value: props.value
    }, utils.filterDataAttributes(props)), utils.filterAriaAttributes(props))), jsxRuntime.jsx(Span, {
      "aria-hidden": "true",
      size: props.size,
      trackSizes: trackSizes,
      thumbSizes: thumbSizes
    })]
  });
};
ToggleInput.propTypes = {};
ToggleInput.displayName = 'Toggle';
ToggleInput.defaultProps = defaultProps;
var ToggleInput$1 = ToggleInput;

// NOTE: This string will be replaced on build time with the package version.
var version = "16.11.0";

exports["default"] = ToggleInput$1;
exports.version = version;
