/// <reference types="react" />
import type { TToggleInputProps } from './toggle-input';
type SizesProps = {
    trackSizes: typeof trackSizes;
    thumbSizes: typeof thumbSizes;
};
declare const trackSizes: {
    small: {
        width: string;
        height: string;
    };
    big: {
        width: string;
        height: string;
    };
};
declare const thumbSizes: {
    small: {
        diameter: string;
        shift: string;
        hoverAreaWidth: string;
    };
    big: {
        diameter: string;
        shift: string;
        hoverAreaWidth: string;
    };
};
declare const Label: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: import("react").ElementType<any> | undefined;
} & Pick<TToggleInputProps, "size" | "isDisabled"> & SizesProps, import("react").DetailedHTMLProps<import("react").LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>, {}>;
declare const Span: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: import("react").ElementType<any> | undefined;
} & Pick<TToggleInputProps, "size"> & SizesProps, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, {}>;
declare const getInputStyles: (props: TToggleInputProps & SizesProps) => import("@emotion/utils").SerializedStyles;
export { Label, Span, trackSizes, thumbSizes, getInputStyles };
