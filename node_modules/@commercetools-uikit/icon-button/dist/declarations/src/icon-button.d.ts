import { MouseEvent, KeyboardEvent, ElementType, ReactElement, ComponentPropsWithRef } from 'react';
export type TIconButtonProps<TStringOrComponent extends ElementType = 'button'> = {
    as?: TStringOrComponent;
    type?: 'button' | 'reset' | 'submit';
    label: string;
    icon?: ReactElement;
    isToggleButton?: boolean;
    isToggled?: boolean;
    isDisabled?: boolean;
    onClick?: (event: MouseEvent<HTMLButtonElement> | KeyboardEvent<HTMLButtonElement>) => void;
    shape?: 'round' | 'square';
    theme?: 'default' | 'primary' | 'info';
    size?: 'small' | 'medium' | 'big';
} & ComponentPropsWithRef<TStringOrComponent>;
declare const IconButton: {
    <TStringOrComponent extends ElementType = "button">(props: TIconButtonProps<TStringOrComponent>): import("@emotion/react/jsx-runtime").JSX.Element;
    defaultProps: Pick<TIconButtonProps<"button">, "type" | "theme" | "size" | "shape" | "isToggleButton">;
    displayName: string;
};
export default IconButton;
