import type { ChangeEventHandler, FocusEventHandler } from 'react';
export type TPasswordInputProps = {
    id?: string;
    name?: string;
    'aria-invalid'?: boolean;
    'aria-errormessage'?: string;
    value: string;
    placeholder?: string;
    onChange?: ChangeEventHandler<HTMLInputElement>;
    onBlur?: FocusEventHandler<HTMLInputElement>;
    onFocus?: FocusEventHandler<HTMLInputElement>;
    isAutofocussed?: boolean;
    isDisabled?: boolean;
    isReadOnly?: boolean;
    hasError?: boolean;
    hasWarning?: boolean;
    isPasswordVisible?: boolean;
    horizontalConstraint?: 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 'scale' | 'auto';
    autoComplete?: 'on' | 'off' | 'current-password' | 'new-password';
};
declare const PasswordInput: {
    (props: TPasswordInputProps): import("@emotion/react/jsx-runtime").JSX.Element;
    displayName: string;
    defaultProps: Pick<TPasswordInputProps, "isDisabled" | "horizontalConstraint" | "isReadOnly" | "isPasswordVisible">;
    isEmpty(value: TPasswordInputProps['value']): boolean;
};
export default PasswordInput;
