import { type ReactNode, type SyntheticEvent } from 'react';
import type { TFlags } from '@flopflip/types';
import type { TAsyncLocaleDataProps } from '@commercetools-frontend/i18n';
type TApplicationShellAuthenticationProps = {
    featureFlags?: TFlags;
    defaultFeatureFlags?: TFlags;
    applicationMessages: TAsyncLocaleDataProps['applicationMessages'];
    onMenuItemClick?: (event: SyntheticEvent<HTMLAnchorElement>) => void;
    disableRoutePermissionCheck?: boolean;
    render?: () => JSX.Element;
    children?: ReactNode;
};
export declare const MainContainer: import("@emotion/styled").StyledComponent<{
    theme?: import("@emotion/react").Theme | undefined;
    as?: import("react").ElementType<any> | undefined;
}, import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, {}>;
export declare const ApplicationShellAuthenticated: {
    (props: TApplicationShellAuthenticationProps): import("@emotion/react/types/jsx-namespace").EmotionJSX.Element;
    displayName: string;
};
export default ApplicationShellAuthenticated;
