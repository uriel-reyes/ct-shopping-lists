/// <reference types="react" />
declare const ProjectContainer: import("react").LazyExoticComponent<{
    (props: {
        user: {
            __typename?: "User" | undefined;
            id: string;
            email: string;
            createdAt: string;
            gravatarHash: string;
            firstName: string;
            lastName: string;
            language: string;
            numberFormat: string;
            timeZone?: string | null | undefined;
            launchdarklyTrackingId: string;
            launchdarklyTrackingGroup: string;
            launchdarklyTrackingSubgroup?: string | null | undefined;
            launchdarklyTrackingTeam?: string[] | null | undefined;
            launchdarklyTrackingTenant: string;
            defaultProjectKey?: string | null | undefined;
            businessRole?: string | null | undefined;
            projects: {
                __typename?: "ProjectQueryResult" | undefined;
                total: number;
                results: {
                    __typename?: "Project" | undefined;
                    name: string;
                    key: string;
                    suspension: {
                        __typename?: "ProjectSuspension" | undefined;
                        isActive: boolean;
                    };
                    expiry: {
                        __typename?: "ProjectExpiry" | undefined;
                        isActive: boolean;
                    };
                }[];
            };
            idTokenUserInfo?: {
                __typename?: "IdTokenUserInfo" | undefined;
                iss: string;
                sub: string;
                aud: string;
                exp: number;
                iat?: number | null | undefined;
                email?: string | null | undefined;
                name?: string | null | undefined;
                additionalClaims?: string | null | undefined;
            } | null | undefined;
        } | null | undefined;
        environment: {
            enableSignUp?: boolean | undefined;
        } & import("@commercetools-frontend/constants").ApplicationRuntimeEnvironment;
        disableRoutePermissionCheck?: boolean | undefined;
        render?: (() => JSX.Element) | undefined;
        children?: import("react").ReactNode;
    }): import("@emotion/react/types/jsx-namespace").EmotionJSX.Element;
    displayName: string;
}>;
export default ProjectContainer;
