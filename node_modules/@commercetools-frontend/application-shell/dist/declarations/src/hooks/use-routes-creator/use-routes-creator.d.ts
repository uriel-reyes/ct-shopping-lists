import type { History } from 'history';
import { useLocation } from 'react-router-dom';
export interface RouteParams extends Record<string, string> {
}
export type RoutePath = string;
export type TMakeRouteOptions<Params extends RouteParams> = {
    params: Partial<Params>;
    goTo: History['push'];
    location: ReturnType<typeof useLocation>;
};
export type TRoute<Params extends RouteParams> = {
    path: string;
    getUrl: (params?: Params, nextQueryParams?: URLSearchParams) => string;
    go: (params?: Params, nextQueryParams?: URLSearchParams) => void;
};
declare function useRoutesCreator(): {
    createRoute: <ParamKeys>(routePath: RoutePath) => TRoute<ParamKeys extends string ? Record<ParamKeys, string> : never>;
};
export default useRoutesCreator;
