import type { ActionError } from '../actions/handle-action-error';
export default function useOnActionError(): (error: ActionError) => (dispatch: import("../actions/handle-action-error").DispatchActionError) => import("@commercetools-frontend/notifications").TAddNotificationAction<import("@commercetools-frontend/constants").TAppNotificationOfDomain & {
    kind: import("@commercetools-frontend/constants").TAppNotificationKindPage;
} & {
    id: number;
    text?: undefined;
    values?: import("@commercetools-frontend/constants").TAppNotificationValuesApiError<{}> | undefined;
} & import("@commercetools-frontend/notifications").TNotification> | import("@commercetools-frontend/notifications").TAddNotificationAction<import("@commercetools-frontend/constants").TAppNotificationOfDomain & {
    kind: import("@commercetools-frontend/constants").TAppNotificationKindPage;
} & {
    id: number;
    text?: undefined;
    values?: import("@commercetools-frontend/constants").TAppNotificationValuesUnexpectedError | undefined;
} & import("@commercetools-frontend/notifications").TNotification> | null;
