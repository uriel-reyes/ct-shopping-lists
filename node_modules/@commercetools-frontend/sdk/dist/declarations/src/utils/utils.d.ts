import type { THttpMethod, TSdkAction, Json } from '../types';
type LogRequestParams = {
    method: THttpMethod;
    request: {
        headers: {
            [key: string]: string;
        };
        uri: string;
    };
    response?: Json;
    error?: Error;
    action: TSdkAction;
};
export declare const parseUri: (uri: string) => {
    pathname: string;
    search: Partial<{}>;
};
export declare const logRequest: ({ method, request, response, error, action, }: LogRequestParams) => void;
export interface ApplicationWindow extends Window {
    app: {
        servedByProxy: string | boolean;
        mcApiUrl: string;
    };
}
export declare function getMcApiUrl(actualWindow?: ApplicationWindow): string;
export {};
