import type { TSdkActionPayloadBody, TSdkActionPayloadForUri, TSdkActionPayloadForService, TSdkActionGetForUri, TSdkActionGetForService, TSdkActionDeleteForUri, TSdkActionDeleteForService, TSdkActionHeadForUri, TSdkActionHeadForService, TSdkActionPostForUri, TSdkActionPostForService } from '../types';
export type THeaders = Record<string, string>;
export declare function get(payload: TSdkActionPayloadForUri): TSdkActionGetForUri;
export declare function get(payload: TSdkActionPayloadForService): TSdkActionGetForService;
export declare function del(payload: TSdkActionPayloadForUri): TSdkActionDeleteForUri;
export declare function del(payload: TSdkActionPayloadForService): TSdkActionDeleteForService;
export declare function head(payload: TSdkActionPayloadForUri): TSdkActionHeadForUri;
export declare function head(payload: TSdkActionPayloadForService): TSdkActionHeadForService;
export declare function post(payload: TSdkActionPayloadForUri & TSdkActionPayloadBody): TSdkActionPostForUri;
export declare function post(payload: TSdkActionPayloadForService & TSdkActionPayloadBody): TSdkActionPostForService;
export declare const forwardTo: {
    get(payload: TSdkActionPayloadForUri): TSdkActionGetForUri;
    del(payload: TSdkActionPayloadForUri): TSdkActionDeleteForUri;
    head(payload: TSdkActionPayloadForUri): TSdkActionHeadForUri;
    post(payload: TSdkActionPayloadForUri & TSdkActionPayloadBody): TSdkActionPostForUri;
};
