import _pt from 'prop-types';
import { createContext, useContext, useEffect } from 'react';
import { jsx, jsxs, Fragment } from '@emotion/react/jsx-runtime';
import _Object$keys from '@babel/runtime-corejs3/core-js-stable/object/keys';
import _Object$getOwnPropertySymbols from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols';
import _filterInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/filter';
import _Object$getOwnPropertyDescriptor from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor';
import _forEachInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/for-each';
import _Object$getOwnPropertyDescriptors from '@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors';
import _Object$defineProperties from '@babel/runtime-corejs3/core-js-stable/object/define-properties';
import _Object$defineProperty from '@babel/runtime-corejs3/core-js-stable/object/define-property';
import _defineProperty from '@babel/runtime-corejs3/helpers/esm/defineProperty';
import { defineMessages, useIntl, FormattedMessage } from 'react-intl';
import { NOTIFICATION_DOMAINS, NOTIFICATION_KINDS_SIDE, NOTIFICATION_KINDS_GLOBAL, NOTIFICATION_KINDS_PAGE } from '@commercetools-frontend/constants';
import { useFieldId } from '@commercetools-uikit/hooks';
import { CloseBoldIcon, ErrorIcon, InformationIcon, WarningIcon, CheckBoldIcon } from '@commercetools-uikit/icons';
import SecondaryIconButton from '@commercetools-uikit/secondary-icon-button';
import { createSequentialId } from '@commercetools-uikit/utils';
import _startsWithInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/starts-with';
import omitBy from 'lodash/omitBy';
import _taggedTemplateLiteral from '@babel/runtime-corejs3/helpers/esm/taggedTemplateLiteral';
import { keyframes, css } from '@emotion/react';
import { designTokens, customProperties } from '@commercetools-uikit/design-system';
import _objectWithoutProperties from '@babel/runtime-corejs3/helpers/esm/objectWithoutProperties';
import _mapInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/map';
import _valuesInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/values';
import { useDispatch, useSelector } from 'react-redux';
import { removeNotification } from '@commercetools-frontend/notifications';
import { reportErrorToSentry } from '@commercetools-frontend/sentry';
import _includesInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/includes';
import has from 'lodash/has';
import Spacings from '@commercetools-uikit/spacings';
import _sliceInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/slice';
import { createSelector } from 'reselect';
import isNumber from 'lodash/isNumber';
import { useShowNotification } from '@commercetools-frontend/actions-global';

// NOTE: This string will be replaced on build time with the package version.
var version = "22.13.0";

const Context = /*#__PURE__*/createContext(() => null);
function NotificationProviderForCustomComponent(props) {
  return jsx(Context.Provider, {
    value: props.mapNotificationToComponent,
    children: props.children
  });
}
NotificationProviderForCustomComponent.propTypes = process.env.NODE_ENV !== "production" ? {
  mapNotificationToComponent: _pt.func.isRequired,
  children: _pt.node.isRequired
} : {};
NotificationProviderForCustomComponent.displayName = 'NotificationProviderForCustomComponent';
const useCustomNotificationComponent = () => useContext(Context);

function filterDataAttributes(obj) {
  return omitBy(obj, (_value, key) => !_startsWithInstanceProperty(key).call(key, 'data-'));
}

var messages = defineMessages({
  hideNotification: {
    id: 'Notification.hideNotification',
    description: 'Label for button to hide notification',
    defaultMessage: 'Hide notification'
  }
});

var _templateObject, _templateObject2;
const getColorByType = value => {
  switch (value) {
    case NOTIFICATION_KINDS_SIDE.success:
      return designTokens.colorPrimary;
    case NOTIFICATION_KINDS_SIDE.info:
      return designTokens.colorInfo;
    case NOTIFICATION_KINDS_SIDE.error:
      return designTokens.colorError;
    case NOTIFICATION_KINDS_SIDE.warning:
      return designTokens.colorWarning;
    default:
      return 'transparent';
  }
};
const getBorderColor = notificationKind => {
  switch (notificationKind) {
    case NOTIFICATION_KINDS_SIDE.success:
      return designTokens.colorPrimary85;
    case NOTIFICATION_KINDS_SIDE.info:
      return designTokens.colorInfo85;
    case NOTIFICATION_KINDS_SIDE.error:
      return designTokens.colorError85;
    case NOTIFICATION_KINDS_SIDE.warning:
      return designTokens.colorWarning85;
    default:
      return 'transparent';
  }
};
const showNotificationAnimation = keyframes(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  0% {\n    max-height: 0;\n    padding-top: 0;\n    padding-bottom: 0;\n    overflow: hidden;\n  }\n  100% {\n    max-height: 200px;\n  }\n"])));
const showNotificationSideAnimation = keyframes(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  0% {\n    transform: translateX(50px);\n  }\n  100% {\n    transform: translateX(0);\n  }\n"])));
const getStylesForNotificationIcon = props => /*#__PURE__*/css("display:flex;align-items:center;justify-content:center;position:absolute;left:0;top:0;width:48px;height:100%;color:", designTokens.colorSurface, ";border-radius:3px 0 0 3px;background:", getColorByType(props.type), ";" + (process.env.NODE_ENV === "production" ? "" : ";label:getStylesForNotificationIcon;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGlmaWNhdGlvbi5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0UwQiIsImZpbGUiOiJub3RpZmljYXRpb24uc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMsIHR5cGUgU2VyaWFsaXplZFN0eWxlcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB0eXBlIHtcbiAgVEFwcE5vdGlmaWNhdGlvbktpbmQsXG4gIFRBcHBOb3RpZmljYXRpb25Eb21haW4sXG59IGZyb20gJ0Bjb21tZXJjZXRvb2xzLWZyb250ZW5kL2NvbnN0YW50cyc7XG5cbmltcG9ydCB7XG4gIE5PVElGSUNBVElPTl9ET01BSU5TLFxuICBOT1RJRklDQVRJT05fS0lORFNfU0lERSxcbn0gZnJvbSAnQGNvbW1lcmNldG9vbHMtZnJvbnRlbmQvY29uc3RhbnRzJztcbmltcG9ydCB7IGRlc2lnblRva2VucyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuXG50eXBlIFN0eWxlUHJvcHMgPSB7XG4gIHR5cGU6IFRBcHBOb3RpZmljYXRpb25LaW5kO1xuICBkb21haW46IFRBcHBOb3RpZmljYXRpb25Eb21haW47XG4gIGZpeGVkOiBib29sZWFuO1xufTtcblxuY29uc3QgZ2V0Q29sb3JCeVR5cGUgPSAodmFsdWU6IFRBcHBOb3RpZmljYXRpb25LaW5kKSA9PiB7XG4gIHN3aXRjaCAodmFsdWUpIHtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLnN1Y2Nlc3M6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yUHJpbWFyeTtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLmluZm86XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9ySW5mbztcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLmVycm9yOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvckVycm9yO1xuICAgIGNhc2UgTk9USUZJQ0FUSU9OX0tJTkRTX1NJREUud2FybmluZzpcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuY29sb3JXYXJuaW5nO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gJ3RyYW5zcGFyZW50JztcbiAgfVxufTtcblxuY29uc3QgZ2V0Qm9yZGVyQ29sb3IgPSAobm90aWZpY2F0aW9uS2luZDogVEFwcE5vdGlmaWNhdGlvbktpbmQpID0+IHtcbiAgc3dpdGNoIChub3RpZmljYXRpb25LaW5kKSB7XG4gICAgY2FzZSBOT1RJRklDQVRJT05fS0lORFNfU0lERS5zdWNjZXNzOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvclByaW1hcnk4NTtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLmluZm86XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9ySW5mbzg1O1xuICAgIGNhc2UgTk9USUZJQ0FUSU9OX0tJTkRTX1NJREUuZXJyb3I6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yRXJyb3I4NTtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLndhcm5pbmc6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yV2FybmluZzg1O1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gJ3RyYW5zcGFyZW50JztcbiAgfVxufTtcblxuY29uc3Qgc2hvd05vdGlmaWNhdGlvbkFuaW1hdGlvbiA9IGtleWZyYW1lc2BcbiAgMCUge1xuICAgIG1heC1oZWlnaHQ6IDA7XG4gICAgcGFkZGluZy10b3A6IDA7XG4gICAgcGFkZGluZy1ib3R0b206IDA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgfVxuICAxMDAlIHtcbiAgICBtYXgtaGVpZ2h0OiAyMDBweDtcbiAgfVxuYDtcbmNvbnN0IHNob3dOb3RpZmljYXRpb25TaWRlQW5pbWF0aW9uID0ga2V5ZnJhbWVzYFxuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDUwcHgpO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgfVxuYDtcblxuY29uc3QgZ2V0U3R5bGVzRm9yTm90aWZpY2F0aW9uSWNvbiA9IChcbiAgcHJvcHM6IFN0eWxlUHJvcHNcbik6IFNlcmlhbGl6ZWRTdHlsZXMgPT4gY3NzYFxuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIHdpZHRoOiA0OHB4O1xuICBoZWlnaHQ6IDEwMCU7XG4gIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICBib3JkZXItcmFkaXVzOiAzcHggMCAwIDNweDtcbiAgYmFja2dyb3VuZDogJHtnZXRDb2xvckJ5VHlwZShwcm9wcy50eXBlKX07XG5gO1xuXG5jb25zdCBnZXRTdHlsZXNGb3JDbG9zZUljb24gPSAocHJvcHM6IFN0eWxlUHJvcHMpOiBTZXJpYWxpemVkU3R5bGVzID0+IGNzc2BcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICYgc3ZnIHtcbiAgICB3aWR0aDogMTZweDtcbiAgICBoZWlnaHQ6IDE2cHg7XG4gIH1cbiAgJHtwcm9wcy5kb21haW4gIT09IE5PVElGSUNBVElPTl9ET01BSU5TLlNJREVcbiAgICA/ICcmIHN2ZyB7IGZpbGw6ICcgKyBkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlICsgJzsgfSdcbiAgICA6ICcnfVxuYDtcblxuY29uc3QgZ2V0U3R5bGVzRm9yQ29udGVudCA9IChwcm9wczogU3R5bGVQcm9wcyk6IFNlcmlhbGl6ZWRTdHlsZXMgPT4ge1xuICBjb25zdCBmb250Q29sb3IgPVxuICAgIHByb3BzLmRvbWFpbiA9PT0gTk9USUZJQ0FUSU9OX0RPTUFJTlMuU0lERVxuICAgICAgPyBkZXNpZ25Ub2tlbnMuY29sb3JTb2xpZFxuICAgICAgOiBkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlO1xuICByZXR1cm4gY3NzYFxuICAgIGZsZXgtYmFzaXM6IDEwMCU7XG4gICAgZmxleC1ncm93OiAxO1xuICAgIHBhZGRpbmc6ICR7YDAgJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ019YH07XG4gICAgbWFyZ2luOiAwO1xuICAgIGZvbnQtc2l6ZTogJHtwcm9wcy5kb21haW4gPT09IE5PVElGSUNBVElPTl9ET01BSU5TLlNJREVcbiAgICAgID8gJzFyZW0nXG4gICAgICA6ICdpbmhlcml0J307XG5cbiAgICBjb2xvcjogJHtmb250Q29sb3J9O1xuICAgIHAge1xuICAgICAgY29sb3I6ICR7Zm9udENvbG9yfTtcbiAgICB9XG4gICAgdWwge1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgfVxuICBgO1xufTtcblxuY29uc3QgZ2V0U3R5bGVzRm9yTm90aWZpY2F0aW9uID0gKHByb3BzOiBTdHlsZVByb3BzKTogU2VyaWFsaXplZFN0eWxlcyA9PiB7XG4gIGNvbnN0IGJhc2VTdHlsZXMgPSBjc3NgXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5zcGFjaW5nTX07XG4gICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG4gIGA7XG4gIGNvbnN0IHBhZ2VTdHlsZXMgPSBjc3NgXG4gICAgJHtiYXNlU3R5bGVzfTtcbiAgICBhbmltYXRpb246ICR7c2hvd05vdGlmaWNhdGlvbkFuaW1hdGlvbn0gMC4zcyBmb3J3YXJkcztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcy5maXhlZFxuICAgICAgPyAndHJhbnNwYXJlbnQnXG4gICAgICA6IGdldENvbG9yQnlUeXBlKHByb3BzLnR5cGUpfTtcblxuICAgID4gKiArICoge1xuICAgICAgbWFyZ2luLWxlZnQ6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmdTfTtcbiAgICB9XG4gIGA7XG5cbiAgc3dpdGNoIChwcm9wcy5kb21haW4pIHtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLkdMT0JBTDpcbiAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICR7cGFnZVN0eWxlc307XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Z2V0Q29sb3JCeVR5cGUocHJvcHMudHlwZSl9O1xuICAgICAgYDtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLlBBR0U6XG4gICAgICByZXR1cm4gcGFnZVN0eWxlcztcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLlNJREU6IHtcbiAgICAgIGNvbnN0IHNpZGVTdHlsZXMgPSBjc3NgXG4gICAgICAgICR7YmFzZVN0eWxlc307XG4gICAgICAgIGFuaW1hdGlvbjogJHtzaG93Tm90aWZpY2F0aW9uQW5pbWF0aW9ufSAwLjNzIGZvcndhcmRzO1xuICAgICAgICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5zcGFjaW5nTX0gJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ019XG4gICAgICAgICAgJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ019IDUwcHggIWltcG9ydGFudDtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgYmFja2dyb3VuZDogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJHtnZXRCb3JkZXJDb2xvcihwcm9wcy50eXBlKX07XG4gICAgICAgIGJveC1zaGFkb3c6IDBweCAycHggNXB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXM2fTtcbiAgICAgICAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgICAgICAgaHlwaGVuczogYXV0bzsgLyogc3RpbGwgbm90IHN1cHBvcnRlZCBvbiBDaHJvbWUgKi9cbiAgICAgIGA7XG5cbiAgICAgIGlmIChwcm9wcy5maXhlZCkgcmV0dXJuIHNpZGVTdHlsZXM7XG4gICAgICByZXR1cm4gY3NzYFxuICAgICAgICAke3NpZGVTdHlsZXN9O1xuICAgICAgICBhbmltYXRpb246ICR7c2hvd05vdGlmaWNhdGlvblNpZGVBbmltYXRpb259IDAuM3MgZm9yd2FyZHM7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgei1pbmRleDogMTAwMDA7XG4gICAgICAgIG1hcmdpbi10b3A6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmdMfSAhaW1wb3J0YW50O1xuICAgICAgICByaWdodDogJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ1hsfTtcbiAgICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgICBjbGVhcjogYm90aDtcbiAgICAgICAgbWF4LXdpZHRoOiA1MCU7XG4gICAgICBgO1xuICAgIH1cbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGNzc2BgO1xuICB9XG59O1xuXG5leHBvcnQge1xuICBnZXRTdHlsZXNGb3JOb3RpZmljYXRpb25JY29uLFxuICBnZXRTdHlsZXNGb3JDbG9zZUljb24sXG4gIGdldFN0eWxlc0ZvckNvbnRlbnQsXG4gIGdldFN0eWxlc0Zvck5vdGlmaWNhdGlvbixcbn07XG4iXX0= */");
const getStylesForCloseIcon = props => /*#__PURE__*/css("display:flex;justify-content:center;& svg{width:16px;height:16px;}", props.domain !== NOTIFICATION_DOMAINS.SIDE ? '& svg { fill: ' + designTokens.colorSurface + '; }' : '', ";" + (process.env.NODE_ENV === "production" ? "" : ";label:getStylesForCloseIcon;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGlmaWNhdGlvbi5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0YwRSIsImZpbGUiOiJub3RpZmljYXRpb24uc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMsIHR5cGUgU2VyaWFsaXplZFN0eWxlcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB0eXBlIHtcbiAgVEFwcE5vdGlmaWNhdGlvbktpbmQsXG4gIFRBcHBOb3RpZmljYXRpb25Eb21haW4sXG59IGZyb20gJ0Bjb21tZXJjZXRvb2xzLWZyb250ZW5kL2NvbnN0YW50cyc7XG5cbmltcG9ydCB7XG4gIE5PVElGSUNBVElPTl9ET01BSU5TLFxuICBOT1RJRklDQVRJT05fS0lORFNfU0lERSxcbn0gZnJvbSAnQGNvbW1lcmNldG9vbHMtZnJvbnRlbmQvY29uc3RhbnRzJztcbmltcG9ydCB7IGRlc2lnblRva2VucyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuXG50eXBlIFN0eWxlUHJvcHMgPSB7XG4gIHR5cGU6IFRBcHBOb3RpZmljYXRpb25LaW5kO1xuICBkb21haW46IFRBcHBOb3RpZmljYXRpb25Eb21haW47XG4gIGZpeGVkOiBib29sZWFuO1xufTtcblxuY29uc3QgZ2V0Q29sb3JCeVR5cGUgPSAodmFsdWU6IFRBcHBOb3RpZmljYXRpb25LaW5kKSA9PiB7XG4gIHN3aXRjaCAodmFsdWUpIHtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLnN1Y2Nlc3M6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yUHJpbWFyeTtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLmluZm86XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9ySW5mbztcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLmVycm9yOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvckVycm9yO1xuICAgIGNhc2UgTk9USUZJQ0FUSU9OX0tJTkRTX1NJREUud2FybmluZzpcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuY29sb3JXYXJuaW5nO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gJ3RyYW5zcGFyZW50JztcbiAgfVxufTtcblxuY29uc3QgZ2V0Qm9yZGVyQ29sb3IgPSAobm90aWZpY2F0aW9uS2luZDogVEFwcE5vdGlmaWNhdGlvbktpbmQpID0+IHtcbiAgc3dpdGNoIChub3RpZmljYXRpb25LaW5kKSB7XG4gICAgY2FzZSBOT1RJRklDQVRJT05fS0lORFNfU0lERS5zdWNjZXNzOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvclByaW1hcnk4NTtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLmluZm86XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9ySW5mbzg1O1xuICAgIGNhc2UgTk9USUZJQ0FUSU9OX0tJTkRTX1NJREUuZXJyb3I6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yRXJyb3I4NTtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLndhcm5pbmc6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yV2FybmluZzg1O1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gJ3RyYW5zcGFyZW50JztcbiAgfVxufTtcblxuY29uc3Qgc2hvd05vdGlmaWNhdGlvbkFuaW1hdGlvbiA9IGtleWZyYW1lc2BcbiAgMCUge1xuICAgIG1heC1oZWlnaHQ6IDA7XG4gICAgcGFkZGluZy10b3A6IDA7XG4gICAgcGFkZGluZy1ib3R0b206IDA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgfVxuICAxMDAlIHtcbiAgICBtYXgtaGVpZ2h0OiAyMDBweDtcbiAgfVxuYDtcbmNvbnN0IHNob3dOb3RpZmljYXRpb25TaWRlQW5pbWF0aW9uID0ga2V5ZnJhbWVzYFxuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDUwcHgpO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgfVxuYDtcblxuY29uc3QgZ2V0U3R5bGVzRm9yTm90aWZpY2F0aW9uSWNvbiA9IChcbiAgcHJvcHM6IFN0eWxlUHJvcHNcbik6IFNlcmlhbGl6ZWRTdHlsZXMgPT4gY3NzYFxuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIHdpZHRoOiA0OHB4O1xuICBoZWlnaHQ6IDEwMCU7XG4gIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICBib3JkZXItcmFkaXVzOiAzcHggMCAwIDNweDtcbiAgYmFja2dyb3VuZDogJHtnZXRDb2xvckJ5VHlwZShwcm9wcy50eXBlKX07XG5gO1xuXG5jb25zdCBnZXRTdHlsZXNGb3JDbG9zZUljb24gPSAocHJvcHM6IFN0eWxlUHJvcHMpOiBTZXJpYWxpemVkU3R5bGVzID0+IGNzc2BcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICYgc3ZnIHtcbiAgICB3aWR0aDogMTZweDtcbiAgICBoZWlnaHQ6IDE2cHg7XG4gIH1cbiAgJHtwcm9wcy5kb21haW4gIT09IE5PVElGSUNBVElPTl9ET01BSU5TLlNJREVcbiAgICA/ICcmIHN2ZyB7IGZpbGw6ICcgKyBkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlICsgJzsgfSdcbiAgICA6ICcnfVxuYDtcblxuY29uc3QgZ2V0U3R5bGVzRm9yQ29udGVudCA9IChwcm9wczogU3R5bGVQcm9wcyk6IFNlcmlhbGl6ZWRTdHlsZXMgPT4ge1xuICBjb25zdCBmb250Q29sb3IgPVxuICAgIHByb3BzLmRvbWFpbiA9PT0gTk9USUZJQ0FUSU9OX0RPTUFJTlMuU0lERVxuICAgICAgPyBkZXNpZ25Ub2tlbnMuY29sb3JTb2xpZFxuICAgICAgOiBkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlO1xuICByZXR1cm4gY3NzYFxuICAgIGZsZXgtYmFzaXM6IDEwMCU7XG4gICAgZmxleC1ncm93OiAxO1xuICAgIHBhZGRpbmc6ICR7YDAgJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ019YH07XG4gICAgbWFyZ2luOiAwO1xuICAgIGZvbnQtc2l6ZTogJHtwcm9wcy5kb21haW4gPT09IE5PVElGSUNBVElPTl9ET01BSU5TLlNJREVcbiAgICAgID8gJzFyZW0nXG4gICAgICA6ICdpbmhlcml0J307XG5cbiAgICBjb2xvcjogJHtmb250Q29sb3J9O1xuICAgIHAge1xuICAgICAgY29sb3I6ICR7Zm9udENvbG9yfTtcbiAgICB9XG4gICAgdWwge1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgfVxuICBgO1xufTtcblxuY29uc3QgZ2V0U3R5bGVzRm9yTm90aWZpY2F0aW9uID0gKHByb3BzOiBTdHlsZVByb3BzKTogU2VyaWFsaXplZFN0eWxlcyA9PiB7XG4gIGNvbnN0IGJhc2VTdHlsZXMgPSBjc3NgXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5zcGFjaW5nTX07XG4gICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG4gIGA7XG4gIGNvbnN0IHBhZ2VTdHlsZXMgPSBjc3NgXG4gICAgJHtiYXNlU3R5bGVzfTtcbiAgICBhbmltYXRpb246ICR7c2hvd05vdGlmaWNhdGlvbkFuaW1hdGlvbn0gMC4zcyBmb3J3YXJkcztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcy5maXhlZFxuICAgICAgPyAndHJhbnNwYXJlbnQnXG4gICAgICA6IGdldENvbG9yQnlUeXBlKHByb3BzLnR5cGUpfTtcblxuICAgID4gKiArICoge1xuICAgICAgbWFyZ2luLWxlZnQ6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmdTfTtcbiAgICB9XG4gIGA7XG5cbiAgc3dpdGNoIChwcm9wcy5kb21haW4pIHtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLkdMT0JBTDpcbiAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICR7cGFnZVN0eWxlc307XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Z2V0Q29sb3JCeVR5cGUocHJvcHMudHlwZSl9O1xuICAgICAgYDtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLlBBR0U6XG4gICAgICByZXR1cm4gcGFnZVN0eWxlcztcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLlNJREU6IHtcbiAgICAgIGNvbnN0IHNpZGVTdHlsZXMgPSBjc3NgXG4gICAgICAgICR7YmFzZVN0eWxlc307XG4gICAgICAgIGFuaW1hdGlvbjogJHtzaG93Tm90aWZpY2F0aW9uQW5pbWF0aW9ufSAwLjNzIGZvcndhcmRzO1xuICAgICAgICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5zcGFjaW5nTX0gJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ019XG4gICAgICAgICAgJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ019IDUwcHggIWltcG9ydGFudDtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgYmFja2dyb3VuZDogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJHtnZXRCb3JkZXJDb2xvcihwcm9wcy50eXBlKX07XG4gICAgICAgIGJveC1zaGFkb3c6IDBweCAycHggNXB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXM2fTtcbiAgICAgICAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgICAgICAgaHlwaGVuczogYXV0bzsgLyogc3RpbGwgbm90IHN1cHBvcnRlZCBvbiBDaHJvbWUgKi9cbiAgICAgIGA7XG5cbiAgICAgIGlmIChwcm9wcy5maXhlZCkgcmV0dXJuIHNpZGVTdHlsZXM7XG4gICAgICByZXR1cm4gY3NzYFxuICAgICAgICAke3NpZGVTdHlsZXN9O1xuICAgICAgICBhbmltYXRpb246ICR7c2hvd05vdGlmaWNhdGlvblNpZGVBbmltYXRpb259IDAuM3MgZm9yd2FyZHM7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgei1pbmRleDogMTAwMDA7XG4gICAgICAgIG1hcmdpbi10b3A6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmdMfSAhaW1wb3J0YW50O1xuICAgICAgICByaWdodDogJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ1hsfTtcbiAgICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgICBjbGVhcjogYm90aDtcbiAgICAgICAgbWF4LXdpZHRoOiA1MCU7XG4gICAgICBgO1xuICAgIH1cbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGNzc2BgO1xuICB9XG59O1xuXG5leHBvcnQge1xuICBnZXRTdHlsZXNGb3JOb3RpZmljYXRpb25JY29uLFxuICBnZXRTdHlsZXNGb3JDbG9zZUljb24sXG4gIGdldFN0eWxlc0ZvckNvbnRlbnQsXG4gIGdldFN0eWxlc0Zvck5vdGlmaWNhdGlvbixcbn07XG4iXX0= */");
const getStylesForContent = props => {
  const fontColor = props.domain === NOTIFICATION_DOMAINS.SIDE ? designTokens.colorSolid : designTokens.colorSurface;
  return /*#__PURE__*/css("flex-basis:100%;flex-grow:1;padding:", "0 ".concat(designTokens.spacingM), ";margin:0;font-size:", props.domain === NOTIFICATION_DOMAINS.SIDE ? '1rem' : 'inherit', ";color:", fontColor, ";p{color:", fontColor, ";}ul{padding:0;margin:0;list-style:none;}" + (process.env.NODE_ENV === "production" ? "" : ";label:getStylesForContent;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGlmaWNhdGlvbi5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUdZIiwiZmlsZSI6Im5vdGlmaWNhdGlvbi5zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MsIGtleWZyYW1lcywgdHlwZSBTZXJpYWxpemVkU3R5bGVzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHR5cGUge1xuICBUQXBwTm90aWZpY2F0aW9uS2luZCxcbiAgVEFwcE5vdGlmaWNhdGlvbkRvbWFpbixcbn0gZnJvbSAnQGNvbW1lcmNldG9vbHMtZnJvbnRlbmQvY29uc3RhbnRzJztcblxuaW1wb3J0IHtcbiAgTk9USUZJQ0FUSU9OX0RPTUFJTlMsXG4gIE5PVElGSUNBVElPTl9LSU5EU19TSURFLFxufSBmcm9tICdAY29tbWVyY2V0b29scy1mcm9udGVuZC9jb25zdGFudHMnO1xuaW1wb3J0IHsgZGVzaWduVG9rZW5zIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5cbnR5cGUgU3R5bGVQcm9wcyA9IHtcbiAgdHlwZTogVEFwcE5vdGlmaWNhdGlvbktpbmQ7XG4gIGRvbWFpbjogVEFwcE5vdGlmaWNhdGlvbkRvbWFpbjtcbiAgZml4ZWQ6IGJvb2xlYW47XG59O1xuXG5jb25zdCBnZXRDb2xvckJ5VHlwZSA9ICh2YWx1ZTogVEFwcE5vdGlmaWNhdGlvbktpbmQpID0+IHtcbiAgc3dpdGNoICh2YWx1ZSkge1xuICAgIGNhc2UgTk9USUZJQ0FUSU9OX0tJTkRTX1NJREUuc3VjY2VzczpcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuY29sb3JQcmltYXJ5O1xuICAgIGNhc2UgTk9USUZJQ0FUSU9OX0tJTkRTX1NJREUuaW5mbzpcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuY29sb3JJbmZvO1xuICAgIGNhc2UgTk9USUZJQ0FUSU9OX0tJTkRTX1NJREUuZXJyb3I6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yRXJyb3I7XG4gICAgY2FzZSBOT1RJRklDQVRJT05fS0lORFNfU0lERS53YXJuaW5nOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvcldhcm5pbmc7XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiAndHJhbnNwYXJlbnQnO1xuICB9XG59O1xuXG5jb25zdCBnZXRCb3JkZXJDb2xvciA9IChub3RpZmljYXRpb25LaW5kOiBUQXBwTm90aWZpY2F0aW9uS2luZCkgPT4ge1xuICBzd2l0Y2ggKG5vdGlmaWNhdGlvbktpbmQpIHtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLnN1Y2Nlc3M6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yUHJpbWFyeTg1O1xuICAgIGNhc2UgTk9USUZJQ0FUSU9OX0tJTkRTX1NJREUuaW5mbzpcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuY29sb3JJbmZvODU7XG4gICAgY2FzZSBOT1RJRklDQVRJT05fS0lORFNfU0lERS5lcnJvcjpcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuY29sb3JFcnJvcjg1O1xuICAgIGNhc2UgTk9USUZJQ0FUSU9OX0tJTkRTX1NJREUud2FybmluZzpcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuY29sb3JXYXJuaW5nODU7XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiAndHJhbnNwYXJlbnQnO1xuICB9XG59O1xuXG5jb25zdCBzaG93Tm90aWZpY2F0aW9uQW5pbWF0aW9uID0ga2V5ZnJhbWVzYFxuICAwJSB7XG4gICAgbWF4LWhlaWdodDogMDtcbiAgICBwYWRkaW5nLXRvcDogMDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICB9XG4gIDEwMCUge1xuICAgIG1heC1oZWlnaHQ6IDIwMHB4O1xuICB9XG5gO1xuY29uc3Qgc2hvd05vdGlmaWNhdGlvblNpZGVBbmltYXRpb24gPSBrZXlmcmFtZXNgXG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNTBweCk7XG4gIH1cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDApO1xuICB9XG5gO1xuXG5jb25zdCBnZXRTdHlsZXNGb3JOb3RpZmljYXRpb25JY29uID0gKFxuICBwcm9wczogU3R5bGVQcm9wc1xuKTogU2VyaWFsaXplZFN0eWxlcyA9PiBjc3NgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbiAgd2lkdGg6IDQ4cHg7XG4gIGhlaWdodDogMTAwJTtcbiAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG4gIGJvcmRlci1yYWRpdXM6IDNweCAwIDAgM3B4O1xuICBiYWNrZ3JvdW5kOiAke2dldENvbG9yQnlUeXBlKHByb3BzLnR5cGUpfTtcbmA7XG5cbmNvbnN0IGdldFN0eWxlc0ZvckNsb3NlSWNvbiA9IChwcm9wczogU3R5bGVQcm9wcyk6IFNlcmlhbGl6ZWRTdHlsZXMgPT4gY3NzYFxuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgJiBzdmcge1xuICAgIHdpZHRoOiAxNnB4O1xuICAgIGhlaWdodDogMTZweDtcbiAgfVxuICAke3Byb3BzLmRvbWFpbiAhPT0gTk9USUZJQ0FUSU9OX0RPTUFJTlMuU0lERVxuICAgID8gJyYgc3ZnIHsgZmlsbDogJyArIGRlc2lnblRva2Vucy5jb2xvclN1cmZhY2UgKyAnOyB9J1xuICAgIDogJyd9XG5gO1xuXG5jb25zdCBnZXRTdHlsZXNGb3JDb250ZW50ID0gKHByb3BzOiBTdHlsZVByb3BzKTogU2VyaWFsaXplZFN0eWxlcyA9PiB7XG4gIGNvbnN0IGZvbnRDb2xvciA9XG4gICAgcHJvcHMuZG9tYWluID09PSBOT1RJRklDQVRJT05fRE9NQUlOUy5TSURFXG4gICAgICA/IGRlc2lnblRva2Vucy5jb2xvclNvbGlkXG4gICAgICA6IGRlc2lnblRva2Vucy5jb2xvclN1cmZhY2U7XG4gIHJldHVybiBjc3NgXG4gICAgZmxleC1iYXNpczogMTAwJTtcbiAgICBmbGV4LWdyb3c6IDE7XG4gICAgcGFkZGluZzogJHtgMCAke2Rlc2lnblRva2Vucy5zcGFjaW5nTX1gfTtcbiAgICBtYXJnaW46IDA7XG4gICAgZm9udC1zaXplOiAke3Byb3BzLmRvbWFpbiA9PT0gTk9USUZJQ0FUSU9OX0RPTUFJTlMuU0lERVxuICAgICAgPyAnMXJlbSdcbiAgICAgIDogJ2luaGVyaXQnfTtcblxuICAgIGNvbG9yOiAke2ZvbnRDb2xvcn07XG4gICAgcCB7XG4gICAgICBjb2xvcjogJHtmb250Q29sb3J9O1xuICAgIH1cbiAgICB1bCB7XG4gICAgICBwYWRkaW5nOiAwO1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICB9XG4gIGA7XG59O1xuXG5jb25zdCBnZXRTdHlsZXNGb3JOb3RpZmljYXRpb24gPSAocHJvcHM6IFN0eWxlUHJvcHMpOiBTZXJpYWxpemVkU3R5bGVzID0+IHtcbiAgY29uc3QgYmFzZVN0eWxlcyA9IGNzc2BcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmdNfTtcbiAgICBjb2xvcjogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgYDtcbiAgY29uc3QgcGFnZVN0eWxlcyA9IGNzc2BcbiAgICAke2Jhc2VTdHlsZXN9O1xuICAgIGFuaW1hdGlvbjogJHtzaG93Tm90aWZpY2F0aW9uQW5pbWF0aW9ufSAwLjNzIGZvcndhcmRzO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3Byb3BzLmZpeGVkXG4gICAgICA/ICd0cmFuc3BhcmVudCdcbiAgICAgIDogZ2V0Q29sb3JCeVR5cGUocHJvcHMudHlwZSl9O1xuXG4gICAgPiAqICsgKiB7XG4gICAgICBtYXJnaW4tbGVmdDogJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ1N9O1xuICAgIH1cbiAgYDtcblxuICBzd2l0Y2ggKHByb3BzLmRvbWFpbikge1xuICAgIGNhc2UgTk9USUZJQ0FUSU9OX0RPTUFJTlMuR0xPQkFMOlxuICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgJHtwYWdlU3R5bGVzfTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtnZXRDb2xvckJ5VHlwZShwcm9wcy50eXBlKX07XG4gICAgICBgO1xuICAgIGNhc2UgTk9USUZJQ0FUSU9OX0RPTUFJTlMuUEFHRTpcbiAgICAgIHJldHVybiBwYWdlU3R5bGVzO1xuICAgIGNhc2UgTk9USUZJQ0FUSU9OX0RPTUFJTlMuU0lERToge1xuICAgICAgY29uc3Qgc2lkZVN0eWxlcyA9IGNzc2BcbiAgICAgICAgJHtiYXNlU3R5bGVzfTtcbiAgICAgICAgYW5pbWF0aW9uOiAke3Nob3dOb3RpZmljYXRpb25BbmltYXRpb259IDAuM3MgZm9yd2FyZHM7XG4gICAgICAgIHBhZGRpbmc6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmdNfSAke2Rlc2lnblRva2Vucy5zcGFjaW5nTX1cbiAgICAgICAgICAke2Rlc2lnblRva2Vucy5zcGFjaW5nTX0gNTBweCAhaW1wb3J0YW50O1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICBiYWNrZ3JvdW5kOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAke2dldEJvcmRlckNvbG9yKHByb3BzLnR5cGUpfTtcbiAgICAgICAgYm94LXNoYWRvdzogMHB4IDJweCA1cHggMHB4IHJnYmEoMCwgMCwgMCwgMC4xNSk7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6ICR7ZGVzaWduVG9rZW5zLmJvcmRlclJhZGl1czZ9O1xuICAgICAgICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xuICAgICAgICBoeXBoZW5zOiBhdXRvOyAvKiBzdGlsbCBub3Qgc3VwcG9ydGVkIG9uIENocm9tZSAqL1xuICAgICAgYDtcblxuICAgICAgaWYgKHByb3BzLmZpeGVkKSByZXR1cm4gc2lkZVN0eWxlcztcbiAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICR7c2lkZVN0eWxlc307XG4gICAgICAgIGFuaW1hdGlvbjogJHtzaG93Tm90aWZpY2F0aW9uU2lkZUFuaW1hdGlvbn0gMC4zcyBmb3J3YXJkcztcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB6LWluZGV4OiAxMDAwMDtcbiAgICAgICAgbWFyZ2luLXRvcDogJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ0x9ICFpbXBvcnRhbnQ7XG4gICAgICAgIHJpZ2h0OiAke2Rlc2lnblRva2Vucy5zcGFjaW5nWGx9O1xuICAgICAgICBmbG9hdDogcmlnaHQ7XG4gICAgICAgIGNsZWFyOiBib3RoO1xuICAgICAgICBtYXgtd2lkdGg6IDUwJTtcbiAgICAgIGA7XG4gICAgfVxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gY3NzYGA7XG4gIH1cbn07XG5cbmV4cG9ydCB7XG4gIGdldFN0eWxlc0Zvck5vdGlmaWNhdGlvbkljb24sXG4gIGdldFN0eWxlc0ZvckNsb3NlSWNvbixcbiAgZ2V0U3R5bGVzRm9yQ29udGVudCxcbiAgZ2V0U3R5bGVzRm9yTm90aWZpY2F0aW9uLFxufTtcbiJdfQ== */");
};
const getStylesForNotification = props => {
  const baseStyles = /*#__PURE__*/css("position:relative;display:flex;align-items:center;padding:", designTokens.spacingM, ";color:", designTokens.colorSurface, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:baseStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGlmaWNhdGlvbi5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMkh3QiIsImZpbGUiOiJub3RpZmljYXRpb24uc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMsIHR5cGUgU2VyaWFsaXplZFN0eWxlcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB0eXBlIHtcbiAgVEFwcE5vdGlmaWNhdGlvbktpbmQsXG4gIFRBcHBOb3RpZmljYXRpb25Eb21haW4sXG59IGZyb20gJ0Bjb21tZXJjZXRvb2xzLWZyb250ZW5kL2NvbnN0YW50cyc7XG5cbmltcG9ydCB7XG4gIE5PVElGSUNBVElPTl9ET01BSU5TLFxuICBOT1RJRklDQVRJT05fS0lORFNfU0lERSxcbn0gZnJvbSAnQGNvbW1lcmNldG9vbHMtZnJvbnRlbmQvY29uc3RhbnRzJztcbmltcG9ydCB7IGRlc2lnblRva2VucyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuXG50eXBlIFN0eWxlUHJvcHMgPSB7XG4gIHR5cGU6IFRBcHBOb3RpZmljYXRpb25LaW5kO1xuICBkb21haW46IFRBcHBOb3RpZmljYXRpb25Eb21haW47XG4gIGZpeGVkOiBib29sZWFuO1xufTtcblxuY29uc3QgZ2V0Q29sb3JCeVR5cGUgPSAodmFsdWU6IFRBcHBOb3RpZmljYXRpb25LaW5kKSA9PiB7XG4gIHN3aXRjaCAodmFsdWUpIHtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLnN1Y2Nlc3M6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yUHJpbWFyeTtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLmluZm86XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9ySW5mbztcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLmVycm9yOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvckVycm9yO1xuICAgIGNhc2UgTk9USUZJQ0FUSU9OX0tJTkRTX1NJREUud2FybmluZzpcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuY29sb3JXYXJuaW5nO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gJ3RyYW5zcGFyZW50JztcbiAgfVxufTtcblxuY29uc3QgZ2V0Qm9yZGVyQ29sb3IgPSAobm90aWZpY2F0aW9uS2luZDogVEFwcE5vdGlmaWNhdGlvbktpbmQpID0+IHtcbiAgc3dpdGNoIChub3RpZmljYXRpb25LaW5kKSB7XG4gICAgY2FzZSBOT1RJRklDQVRJT05fS0lORFNfU0lERS5zdWNjZXNzOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvclByaW1hcnk4NTtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLmluZm86XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9ySW5mbzg1O1xuICAgIGNhc2UgTk9USUZJQ0FUSU9OX0tJTkRTX1NJREUuZXJyb3I6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yRXJyb3I4NTtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLndhcm5pbmc6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yV2FybmluZzg1O1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gJ3RyYW5zcGFyZW50JztcbiAgfVxufTtcblxuY29uc3Qgc2hvd05vdGlmaWNhdGlvbkFuaW1hdGlvbiA9IGtleWZyYW1lc2BcbiAgMCUge1xuICAgIG1heC1oZWlnaHQ6IDA7XG4gICAgcGFkZGluZy10b3A6IDA7XG4gICAgcGFkZGluZy1ib3R0b206IDA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgfVxuICAxMDAlIHtcbiAgICBtYXgtaGVpZ2h0OiAyMDBweDtcbiAgfVxuYDtcbmNvbnN0IHNob3dOb3RpZmljYXRpb25TaWRlQW5pbWF0aW9uID0ga2V5ZnJhbWVzYFxuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDUwcHgpO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgfVxuYDtcblxuY29uc3QgZ2V0U3R5bGVzRm9yTm90aWZpY2F0aW9uSWNvbiA9IChcbiAgcHJvcHM6IFN0eWxlUHJvcHNcbik6IFNlcmlhbGl6ZWRTdHlsZXMgPT4gY3NzYFxuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIHdpZHRoOiA0OHB4O1xuICBoZWlnaHQ6IDEwMCU7XG4gIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICBib3JkZXItcmFkaXVzOiAzcHggMCAwIDNweDtcbiAgYmFja2dyb3VuZDogJHtnZXRDb2xvckJ5VHlwZShwcm9wcy50eXBlKX07XG5gO1xuXG5jb25zdCBnZXRTdHlsZXNGb3JDbG9zZUljb24gPSAocHJvcHM6IFN0eWxlUHJvcHMpOiBTZXJpYWxpemVkU3R5bGVzID0+IGNzc2BcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICYgc3ZnIHtcbiAgICB3aWR0aDogMTZweDtcbiAgICBoZWlnaHQ6IDE2cHg7XG4gIH1cbiAgJHtwcm9wcy5kb21haW4gIT09IE5PVElGSUNBVElPTl9ET01BSU5TLlNJREVcbiAgICA/ICcmIHN2ZyB7IGZpbGw6ICcgKyBkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlICsgJzsgfSdcbiAgICA6ICcnfVxuYDtcblxuY29uc3QgZ2V0U3R5bGVzRm9yQ29udGVudCA9IChwcm9wczogU3R5bGVQcm9wcyk6IFNlcmlhbGl6ZWRTdHlsZXMgPT4ge1xuICBjb25zdCBmb250Q29sb3IgPVxuICAgIHByb3BzLmRvbWFpbiA9PT0gTk9USUZJQ0FUSU9OX0RPTUFJTlMuU0lERVxuICAgICAgPyBkZXNpZ25Ub2tlbnMuY29sb3JTb2xpZFxuICAgICAgOiBkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlO1xuICByZXR1cm4gY3NzYFxuICAgIGZsZXgtYmFzaXM6IDEwMCU7XG4gICAgZmxleC1ncm93OiAxO1xuICAgIHBhZGRpbmc6ICR7YDAgJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ019YH07XG4gICAgbWFyZ2luOiAwO1xuICAgIGZvbnQtc2l6ZTogJHtwcm9wcy5kb21haW4gPT09IE5PVElGSUNBVElPTl9ET01BSU5TLlNJREVcbiAgICAgID8gJzFyZW0nXG4gICAgICA6ICdpbmhlcml0J307XG5cbiAgICBjb2xvcjogJHtmb250Q29sb3J9O1xuICAgIHAge1xuICAgICAgY29sb3I6ICR7Zm9udENvbG9yfTtcbiAgICB9XG4gICAgdWwge1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgfVxuICBgO1xufTtcblxuY29uc3QgZ2V0U3R5bGVzRm9yTm90aWZpY2F0aW9uID0gKHByb3BzOiBTdHlsZVByb3BzKTogU2VyaWFsaXplZFN0eWxlcyA9PiB7XG4gIGNvbnN0IGJhc2VTdHlsZXMgPSBjc3NgXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5zcGFjaW5nTX07XG4gICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG4gIGA7XG4gIGNvbnN0IHBhZ2VTdHlsZXMgPSBjc3NgXG4gICAgJHtiYXNlU3R5bGVzfTtcbiAgICBhbmltYXRpb246ICR7c2hvd05vdGlmaWNhdGlvbkFuaW1hdGlvbn0gMC4zcyBmb3J3YXJkcztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcy5maXhlZFxuICAgICAgPyAndHJhbnNwYXJlbnQnXG4gICAgICA6IGdldENvbG9yQnlUeXBlKHByb3BzLnR5cGUpfTtcblxuICAgID4gKiArICoge1xuICAgICAgbWFyZ2luLWxlZnQ6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmdTfTtcbiAgICB9XG4gIGA7XG5cbiAgc3dpdGNoIChwcm9wcy5kb21haW4pIHtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLkdMT0JBTDpcbiAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICR7cGFnZVN0eWxlc307XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Z2V0Q29sb3JCeVR5cGUocHJvcHMudHlwZSl9O1xuICAgICAgYDtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLlBBR0U6XG4gICAgICByZXR1cm4gcGFnZVN0eWxlcztcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLlNJREU6IHtcbiAgICAgIGNvbnN0IHNpZGVTdHlsZXMgPSBjc3NgXG4gICAgICAgICR7YmFzZVN0eWxlc307XG4gICAgICAgIGFuaW1hdGlvbjogJHtzaG93Tm90aWZpY2F0aW9uQW5pbWF0aW9ufSAwLjNzIGZvcndhcmRzO1xuICAgICAgICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5zcGFjaW5nTX0gJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ019XG4gICAgICAgICAgJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ019IDUwcHggIWltcG9ydGFudDtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgYmFja2dyb3VuZDogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJHtnZXRCb3JkZXJDb2xvcihwcm9wcy50eXBlKX07XG4gICAgICAgIGJveC1zaGFkb3c6IDBweCAycHggNXB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXM2fTtcbiAgICAgICAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgICAgICAgaHlwaGVuczogYXV0bzsgLyogc3RpbGwgbm90IHN1cHBvcnRlZCBvbiBDaHJvbWUgKi9cbiAgICAgIGA7XG5cbiAgICAgIGlmIChwcm9wcy5maXhlZCkgcmV0dXJuIHNpZGVTdHlsZXM7XG4gICAgICByZXR1cm4gY3NzYFxuICAgICAgICAke3NpZGVTdHlsZXN9O1xuICAgICAgICBhbmltYXRpb246ICR7c2hvd05vdGlmaWNhdGlvblNpZGVBbmltYXRpb259IDAuM3MgZm9yd2FyZHM7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgei1pbmRleDogMTAwMDA7XG4gICAgICAgIG1hcmdpbi10b3A6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmdMfSAhaW1wb3J0YW50O1xuICAgICAgICByaWdodDogJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ1hsfTtcbiAgICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgICBjbGVhcjogYm90aDtcbiAgICAgICAgbWF4LXdpZHRoOiA1MCU7XG4gICAgICBgO1xuICAgIH1cbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGNzc2BgO1xuICB9XG59O1xuXG5leHBvcnQge1xuICBnZXRTdHlsZXNGb3JOb3RpZmljYXRpb25JY29uLFxuICBnZXRTdHlsZXNGb3JDbG9zZUljb24sXG4gIGdldFN0eWxlc0ZvckNvbnRlbnQsXG4gIGdldFN0eWxlc0Zvck5vdGlmaWNhdGlvbixcbn07XG4iXX0= */");
  const pageStyles = /*#__PURE__*/css(baseStyles, ";animation:", showNotificationAnimation, " 0.3s forwards;text-align:center;background-color:", props.fixed ? 'transparent' : getColorByType(props.type), ";>*+*{margin-left:", designTokens.spacingS, ";}" + (process.env.NODE_ENV === "production" ? "" : ";label:pageStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGlmaWNhdGlvbi5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0l3QiIsImZpbGUiOiJub3RpZmljYXRpb24uc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMsIHR5cGUgU2VyaWFsaXplZFN0eWxlcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB0eXBlIHtcbiAgVEFwcE5vdGlmaWNhdGlvbktpbmQsXG4gIFRBcHBOb3RpZmljYXRpb25Eb21haW4sXG59IGZyb20gJ0Bjb21tZXJjZXRvb2xzLWZyb250ZW5kL2NvbnN0YW50cyc7XG5cbmltcG9ydCB7XG4gIE5PVElGSUNBVElPTl9ET01BSU5TLFxuICBOT1RJRklDQVRJT05fS0lORFNfU0lERSxcbn0gZnJvbSAnQGNvbW1lcmNldG9vbHMtZnJvbnRlbmQvY29uc3RhbnRzJztcbmltcG9ydCB7IGRlc2lnblRva2VucyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuXG50eXBlIFN0eWxlUHJvcHMgPSB7XG4gIHR5cGU6IFRBcHBOb3RpZmljYXRpb25LaW5kO1xuICBkb21haW46IFRBcHBOb3RpZmljYXRpb25Eb21haW47XG4gIGZpeGVkOiBib29sZWFuO1xufTtcblxuY29uc3QgZ2V0Q29sb3JCeVR5cGUgPSAodmFsdWU6IFRBcHBOb3RpZmljYXRpb25LaW5kKSA9PiB7XG4gIHN3aXRjaCAodmFsdWUpIHtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLnN1Y2Nlc3M6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yUHJpbWFyeTtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLmluZm86XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9ySW5mbztcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLmVycm9yOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvckVycm9yO1xuICAgIGNhc2UgTk9USUZJQ0FUSU9OX0tJTkRTX1NJREUud2FybmluZzpcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuY29sb3JXYXJuaW5nO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gJ3RyYW5zcGFyZW50JztcbiAgfVxufTtcblxuY29uc3QgZ2V0Qm9yZGVyQ29sb3IgPSAobm90aWZpY2F0aW9uS2luZDogVEFwcE5vdGlmaWNhdGlvbktpbmQpID0+IHtcbiAgc3dpdGNoIChub3RpZmljYXRpb25LaW5kKSB7XG4gICAgY2FzZSBOT1RJRklDQVRJT05fS0lORFNfU0lERS5zdWNjZXNzOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvclByaW1hcnk4NTtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLmluZm86XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9ySW5mbzg1O1xuICAgIGNhc2UgTk9USUZJQ0FUSU9OX0tJTkRTX1NJREUuZXJyb3I6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yRXJyb3I4NTtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLndhcm5pbmc6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yV2FybmluZzg1O1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gJ3RyYW5zcGFyZW50JztcbiAgfVxufTtcblxuY29uc3Qgc2hvd05vdGlmaWNhdGlvbkFuaW1hdGlvbiA9IGtleWZyYW1lc2BcbiAgMCUge1xuICAgIG1heC1oZWlnaHQ6IDA7XG4gICAgcGFkZGluZy10b3A6IDA7XG4gICAgcGFkZGluZy1ib3R0b206IDA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgfVxuICAxMDAlIHtcbiAgICBtYXgtaGVpZ2h0OiAyMDBweDtcbiAgfVxuYDtcbmNvbnN0IHNob3dOb3RpZmljYXRpb25TaWRlQW5pbWF0aW9uID0ga2V5ZnJhbWVzYFxuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDUwcHgpO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgfVxuYDtcblxuY29uc3QgZ2V0U3R5bGVzRm9yTm90aWZpY2F0aW9uSWNvbiA9IChcbiAgcHJvcHM6IFN0eWxlUHJvcHNcbik6IFNlcmlhbGl6ZWRTdHlsZXMgPT4gY3NzYFxuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIHdpZHRoOiA0OHB4O1xuICBoZWlnaHQ6IDEwMCU7XG4gIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICBib3JkZXItcmFkaXVzOiAzcHggMCAwIDNweDtcbiAgYmFja2dyb3VuZDogJHtnZXRDb2xvckJ5VHlwZShwcm9wcy50eXBlKX07XG5gO1xuXG5jb25zdCBnZXRTdHlsZXNGb3JDbG9zZUljb24gPSAocHJvcHM6IFN0eWxlUHJvcHMpOiBTZXJpYWxpemVkU3R5bGVzID0+IGNzc2BcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICYgc3ZnIHtcbiAgICB3aWR0aDogMTZweDtcbiAgICBoZWlnaHQ6IDE2cHg7XG4gIH1cbiAgJHtwcm9wcy5kb21haW4gIT09IE5PVElGSUNBVElPTl9ET01BSU5TLlNJREVcbiAgICA/ICcmIHN2ZyB7IGZpbGw6ICcgKyBkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlICsgJzsgfSdcbiAgICA6ICcnfVxuYDtcblxuY29uc3QgZ2V0U3R5bGVzRm9yQ29udGVudCA9IChwcm9wczogU3R5bGVQcm9wcyk6IFNlcmlhbGl6ZWRTdHlsZXMgPT4ge1xuICBjb25zdCBmb250Q29sb3IgPVxuICAgIHByb3BzLmRvbWFpbiA9PT0gTk9USUZJQ0FUSU9OX0RPTUFJTlMuU0lERVxuICAgICAgPyBkZXNpZ25Ub2tlbnMuY29sb3JTb2xpZFxuICAgICAgOiBkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlO1xuICByZXR1cm4gY3NzYFxuICAgIGZsZXgtYmFzaXM6IDEwMCU7XG4gICAgZmxleC1ncm93OiAxO1xuICAgIHBhZGRpbmc6ICR7YDAgJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ019YH07XG4gICAgbWFyZ2luOiAwO1xuICAgIGZvbnQtc2l6ZTogJHtwcm9wcy5kb21haW4gPT09IE5PVElGSUNBVElPTl9ET01BSU5TLlNJREVcbiAgICAgID8gJzFyZW0nXG4gICAgICA6ICdpbmhlcml0J307XG5cbiAgICBjb2xvcjogJHtmb250Q29sb3J9O1xuICAgIHAge1xuICAgICAgY29sb3I6ICR7Zm9udENvbG9yfTtcbiAgICB9XG4gICAgdWwge1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgfVxuICBgO1xufTtcblxuY29uc3QgZ2V0U3R5bGVzRm9yTm90aWZpY2F0aW9uID0gKHByb3BzOiBTdHlsZVByb3BzKTogU2VyaWFsaXplZFN0eWxlcyA9PiB7XG4gIGNvbnN0IGJhc2VTdHlsZXMgPSBjc3NgXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5zcGFjaW5nTX07XG4gICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG4gIGA7XG4gIGNvbnN0IHBhZ2VTdHlsZXMgPSBjc3NgXG4gICAgJHtiYXNlU3R5bGVzfTtcbiAgICBhbmltYXRpb246ICR7c2hvd05vdGlmaWNhdGlvbkFuaW1hdGlvbn0gMC4zcyBmb3J3YXJkcztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcy5maXhlZFxuICAgICAgPyAndHJhbnNwYXJlbnQnXG4gICAgICA6IGdldENvbG9yQnlUeXBlKHByb3BzLnR5cGUpfTtcblxuICAgID4gKiArICoge1xuICAgICAgbWFyZ2luLWxlZnQ6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmdTfTtcbiAgICB9XG4gIGA7XG5cbiAgc3dpdGNoIChwcm9wcy5kb21haW4pIHtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLkdMT0JBTDpcbiAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICR7cGFnZVN0eWxlc307XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Z2V0Q29sb3JCeVR5cGUocHJvcHMudHlwZSl9O1xuICAgICAgYDtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLlBBR0U6XG4gICAgICByZXR1cm4gcGFnZVN0eWxlcztcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLlNJREU6IHtcbiAgICAgIGNvbnN0IHNpZGVTdHlsZXMgPSBjc3NgXG4gICAgICAgICR7YmFzZVN0eWxlc307XG4gICAgICAgIGFuaW1hdGlvbjogJHtzaG93Tm90aWZpY2F0aW9uQW5pbWF0aW9ufSAwLjNzIGZvcndhcmRzO1xuICAgICAgICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5zcGFjaW5nTX0gJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ019XG4gICAgICAgICAgJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ019IDUwcHggIWltcG9ydGFudDtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgYmFja2dyb3VuZDogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJHtnZXRCb3JkZXJDb2xvcihwcm9wcy50eXBlKX07XG4gICAgICAgIGJveC1zaGFkb3c6IDBweCAycHggNXB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXM2fTtcbiAgICAgICAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgICAgICAgaHlwaGVuczogYXV0bzsgLyogc3RpbGwgbm90IHN1cHBvcnRlZCBvbiBDaHJvbWUgKi9cbiAgICAgIGA7XG5cbiAgICAgIGlmIChwcm9wcy5maXhlZCkgcmV0dXJuIHNpZGVTdHlsZXM7XG4gICAgICByZXR1cm4gY3NzYFxuICAgICAgICAke3NpZGVTdHlsZXN9O1xuICAgICAgICBhbmltYXRpb246ICR7c2hvd05vdGlmaWNhdGlvblNpZGVBbmltYXRpb259IDAuM3MgZm9yd2FyZHM7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgei1pbmRleDogMTAwMDA7XG4gICAgICAgIG1hcmdpbi10b3A6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmdMfSAhaW1wb3J0YW50O1xuICAgICAgICByaWdodDogJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ1hsfTtcbiAgICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgICBjbGVhcjogYm90aDtcbiAgICAgICAgbWF4LXdpZHRoOiA1MCU7XG4gICAgICBgO1xuICAgIH1cbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGNzc2BgO1xuICB9XG59O1xuXG5leHBvcnQge1xuICBnZXRTdHlsZXNGb3JOb3RpZmljYXRpb25JY29uLFxuICBnZXRTdHlsZXNGb3JDbG9zZUljb24sXG4gIGdldFN0eWxlc0ZvckNvbnRlbnQsXG4gIGdldFN0eWxlc0Zvck5vdGlmaWNhdGlvbixcbn07XG4iXX0= */");
  switch (props.domain) {
    case NOTIFICATION_DOMAINS.GLOBAL:
      return /*#__PURE__*/css(pageStyles, ";background-color:", getColorByType(props.type), ";" + (process.env.NODE_ENV === "production" ? "" : ";label:getStylesForNotification;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGlmaWNhdGlvbi5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaUpnQiIsImZpbGUiOiJub3RpZmljYXRpb24uc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMsIHR5cGUgU2VyaWFsaXplZFN0eWxlcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB0eXBlIHtcbiAgVEFwcE5vdGlmaWNhdGlvbktpbmQsXG4gIFRBcHBOb3RpZmljYXRpb25Eb21haW4sXG59IGZyb20gJ0Bjb21tZXJjZXRvb2xzLWZyb250ZW5kL2NvbnN0YW50cyc7XG5cbmltcG9ydCB7XG4gIE5PVElGSUNBVElPTl9ET01BSU5TLFxuICBOT1RJRklDQVRJT05fS0lORFNfU0lERSxcbn0gZnJvbSAnQGNvbW1lcmNldG9vbHMtZnJvbnRlbmQvY29uc3RhbnRzJztcbmltcG9ydCB7IGRlc2lnblRva2VucyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuXG50eXBlIFN0eWxlUHJvcHMgPSB7XG4gIHR5cGU6IFRBcHBOb3RpZmljYXRpb25LaW5kO1xuICBkb21haW46IFRBcHBOb3RpZmljYXRpb25Eb21haW47XG4gIGZpeGVkOiBib29sZWFuO1xufTtcblxuY29uc3QgZ2V0Q29sb3JCeVR5cGUgPSAodmFsdWU6IFRBcHBOb3RpZmljYXRpb25LaW5kKSA9PiB7XG4gIHN3aXRjaCAodmFsdWUpIHtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLnN1Y2Nlc3M6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yUHJpbWFyeTtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLmluZm86XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9ySW5mbztcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLmVycm9yOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvckVycm9yO1xuICAgIGNhc2UgTk9USUZJQ0FUSU9OX0tJTkRTX1NJREUud2FybmluZzpcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuY29sb3JXYXJuaW5nO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gJ3RyYW5zcGFyZW50JztcbiAgfVxufTtcblxuY29uc3QgZ2V0Qm9yZGVyQ29sb3IgPSAobm90aWZpY2F0aW9uS2luZDogVEFwcE5vdGlmaWNhdGlvbktpbmQpID0+IHtcbiAgc3dpdGNoIChub3RpZmljYXRpb25LaW5kKSB7XG4gICAgY2FzZSBOT1RJRklDQVRJT05fS0lORFNfU0lERS5zdWNjZXNzOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvclByaW1hcnk4NTtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLmluZm86XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9ySW5mbzg1O1xuICAgIGNhc2UgTk9USUZJQ0FUSU9OX0tJTkRTX1NJREUuZXJyb3I6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yRXJyb3I4NTtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLndhcm5pbmc6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yV2FybmluZzg1O1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gJ3RyYW5zcGFyZW50JztcbiAgfVxufTtcblxuY29uc3Qgc2hvd05vdGlmaWNhdGlvbkFuaW1hdGlvbiA9IGtleWZyYW1lc2BcbiAgMCUge1xuICAgIG1heC1oZWlnaHQ6IDA7XG4gICAgcGFkZGluZy10b3A6IDA7XG4gICAgcGFkZGluZy1ib3R0b206IDA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgfVxuICAxMDAlIHtcbiAgICBtYXgtaGVpZ2h0OiAyMDBweDtcbiAgfVxuYDtcbmNvbnN0IHNob3dOb3RpZmljYXRpb25TaWRlQW5pbWF0aW9uID0ga2V5ZnJhbWVzYFxuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDUwcHgpO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgfVxuYDtcblxuY29uc3QgZ2V0U3R5bGVzRm9yTm90aWZpY2F0aW9uSWNvbiA9IChcbiAgcHJvcHM6IFN0eWxlUHJvcHNcbik6IFNlcmlhbGl6ZWRTdHlsZXMgPT4gY3NzYFxuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIHdpZHRoOiA0OHB4O1xuICBoZWlnaHQ6IDEwMCU7XG4gIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICBib3JkZXItcmFkaXVzOiAzcHggMCAwIDNweDtcbiAgYmFja2dyb3VuZDogJHtnZXRDb2xvckJ5VHlwZShwcm9wcy50eXBlKX07XG5gO1xuXG5jb25zdCBnZXRTdHlsZXNGb3JDbG9zZUljb24gPSAocHJvcHM6IFN0eWxlUHJvcHMpOiBTZXJpYWxpemVkU3R5bGVzID0+IGNzc2BcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICYgc3ZnIHtcbiAgICB3aWR0aDogMTZweDtcbiAgICBoZWlnaHQ6IDE2cHg7XG4gIH1cbiAgJHtwcm9wcy5kb21haW4gIT09IE5PVElGSUNBVElPTl9ET01BSU5TLlNJREVcbiAgICA/ICcmIHN2ZyB7IGZpbGw6ICcgKyBkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlICsgJzsgfSdcbiAgICA6ICcnfVxuYDtcblxuY29uc3QgZ2V0U3R5bGVzRm9yQ29udGVudCA9IChwcm9wczogU3R5bGVQcm9wcyk6IFNlcmlhbGl6ZWRTdHlsZXMgPT4ge1xuICBjb25zdCBmb250Q29sb3IgPVxuICAgIHByb3BzLmRvbWFpbiA9PT0gTk9USUZJQ0FUSU9OX0RPTUFJTlMuU0lERVxuICAgICAgPyBkZXNpZ25Ub2tlbnMuY29sb3JTb2xpZFxuICAgICAgOiBkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlO1xuICByZXR1cm4gY3NzYFxuICAgIGZsZXgtYmFzaXM6IDEwMCU7XG4gICAgZmxleC1ncm93OiAxO1xuICAgIHBhZGRpbmc6ICR7YDAgJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ019YH07XG4gICAgbWFyZ2luOiAwO1xuICAgIGZvbnQtc2l6ZTogJHtwcm9wcy5kb21haW4gPT09IE5PVElGSUNBVElPTl9ET01BSU5TLlNJREVcbiAgICAgID8gJzFyZW0nXG4gICAgICA6ICdpbmhlcml0J307XG5cbiAgICBjb2xvcjogJHtmb250Q29sb3J9O1xuICAgIHAge1xuICAgICAgY29sb3I6ICR7Zm9udENvbG9yfTtcbiAgICB9XG4gICAgdWwge1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgfVxuICBgO1xufTtcblxuY29uc3QgZ2V0U3R5bGVzRm9yTm90aWZpY2F0aW9uID0gKHByb3BzOiBTdHlsZVByb3BzKTogU2VyaWFsaXplZFN0eWxlcyA9PiB7XG4gIGNvbnN0IGJhc2VTdHlsZXMgPSBjc3NgXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5zcGFjaW5nTX07XG4gICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG4gIGA7XG4gIGNvbnN0IHBhZ2VTdHlsZXMgPSBjc3NgXG4gICAgJHtiYXNlU3R5bGVzfTtcbiAgICBhbmltYXRpb246ICR7c2hvd05vdGlmaWNhdGlvbkFuaW1hdGlvbn0gMC4zcyBmb3J3YXJkcztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcy5maXhlZFxuICAgICAgPyAndHJhbnNwYXJlbnQnXG4gICAgICA6IGdldENvbG9yQnlUeXBlKHByb3BzLnR5cGUpfTtcblxuICAgID4gKiArICoge1xuICAgICAgbWFyZ2luLWxlZnQ6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmdTfTtcbiAgICB9XG4gIGA7XG5cbiAgc3dpdGNoIChwcm9wcy5kb21haW4pIHtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLkdMT0JBTDpcbiAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICR7cGFnZVN0eWxlc307XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Z2V0Q29sb3JCeVR5cGUocHJvcHMudHlwZSl9O1xuICAgICAgYDtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLlBBR0U6XG4gICAgICByZXR1cm4gcGFnZVN0eWxlcztcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLlNJREU6IHtcbiAgICAgIGNvbnN0IHNpZGVTdHlsZXMgPSBjc3NgXG4gICAgICAgICR7YmFzZVN0eWxlc307XG4gICAgICAgIGFuaW1hdGlvbjogJHtzaG93Tm90aWZpY2F0aW9uQW5pbWF0aW9ufSAwLjNzIGZvcndhcmRzO1xuICAgICAgICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5zcGFjaW5nTX0gJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ019XG4gICAgICAgICAgJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ019IDUwcHggIWltcG9ydGFudDtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgYmFja2dyb3VuZDogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJHtnZXRCb3JkZXJDb2xvcihwcm9wcy50eXBlKX07XG4gICAgICAgIGJveC1zaGFkb3c6IDBweCAycHggNXB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXM2fTtcbiAgICAgICAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgICAgICAgaHlwaGVuczogYXV0bzsgLyogc3RpbGwgbm90IHN1cHBvcnRlZCBvbiBDaHJvbWUgKi9cbiAgICAgIGA7XG5cbiAgICAgIGlmIChwcm9wcy5maXhlZCkgcmV0dXJuIHNpZGVTdHlsZXM7XG4gICAgICByZXR1cm4gY3NzYFxuICAgICAgICAke3NpZGVTdHlsZXN9O1xuICAgICAgICBhbmltYXRpb246ICR7c2hvd05vdGlmaWNhdGlvblNpZGVBbmltYXRpb259IDAuM3MgZm9yd2FyZHM7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgei1pbmRleDogMTAwMDA7XG4gICAgICAgIG1hcmdpbi10b3A6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmdMfSAhaW1wb3J0YW50O1xuICAgICAgICByaWdodDogJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ1hsfTtcbiAgICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgICBjbGVhcjogYm90aDtcbiAgICAgICAgbWF4LXdpZHRoOiA1MCU7XG4gICAgICBgO1xuICAgIH1cbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGNzc2BgO1xuICB9XG59O1xuXG5leHBvcnQge1xuICBnZXRTdHlsZXNGb3JOb3RpZmljYXRpb25JY29uLFxuICBnZXRTdHlsZXNGb3JDbG9zZUljb24sXG4gIGdldFN0eWxlc0ZvckNvbnRlbnQsXG4gIGdldFN0eWxlc0Zvck5vdGlmaWNhdGlvbixcbn07XG4iXX0= */");
    case NOTIFICATION_DOMAINS.PAGE:
      return pageStyles;
    case NOTIFICATION_DOMAINS.SIDE:
      {
        const sideStyles = /*#__PURE__*/css(baseStyles, ";animation:", showNotificationAnimation, " 0.3s forwards;padding:", designTokens.spacingM, " ", designTokens.spacingM, " ", designTokens.spacingM, " 50px!important;text-align:left;background:", designTokens.colorSurface, ";border:1px solid ", getBorderColor(props.type), ";box-shadow:0px 2px 5px 0px rgba(0, 0, 0, 0.15);border-radius:", designTokens.borderRadius6, ";word-break:break-word;hyphens:auto;" + (process.env.NODE_ENV === "production" ? "" : ";label:sideStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGlmaWNhdGlvbi5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0o0QiIsImZpbGUiOiJub3RpZmljYXRpb24uc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMsIHR5cGUgU2VyaWFsaXplZFN0eWxlcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB0eXBlIHtcbiAgVEFwcE5vdGlmaWNhdGlvbktpbmQsXG4gIFRBcHBOb3RpZmljYXRpb25Eb21haW4sXG59IGZyb20gJ0Bjb21tZXJjZXRvb2xzLWZyb250ZW5kL2NvbnN0YW50cyc7XG5cbmltcG9ydCB7XG4gIE5PVElGSUNBVElPTl9ET01BSU5TLFxuICBOT1RJRklDQVRJT05fS0lORFNfU0lERSxcbn0gZnJvbSAnQGNvbW1lcmNldG9vbHMtZnJvbnRlbmQvY29uc3RhbnRzJztcbmltcG9ydCB7IGRlc2lnblRva2VucyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuXG50eXBlIFN0eWxlUHJvcHMgPSB7XG4gIHR5cGU6IFRBcHBOb3RpZmljYXRpb25LaW5kO1xuICBkb21haW46IFRBcHBOb3RpZmljYXRpb25Eb21haW47XG4gIGZpeGVkOiBib29sZWFuO1xufTtcblxuY29uc3QgZ2V0Q29sb3JCeVR5cGUgPSAodmFsdWU6IFRBcHBOb3RpZmljYXRpb25LaW5kKSA9PiB7XG4gIHN3aXRjaCAodmFsdWUpIHtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLnN1Y2Nlc3M6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yUHJpbWFyeTtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLmluZm86XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9ySW5mbztcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLmVycm9yOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvckVycm9yO1xuICAgIGNhc2UgTk9USUZJQ0FUSU9OX0tJTkRTX1NJREUud2FybmluZzpcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuY29sb3JXYXJuaW5nO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gJ3RyYW5zcGFyZW50JztcbiAgfVxufTtcblxuY29uc3QgZ2V0Qm9yZGVyQ29sb3IgPSAobm90aWZpY2F0aW9uS2luZDogVEFwcE5vdGlmaWNhdGlvbktpbmQpID0+IHtcbiAgc3dpdGNoIChub3RpZmljYXRpb25LaW5kKSB7XG4gICAgY2FzZSBOT1RJRklDQVRJT05fS0lORFNfU0lERS5zdWNjZXNzOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvclByaW1hcnk4NTtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLmluZm86XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9ySW5mbzg1O1xuICAgIGNhc2UgTk9USUZJQ0FUSU9OX0tJTkRTX1NJREUuZXJyb3I6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yRXJyb3I4NTtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLndhcm5pbmc6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yV2FybmluZzg1O1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gJ3RyYW5zcGFyZW50JztcbiAgfVxufTtcblxuY29uc3Qgc2hvd05vdGlmaWNhdGlvbkFuaW1hdGlvbiA9IGtleWZyYW1lc2BcbiAgMCUge1xuICAgIG1heC1oZWlnaHQ6IDA7XG4gICAgcGFkZGluZy10b3A6IDA7XG4gICAgcGFkZGluZy1ib3R0b206IDA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgfVxuICAxMDAlIHtcbiAgICBtYXgtaGVpZ2h0OiAyMDBweDtcbiAgfVxuYDtcbmNvbnN0IHNob3dOb3RpZmljYXRpb25TaWRlQW5pbWF0aW9uID0ga2V5ZnJhbWVzYFxuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDUwcHgpO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgfVxuYDtcblxuY29uc3QgZ2V0U3R5bGVzRm9yTm90aWZpY2F0aW9uSWNvbiA9IChcbiAgcHJvcHM6IFN0eWxlUHJvcHNcbik6IFNlcmlhbGl6ZWRTdHlsZXMgPT4gY3NzYFxuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIHdpZHRoOiA0OHB4O1xuICBoZWlnaHQ6IDEwMCU7XG4gIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICBib3JkZXItcmFkaXVzOiAzcHggMCAwIDNweDtcbiAgYmFja2dyb3VuZDogJHtnZXRDb2xvckJ5VHlwZShwcm9wcy50eXBlKX07XG5gO1xuXG5jb25zdCBnZXRTdHlsZXNGb3JDbG9zZUljb24gPSAocHJvcHM6IFN0eWxlUHJvcHMpOiBTZXJpYWxpemVkU3R5bGVzID0+IGNzc2BcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICYgc3ZnIHtcbiAgICB3aWR0aDogMTZweDtcbiAgICBoZWlnaHQ6IDE2cHg7XG4gIH1cbiAgJHtwcm9wcy5kb21haW4gIT09IE5PVElGSUNBVElPTl9ET01BSU5TLlNJREVcbiAgICA/ICcmIHN2ZyB7IGZpbGw6ICcgKyBkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlICsgJzsgfSdcbiAgICA6ICcnfVxuYDtcblxuY29uc3QgZ2V0U3R5bGVzRm9yQ29udGVudCA9IChwcm9wczogU3R5bGVQcm9wcyk6IFNlcmlhbGl6ZWRTdHlsZXMgPT4ge1xuICBjb25zdCBmb250Q29sb3IgPVxuICAgIHByb3BzLmRvbWFpbiA9PT0gTk9USUZJQ0FUSU9OX0RPTUFJTlMuU0lERVxuICAgICAgPyBkZXNpZ25Ub2tlbnMuY29sb3JTb2xpZFxuICAgICAgOiBkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlO1xuICByZXR1cm4gY3NzYFxuICAgIGZsZXgtYmFzaXM6IDEwMCU7XG4gICAgZmxleC1ncm93OiAxO1xuICAgIHBhZGRpbmc6ICR7YDAgJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ019YH07XG4gICAgbWFyZ2luOiAwO1xuICAgIGZvbnQtc2l6ZTogJHtwcm9wcy5kb21haW4gPT09IE5PVElGSUNBVElPTl9ET01BSU5TLlNJREVcbiAgICAgID8gJzFyZW0nXG4gICAgICA6ICdpbmhlcml0J307XG5cbiAgICBjb2xvcjogJHtmb250Q29sb3J9O1xuICAgIHAge1xuICAgICAgY29sb3I6ICR7Zm9udENvbG9yfTtcbiAgICB9XG4gICAgdWwge1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgfVxuICBgO1xufTtcblxuY29uc3QgZ2V0U3R5bGVzRm9yTm90aWZpY2F0aW9uID0gKHByb3BzOiBTdHlsZVByb3BzKTogU2VyaWFsaXplZFN0eWxlcyA9PiB7XG4gIGNvbnN0IGJhc2VTdHlsZXMgPSBjc3NgXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5zcGFjaW5nTX07XG4gICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG4gIGA7XG4gIGNvbnN0IHBhZ2VTdHlsZXMgPSBjc3NgXG4gICAgJHtiYXNlU3R5bGVzfTtcbiAgICBhbmltYXRpb246ICR7c2hvd05vdGlmaWNhdGlvbkFuaW1hdGlvbn0gMC4zcyBmb3J3YXJkcztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcy5maXhlZFxuICAgICAgPyAndHJhbnNwYXJlbnQnXG4gICAgICA6IGdldENvbG9yQnlUeXBlKHByb3BzLnR5cGUpfTtcblxuICAgID4gKiArICoge1xuICAgICAgbWFyZ2luLWxlZnQ6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmdTfTtcbiAgICB9XG4gIGA7XG5cbiAgc3dpdGNoIChwcm9wcy5kb21haW4pIHtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLkdMT0JBTDpcbiAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICR7cGFnZVN0eWxlc307XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Z2V0Q29sb3JCeVR5cGUocHJvcHMudHlwZSl9O1xuICAgICAgYDtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLlBBR0U6XG4gICAgICByZXR1cm4gcGFnZVN0eWxlcztcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLlNJREU6IHtcbiAgICAgIGNvbnN0IHNpZGVTdHlsZXMgPSBjc3NgXG4gICAgICAgICR7YmFzZVN0eWxlc307XG4gICAgICAgIGFuaW1hdGlvbjogJHtzaG93Tm90aWZpY2F0aW9uQW5pbWF0aW9ufSAwLjNzIGZvcndhcmRzO1xuICAgICAgICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5zcGFjaW5nTX0gJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ019XG4gICAgICAgICAgJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ019IDUwcHggIWltcG9ydGFudDtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgYmFja2dyb3VuZDogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJHtnZXRCb3JkZXJDb2xvcihwcm9wcy50eXBlKX07XG4gICAgICAgIGJveC1zaGFkb3c6IDBweCAycHggNXB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXM2fTtcbiAgICAgICAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgICAgICAgaHlwaGVuczogYXV0bzsgLyogc3RpbGwgbm90IHN1cHBvcnRlZCBvbiBDaHJvbWUgKi9cbiAgICAgIGA7XG5cbiAgICAgIGlmIChwcm9wcy5maXhlZCkgcmV0dXJuIHNpZGVTdHlsZXM7XG4gICAgICByZXR1cm4gY3NzYFxuICAgICAgICAke3NpZGVTdHlsZXN9O1xuICAgICAgICBhbmltYXRpb246ICR7c2hvd05vdGlmaWNhdGlvblNpZGVBbmltYXRpb259IDAuM3MgZm9yd2FyZHM7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgei1pbmRleDogMTAwMDA7XG4gICAgICAgIG1hcmdpbi10b3A6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmdMfSAhaW1wb3J0YW50O1xuICAgICAgICByaWdodDogJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ1hsfTtcbiAgICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgICBjbGVhcjogYm90aDtcbiAgICAgICAgbWF4LXdpZHRoOiA1MCU7XG4gICAgICBgO1xuICAgIH1cbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGNzc2BgO1xuICB9XG59O1xuXG5leHBvcnQge1xuICBnZXRTdHlsZXNGb3JOb3RpZmljYXRpb25JY29uLFxuICBnZXRTdHlsZXNGb3JDbG9zZUljb24sXG4gIGdldFN0eWxlc0ZvckNvbnRlbnQsXG4gIGdldFN0eWxlc0Zvck5vdGlmaWNhdGlvbixcbn07XG4iXX0= */");
        if (props.fixed) return sideStyles;
        return /*#__PURE__*/css(sideStyles, ";animation:", showNotificationSideAnimation, " 0.3s forwards;position:relative;z-index:10000;margin-top:", designTokens.spacingL, "!important;right:", designTokens.spacingXl, ";float:right;clear:both;max-width:50%;" + (process.env.NODE_ENV === "production" ? "" : ";label:getStylesForNotification;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGlmaWNhdGlvbi5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdUtnQiIsImZpbGUiOiJub3RpZmljYXRpb24uc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMsIHR5cGUgU2VyaWFsaXplZFN0eWxlcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB0eXBlIHtcbiAgVEFwcE5vdGlmaWNhdGlvbktpbmQsXG4gIFRBcHBOb3RpZmljYXRpb25Eb21haW4sXG59IGZyb20gJ0Bjb21tZXJjZXRvb2xzLWZyb250ZW5kL2NvbnN0YW50cyc7XG5cbmltcG9ydCB7XG4gIE5PVElGSUNBVElPTl9ET01BSU5TLFxuICBOT1RJRklDQVRJT05fS0lORFNfU0lERSxcbn0gZnJvbSAnQGNvbW1lcmNldG9vbHMtZnJvbnRlbmQvY29uc3RhbnRzJztcbmltcG9ydCB7IGRlc2lnblRva2VucyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuXG50eXBlIFN0eWxlUHJvcHMgPSB7XG4gIHR5cGU6IFRBcHBOb3RpZmljYXRpb25LaW5kO1xuICBkb21haW46IFRBcHBOb3RpZmljYXRpb25Eb21haW47XG4gIGZpeGVkOiBib29sZWFuO1xufTtcblxuY29uc3QgZ2V0Q29sb3JCeVR5cGUgPSAodmFsdWU6IFRBcHBOb3RpZmljYXRpb25LaW5kKSA9PiB7XG4gIHN3aXRjaCAodmFsdWUpIHtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLnN1Y2Nlc3M6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yUHJpbWFyeTtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLmluZm86XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9ySW5mbztcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLmVycm9yOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvckVycm9yO1xuICAgIGNhc2UgTk9USUZJQ0FUSU9OX0tJTkRTX1NJREUud2FybmluZzpcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuY29sb3JXYXJuaW5nO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gJ3RyYW5zcGFyZW50JztcbiAgfVxufTtcblxuY29uc3QgZ2V0Qm9yZGVyQ29sb3IgPSAobm90aWZpY2F0aW9uS2luZDogVEFwcE5vdGlmaWNhdGlvbktpbmQpID0+IHtcbiAgc3dpdGNoIChub3RpZmljYXRpb25LaW5kKSB7XG4gICAgY2FzZSBOT1RJRklDQVRJT05fS0lORFNfU0lERS5zdWNjZXNzOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvclByaW1hcnk4NTtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLmluZm86XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9ySW5mbzg1O1xuICAgIGNhc2UgTk9USUZJQ0FUSU9OX0tJTkRTX1NJREUuZXJyb3I6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yRXJyb3I4NTtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLndhcm5pbmc6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yV2FybmluZzg1O1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gJ3RyYW5zcGFyZW50JztcbiAgfVxufTtcblxuY29uc3Qgc2hvd05vdGlmaWNhdGlvbkFuaW1hdGlvbiA9IGtleWZyYW1lc2BcbiAgMCUge1xuICAgIG1heC1oZWlnaHQ6IDA7XG4gICAgcGFkZGluZy10b3A6IDA7XG4gICAgcGFkZGluZy1ib3R0b206IDA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgfVxuICAxMDAlIHtcbiAgICBtYXgtaGVpZ2h0OiAyMDBweDtcbiAgfVxuYDtcbmNvbnN0IHNob3dOb3RpZmljYXRpb25TaWRlQW5pbWF0aW9uID0ga2V5ZnJhbWVzYFxuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDUwcHgpO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgfVxuYDtcblxuY29uc3QgZ2V0U3R5bGVzRm9yTm90aWZpY2F0aW9uSWNvbiA9IChcbiAgcHJvcHM6IFN0eWxlUHJvcHNcbik6IFNlcmlhbGl6ZWRTdHlsZXMgPT4gY3NzYFxuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIHdpZHRoOiA0OHB4O1xuICBoZWlnaHQ6IDEwMCU7XG4gIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICBib3JkZXItcmFkaXVzOiAzcHggMCAwIDNweDtcbiAgYmFja2dyb3VuZDogJHtnZXRDb2xvckJ5VHlwZShwcm9wcy50eXBlKX07XG5gO1xuXG5jb25zdCBnZXRTdHlsZXNGb3JDbG9zZUljb24gPSAocHJvcHM6IFN0eWxlUHJvcHMpOiBTZXJpYWxpemVkU3R5bGVzID0+IGNzc2BcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICYgc3ZnIHtcbiAgICB3aWR0aDogMTZweDtcbiAgICBoZWlnaHQ6IDE2cHg7XG4gIH1cbiAgJHtwcm9wcy5kb21haW4gIT09IE5PVElGSUNBVElPTl9ET01BSU5TLlNJREVcbiAgICA/ICcmIHN2ZyB7IGZpbGw6ICcgKyBkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlICsgJzsgfSdcbiAgICA6ICcnfVxuYDtcblxuY29uc3QgZ2V0U3R5bGVzRm9yQ29udGVudCA9IChwcm9wczogU3R5bGVQcm9wcyk6IFNlcmlhbGl6ZWRTdHlsZXMgPT4ge1xuICBjb25zdCBmb250Q29sb3IgPVxuICAgIHByb3BzLmRvbWFpbiA9PT0gTk9USUZJQ0FUSU9OX0RPTUFJTlMuU0lERVxuICAgICAgPyBkZXNpZ25Ub2tlbnMuY29sb3JTb2xpZFxuICAgICAgOiBkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlO1xuICByZXR1cm4gY3NzYFxuICAgIGZsZXgtYmFzaXM6IDEwMCU7XG4gICAgZmxleC1ncm93OiAxO1xuICAgIHBhZGRpbmc6ICR7YDAgJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ019YH07XG4gICAgbWFyZ2luOiAwO1xuICAgIGZvbnQtc2l6ZTogJHtwcm9wcy5kb21haW4gPT09IE5PVElGSUNBVElPTl9ET01BSU5TLlNJREVcbiAgICAgID8gJzFyZW0nXG4gICAgICA6ICdpbmhlcml0J307XG5cbiAgICBjb2xvcjogJHtmb250Q29sb3J9O1xuICAgIHAge1xuICAgICAgY29sb3I6ICR7Zm9udENvbG9yfTtcbiAgICB9XG4gICAgdWwge1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgfVxuICBgO1xufTtcblxuY29uc3QgZ2V0U3R5bGVzRm9yTm90aWZpY2F0aW9uID0gKHByb3BzOiBTdHlsZVByb3BzKTogU2VyaWFsaXplZFN0eWxlcyA9PiB7XG4gIGNvbnN0IGJhc2VTdHlsZXMgPSBjc3NgXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5zcGFjaW5nTX07XG4gICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG4gIGA7XG4gIGNvbnN0IHBhZ2VTdHlsZXMgPSBjc3NgXG4gICAgJHtiYXNlU3R5bGVzfTtcbiAgICBhbmltYXRpb246ICR7c2hvd05vdGlmaWNhdGlvbkFuaW1hdGlvbn0gMC4zcyBmb3J3YXJkcztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcy5maXhlZFxuICAgICAgPyAndHJhbnNwYXJlbnQnXG4gICAgICA6IGdldENvbG9yQnlUeXBlKHByb3BzLnR5cGUpfTtcblxuICAgID4gKiArICoge1xuICAgICAgbWFyZ2luLWxlZnQ6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmdTfTtcbiAgICB9XG4gIGA7XG5cbiAgc3dpdGNoIChwcm9wcy5kb21haW4pIHtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLkdMT0JBTDpcbiAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICR7cGFnZVN0eWxlc307XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Z2V0Q29sb3JCeVR5cGUocHJvcHMudHlwZSl9O1xuICAgICAgYDtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLlBBR0U6XG4gICAgICByZXR1cm4gcGFnZVN0eWxlcztcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLlNJREU6IHtcbiAgICAgIGNvbnN0IHNpZGVTdHlsZXMgPSBjc3NgXG4gICAgICAgICR7YmFzZVN0eWxlc307XG4gICAgICAgIGFuaW1hdGlvbjogJHtzaG93Tm90aWZpY2F0aW9uQW5pbWF0aW9ufSAwLjNzIGZvcndhcmRzO1xuICAgICAgICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5zcGFjaW5nTX0gJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ019XG4gICAgICAgICAgJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ019IDUwcHggIWltcG9ydGFudDtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgYmFja2dyb3VuZDogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJHtnZXRCb3JkZXJDb2xvcihwcm9wcy50eXBlKX07XG4gICAgICAgIGJveC1zaGFkb3c6IDBweCAycHggNXB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXM2fTtcbiAgICAgICAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgICAgICAgaHlwaGVuczogYXV0bzsgLyogc3RpbGwgbm90IHN1cHBvcnRlZCBvbiBDaHJvbWUgKi9cbiAgICAgIGA7XG5cbiAgICAgIGlmIChwcm9wcy5maXhlZCkgcmV0dXJuIHNpZGVTdHlsZXM7XG4gICAgICByZXR1cm4gY3NzYFxuICAgICAgICAke3NpZGVTdHlsZXN9O1xuICAgICAgICBhbmltYXRpb246ICR7c2hvd05vdGlmaWNhdGlvblNpZGVBbmltYXRpb259IDAuM3MgZm9yd2FyZHM7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgei1pbmRleDogMTAwMDA7XG4gICAgICAgIG1hcmdpbi10b3A6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmdMfSAhaW1wb3J0YW50O1xuICAgICAgICByaWdodDogJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ1hsfTtcbiAgICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgICBjbGVhcjogYm90aDtcbiAgICAgICAgbWF4LXdpZHRoOiA1MCU7XG4gICAgICBgO1xuICAgIH1cbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGNzc2BgO1xuICB9XG59O1xuXG5leHBvcnQge1xuICBnZXRTdHlsZXNGb3JOb3RpZmljYXRpb25JY29uLFxuICBnZXRTdHlsZXNGb3JDbG9zZUljb24sXG4gIGdldFN0eWxlc0ZvckNvbnRlbnQsXG4gIGdldFN0eWxlc0Zvck5vdGlmaWNhdGlvbixcbn07XG4iXX0= */");
      }
    default:
      return /*#__PURE__*/css(process.env.NODE_ENV === "production" ? "" : ";label:getStylesForNotification;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGlmaWNhdGlvbi5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0xnQiIsImZpbGUiOiJub3RpZmljYXRpb24uc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzLCBrZXlmcmFtZXMsIHR5cGUgU2VyaWFsaXplZFN0eWxlcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCB0eXBlIHtcbiAgVEFwcE5vdGlmaWNhdGlvbktpbmQsXG4gIFRBcHBOb3RpZmljYXRpb25Eb21haW4sXG59IGZyb20gJ0Bjb21tZXJjZXRvb2xzLWZyb250ZW5kL2NvbnN0YW50cyc7XG5cbmltcG9ydCB7XG4gIE5PVElGSUNBVElPTl9ET01BSU5TLFxuICBOT1RJRklDQVRJT05fS0lORFNfU0lERSxcbn0gZnJvbSAnQGNvbW1lcmNldG9vbHMtZnJvbnRlbmQvY29uc3RhbnRzJztcbmltcG9ydCB7IGRlc2lnblRva2VucyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuXG50eXBlIFN0eWxlUHJvcHMgPSB7XG4gIHR5cGU6IFRBcHBOb3RpZmljYXRpb25LaW5kO1xuICBkb21haW46IFRBcHBOb3RpZmljYXRpb25Eb21haW47XG4gIGZpeGVkOiBib29sZWFuO1xufTtcblxuY29uc3QgZ2V0Q29sb3JCeVR5cGUgPSAodmFsdWU6IFRBcHBOb3RpZmljYXRpb25LaW5kKSA9PiB7XG4gIHN3aXRjaCAodmFsdWUpIHtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLnN1Y2Nlc3M6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yUHJpbWFyeTtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLmluZm86XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9ySW5mbztcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLmVycm9yOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvckVycm9yO1xuICAgIGNhc2UgTk9USUZJQ0FUSU9OX0tJTkRTX1NJREUud2FybmluZzpcbiAgICAgIHJldHVybiBkZXNpZ25Ub2tlbnMuY29sb3JXYXJuaW5nO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gJ3RyYW5zcGFyZW50JztcbiAgfVxufTtcblxuY29uc3QgZ2V0Qm9yZGVyQ29sb3IgPSAobm90aWZpY2F0aW9uS2luZDogVEFwcE5vdGlmaWNhdGlvbktpbmQpID0+IHtcbiAgc3dpdGNoIChub3RpZmljYXRpb25LaW5kKSB7XG4gICAgY2FzZSBOT1RJRklDQVRJT05fS0lORFNfU0lERS5zdWNjZXNzOlxuICAgICAgcmV0dXJuIGRlc2lnblRva2Vucy5jb2xvclByaW1hcnk4NTtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLmluZm86XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9ySW5mbzg1O1xuICAgIGNhc2UgTk9USUZJQ0FUSU9OX0tJTkRTX1NJREUuZXJyb3I6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yRXJyb3I4NTtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9LSU5EU19TSURFLndhcm5pbmc6XG4gICAgICByZXR1cm4gZGVzaWduVG9rZW5zLmNvbG9yV2FybmluZzg1O1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gJ3RyYW5zcGFyZW50JztcbiAgfVxufTtcblxuY29uc3Qgc2hvd05vdGlmaWNhdGlvbkFuaW1hdGlvbiA9IGtleWZyYW1lc2BcbiAgMCUge1xuICAgIG1heC1oZWlnaHQ6IDA7XG4gICAgcGFkZGluZy10b3A6IDA7XG4gICAgcGFkZGluZy1ib3R0b206IDA7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgfVxuICAxMDAlIHtcbiAgICBtYXgtaGVpZ2h0OiAyMDBweDtcbiAgfVxuYDtcbmNvbnN0IHNob3dOb3RpZmljYXRpb25TaWRlQW5pbWF0aW9uID0ga2V5ZnJhbWVzYFxuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDUwcHgpO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwKTtcbiAgfVxuYDtcblxuY29uc3QgZ2V0U3R5bGVzRm9yTm90aWZpY2F0aW9uSWNvbiA9IChcbiAgcHJvcHM6IFN0eWxlUHJvcHNcbik6IFNlcmlhbGl6ZWRTdHlsZXMgPT4gY3NzYFxuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIHdpZHRoOiA0OHB4O1xuICBoZWlnaHQ6IDEwMCU7XG4gIGNvbG9yOiAke2Rlc2lnblRva2Vucy5jb2xvclN1cmZhY2V9O1xuICBib3JkZXItcmFkaXVzOiAzcHggMCAwIDNweDtcbiAgYmFja2dyb3VuZDogJHtnZXRDb2xvckJ5VHlwZShwcm9wcy50eXBlKX07XG5gO1xuXG5jb25zdCBnZXRTdHlsZXNGb3JDbG9zZUljb24gPSAocHJvcHM6IFN0eWxlUHJvcHMpOiBTZXJpYWxpemVkU3R5bGVzID0+IGNzc2BcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICYgc3ZnIHtcbiAgICB3aWR0aDogMTZweDtcbiAgICBoZWlnaHQ6IDE2cHg7XG4gIH1cbiAgJHtwcm9wcy5kb21haW4gIT09IE5PVElGSUNBVElPTl9ET01BSU5TLlNJREVcbiAgICA/ICcmIHN2ZyB7IGZpbGw6ICcgKyBkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlICsgJzsgfSdcbiAgICA6ICcnfVxuYDtcblxuY29uc3QgZ2V0U3R5bGVzRm9yQ29udGVudCA9IChwcm9wczogU3R5bGVQcm9wcyk6IFNlcmlhbGl6ZWRTdHlsZXMgPT4ge1xuICBjb25zdCBmb250Q29sb3IgPVxuICAgIHByb3BzLmRvbWFpbiA9PT0gTk9USUZJQ0FUSU9OX0RPTUFJTlMuU0lERVxuICAgICAgPyBkZXNpZ25Ub2tlbnMuY29sb3JTb2xpZFxuICAgICAgOiBkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlO1xuICByZXR1cm4gY3NzYFxuICAgIGZsZXgtYmFzaXM6IDEwMCU7XG4gICAgZmxleC1ncm93OiAxO1xuICAgIHBhZGRpbmc6ICR7YDAgJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ019YH07XG4gICAgbWFyZ2luOiAwO1xuICAgIGZvbnQtc2l6ZTogJHtwcm9wcy5kb21haW4gPT09IE5PVElGSUNBVElPTl9ET01BSU5TLlNJREVcbiAgICAgID8gJzFyZW0nXG4gICAgICA6ICdpbmhlcml0J307XG5cbiAgICBjb2xvcjogJHtmb250Q29sb3J9O1xuICAgIHAge1xuICAgICAgY29sb3I6ICR7Zm9udENvbG9yfTtcbiAgICB9XG4gICAgdWwge1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgfVxuICBgO1xufTtcblxuY29uc3QgZ2V0U3R5bGVzRm9yTm90aWZpY2F0aW9uID0gKHByb3BzOiBTdHlsZVByb3BzKTogU2VyaWFsaXplZFN0eWxlcyA9PiB7XG4gIGNvbnN0IGJhc2VTdHlsZXMgPSBjc3NgXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5zcGFjaW5nTX07XG4gICAgY29sb3I6ICR7ZGVzaWduVG9rZW5zLmNvbG9yU3VyZmFjZX07XG4gIGA7XG4gIGNvbnN0IHBhZ2VTdHlsZXMgPSBjc3NgXG4gICAgJHtiYXNlU3R5bGVzfTtcbiAgICBhbmltYXRpb246ICR7c2hvd05vdGlmaWNhdGlvbkFuaW1hdGlvbn0gMC4zcyBmb3J3YXJkcztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcy5maXhlZFxuICAgICAgPyAndHJhbnNwYXJlbnQnXG4gICAgICA6IGdldENvbG9yQnlUeXBlKHByb3BzLnR5cGUpfTtcblxuICAgID4gKiArICoge1xuICAgICAgbWFyZ2luLWxlZnQ6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmdTfTtcbiAgICB9XG4gIGA7XG5cbiAgc3dpdGNoIChwcm9wcy5kb21haW4pIHtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLkdMT0JBTDpcbiAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICR7cGFnZVN0eWxlc307XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Z2V0Q29sb3JCeVR5cGUocHJvcHMudHlwZSl9O1xuICAgICAgYDtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLlBBR0U6XG4gICAgICByZXR1cm4gcGFnZVN0eWxlcztcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLlNJREU6IHtcbiAgICAgIGNvbnN0IHNpZGVTdHlsZXMgPSBjc3NgXG4gICAgICAgICR7YmFzZVN0eWxlc307XG4gICAgICAgIGFuaW1hdGlvbjogJHtzaG93Tm90aWZpY2F0aW9uQW5pbWF0aW9ufSAwLjNzIGZvcndhcmRzO1xuICAgICAgICBwYWRkaW5nOiAke2Rlc2lnblRva2Vucy5zcGFjaW5nTX0gJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ019XG4gICAgICAgICAgJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ019IDUwcHggIWltcG9ydGFudDtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgYmFja2dyb3VuZDogJHtkZXNpZ25Ub2tlbnMuY29sb3JTdXJmYWNlfTtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJHtnZXRCb3JkZXJDb2xvcihwcm9wcy50eXBlKX07XG4gICAgICAgIGJveC1zaGFkb3c6IDBweCAycHggNXB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xuICAgICAgICBib3JkZXItcmFkaXVzOiAke2Rlc2lnblRva2Vucy5ib3JkZXJSYWRpdXM2fTtcbiAgICAgICAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgICAgICAgaHlwaGVuczogYXV0bzsgLyogc3RpbGwgbm90IHN1cHBvcnRlZCBvbiBDaHJvbWUgKi9cbiAgICAgIGA7XG5cbiAgICAgIGlmIChwcm9wcy5maXhlZCkgcmV0dXJuIHNpZGVTdHlsZXM7XG4gICAgICByZXR1cm4gY3NzYFxuICAgICAgICAke3NpZGVTdHlsZXN9O1xuICAgICAgICBhbmltYXRpb246ICR7c2hvd05vdGlmaWNhdGlvblNpZGVBbmltYXRpb259IDAuM3MgZm9yd2FyZHM7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgei1pbmRleDogMTAwMDA7XG4gICAgICAgIG1hcmdpbi10b3A6ICR7ZGVzaWduVG9rZW5zLnNwYWNpbmdMfSAhaW1wb3J0YW50O1xuICAgICAgICByaWdodDogJHtkZXNpZ25Ub2tlbnMuc3BhY2luZ1hsfTtcbiAgICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgICBjbGVhcjogYm90aDtcbiAgICAgICAgbWF4LXdpZHRoOiA1MCU7XG4gICAgICBgO1xuICAgIH1cbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGNzc2BgO1xuICB9XG59O1xuXG5leHBvcnQge1xuICBnZXRTdHlsZXNGb3JOb3RpZmljYXRpb25JY29uLFxuICBnZXRTdHlsZXNGb3JDbG9zZUljb24sXG4gIGdldFN0eWxlc0ZvckNvbnRlbnQsXG4gIGdldFN0eWxlc0Zvck5vdGlmaWNhdGlvbixcbn07XG4iXX0= */");
  }
};

function ownKeys$4(e, r) { var t = _Object$keys(e); if (_Object$getOwnPropertySymbols) { var o = _Object$getOwnPropertySymbols(e); r && (o = _filterInstanceProperty(o).call(o, function (r) { return _Object$getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$4(e) { for (var r = 1; r < arguments.length; r++) { var _context, _context2; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty(_context = ownKeys$4(Object(t), !0)).call(_context, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(e, _Object$getOwnPropertyDescriptors(t)) : _forEachInstanceProperty(_context2 = ownKeys$4(Object(t))).call(_context2, function (r) { _Object$defineProperty(e, r, _Object$getOwnPropertyDescriptor(t, r)); }); } return e; }
const sequentialId = createSequentialId('notification-');
const NotificationIcon = props => {
  if (props.type === NOTIFICATION_KINDS_SIDE.error) {
    return jsx(ErrorIcon, {
      color: props.color
    });
  }
  if (props.type === NOTIFICATION_KINDS_SIDE.info) {
    return jsx(InformationIcon, {
      color: props.color
    });
  }
  if (props.type === NOTIFICATION_KINDS_SIDE.warning) {
    return jsx(WarningIcon, {
      color: props.color
    });
  }
  return jsx(CheckBoldIcon, {
    color: props.color
  });
};
NotificationIcon.propTypes = process.env.NODE_ENV !== "production" ? {
  type: _pt.any.isRequired,
  color: _pt.oneOf(['error', 'warning', 'info', 'solid', 'neutral60', 'surface', 'primary', 'primary40']).isRequired
} : {};
NotificationIcon.displayName = 'NotificationIcon';
const defaultProps$1 = {
  fixed: false
};
const Notification = props => {
  const intl = useIntl();
  const id = useFieldId(undefined, sequentialId);
  return jsxs("div", _objectSpread$4(_objectSpread$4({
    role: "alertdialog",
    "aria-describedby": id,
    css: getStylesForNotification(props)
  }, filterDataAttributes(props)), {}, {
    children: [jsx("div", {
      id: id,
      css: getStylesForContent(props),
      children: props.children
    }), props.onCloseClick ? jsx("div", {
      css: getStylesForCloseIcon(props),
      children: jsx(SecondaryIconButton, {
        label: intl.formatMessage(messages.hideNotification),
        onClick: props.onCloseClick,
        icon: jsx(CloseBoldIcon, {}),
        size: "medium"
      })
    }) : null, props.domain === NOTIFICATION_DOMAINS.SIDE ? jsx("div", {
      css: getStylesForNotificationIcon(props),
      children: jsx(NotificationIcon, {
        type: props.type,
        color: "surface"
      })
    }) : null]
  }));
};
Notification.propTypes = process.env.NODE_ENV !== "production" ? {
  domain: _pt.any.isRequired,
  type: _pt.any.isRequired,
  fixed: _pt.bool.isRequired,
  onCloseClick: _pt.func,
  children: _pt.node.isRequired
} : {};
Notification.displayName = 'Notification';
Notification.defaultProps = defaultProps$1;

var apiErrorMessages = defineMessages({
  General: {
    id: 'ApiError.General',
    description: 'A general error message, usually because of internal application problems. The user should not know the details of the error.',
    defaultMessage: 'Sorry, but there seems to be something wrong. Please try again. If you are seeing this message for the second time, please contact our support team.'
  },
  // Custom API Error messages (without a matching error.code)
  OverlappingPrices: {
    id: 'ApiError.OverlappingPrices',
    description: '',
    defaultMessage: 'Sorry, but a price with these details already exists. Please amend the price details so that they do not overlap with another price before saving.'
  },
  ConcurrentModificationBulkEdit: {
    id: 'ApiError.ConcurrentModificationBulkEdit',
    description: 'User does a bulk update but someone else has saved changes for that element',
    defaultMessage: 'Sorry, but we were unable to save your changes as someone else made changes to this same source while you were editing.'
  },
  // API errors
  ConcurrentModification: {
    id: 'ApiError.ConcurrentModification',
    description: 'User edits form and clicks Save but someone else has saved changes for this element while they were editing',
    defaultMessage: 'Sorry, but we were unable to save your changes as someone else made changes to this same source while you were editing. Please refresh the page and re-enter your changes.'
  },
  DuplicateAttributeValue: {
    id: 'ApiError.DuplicateAttributeValue',
    description: 'User tries to enter the same attribute value for an attribute with the Unique constraint',
    defaultMessage: 'This value has already been used for another variant. The "{name}" value must be unique for all variants for this product. Please enter a different value.'
  },
  DuplicateAttributeValues: {
    id: 'ApiError.DuplicateAttributeValues',
    description: 'User tries to enter existing attribute values for a combination of attributes with the CombinationUnique constraint',
    defaultMessage: 'This combination has already been used for another variant. The combination of these attributes must be unique across all variants. Please enter a different version.'
  },
  DuplicateField: {
    id: 'ApiError.DuplicateField',
    description: 'The given field must be unique across the project',
    defaultMessage: 'The value for the field "{field}" has already been used. Please choose another value for this field.'
  },
  DuplicateSlug: {
    id: 'ApiError.DuplicateSlug',
    description: 'User tries to create a resource with an already existing slug',
    defaultMessage: '"{slugValue}" is already in use. Please enter a new slug value for this product.'
  },
  DuplicatePriceScope: {
    id: 'ApiError.DuplicatePriceScope',
    description: 'User tries to create a price with the exact same values as for an already existing price',
    defaultMessage: 'A price with the same scope already exists for this product variant. Make sure that the combination of currency, country, customer group, channel and valid dates is unique per price.'
  },
  DuplicateVariantValues: {
    id: 'ApiError.DuplicateVariantValues',
    description: 'User tries to generate a variant with the same SKU or attribute values',
    defaultMessage: 'The same variant already exists for this product. Please enter different values for the fields.'
  },
  InvalidDateRange: {
    id: 'ApiError.InvalidDateRange',
    description: 'User tries to input an invalid date range',
    defaultMessage: 'The value entered for the field {field} is invalid. The start date must be before the end date'
  },
  InvalidField: {
    id: 'ApiError.InvalidField',
    description: 'User enters an invalid value for a field.',
    defaultMessage: 'The value entered is not valid for the field "{field}".'
  },
  InvalidSlug: {
    id: 'ApiError.InvalidSlug',
    description: 'User enters an invalid value for the product slug',
    defaultMessage: 'Slugs may only contain alphanumeric (0-9A-Z) characters, underscores and hyphens and must have a length between 2 and 256 characters.'
  },
  PendingOperation: {
    id: 'ApiError.PendingOperation',
    description: 'User tries to start a new process when one is already underway',
    defaultMessage: 'Sorry, but we are still processing the previous request. Please try again once it is complete.'
  },
  ResourceNotFound: {
    id: 'ApiError.ResourceNotFound',
    description: 'System cannot find the functionality or screen that the user is trying to access.',
    defaultMessage: 'Sorry, but we cannot find what you are looking for.'
  },
  ReferenceExists: {
    id: 'ApiError.ReferenceExists',
    description: 'User tries to delete an element that has an existing reference to it from another element',
    defaultMessage: 'Can not delete a source while it is referenced from at least one "{referencedBy}".'
  },
  RequiredField: {
    id: 'ApiError.RequiredField',
    description: 'User does not enter a required field',
    defaultMessage: '"{field}" is a required field. Please enter a value.'
  },
  RequiredFields: {
    // Client side validation
    id: 'ApiError.RequiredFields',
    description: 'User submits a form without having completed all mandatory fields',
    defaultMessage: 'Please enter values for the following required fields: {fields}'
  },
  SemanticError: {
    id: 'ApiError.SemanticError',
    description: 'User enters a predicate query that throws a system semantic error',
    defaultMessage: 'Semantic error: the given Predicate is not valid. Please read the documentation to define a correct predicate.'
  },
  SyntaxError: {
    id: 'ApiError.SyntaxError',
    description: 'User enters a predicate query that throws a system syntax error',
    defaultMessage: 'Syntax error: the given Predicate is not valid. Please read the documentation to define a correct predicate.'
  },
  Unauthorized: {
    id: 'ApiError.Unauthorized',
    description: 'The access token is not valid anymore, or the user does not have a valid one',
    defaultMessage: 'Sorry, but you are not authorized to access this feature.'
  },
  Forbidden: {
    id: 'ApiError.Forbidden',
    description: 'User tries to access a view that they do not have permission for',
    defaultMessage: 'You are not authorized to access this feature. Please contact your system administrator with any further questions.'
  },
  ExtensionNoResponse: {
    id: 'ApiError.ExtensionNoResponse',
    description: 'User tries to access a view that they do not have permission for',
    defaultMessage: 'Sorry, we could not perform the requested action due to an API extension not responding.'
  },
  ExtensionBadResponse: {
    id: 'ApiError.ExtensionBadResponse',
    description: 'User tries to access a view that they do not have permission for',
    defaultMessage: 'Sorry, we could not perform the requested action due to failed processing of an API extension response.'
  },
  ExtensionUpdateActionsFailed: {
    id: 'ApiError.ExtensionUpdateActionsFailed',
    description: 'User tries to access a view that they do not have permission for',
    defaultMessage: 'Sorry, we could not perform the requested action. It is not possible to perform the update actions as instructed by the API extension.'
  },
  TaxCategoryDuplicateCountry: {
    id: 'ApiError.TaxCategoryDuplicateCountry',
    description: 'User inputs duplicate country and/or state into tax category form',
    defaultMessage: 'Duplicate tax rates submitted. Please remove the duplicates.'
  },
  MaxResourceLimitExceeded: {
    id: 'ApiError.MaxResourceLimitExceeded',
    description: 'User attempts to create a resource while having already reached the limit',
    defaultMessage: 'The project reached the limit for the resource. To add more resources delete existing ones or reach out to the administrator or contact customer support.'
  }
});

function ownKeys$3(e, r) { var t = _Object$keys(e); if (_Object$getOwnPropertySymbols) { var o = _Object$getOwnPropertySymbols(e); r && (o = _filterInstanceProperty(o).call(o, function (r) { return _Object$getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$3(e) { for (var r = 1; r < arguments.length; r++) { var _context6, _context7; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty(_context6 = ownKeys$3(Object(t), !0)).call(_context6, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(e, _Object$getOwnPropertyDescriptors(t)) : _forEachInstanceProperty(_context7 = ownKeys$3(Object(t))).call(_context7, function (r) { _Object$defineProperty(e, r, _Object$getOwnPropertyDescriptor(t, r)); }); } return e; }
const regexInvalidOperationRequiredAttribute = /Required attribute '(.*)' cannot be removed/;

// `error` fields for REST errors
// `error.extensions` fields for GraphQL errors
// The values passed to the Intl message must be a map of scalar values.
// Some of the message values are already mapped in the `getSpecialFormattedMessageByErrorCode`
// function. Here we map other possible error properties that can be
// used in the message.
const mapErrorFieldsToMessageValues = error => {
  var _error$extensions, _error$extensions2;
  const errorField = ((_error$extensions = error.extensions) === null || _error$extensions === void 0 ? void 0 : _error$extensions.field) || error.field;
  if (errorField) {
    return {
      field: errorField
    };
  }
  const errorReferencedBy = ((_error$extensions2 = error.extensions) === null || _error$extensions2 === void 0 ? void 0 : _error$extensions2.referencedBy) || error.referencedBy;
  if (errorReferencedBy) {
    return {
      referencedBy: errorReferencedBy
    };
  }
  return {};
};

// Type-guard validation for error code to be included in the message object keys.
const hasErrorCodeAMatchingMessage = errorCode => errorCode in apiErrorMessages;
const FormattedErrorMessage = props => {
  var _props$error$extensio, _props$error$extensio2, _context2;
  const intl = useIntl();
  // Attempt to map the error by code
  const extensionErrorCode = (_props$error$extensio = (_props$error$extensio2 = props.error.extensions) === null || _props$error$extensio2 === void 0 ? void 0 : _props$error$extensio2.code) !== null && _props$error$extensio !== void 0 ? _props$error$extensio : props.error.code;
  const messageCode = extensionErrorCode && hasErrorCodeAMatchingMessage(extensionErrorCode) ? apiErrorMessages[extensionErrorCode] : undefined;
  useEffect(() => {
    if (!messageCode) {
      var _context;
      // This error is not mapped / translated yet,
      // we log, report it to sentry and show the original error, unless `error.code` is `invalid_scope`
      // which an error code emitted for expired project(s)
      if (extensionErrorCode !== 'invalid_scope' && !_includesInstanceProperty(_context = props.error.message).call(_context, 'has expired')) {
        reportErrorToSentry(new Error('Unmapped error'), {
          extra: props.error
        });
      }
    }
  }, [extensionErrorCode, messageCode, props.error]);
  if (messageCode) {
    // The `error` object might contain extra fields for the specific `code`.
    return jsx(Fragment, {
      children: intl.formatMessage(messageCode, mapErrorFieldsToMessageValues(props.error))
    });
  }
  return jsx(Fragment, {
    children: _filterInstanceProperty(_context2 = [props.error.message, props.error.detailedErrorMessage && "(".concat(props.error.detailedErrorMessage, ")")]).call(_context2, Boolean).join(' ')
  });
};
FormattedErrorMessage.propTypes = {
  error: _pt.any.isRequired
};
FormattedErrorMessage.displayName = 'FormattedErrorMessage';
const ApiErrorMessage = props => {
  const intl = useIntl();

  // Attempt to map the error to a specific error message
  const specialFormattedMessage = getSpecialFormattedMessageByErrorCode(props.error, intl);
  if (specialFormattedMessage) {
    return jsx(Fragment, {
      children: specialFormattedMessage
    });
  }
  return jsx(FormattedErrorMessage, _objectSpread$3({}, props));
};
ApiErrorMessage.propTypes = process.env.NODE_ENV !== "production" ? {
  error: _pt.any.isRequired
} : {};
ApiErrorMessage.displayName = 'ApiErrorMessage';
function getSpecialFormattedMessageByErrorCode(error, intl) {
  var _error$extensions$cod, _error$extensions3, _context3, _context4, _context5;
  const extensionErrorCode = (_error$extensions$cod = (_error$extensions3 = error.extensions) === null || _error$extensions3 === void 0 ? void 0 : _error$extensions3.code) !== null && _error$extensions$cod !== void 0 ? _error$extensions$cod : error.code;
  if (error.errorByExtension) {
    let extensionMessage;
    if (error.localizedMessage) {
      extensionMessage = error.localizedMessage[intl.locale];
    }
    return extensionMessage || error.message;
  }
  if (!extensionErrorCode || extensionErrorCode === 'InvalidInput') return intl.formatMessage(apiErrorMessages.General);

  // TODO: this is a temporary solution until we have proper pages about 403
  if (extensionErrorCode === 'insufficient_scope') return intl.formatMessage(apiErrorMessages.Forbidden);
  if (extensionErrorCode === 'DuplicateField') {
    var _error$extensions4, _error$extensions5;
    const errorField = ((_error$extensions4 = error.extensions) === null || _error$extensions4 === void 0 ? void 0 : _error$extensions4.field) || error.field;
    const errorDuplicateValue = ((_error$extensions5 = error.extensions) === null || _error$extensions5 === void 0 ? void 0 : _error$extensions5.duplicateValue) || error.duplicateValue;
    if (errorField === 'slug') {
      return intl.formatMessage(apiErrorMessages.DuplicateSlug, {
        slugValue: errorDuplicateValue
      });
    } else {
      return intl.formatMessage(apiErrorMessages.DuplicateField, {
        field: errorField
      });
    }
  }

  // Try to match the error with a custom error message
  if (has(error, 'invalidValue') && has(error.invalidValue, 'overlappingPrices')) return intl.formatMessage(apiErrorMessages.OverlappingPrices);
  if (extensionErrorCode === 'InvalidOperation' && _includesInstanceProperty(_context3 = error.message).call(_context3, 'validFrom') && _includesInstanceProperty(_context4 = error.message).call(_context4, 'validUntil')) {
    return intl.formatMessage(apiErrorMessages.InvalidDateRange, {
      field: 'validFrom'
    });
  }
  if (extensionErrorCode === 'InvalidOperation' && _includesInstanceProperty(_context5 = error.message).call(_context5, 'Duplicate tax rate for')) {
    return intl.formatMessage(apiErrorMessages.TaxCategoryDuplicateCountry);
  }
  if (extensionErrorCode === 'InvalidOperation' && regexInvalidOperationRequiredAttribute.test(error.message)) {
    const attrName = error.message.replace(regexInvalidOperationRequiredAttribute, '$1');
    return intl.formatMessage(apiErrorMessages.RequiredField, {
      field: attrName
    });
  }

  // TODO: A concern has be raised that we can't accurately distinguish
  // this error (invalid start / end dates with prices) from other price
  // errors. We should investigate this further.
  if (extensionErrorCode === 'InvalidField' && error.field === 'price' && has(error, 'invalidValue') && has(error.invalidValue, 'validFrom') && has(error.invalidValue, 'validUntil')) return intl.formatMessage(apiErrorMessages.InvalidDateRange, {
    field: error.field
  });
  if (extensionErrorCode === 'DuplicateAttributeValue' && error.attribute) {
    return intl.formatMessage(apiErrorMessages.DuplicateAttributeValue, {
      name: error.attribute.name
    });
  }
  if (extensionErrorCode === 'MaxResourceLimitExceeded') {
    return intl.formatMessage(apiErrorMessages.MaxResourceLimitExceeded);
  }
  return;
}

const ApiErrorNotification = props => {
  var _context;
  return jsx(Notification, {
    type: "error",
    domain: props.notification.domain,
    onCloseClick: props.dismiss,
    children: jsx("ul", {
      children: _valuesInstanceProperty(props.notification) && _mapInstanceProperty(_context = _valuesInstanceProperty(props.notification).errors).call(_context, (error, idx) => {
        var _error$extensions$cod, _error$extensions;
        const extensionErrorCode = (_error$extensions$cod = (_error$extensions = error.extensions) === null || _error$extensions === void 0 ? void 0 : _error$extensions.code) !== null && _error$extensions$cod !== void 0 ? _error$extensions$cod : error.code;
        const shouldLogErrorToConsole = !extensionErrorCode && process.env.NODE_ENV === 'development';
        if (shouldLogErrorToConsole) {
          /**
           * NOTE: This is an API error which usually contains
           * a `code` property such as `DuplicateField` or `InvalidOperation`.
           * If this `code` does not exist the API is not conforming to its
           * own error specification.
           */
          // eslint-disable-next-line no-console
          console.error('Unknown API error', error);
        }
        return jsx("li", {
          children: jsx(ApiErrorMessage, {
            error: error
          })
        }, idx);
      })
    })
  });
};
ApiErrorNotification.propTypes = process.env.NODE_ENV !== "production" ? {
  notification: _pt.any.isRequired,
  dismiss: _pt.func.isRequired
} : {};
ApiErrorNotification.displayName = 'ApiErrorNotification';

const GenericNotification = props => jsx(Notification, {
  domain: props.notification.domain,
  type: props.notification.kind,
  onCloseClick: props.dismiss,
  children: props.notification.text
});
GenericNotification.propTypes = process.env.NODE_ENV !== "production" ? {
  notification: _pt.any.isRequired,
  dismiss: _pt.func.isRequired
} : {};
GenericNotification.displayName = 'GenericNotification';

function ownKeys$2(e, r) { var t = _Object$keys(e); if (_Object$getOwnPropertySymbols) { var o = _Object$getOwnPropertySymbols(e); r && (o = _filterInstanceProperty(o).call(o, function (r) { return _Object$getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$2(e) { for (var r = 1; r < arguments.length; r++) { var _context, _context2; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty(_context = ownKeys$2(Object(t), !0)).call(_context, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(e, _Object$getOwnPropertyDescriptors(t)) : _forEachInstanceProperty(_context2 = ownKeys$2(Object(t))).call(_context2, function (r) { _Object$defineProperty(e, r, _Object$getOwnPropertyDescriptor(t, r)); }); } return e; }
const UnexpectedErrorNotification = props => jsx(Notification, {
  type: "error",
  domain: props.notification.domain,
  onCloseClick: props.dismiss,
  children: jsxs(Spacings.Stack, {
    children: [jsx("div", {
      children: jsx(FormattedMessage, _objectSpread$2({}, apiErrorMessages.General))
    }), _valuesInstanceProperty(props.notification) && _valuesInstanceProperty(props.notification).errorId && jsx("div", {
      children: "ID (".concat(_valuesInstanceProperty(props.notification).errorId, ")")
    })]
  })
});
UnexpectedErrorNotification.propTypes = process.env.NODE_ENV !== "production" ? {
  notification: _pt.any.isRequired,
  dismiss: _pt.func.isRequired
} : {};
UnexpectedErrorNotification.displayName = 'UnexpectedErrorNotification';

const getStyles = props => {
  const baseStyles = /*#__PURE__*/css("color:", customProperties.colorSurface, ";position:relative;width:100%;z-index:19999;" + (process.env.NODE_ENV === "production" ? "" : ";label:baseStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGlmaWNhdGlvbnMtbGlzdC5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBV3dCIiwiZmlsZSI6Im5vdGlmaWNhdGlvbnMtbGlzdC5zdHlsZXMudHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XG5pbXBvcnQgdHlwZSB7IFRBcHBOb3RpZmljYXRpb25Eb21haW4gfSBmcm9tICdAY29tbWVyY2V0b29scy1mcm9udGVuZC9jb25zdGFudHMnO1xuXG5pbXBvcnQgeyBOT1RJRklDQVRJT05fRE9NQUlOUyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLWZyb250ZW5kL2NvbnN0YW50cyc7XG5pbXBvcnQgeyBjdXN0b21Qcm9wZXJ0aWVzIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtdWlraXQvZGVzaWduLXN5c3RlbSc7XG5cbnR5cGUgU3R5bGVQcm9wcyA9IHtcbiAgZG9tYWluOiBUQXBwTm90aWZpY2F0aW9uRG9tYWluO1xufTtcblxuY29uc3QgZ2V0U3R5bGVzID0gKHByb3BzOiBTdHlsZVByb3BzKSA9PiB7XG4gIGNvbnN0IGJhc2VTdHlsZXMgPSBjc3NgXG4gICAgY29sb3I6ICR7Y3VzdG9tUHJvcGVydGllcy5jb2xvclN1cmZhY2V9O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICB6LWluZGV4OiAxOTk5OTtcbiAgYDtcblxuICBzd2l0Y2ggKHByb3BzLmRvbWFpbikge1xuICAgIGNhc2UgTk9USUZJQ0FUSU9OX0RPTUFJTlMuR0xPQkFMOlxuICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgJHtiYXNlU3R5bGVzfTtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICAgICAgYDtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLlBBR0U6XG4gICAgICByZXR1cm4gY3NzYFxuICAgICAgICAke2Jhc2VTdHlsZXN9O1xuICAgICAgYDtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLlNJREU6XG4gICAgICByZXR1cm4gY3NzYFxuICAgICAgICAke2Jhc2VTdHlsZXN9O1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgICBgO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gY3NzYGA7XG4gIH1cbn07XG5cbmV4cG9ydCB7IGdldFN0eWxlcyB9O1xuIl19 */");
  switch (props.domain) {
    case NOTIFICATION_DOMAINS.GLOBAL:
      return /*#__PURE__*/css(baseStyles, ";text-align:center;width:100%!important;" + (process.env.NODE_ENV === "production" ? "" : ";label:getStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGlmaWNhdGlvbnMtbGlzdC5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0JnQiIsImZpbGUiOiJub3RpZmljYXRpb25zLWxpc3Quc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBUQXBwTm90aWZpY2F0aW9uRG9tYWluIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtZnJvbnRlbmQvY29uc3RhbnRzJztcblxuaW1wb3J0IHsgTk9USUZJQ0FUSU9OX0RPTUFJTlMgfSBmcm9tICdAY29tbWVyY2V0b29scy1mcm9udGVuZC9jb25zdGFudHMnO1xuaW1wb3J0IHsgY3VzdG9tUHJvcGVydGllcyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuXG50eXBlIFN0eWxlUHJvcHMgPSB7XG4gIGRvbWFpbjogVEFwcE5vdGlmaWNhdGlvbkRvbWFpbjtcbn07XG5cbmNvbnN0IGdldFN0eWxlcyA9IChwcm9wczogU3R5bGVQcm9wcykgPT4ge1xuICBjb25zdCBiYXNlU3R5bGVzID0gY3NzYFxuICAgIGNvbG9yOiAke2N1c3RvbVByb3BlcnRpZXMuY29sb3JTdXJmYWNlfTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgei1pbmRleDogMTk5OTk7XG4gIGA7XG5cbiAgc3dpdGNoIChwcm9wcy5kb21haW4pIHtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLkdMT0JBTDpcbiAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICR7YmFzZVN0eWxlc307XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICAgIGA7XG4gICAgY2FzZSBOT1RJRklDQVRJT05fRE9NQUlOUy5QQUdFOlxuICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgJHtiYXNlU3R5bGVzfTtcbiAgICAgIGA7XG4gICAgY2FzZSBOT1RJRklDQVRJT05fRE9NQUlOUy5TSURFOlxuICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgJHtiYXNlU3R5bGVzfTtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICBoZWlnaHQ6IDA7XG4gICAgICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgICAgYDtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGNzc2BgO1xuICB9XG59O1xuXG5leHBvcnQgeyBnZXRTdHlsZXMgfTtcbiJdfQ== */");
    case NOTIFICATION_DOMAINS.PAGE:
      return /*#__PURE__*/css(baseStyles, ";" + (process.env.NODE_ENV === "production" ? "" : ";label:getStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGlmaWNhdGlvbnMtbGlzdC5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMEJnQiIsImZpbGUiOiJub3RpZmljYXRpb25zLWxpc3Quc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBUQXBwTm90aWZpY2F0aW9uRG9tYWluIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtZnJvbnRlbmQvY29uc3RhbnRzJztcblxuaW1wb3J0IHsgTk9USUZJQ0FUSU9OX0RPTUFJTlMgfSBmcm9tICdAY29tbWVyY2V0b29scy1mcm9udGVuZC9jb25zdGFudHMnO1xuaW1wb3J0IHsgY3VzdG9tUHJvcGVydGllcyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuXG50eXBlIFN0eWxlUHJvcHMgPSB7XG4gIGRvbWFpbjogVEFwcE5vdGlmaWNhdGlvbkRvbWFpbjtcbn07XG5cbmNvbnN0IGdldFN0eWxlcyA9IChwcm9wczogU3R5bGVQcm9wcykgPT4ge1xuICBjb25zdCBiYXNlU3R5bGVzID0gY3NzYFxuICAgIGNvbG9yOiAke2N1c3RvbVByb3BlcnRpZXMuY29sb3JTdXJmYWNlfTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgei1pbmRleDogMTk5OTk7XG4gIGA7XG5cbiAgc3dpdGNoIChwcm9wcy5kb21haW4pIHtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLkdMT0JBTDpcbiAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICR7YmFzZVN0eWxlc307XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICAgIGA7XG4gICAgY2FzZSBOT1RJRklDQVRJT05fRE9NQUlOUy5QQUdFOlxuICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgJHtiYXNlU3R5bGVzfTtcbiAgICAgIGA7XG4gICAgY2FzZSBOT1RJRklDQVRJT05fRE9NQUlOUy5TSURFOlxuICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgJHtiYXNlU3R5bGVzfTtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICBoZWlnaHQ6IDA7XG4gICAgICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgICAgYDtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGNzc2BgO1xuICB9XG59O1xuXG5leHBvcnQgeyBnZXRTdHlsZXMgfTtcbiJdfQ== */");
    case NOTIFICATION_DOMAINS.SIDE:
      return /*#__PURE__*/css(baseStyles, ";position:absolute;text-align:left;height:0;overflow:visible;" + (process.env.NODE_ENV === "production" ? "" : ";label:getStyles;"), process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGlmaWNhdGlvbnMtbGlzdC5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBOEJnQiIsImZpbGUiOiJub3RpZmljYXRpb25zLWxpc3Quc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBUQXBwTm90aWZpY2F0aW9uRG9tYWluIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtZnJvbnRlbmQvY29uc3RhbnRzJztcblxuaW1wb3J0IHsgTk9USUZJQ0FUSU9OX0RPTUFJTlMgfSBmcm9tICdAY29tbWVyY2V0b29scy1mcm9udGVuZC9jb25zdGFudHMnO1xuaW1wb3J0IHsgY3VzdG9tUHJvcGVydGllcyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuXG50eXBlIFN0eWxlUHJvcHMgPSB7XG4gIGRvbWFpbjogVEFwcE5vdGlmaWNhdGlvbkRvbWFpbjtcbn07XG5cbmNvbnN0IGdldFN0eWxlcyA9IChwcm9wczogU3R5bGVQcm9wcykgPT4ge1xuICBjb25zdCBiYXNlU3R5bGVzID0gY3NzYFxuICAgIGNvbG9yOiAke2N1c3RvbVByb3BlcnRpZXMuY29sb3JTdXJmYWNlfTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgei1pbmRleDogMTk5OTk7XG4gIGA7XG5cbiAgc3dpdGNoIChwcm9wcy5kb21haW4pIHtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLkdMT0JBTDpcbiAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICR7YmFzZVN0eWxlc307XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICAgIGA7XG4gICAgY2FzZSBOT1RJRklDQVRJT05fRE9NQUlOUy5QQUdFOlxuICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgJHtiYXNlU3R5bGVzfTtcbiAgICAgIGA7XG4gICAgY2FzZSBOT1RJRklDQVRJT05fRE9NQUlOUy5TSURFOlxuICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgJHtiYXNlU3R5bGVzfTtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICBoZWlnaHQ6IDA7XG4gICAgICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgICAgYDtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGNzc2BgO1xuICB9XG59O1xuXG5leHBvcnQgeyBnZXRTdHlsZXMgfTtcbiJdfQ== */");
    default:
      return /*#__PURE__*/css(process.env.NODE_ENV === "production" ? "" : ";label:getStyles;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vdGlmaWNhdGlvbnMtbGlzdC5zdHlsZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0NnQiIsImZpbGUiOiJub3RpZmljYXRpb25zLWxpc3Quc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBUQXBwTm90aWZpY2F0aW9uRG9tYWluIH0gZnJvbSAnQGNvbW1lcmNldG9vbHMtZnJvbnRlbmQvY29uc3RhbnRzJztcblxuaW1wb3J0IHsgTk9USUZJQ0FUSU9OX0RPTUFJTlMgfSBmcm9tICdAY29tbWVyY2V0b29scy1mcm9udGVuZC9jb25zdGFudHMnO1xuaW1wb3J0IHsgY3VzdG9tUHJvcGVydGllcyB9IGZyb20gJ0Bjb21tZXJjZXRvb2xzLXVpa2l0L2Rlc2lnbi1zeXN0ZW0nO1xuXG50eXBlIFN0eWxlUHJvcHMgPSB7XG4gIGRvbWFpbjogVEFwcE5vdGlmaWNhdGlvbkRvbWFpbjtcbn07XG5cbmNvbnN0IGdldFN0eWxlcyA9IChwcm9wczogU3R5bGVQcm9wcykgPT4ge1xuICBjb25zdCBiYXNlU3R5bGVzID0gY3NzYFxuICAgIGNvbG9yOiAke2N1c3RvbVByb3BlcnRpZXMuY29sb3JTdXJmYWNlfTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgei1pbmRleDogMTk5OTk7XG4gIGA7XG5cbiAgc3dpdGNoIChwcm9wcy5kb21haW4pIHtcbiAgICBjYXNlIE5PVElGSUNBVElPTl9ET01BSU5TLkdMT0JBTDpcbiAgICAgIHJldHVybiBjc3NgXG4gICAgICAgICR7YmFzZVN0eWxlc307XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICAgIGA7XG4gICAgY2FzZSBOT1RJRklDQVRJT05fRE9NQUlOUy5QQUdFOlxuICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgJHtiYXNlU3R5bGVzfTtcbiAgICAgIGA7XG4gICAgY2FzZSBOT1RJRklDQVRJT05fRE9NQUlOUy5TSURFOlxuICAgICAgcmV0dXJuIGNzc2BcbiAgICAgICAgJHtiYXNlU3R5bGVzfTtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICBoZWlnaHQ6IDA7XG4gICAgICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgICAgYDtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGNzc2BgO1xuICB9XG59O1xuXG5leHBvcnQgeyBnZXRTdHlsZXMgfTtcbiJdfQ== */");
  }
};

// These selectors are okay memoization-wise, but once a single notifications
// is added or removed the memoization for all domain selectors is reset
const selectNotifications = state => state.notifications;
const selectGlobalNotifications = createSelector(selectNotifications, notifications => {
  var _context;
  return _sliceInstanceProperty(_context = _filterInstanceProperty(notifications).call(notifications, notification => notification.domain === NOTIFICATION_DOMAINS.GLOBAL)
  // Return only 1 at a time
  ).call(_context, 0, 1);
});
const selectPageNotifications = createSelector(selectNotifications, notifications => _filterInstanceProperty(notifications).call(notifications, notification => notification.domain === NOTIFICATION_DOMAINS.PAGE));
const selectSideNotifications = createSelector(selectNotifications, notifications => _filterInstanceProperty(notifications).call(notifications, notification => notification.domain === NOTIFICATION_DOMAINS.SIDE));

const _excluded = ["values"],
  _excluded2 = ["text"],
  _excluded3 = ["values"],
  _excluded4 = ["text"],
  _excluded5 = ["text"];
function ownKeys$1(e, r) { var t = _Object$keys(e); if (_Object$getOwnPropertySymbols) { var o = _Object$getOwnPropertySymbols(e); r && (o = _filterInstanceProperty(o).call(o, function (r) { return _Object$getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread$1(e) { for (var r = 1; r < arguments.length; r++) { var _context, _context2; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty(_context = ownKeys$1(Object(t), !0)).call(_context, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(e, _Object$getOwnPropertyDescriptors(t)) : _forEachInstanceProperty(_context2 = ownKeys$1(Object(t))).call(_context2, function (r) { _Object$defineProperty(e, r, _Object$getOwnPropertyDescriptor(t, r)); }); } return e; }
const NotificationsListGlobal = props => {
  const dispatch = useDispatch();
  const mapCustomNotificationToComponent = useCustomNotificationComponent();
  const notifications = useSelector(selectGlobalNotifications);
  return jsx("div", {
    id: "notifications-".concat(props.domain),
    css: getStyles(props),
    children: _mapInstanceProperty(notifications).call(notifications, notification => {
      // 1. Check if there is a custom notification component first
      const CustomNotificationComponent = mapCustomNotificationToComponent(notification);
      if (CustomNotificationComponent) {
        return jsx(CustomNotificationComponent, {
          notification: notification,
          dismiss: () => {
            dispatch(removeNotification(notification.id));
          }
        }, notification.id);
      }
      switch (notification.kind) {
        case NOTIFICATION_KINDS_GLOBAL.error:
        case NOTIFICATION_KINDS_GLOBAL.warning:
        case NOTIFICATION_KINDS_GLOBAL.info:
        case NOTIFICATION_KINDS_GLOBAL.success:
          {
            _valuesInstanceProperty(notification);
              const genericNotification = _objectWithoutProperties(notification, _excluded);
            return jsx(GenericNotification, {
              notification: genericNotification,
              dismiss: () => {
                dispatch(removeNotification(notification.id));
              }
            }, notification.id);
          }
        case NOTIFICATION_KINDS_GLOBAL['unexpected-error']:
          {
            notification.text;
              const errorNotification = _objectWithoutProperties(notification, _excluded2);
            return jsx(UnexpectedErrorNotification, {
              notification: errorNotification,
              dismiss: () => {
                dispatch(removeNotification(notification.id));
              }
            }, notification.id);
          }
        default:
          {
            if (process.env.NODE_ENV !== 'production') {
              // eslint-disable-next-line no-console
              reportErrorToSentry(new Error("@commercetools-frontend/react-notifications. Invalid prop \"kind\" supplied: ".concat(notification.kind, ".")), {
                extra: notification
              });
            }
            return null;
          }
      }
    })
  });
};
const NotificationsListPage = props => {
  const dispatch = useDispatch();
  const mapCustomNotificationToComponent = useCustomNotificationComponent();
  const notifications = useSelector(selectPageNotifications);
  return jsx("div", {
    id: "notifications-".concat(props.domain),
    css: getStyles(props),
    children: _mapInstanceProperty(notifications).call(notifications, notification => {
      // 1. Check if there is a custom notification component first
      const CustomNotificationComponent = mapCustomNotificationToComponent(notification);
      if (CustomNotificationComponent) {
        return jsx(CustomNotificationComponent, {
          notification: notification,
          dismiss: () => {
            dispatch(removeNotification(notification.id));
          }
        }, notification.id);
      }
      switch (notification.kind) {
        case NOTIFICATION_KINDS_PAGE.error:
        case NOTIFICATION_KINDS_PAGE.warning:
        case NOTIFICATION_KINDS_PAGE.info:
        case NOTIFICATION_KINDS_PAGE.success:
          {
            _valuesInstanceProperty(notification);
              const genericNotification = _objectWithoutProperties(notification, _excluded3);
            return jsx(GenericNotification, {
              notification: _objectSpread$1(_objectSpread$1({}, genericNotification), {}, {
                kind: notification.kind
              }),
              dismiss: () => {
                dispatch(removeNotification(notification.id));
              }
            }, notification.id);
          }
        case NOTIFICATION_KINDS_PAGE['api-error']:
          {
            notification.text;
              const errorNotification = _objectWithoutProperties(notification, _excluded4);
            return jsx(ApiErrorNotification, {
              notification: errorNotification,
              dismiss: () => {
                dispatch(removeNotification(notification.id));
              }
            }, notification.id);
          }
        case NOTIFICATION_KINDS_PAGE['unexpected-error']:
          {
            notification.text;
              const errorNotification = _objectWithoutProperties(notification, _excluded5);
            return jsx(UnexpectedErrorNotification, {
              notification: _objectSpread$1(_objectSpread$1({}, errorNotification), {}, {
                values: _valuesInstanceProperty(notification)
              }),
              dismiss: () => {
                dispatch(removeNotification(notification.id));
              }
            }, notification.id);
          }
        default:
          return null;
      }
    })
  });
};
const NotificationsListSide = props => {
  const dispatch = useDispatch();
  const mapCustomNotificationToComponent = useCustomNotificationComponent();
  const notifications = useSelector(selectSideNotifications);
  return jsx("div", {
    id: "notifications-".concat(props.domain),
    css: getStyles(props),
    children: _mapInstanceProperty(notifications).call(notifications, notification => {
      // 1. Check if there is a custom notification component first
      const CustomNotificationComponent = mapCustomNotificationToComponent(notification);
      if (CustomNotificationComponent) {
        return jsx(CustomNotificationComponent, {
          notification: notification,
          dismiss: () => {
            dispatch(removeNotification(notification.id));
          }
        }, notification.id);
      }
      switch (notification.kind) {
        case NOTIFICATION_KINDS_SIDE.error:
        case NOTIFICATION_KINDS_SIDE.warning:
        case NOTIFICATION_KINDS_SIDE.info:
        case NOTIFICATION_KINDS_SIDE.success:
          return jsx(GenericNotification, {
            notification: notification,
            dismiss: () => {
              dispatch(removeNotification(notification.id));
            }
          }, notification.id);
        default:
          return null;
      }
    })
  });
};
const NotificationsList = props => {
  switch (props.domain) {
    case NOTIFICATION_DOMAINS.GLOBAL:
      return jsx(NotificationsListGlobal, _objectSpread$1({}, props));
    case NOTIFICATION_DOMAINS.PAGE:
      return jsx(NotificationsListPage, _objectSpread$1({}, props));
    case NOTIFICATION_DOMAINS.SIDE:
      return jsx(NotificationsListSide, _objectSpread$1({}, props));
    default:
      return null;
  }
};
NotificationsList.displayName = 'NotificationsList';

function ownKeys(e, r) { var t = _Object$keys(e); if (_Object$getOwnPropertySymbols) { var o = _Object$getOwnPropertySymbols(e); r && (o = _filterInstanceProperty(o).call(o, function (r) { return _Object$getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var _context, _context2; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty(_context = ownKeys(Object(t), !0)).call(_context, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(e, _Object$getOwnPropertyDescriptors(t)) : _forEachInstanceProperty(_context2 = ownKeys(Object(t))).call(_context2, function (r) { _Object$defineProperty(e, r, _Object$getOwnPropertyDescriptor(t, r)); }); } return e; }
const defaultProps = {
  domain: NOTIFICATION_DOMAINS.SIDE,
  kind: NOTIFICATION_KINDS_SIDE.success
};
const Notifier = props => {
  const showNotification = useShowNotification();
  useEffect(() => {
    const notification = showNotification({
      domain: props.domain,
      kind: props.kind,
      text: props.text
    }, isNumber(props.dismissAfter) ? _objectSpread(_objectSpread({}, props.meta), {}, {
      dismissAfter: props.dismissAfter
    }) : props.meta);
    return () => {
      // Remove notification when component "unmounts"
      notification.dismiss && notification.dismiss();
    };
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []); // We want to run this only once, when the component mounts the first time. Therefore we need to pass an empty array, even though the eslint rule shows a warning.

  return null;
};
Notifier.propTypes = {
  domain: _pt.any.isRequired,
  kind: _pt.any.isRequired,
  text: _pt.string,
  meta: _pt.objectOf(_pt.any),
  dismissAfter: _pt.number
};
Notifier.displayName = 'Notifier';
Notifier.defaultProps = defaultProps;

export { ApiErrorMessage, Notification, NotificationProviderForCustomComponent, NotificationsList, Notifier, selectGlobalNotifications, selectPageNotifications, selectSideNotifications, version };
