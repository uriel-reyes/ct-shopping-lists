import type { Maybe, TFetchProjectExtensionImageRegexQuery } from '../types/generated/settings';
export declare const createGraphqlResponseForProjectExtensionImageRegexQuery: (customResponse?: Partial<TFetchProjectExtensionImageRegexQuery>) => {
    __typename?: "Query" | undefined;
    projectExtension: {
        __typename?: "ProjectExtension" | undefined;
        id: string;
        imageRegex?: {
            __typename?: "ImageRegex" | undefined;
            thumb?: {
                __typename?: "ImageRegexOptions" | undefined;
                flag?: string | null | undefined;
                search: string;
                replace: string;
            } | null | undefined;
            small?: {
                __typename?: "ImageRegexOptions" | undefined;
                flag?: string | null | undefined;
                search: string;
                replace: string;
            } | null | undefined;
        } | null | undefined;
    } | {
        __typename: string;
        id: string;
        imageRegex: {
            __typename: string;
            thumb: {
                __typename: string;
                flag: string;
                replace: string;
                search: string;
            };
            small: {
                __typename: string;
                flag: string;
                replace: string;
                search: string;
            };
        };
    } | null;
};
export declare const createFetchProjectExtensionImageRegexMock: (customMock?: Partial<{
    result: Maybe<{
        data: Maybe<ReturnType<typeof createGraphqlResponseForProjectExtensionImageRegexQuery>>;
    }>;
}>) => {
    result: Maybe<{
        data: Maybe<ReturnType<typeof createGraphqlResponseForProjectExtensionImageRegexQuery>>;
    }>;
    request: {
        query: import("graphql").DocumentNode;
        context: {
            target: "settings";
        };
    };
};
