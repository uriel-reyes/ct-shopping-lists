import { type ReactNode } from 'react';
import type { CustomViewData } from '@commercetools-frontend/constants';
import { type TApplicationContext } from '../application-context';
export type TCustomViewContext = {
    hostUrl: string;
    customViewConfig: CustomViewData;
};
export type TMergedContext = TApplicationContext<{}> & TCustomViewContext;
export type TCustomViewContextProviderProps = {
    hostUrl: string;
    customViewConfig: CustomViewData;
    children: ReactNode;
};
declare const Context: import("react").Context<{}>;
declare const CustomViewContextProvider: (props: TCustomViewContextProviderProps) => import("@emotion/react/types/jsx-namespace").EmotionJSX.Element;
declare function useCustomViewContextHook(): TMergedContext;
declare function useCustomViewContextHook<SelectedContext>(selector: (context: TMergedContext) => SelectedContext): SelectedContext;
declare const useCustomViewContext: typeof useCustomViewContextHook;
export { Context, CustomViewContextProvider, useCustomViewContext };
