'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _mapInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/map');
var _concatInstanceProperty = require('@babel/runtime-corejs3/core-js-stable/instance/concat');

function _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }

var _mapInstanceProperty__default = /*#__PURE__*/_interopDefault(_mapInstanceProperty);
var _concatInstanceProperty__default = /*#__PURE__*/_interopDefault(_concatInstanceProperty);

// NOTE: This string will be replaced on build time with the package version.
var version = "22.13.0";

const matchLeadingAndTrailingSlashes = /^\/|\/$/g;
const trimLeadingAndTrailingSlashes = url => url.replace(matchLeadingAndTrailingSlashes, '');
const joinPaths = function () {
  for (var _len = arguments.length, paths = new Array(_len), _key = 0; _key < _len; _key++) {
    paths[_key] = arguments[_key];
  }
  const joint = _mapInstanceProperty__default["default"](paths).call(paths, path => {
    var _context;
    if (typeof path !== 'string') throw new Error(_concatInstanceProperty__default["default"](_context = "Expected path \"".concat(path, "\" to be a \"string\", but got \"")).call(_context, typeof path, "\""));
    // Trim leading and trailing slash for each single path
    return trimLeadingAndTrailingSlashes(path);
  }).join('/');
  return "/".concat(joint);
};

exports.joinPaths = joinPaths;
exports.trimLeadingAndTrailingSlashes = trimLeadingAndTrailingSlashes;
exports.version = version;
